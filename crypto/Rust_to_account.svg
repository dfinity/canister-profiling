<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToAccount</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="42479"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="181" width="0.0447%" height="15" fill="rgb(240,211,49)" fg:x="0" fg:w="19"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="0.0447%" y="181" width="0.1836%" height="15" fill="rgb(219,149,40)" fg:x="19" fg:w="78"/><text x="0.3377%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.2283%" y="181" width="0.1789%" height="15" fill="rgb(210,127,46)" fg:x="97" fg:w="76"/><text x="0.5213%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.4073%" y="165" width="0.1789%" height="15" fill="rgb(220,106,7)" fg:x="173" fg:w="76"/><text x="0.7002%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="0.5862%" y="149" width="0.1624%" height="15" fill="rgb(249,31,22)" fg:x="249" fg:w="69"/><text x="0.8791%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.96%)</title><rect x="0.7486%" y="149" width="0.9558%" height="15" fill="rgb(253,1,49)" fg:x="318" fg:w="406"/><text x="1.0416%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="1.7044%" y="149" width="0.1930%" height="15" fill="rgb(227,144,33)" fg:x="724" fg:w="82"/><text x="1.9973%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="1.8974%" y="149" width="0.1271%" height="15" fill="rgb(249,163,44)" fg:x="806" fg:w="54"/><text x="2.1904%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.0245%" y="149" width="0.1271%" height="15" fill="rgb(234,15,39)" fg:x="860" fg:w="54"/><text x="2.3175%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.1517%" y="149" width="0.1271%" height="15" fill="rgb(207,66,16)" fg:x="914" fg:w="54"/><text x="2.4446%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.2788%" y="149" width="0.1271%" height="15" fill="rgb(233,112,24)" fg:x="968" fg:w="54"/><text x="2.5717%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="2.4059%" y="149" width="0.1624%" height="15" fill="rgb(230,90,22)" fg:x="1022" fg:w="69"/><text x="2.6989%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.5683%" y="149" width="0.1530%" height="15" fill="rgb(229,61,13)" fg:x="1091" fg:w="65"/><text x="2.8613%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.96%)</title><rect x="2.7213%" y="149" width="0.9558%" height="15" fill="rgb(225,57,24)" fg:x="1156" fg:w="406"/><text x="3.0143%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.6771%" y="149" width="0.0377%" height="15" fill="rgb(208,169,48)" fg:x="1562" fg:w="16"/><text x="3.9701%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="3.7148%" y="133" width="0.1789%" height="15" fill="rgb(244,218,51)" fg:x="1578" fg:w="76"/><text x="4.0077%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.8937%" y="101" width="0.1412%" height="15" fill="rgb(214,148,10)" fg:x="1654" fg:w="60"/><text x="4.1867%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="3.8937%" y="117" width="0.2001%" height="15" fill="rgb(225,174,27)" fg:x="1654" fg:w="85"/><text x="4.1867%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.0938%" y="69" width="0.0212%" height="15" fill="rgb(230,96,26)" fg:x="1739" fg:w="9"/><text x="4.3868%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.1150%" y="53" width="0.0706%" height="15" fill="rgb(232,10,30)" fg:x="1748" fg:w="30"/><text x="4.4079%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.1150%" y="69" width="0.1295%" height="15" fill="rgb(222,8,50)" fg:x="1748" fg:w="55"/><text x="4.4079%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="4.0938%" y="85" width="0.2778%" height="15" fill="rgb(213,81,27)" fg:x="1739" fg:w="118"/><text x="4.3868%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="4.0938%" y="101" width="0.4026%" height="15" fill="rgb(245,50,10)" fg:x="1739" fg:w="171"/><text x="4.3868%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="4.0938%" y="117" width="0.4143%" height="15" fill="rgb(216,100,18)" fg:x="1739" fg:w="176"/><text x="4.3868%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.88%)</title><rect x="3.8937%" y="133" width="0.8757%" height="15" fill="rgb(236,147,54)" fg:x="1654" fg:w="372"/><text x="4.1867%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.39%)</title><rect x="3.7148%" y="149" width="1.3866%" height="15" fill="rgb(205,143,26)" fg:x="1578" fg:w="589"/><text x="4.0077%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="5.1013%" y="149" width="0.1930%" height="15" fill="rgb(236,26,9)" fg:x="2167" fg:w="82"/><text x="5.3943%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="5.2944%" y="149" width="0.1295%" height="15" fill="rgb(221,165,53)" fg:x="2249" fg:w="55"/><text x="5.5873%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="5.4239%" y="149" width="0.1483%" height="15" fill="rgb(214,110,17)" fg:x="2304" fg:w="63"/><text x="5.7168%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="5.5722%" y="149" width="0.1530%" height="15" fill="rgb(237,197,12)" fg:x="2367" fg:w="65"/><text x="5.8651%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.96%)</title><rect x="5.7252%" y="133" width="0.9558%" height="15" fill="rgb(205,84,17)" fg:x="2432" fg:w="406"/><text x="6.0182%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="6.6809%" y="133" width="0.0377%" height="15" fill="rgb(237,18,45)" fg:x="2838" fg:w="16"/><text x="6.9739%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="6.7186%" y="117" width="0.1789%" height="15" fill="rgb(221,87,14)" fg:x="2854" fg:w="76"/><text x="7.0116%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="6.8975%" y="85" width="0.1412%" height="15" fill="rgb(238,186,15)" fg:x="2930" fg:w="60"/><text x="7.1905%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="6.8975%" y="101" width="0.2001%" height="15" fill="rgb(208,115,11)" fg:x="2930" fg:w="85"/><text x="7.1905%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.0976%" y="53" width="0.0212%" height="15" fill="rgb(254,175,0)" fg:x="3015" fg:w="9"/><text x="7.3906%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.1188%" y="37" width="0.0706%" height="15" fill="rgb(227,24,42)" fg:x="3024" fg:w="30"/><text x="7.4118%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.1188%" y="53" width="0.1295%" height="15" fill="rgb(223,211,37)" fg:x="3024" fg:w="55"/><text x="7.4118%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="7.0976%" y="69" width="0.2778%" height="15" fill="rgb(235,49,27)" fg:x="3015" fg:w="118"/><text x="7.3906%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="7.0976%" y="85" width="0.4026%" height="15" fill="rgb(254,97,51)" fg:x="3015" fg:w="171"/><text x="7.3906%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="7.0976%" y="101" width="0.4143%" height="15" fill="rgb(249,51,40)" fg:x="3015" fg:w="176"/><text x="7.3906%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.88%)</title><rect x="6.8975%" y="117" width="0.8757%" height="15" fill="rgb(210,128,45)" fg:x="2930" fg:w="372"/><text x="7.1905%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.39%)</title><rect x="6.7186%" y="133" width="1.3866%" height="15" fill="rgb(224,137,50)" fg:x="2854" fg:w="589"/><text x="7.0116%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="8.1052%" y="133" width="0.1930%" height="15" fill="rgb(242,15,9)" fg:x="3443" fg:w="82"/><text x="8.3982%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="8.2982%" y="133" width="0.1295%" height="15" fill="rgb(233,187,41)" fg:x="3525" fg:w="55"/><text x="8.5912%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="8.4277%" y="117" width="0.1624%" height="15" fill="rgb(227,2,29)" fg:x="3580" fg:w="69"/><text x="8.7207%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="8.5901%" y="117" width="0.2142%" height="15" fill="rgb(222,70,3)" fg:x="3649" fg:w="91"/><text x="8.8831%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="8.8044%" y="117" width="0.1483%" height="15" fill="rgb(213,11,42)" fg:x="3740" fg:w="63"/><text x="9.0973%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (286 instructions, 0.67%)</title><rect x="8.4277%" y="133" width="0.6733%" height="15" fill="rgb(225,150,9)" fg:x="3580" fg:w="286"/><text x="8.7207%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="9.1010%" y="133" width="0.1789%" height="15" fill="rgb(230,162,45)" fg:x="3866" fg:w="76"/><text x="9.3939%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,713 instructions, 4.03%)</title><rect x="5.7252%" y="149" width="4.0326%" height="15" fill="rgb(222,14,52)" fg:x="2432" fg:w="1713"/><text x="6.0182%" y="159.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="9.7578%" y="149" width="0.1483%" height="15" fill="rgb(254,198,14)" fg:x="4145" fg:w="63"/><text x="10.0507%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.9061%" y="149" width="0.0306%" height="15" fill="rgb(220,217,30)" fg:x="4208" fg:w="13"/><text x="10.1990%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.9367%" y="149" width="0.0306%" height="15" fill="rgb(215,146,41)" fg:x="4221" fg:w="13"/><text x="10.2296%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="9.9673%" y="149" width="0.0165%" height="15" fill="rgb(217,27,36)" fg:x="4234" fg:w="7"/><text x="10.2602%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="9.9838%" y="149" width="0.0353%" height="15" fill="rgb(219,218,39)" fg:x="4241" fg:w="15"/><text x="10.2767%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.0191%" y="133" width="0.1789%" height="15" fill="rgb(219,4,42)" fg:x="4256" fg:w="76"/><text x="10.3120%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.37%)</title><rect x="10.0191%" y="149" width="0.3743%" height="15" fill="rgb(249,119,36)" fg:x="4256" fg:w="159"/><text x="10.3120%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.3934%" y="117" width="0.1789%" height="15" fill="rgb(209,23,33)" fg:x="4415" fg:w="76"/><text x="10.6863%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="10.3934%" y="133" width="0.2590%" height="15" fill="rgb(211,10,0)" fg:x="4415" fg:w="110"/><text x="10.6863%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.42%)</title><rect x="10.3934%" y="149" width="0.4190%" height="15" fill="rgb(208,99,37)" fg:x="4415" fg:w="178"/><text x="10.6863%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.8124%" y="149" width="0.1789%" height="15" fill="rgb(213,132,31)" fg:x="4593" fg:w="76"/><text x="11.1054%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="10.9913%" y="149" width="0.1907%" height="15" fill="rgb(243,129,40)" fg:x="4669" fg:w="81"/><text x="11.2843%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.1820%" y="149" width="0.1789%" height="15" fill="rgb(210,66,33)" fg:x="4750" fg:w="76"/><text x="11.4750%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.3609%" y="149" width="0.1789%" height="15" fill="rgb(209,189,4)" fg:x="4826" fg:w="76"/><text x="11.6539%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.5445%" y="149" width="0.1907%" height="15" fill="rgb(214,107,37)" fg:x="4904" fg:w="81"/><text x="11.8375%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.94%)</title><rect x="11.7352%" y="149" width="0.9393%" height="15" fill="rgb(245,88,54)" fg:x="4985" fg:w="399"/><text x="12.0282%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.94%)</title><rect x="12.6745%" y="149" width="0.9393%" height="15" fill="rgb(205,146,20)" fg:x="5384" fg:w="399"/><text x="12.9675%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,461 instructions, 15.21%)</title><rect x="0.5862%" y="165" width="15.2099%" height="15" fill="rgb(220,161,25)" fg:x="249" fg:w="6461"/><text x="0.8791%" y="175.50">candid::de::IDLDese..</text></g><g><title>memcpy (354 instructions, 0.83%)</title><rect x="15.7960%" y="165" width="0.8334%" height="15" fill="rgb(215,152,15)" fg:x="6710" fg:w="354"/><text x="16.0890%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="16.6294%" y="133" width="0.0118%" height="15" fill="rgb(233,192,44)" fg:x="7064" fg:w="5"/><text x="16.9224%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="16.6412%" y="117" width="0.1248%" height="15" fill="rgb(240,170,46)" fg:x="7069" fg:w="53"/><text x="16.9341%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.90%)</title><rect x="16.7659%" y="117" width="0.9040%" height="15" fill="rgb(207,104,33)" fg:x="7122" fg:w="384"/><text x="17.0589%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="17.6699%" y="117" width="0.3814%" height="15" fill="rgb(219,21,39)" fg:x="7506" fg:w="162"/><text x="17.9629%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.97%)</title><rect x="16.6412%" y="133" width="1.9680%" height="15" fill="rgb(214,133,29)" fg:x="7069" fg:w="836"/><text x="16.9341%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (954 instructions, 2.25%)</title><rect x="16.6294%" y="149" width="2.2458%" height="15" fill="rgb(226,93,6)" fg:x="7064" fg:w="954"/><text x="16.9224%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="18.8752%" y="149" width="0.1789%" height="15" fill="rgb(252,222,34)" fg:x="8018" fg:w="76"/><text x="19.1682%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="19.0541%" y="133" width="0.0118%" height="15" fill="rgb(252,92,48)" fg:x="8094" fg:w="5"/><text x="19.3471%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="19.0659%" y="117" width="0.1248%" height="15" fill="rgb(245,223,24)" fg:x="8099" fg:w="53"/><text x="19.3589%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.90%)</title><rect x="19.1907%" y="117" width="0.9040%" height="15" fill="rgb(205,176,3)" fg:x="8152" fg:w="384"/><text x="19.4836%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="20.0946%" y="117" width="0.3814%" height="15" fill="rgb(235,151,15)" fg:x="8536" fg:w="162"/><text x="20.3876%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.97%)</title><rect x="19.0659%" y="133" width="1.9680%" height="15" fill="rgb(237,209,11)" fg:x="8099" fg:w="836"/><text x="19.3589%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,045 instructions, 2.46%)</title><rect x="19.0541%" y="149" width="2.4600%" height="15" fill="rgb(243,227,24)" fg:x="8094" fg:w="1045"/><text x="19.3471%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="21.5142%" y="149" width="0.1789%" height="15" fill="rgb(239,193,16)" fg:x="9139" fg:w="76"/><text x="21.8071%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="21.6931%" y="133" width="0.0118%" height="15" fill="rgb(231,27,9)" fg:x="9215" fg:w="5"/><text x="21.9860%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="21.7048%" y="117" width="0.1248%" height="15" fill="rgb(219,169,10)" fg:x="9220" fg:w="53"/><text x="21.9978%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.90%)</title><rect x="21.8296%" y="117" width="0.9040%" height="15" fill="rgb(244,229,43)" fg:x="9273" fg:w="384"/><text x="22.1226%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="22.7336%" y="117" width="0.3814%" height="15" fill="rgb(254,38,20)" fg:x="9657" fg:w="162"/><text x="23.0266%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.97%)</title><rect x="21.7048%" y="133" width="1.9680%" height="15" fill="rgb(250,47,30)" fg:x="9220" fg:w="836"/><text x="21.9978%" y="143.50"></text></g><g><title>memcmp (740 instructions, 1.74%)</title><rect x="23.6729%" y="133" width="1.7420%" height="15" fill="rgb(224,124,36)" fg:x="10056" fg:w="740"/><text x="23.9658%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="25.4149%" y="117" width="0.1907%" height="15" fill="rgb(246,68,51)" fg:x="10796" fg:w="81"/><text x="25.7079%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="25.4149%" y="133" width="0.2542%" height="15" fill="rgb(253,43,49)" fg:x="10796" fg:w="108"/><text x="25.7079%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,858 instructions, 4.37%)</title><rect x="21.6931%" y="149" width="4.3739%" height="15" fill="rgb(219,54,36)" fg:x="9215" fg:w="1858"/><text x="21.9860%" y="159.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.0670%" y="101" width="0.1248%" height="15" fill="rgb(227,133,34)" fg:x="11073" fg:w="53"/><text x="26.3600%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="26.0670%" y="117" width="0.1836%" height="15" fill="rgb(247,227,15)" fg:x="11073" fg:w="78"/><text x="26.3600%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.7568%" y="101" width="0.1248%" height="15" fill="rgb(229,96,14)" fg:x="11366" fg:w="53"/><text x="27.0497%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="26.7568%" y="117" width="0.1836%" height="15" fill="rgb(220,79,17)" fg:x="11366" fg:w="78"/><text x="27.0497%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (586 instructions, 1.38%)</title><rect x="26.0670%" y="133" width="1.3795%" height="15" fill="rgb(205,131,53)" fg:x="11073" fg:w="586"/><text x="26.3600%" y="143.50"></text></g><g><title>candid::types::internal::env_id (859 instructions, 2.02%)</title><rect x="26.0670%" y="149" width="2.0222%" height="15" fill="rgb(209,50,29)" fg:x="11073" fg:w="859"/><text x="26.3600%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,975 instructions, 11.71%)</title><rect x="16.6294%" y="165" width="11.7117%" height="15" fill="rgb(245,86,46)" fg:x="7064" fg:w="4975"/><text x="16.9224%" y="175.50">candid::types:..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="28.3411%" y="149" width="0.1106%" height="15" fill="rgb(235,66,46)" fg:x="12039" fg:w="47"/><text x="28.6340%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="28.4517%" y="133" width="0.2896%" height="15" fill="rgb(232,148,31)" fg:x="12086" fg:w="123"/><text x="28.7447%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="28.8048%" y="133" width="0.2896%" height="15" fill="rgb(217,149,8)" fg:x="12236" fg:w="123"/><text x="29.0978%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.71%)</title><rect x="28.4517%" y="149" width="0.7062%" height="15" fill="rgb(209,183,11)" fg:x="12086" fg:w="300"/><text x="28.7447%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="29.1579%" y="133" width="0.0659%" height="15" fill="rgb(208,55,20)" fg:x="12386" fg:w="28"/><text x="29.4509%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="29.2239%" y="133" width="0.0659%" height="15" fill="rgb(218,39,14)" fg:x="12414" fg:w="28"/><text x="29.5168%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2278 (15 instructions, 0.04%)</title><rect x="29.2898%" y="133" width="0.0353%" height="15" fill="rgb(216,169,33)" fg:x="12442" fg:w="15"/><text x="29.5827%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2278 (15 instructions, 0.04%)</title><rect x="29.3251%" y="133" width="0.0353%" height="15" fill="rgb(233,80,24)" fg:x="12457" fg:w="15"/><text x="29.6180%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="29.3604%" y="133" width="0.1836%" height="15" fill="rgb(213,179,31)" fg:x="12472" fg:w="78"/><text x="29.6534%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="29.5440%" y="133" width="0.1624%" height="15" fill="rgb(209,19,5)" fg:x="12550" fg:w="69"/><text x="29.8370%" y="143.50"></text></g><g><title>binread::binary_template::write_named (79 instructions, 0.19%)</title><rect x="29.7064%" y="117" width="0.1860%" height="15" fill="rgb(219,18,35)" fg:x="12619" fg:w="79"/><text x="29.9994%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (149 instructions, 0.35%)</title><rect x="29.7064%" y="133" width="0.3508%" height="15" fill="rgb(209,169,16)" fg:x="12619" fg:w="149"/><text x="29.9994%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="30.0572%" y="133" width="0.1530%" height="15" fill="rgb(245,90,51)" fg:x="12768" fg:w="65"/><text x="30.3502%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.96%)</title><rect x="30.2102%" y="133" width="0.9558%" height="15" fill="rgb(220,99,45)" fg:x="12833" fg:w="406"/><text x="30.5032%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="31.1660%" y="117" width="0.1789%" height="15" fill="rgb(249,89,25)" fg:x="13239" fg:w="76"/><text x="31.4590%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="31.3449%" y="85" width="0.1412%" height="15" fill="rgb(239,193,0)" fg:x="13315" fg:w="60"/><text x="31.6379%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="31.3449%" y="101" width="0.2001%" height="15" fill="rgb(231,126,1)" fg:x="13315" fg:w="85"/><text x="31.6379%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="31.5450%" y="53" width="0.0212%" height="15" fill="rgb(243,166,3)" fg:x="13400" fg:w="9"/><text x="31.8380%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="31.5662%" y="37" width="0.0706%" height="15" fill="rgb(223,22,34)" fg:x="13409" fg:w="30"/><text x="31.8592%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="31.5662%" y="53" width="0.1295%" height="15" fill="rgb(251,52,51)" fg:x="13409" fg:w="55"/><text x="31.8592%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="31.5450%" y="69" width="0.2778%" height="15" fill="rgb(221,165,28)" fg:x="13400" fg:w="118"/><text x="31.8380%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="31.5450%" y="85" width="0.4026%" height="15" fill="rgb(218,121,47)" fg:x="13400" fg:w="171"/><text x="31.8380%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="31.5450%" y="101" width="0.4143%" height="15" fill="rgb(209,120,9)" fg:x="13400" fg:w="176"/><text x="31.8380%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.88%)</title><rect x="31.3449%" y="117" width="0.8757%" height="15" fill="rgb(236,68,12)" fg:x="13315" fg:w="372"/><text x="31.6379%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.39%)</title><rect x="31.1660%" y="133" width="1.3866%" height="15" fill="rgb(225,194,26)" fg:x="13239" fg:w="589"/><text x="31.4590%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="32.5526%" y="133" width="0.1930%" height="15" fill="rgb(231,84,39)" fg:x="13828" fg:w="82"/><text x="32.8455%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="32.7456%" y="133" width="0.1295%" height="15" fill="rgb(210,11,45)" fg:x="13910" fg:w="55"/><text x="33.0386%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.8751%" y="117" width="0.1318%" height="15" fill="rgb(224,54,52)" fg:x="13965" fg:w="56"/><text x="33.1680%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 instructions, 0.27%)</title><rect x="32.8751%" y="133" width="0.2660%" height="15" fill="rgb(238,102,14)" fg:x="13965" fg:w="113"/><text x="33.1680%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="33.1411%" y="133" width="0.1789%" height="15" fill="rgb(243,160,52)" fg:x="14078" fg:w="76"/><text x="33.4341%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.3200%" y="117" width="0.1318%" height="15" fill="rgb(216,114,19)" fg:x="14154" fg:w="56"/><text x="33.6130%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.5860%" y="117" width="0.1318%" height="15" fill="rgb(244,166,37)" fg:x="14267" fg:w="56"/><text x="33.8790%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.8520%" y="117" width="0.1318%" height="15" fill="rgb(246,29,44)" fg:x="14380" fg:w="56"/><text x="34.1450%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.1180%" y="117" width="0.1318%" height="15" fill="rgb(215,56,53)" fg:x="14493" fg:w="56"/><text x="34.4110%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.3840%" y="117" width="0.1318%" height="15" fill="rgb(217,60,2)" fg:x="14606" fg:w="56"/><text x="34.6770%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.6501%" y="117" width="0.1318%" height="15" fill="rgb(207,26,24)" fg:x="14719" fg:w="56"/><text x="34.9430%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.9161%" y="117" width="0.1318%" height="15" fill="rgb(252,210,15)" fg:x="14832" fg:w="56"/><text x="35.2090%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.1821%" y="117" width="0.1318%" height="15" fill="rgb(253,209,26)" fg:x="14945" fg:w="56"/><text x="35.4751%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (904 instructions, 2.13%)</title><rect x="33.3200%" y="133" width="2.1281%" height="15" fill="rgb(238,170,14)" fg:x="14154" fg:w="904"/><text x="33.6130%" y="143.50">&lt;..</text></g><g><title>__rust_realloc (101 instructions, 0.24%)</title><rect x="35.4481%" y="101" width="0.2378%" height="15" fill="rgb(216,178,15)" fg:x="15058" fg:w="101"/><text x="35.7411%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.32%)</title><rect x="35.4481%" y="117" width="0.3202%" height="15" fill="rgb(250,197,2)" fg:x="15058" fg:w="136"/><text x="35.7411%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.49%)</title><rect x="35.4481%" y="133" width="0.4920%" height="15" fill="rgb(212,70,42)" fg:x="15058" fg:w="209"/><text x="35.7411%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.9401%" y="117" width="0.1318%" height="15" fill="rgb(227,213,9)" fg:x="15267" fg:w="56"/><text x="36.2331%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.2061%" y="117" width="0.1318%" height="15" fill="rgb(245,99,25)" fg:x="15380" fg:w="56"/><text x="36.4991%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.4721%" y="117" width="0.1318%" height="15" fill="rgb(250,82,29)" fg:x="15493" fg:w="56"/><text x="36.7651%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.7382%" y="117" width="0.1318%" height="15" fill="rgb(241,226,54)" fg:x="15606" fg:w="56"/><text x="37.0311%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="37.0042%" y="117" width="0.1318%" height="15" fill="rgb(221,99,41)" fg:x="15719" fg:w="56"/><text x="37.2971%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="37.2702%" y="117" width="0.1318%" height="15" fill="rgb(213,90,21)" fg:x="15832" fg:w="56"/><text x="37.5631%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="37.5362%" y="117" width="0.1318%" height="15" fill="rgb(205,208,24)" fg:x="15945" fg:w="56"/><text x="37.8292%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (791 instructions, 1.86%)</title><rect x="35.9401%" y="133" width="1.8621%" height="15" fill="rgb(246,31,12)" fg:x="15267" fg:w="791"/><text x="36.2331%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 instructions, 0.07%)</title><rect x="37.8022%" y="133" width="0.0706%" height="15" fill="rgb(213,154,6)" fg:x="16058" fg:w="30"/><text x="38.0952%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="37.8728%" y="133" width="0.1483%" height="15" fill="rgb(222,163,29)" fg:x="16088" fg:w="63"/><text x="38.1658%" y="143.50"></text></g><g><title>__rust_realloc (45 instructions, 0.11%)</title><rect x="38.0211%" y="101" width="0.1059%" height="15" fill="rgb(227,201,8)" fg:x="16151" fg:w="45"/><text x="38.3141%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 instructions, 0.19%)</title><rect x="38.0211%" y="117" width="0.1883%" height="15" fill="rgb(233,9,32)" fg:x="16151" fg:w="80"/><text x="38.3141%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (153 instructions, 0.36%)</title><rect x="38.0211%" y="133" width="0.3602%" height="15" fill="rgb(217,54,24)" fg:x="16151" fg:w="153"/><text x="38.3141%" y="143.50"></text></g><g><title>memcpy (206 instructions, 0.48%)</title><rect x="38.3813%" y="133" width="0.4849%" height="15" fill="rgb(235,192,0)" fg:x="16304" fg:w="206"/><text x="38.6743%" y="143.50"></text></g><g><title>memcpy (160 instructions, 0.38%)</title><rect x="38.8663%" y="133" width="0.3767%" height="15" fill="rgb(235,45,9)" fg:x="16510" fg:w="160"/><text x="39.1592%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="39.2429%" y="133" width="0.1907%" height="15" fill="rgb(246,42,40)" fg:x="16670" fg:w="81"/><text x="39.5359%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="39.4336%" y="133" width="0.1295%" height="15" fill="rgb(248,111,24)" fg:x="16751" fg:w="55"/><text x="39.7266%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (5,440 instructions, 12.81%)</title><rect x="29.1579%" y="149" width="12.8063%" height="15" fill="rgb(249,65,22)" fg:x="12386" fg:w="5440"/><text x="29.4509%" y="159.50">&lt;candid::types::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.9643%" y="149" width="0.0259%" height="15" fill="rgb(238,111,51)" fg:x="17826" fg:w="11"/><text x="42.2572%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.9902%" y="149" width="0.0259%" height="15" fill="rgb(250,118,22)" fg:x="17837" fg:w="11"/><text x="42.2831%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="42.0161%" y="149" width="0.0259%" height="15" fill="rgb(234,84,26)" fg:x="17848" fg:w="11"/><text x="42.3090%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,100 instructions, 14.36%)</title><rect x="28.3411%" y="165" width="14.3600%" height="15" fill="rgb(243,172,12)" fg:x="12039" fg:w="6100"/><text x="28.6340%" y="175.50">candid::de::IDLDes..</text></g><g><title>memcpy (410 instructions, 0.97%)</title><rect x="42.7011%" y="165" width="0.9652%" height="15" fill="rgb(236,150,49)" fg:x="18139" fg:w="410"/><text x="42.9941%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="43.6663%" y="133" width="0.0282%" height="15" fill="rgb(225,197,26)" fg:x="18549" fg:w="12"/><text x="43.9593%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="43.6945%" y="133" width="0.3955%" height="15" fill="rgb(214,17,42)" fg:x="18561" fg:w="168"/><text x="43.9875%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.22%)</title><rect x="44.0900%" y="101" width="0.2236%" height="15" fill="rgb(224,165,40)" fg:x="18729" fg:w="95"/><text x="44.3830%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (240 instructions, 0.56%)</title><rect x="44.0900%" y="117" width="0.5650%" height="15" fill="rgb(246,100,4)" fg:x="18729" fg:w="240"/><text x="44.3830%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (267 instructions, 0.63%)</title><rect x="44.0900%" y="133" width="0.6285%" height="15" fill="rgb(222,103,0)" fg:x="18729" fg:w="267"/><text x="44.3830%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="44.7186%" y="133" width="0.0259%" height="15" fill="rgb(227,189,26)" fg:x="18996" fg:w="11"/><text x="45.0115%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (498 instructions, 1.17%)</title><rect x="43.6663%" y="149" width="1.1723%" height="15" fill="rgb(214,202,17)" fg:x="18549" fg:w="498"/><text x="43.9593%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (536 instructions, 1.26%)</title><rect x="43.6663%" y="165" width="1.2618%" height="15" fill="rgb(229,111,3)" fg:x="18549" fg:w="536"/><text x="43.9593%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.13%)</title><rect x="44.9281%" y="149" width="0.1271%" height="15" fill="rgb(229,172,15)" fg:x="19085" fg:w="54"/><text x="45.2211%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.22%)</title><rect x="45.0552%" y="149" width="0.2236%" height="15" fill="rgb(230,224,35)" fg:x="19139" fg:w="95"/><text x="45.3482%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (230 instructions, 0.54%)</title><rect x="44.9281%" y="165" width="0.5414%" height="15" fill="rgb(251,141,6)" fg:x="19085" fg:w="230"/><text x="45.2211%" y="175.50"></text></g><g><title>memset (218 instructions, 0.51%)</title><rect x="45.4695%" y="165" width="0.5132%" height="15" fill="rgb(225,208,6)" fg:x="19315" fg:w="218"/><text x="45.7625%" y="175.50"></text></g><g><title>memcpy (206 instructions, 0.48%)</title><rect x="45.9827%" y="165" width="0.4849%" height="15" fill="rgb(246,181,16)" fg:x="19533" fg:w="206"/><text x="46.2757%" y="175.50"></text></g><g><title>memcpy (470 instructions, 1.11%)</title><rect x="46.4677%" y="165" width="1.1064%" height="15" fill="rgb(227,129,36)" fg:x="19739" fg:w="470"/><text x="46.7606%" y="175.50"></text></g><g><title>memset (56 instructions, 0.13%)</title><rect x="47.5741%" y="149" width="0.1318%" height="15" fill="rgb(248,117,24)" fg:x="20209" fg:w="56"/><text x="47.8671%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.74%)</title><rect x="47.7059%" y="149" width="11.7399%" height="15" fill="rgb(214,185,35)" fg:x="20265" fg:w="4987"/><text x="47.9989%" y="159.50">sha2::sha256::..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.74%)</title><rect x="59.4458%" y="149" width="11.7399%" height="15" fill="rgb(236,150,34)" fg:x="25252" fg:w="4987"/><text x="59.7388%" y="159.50">sha2::sha256::..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (10,354 instructions, 24.37%)</title><rect x="47.5741%" y="165" width="24.3744%" height="15" fill="rgb(243,228,27)" fg:x="20209" fg:w="10354"/><text x="47.8671%" y="175.50">&lt;sha2::core_api::Sha256VarCore as..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="71.9485%" y="165" width="0.1789%" height="15" fill="rgb(245,77,44)" fg:x="30563" fg:w="76"/><text x="72.2415%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="72.1274%" y="149" width="0.0118%" height="15" fill="rgb(235,214,42)" fg:x="30639" fg:w="5"/><text x="72.4204%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (90 instructions, 0.21%)</title><rect x="72.1392%" y="101" width="0.2119%" height="15" fill="rgb(221,74,3)" fg:x="30644" fg:w="90"/><text x="72.4321%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="72.3510%" y="101" width="0.1483%" height="15" fill="rgb(206,121,29)" fg:x="30734" fg:w="63"/><text x="72.6440%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (237 instructions, 0.56%)</title><rect x="72.1392%" y="117" width="0.5579%" height="15" fill="rgb(249,131,53)" fg:x="30644" fg:w="237"/><text x="72.4321%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (264 instructions, 0.62%)</title><rect x="72.1392%" y="133" width="0.6215%" height="15" fill="rgb(236,170,29)" fg:x="30644" fg:w="264"/><text x="72.4321%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="72.7607%" y="117" width="0.1295%" height="15" fill="rgb(247,96,15)" fg:x="30908" fg:w="55"/><text x="73.0536%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="72.8901%" y="117" width="0.1483%" height="15" fill="rgb(211,210,7)" fg:x="30963" fg:w="63"/><text x="73.1831%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (199 instructions, 0.47%)</title><rect x="72.7607%" y="133" width="0.4685%" height="15" fill="rgb(240,88,50)" fg:x="30908" fg:w="199"/><text x="73.0536%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (495 instructions, 1.17%)</title><rect x="72.1392%" y="149" width="1.1653%" height="15" fill="rgb(209,229,26)" fg:x="30644" fg:w="495"/><text x="72.4321%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="73.3045%" y="149" width="0.0259%" height="15" fill="rgb(210,68,23)" fg:x="31139" fg:w="11"/><text x="73.5974%" y="159.50"></text></g><g><title>memset (136 instructions, 0.32%)</title><rect x="73.3304%" y="149" width="0.3202%" height="15" fill="rgb(229,180,13)" fg:x="31150" fg:w="136"/><text x="73.6233%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="73.6505%" y="117" width="0.0118%" height="15" fill="rgb(236,53,44)" fg:x="31286" fg:w="5"/><text x="73.9435%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="73.6505%" y="133" width="0.0918%" height="15" fill="rgb(244,214,29)" fg:x="31286" fg:w="39"/><text x="73.9435%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="73.7423%" y="133" width="0.1789%" height="15" fill="rgb(220,75,29)" fg:x="31325" fg:w="76"/><text x="74.0353%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="73.9212%" y="117" width="0.0118%" height="15" fill="rgb(214,183,37)" fg:x="31401" fg:w="5"/><text x="74.2142%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="73.9330%" y="101" width="0.1248%" height="15" fill="rgb(239,117,29)" fg:x="31406" fg:w="53"/><text x="74.2260%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.86%)</title><rect x="74.0578%" y="101" width="0.8569%" height="15" fill="rgb(237,171,35)" fg:x="31459" fg:w="364"/><text x="74.3507%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.17%)</title><rect x="74.9147%" y="101" width="0.1695%" height="15" fill="rgb(229,178,53)" fg:x="31823" fg:w="72"/><text x="75.2076%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.71%)</title><rect x="73.9330%" y="117" width="1.7091%" height="15" fill="rgb(210,102,19)" fg:x="31406" fg:w="726"/><text x="74.2260%" y="127.50"></text></g><g><title>candid::types::internal::env_add (935 instructions, 2.20%)</title><rect x="73.9212%" y="133" width="2.2011%" height="15" fill="rgb(235,127,22)" fg:x="31401" fg:w="935"/><text x="74.2142%" y="143.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="76.1223%" y="133" width="0.1789%" height="15" fill="rgb(244,31,31)" fg:x="32336" fg:w="76"/><text x="76.4153%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="76.3012%" y="133" width="0.1789%" height="15" fill="rgb(231,43,21)" fg:x="32412" fg:w="76"/><text x="76.5942%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="76.4801%" y="117" width="0.0118%" height="15" fill="rgb(217,131,35)" fg:x="32488" fg:w="5"/><text x="76.7731%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.4919%" y="101" width="0.1248%" height="15" fill="rgb(221,149,4)" fg:x="32493" fg:w="53"/><text x="76.7849%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.86%)</title><rect x="76.6167%" y="101" width="0.8569%" height="15" fill="rgb(232,170,28)" fg:x="32546" fg:w="364"/><text x="76.9096%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.17%)</title><rect x="77.4736%" y="101" width="0.1695%" height="15" fill="rgb(238,56,10)" fg:x="32910" fg:w="72"/><text x="77.7665%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.71%)</title><rect x="76.4919%" y="117" width="1.7091%" height="15" fill="rgb(235,196,14)" fg:x="32493" fg:w="726"/><text x="76.7849%" y="127.50"></text></g><g><title>memcmp (614 instructions, 1.45%)</title><rect x="78.2010%" y="117" width="1.4454%" height="15" fill="rgb(216,45,48)" fg:x="33219" fg:w="614"/><text x="78.4940%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="79.6464%" y="101" width="0.1907%" height="15" fill="rgb(238,213,17)" fg:x="33833" fg:w="81"/><text x="79.9394%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="79.6464%" y="117" width="0.2542%" height="15" fill="rgb(212,13,2)" fg:x="33833" fg:w="108"/><text x="79.9394%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,622 instructions, 3.82%)</title><rect x="76.4801%" y="133" width="3.8184%" height="15" fill="rgb(240,114,20)" fg:x="32488" fg:w="1622"/><text x="76.7731%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="80.2985%" y="85" width="0.1248%" height="15" fill="rgb(228,41,40)" fg:x="34110" fg:w="53"/><text x="80.5915%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="80.4233%" y="85" width="0.3625%" height="15" fill="rgb(244,132,35)" fg:x="34163" fg:w="154"/><text x="80.7162%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.61%)</title><rect x="80.2985%" y="101" width="0.6074%" height="15" fill="rgb(253,189,4)" fg:x="34110" fg:w="258"/><text x="80.5915%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.11%)</title><rect x="80.2985%" y="117" width="1.1135%" height="15" fill="rgb(224,37,19)" fg:x="34110" fg:w="473"/><text x="80.5915%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1311 (42 instructions, 0.10%)</title><rect x="81.4120%" y="117" width="0.0989%" height="15" fill="rgb(235,223,18)" fg:x="34583" fg:w="42"/><text x="81.7050%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.5109%" y="117" width="0.0259%" height="15" fill="rgb(235,163,25)" fg:x="34625" fg:w="11"/><text x="81.8038%" y="127.50"></text></g><g><title>candid::types::internal::env_id (685 instructions, 1.61%)</title><rect x="80.2985%" y="133" width="1.6126%" height="15" fill="rgb(217,145,28)" fg:x="34110" fg:w="685"/><text x="80.5915%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,633 instructions, 8.55%)</title><rect x="73.6505%" y="149" width="8.5525%" height="15" fill="rgb(223,223,32)" fg:x="31286" fg:w="3633"/><text x="73.9435%" y="159.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="82.2030%" y="117" width="0.1789%" height="15" fill="rgb(227,189,39)" fg:x="34919" fg:w="76"/><text x="82.4959%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="82.2030%" y="133" width="0.2590%" height="15" fill="rgb(248,10,22)" fg:x="34919" fg:w="110"/><text x="82.4959%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.42%)</title><rect x="82.2030%" y="149" width="0.4190%" height="15" fill="rgb(248,46,39)" fg:x="34919" fg:w="178"/><text x="82.4959%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.06%)</title><rect x="82.6220%" y="133" width="0.0565%" height="15" fill="rgb(248,113,48)" fg:x="35097" fg:w="24"/><text x="82.9150%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="82.6785%" y="101" width="0.1836%" height="15" fill="rgb(245,16,25)" fg:x="35121" fg:w="78"/><text x="82.9715%" y="111.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.36%)</title><rect x="82.6785%" y="117" width="0.3602%" height="15" fill="rgb(249,152,16)" fg:x="35121" fg:w="153"/><text x="82.9715%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="83.0387%" y="117" width="0.1789%" height="15" fill="rgb(250,16,1)" fg:x="35274" fg:w="76"/><text x="83.3316%" y="127.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.73%)</title><rect x="82.6785%" y="133" width="0.7251%" height="15" fill="rgb(249,138,3)" fg:x="35121" fg:w="308"/><text x="82.9715%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="83.4036%" y="85" width="0.1248%" height="15" fill="rgb(227,71,41)" fg:x="35429" fg:w="53"/><text x="83.6965%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="83.5283%" y="85" width="0.3625%" height="15" fill="rgb(209,184,23)" fg:x="35482" fg:w="154"/><text x="83.8213%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.61%)</title><rect x="83.4036%" y="101" width="0.6074%" height="15" fill="rgb(223,215,31)" fg:x="35429" fg:w="258"/><text x="83.6965%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.11%)</title><rect x="83.4036%" y="117" width="1.1135%" height="15" fill="rgb(210,146,28)" fg:x="35429" fg:w="473"/><text x="83.6965%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="84.5171%" y="117" width="0.1789%" height="15" fill="rgb(209,183,41)" fg:x="35902" fg:w="76"/><text x="84.8100%" y="127.50"></text></g><g><title>memset (136 instructions, 0.32%)</title><rect x="84.6960%" y="117" width="0.3202%" height="15" fill="rgb(209,224,45)" fg:x="35978" fg:w="136"/><text x="84.9889%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (989 instructions, 2.33%)</title><rect x="83.4036%" y="133" width="2.3282%" height="15" fill="rgb(224,209,51)" fg:x="35429" fg:w="989"/><text x="83.6965%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="85.7318%" y="101" width="0.1789%" height="15" fill="rgb(223,17,39)" fg:x="36418" fg:w="76"/><text x="86.0247%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="85.7318%" y="117" width="0.2590%" height="15" fill="rgb(234,204,37)" fg:x="36418" fg:w="110"/><text x="86.0247%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.42%)</title><rect x="85.7318%" y="133" width="0.4190%" height="15" fill="rgb(236,120,5)" fg:x="36418" fg:w="178"/><text x="86.0247%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="86.1508%" y="85" width="0.1248%" height="15" fill="rgb(248,97,27)" fg:x="36596" fg:w="53"/><text x="86.4438%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="86.1508%" y="101" width="0.1836%" height="15" fill="rgb(240,66,17)" fg:x="36596" fg:w="78"/><text x="86.4438%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.69%)</title><rect x="86.1508%" y="117" width="0.6898%" height="15" fill="rgb(210,79,3)" fg:x="36596" fg:w="293"/><text x="86.4438%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="86.8406%" y="117" width="0.0424%" height="15" fill="rgb(214,176,27)" fg:x="36889" fg:w="18"/><text x="87.1335%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="86.8829%" y="117" width="0.0259%" height="15" fill="rgb(235,185,3)" fg:x="36907" fg:w="11"/><text x="87.1759%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (438 instructions, 1.03%)</title><rect x="86.1508%" y="133" width="1.0311%" height="15" fill="rgb(227,24,12)" fg:x="36596" fg:w="438"/><text x="86.4438%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="87.1819%" y="85" width="0.1789%" height="15" fill="rgb(252,169,48)" fg:x="37034" fg:w="76"/><text x="87.4749%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="87.1819%" y="101" width="0.2590%" height="15" fill="rgb(212,65,1)" fg:x="37034" fg:w="110"/><text x="87.4749%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.41%)</title><rect x="87.1819%" y="117" width="0.4120%" height="15" fill="rgb(242,39,24)" fg:x="37034" fg:w="175"/><text x="87.4749%" y="127.50"></text></g><g><title>leb128::write::signed (227 instructions, 0.53%)</title><rect x="87.1819%" y="133" width="0.5344%" height="15" fill="rgb(249,32,23)" fg:x="37034" fg:w="227"/><text x="87.4749%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (56 instructions, 0.13%)</title><rect x="87.7163%" y="133" width="0.1318%" height="15" fill="rgb(251,195,23)" fg:x="37261" fg:w="56"/><text x="88.0093%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="87.8481%" y="101" width="0.1907%" height="15" fill="rgb(236,174,8)" fg:x="37317" fg:w="81"/><text x="88.1411%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="87.8481%" y="117" width="0.2542%" height="15" fill="rgb(220,197,8)" fg:x="37317" fg:w="108"/><text x="88.1411%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="88.1024%" y="117" width="0.1836%" height="15" fill="rgb(240,108,37)" fg:x="37425" fg:w="78"/><text x="88.3953%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.51%)</title><rect x="87.8481%" y="133" width="0.5132%" height="15" fill="rgb(232,176,24)" fg:x="37317" fg:w="218"/><text x="88.1411%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="88.3613%" y="133" width="0.0259%" height="15" fill="rgb(243,35,29)" fg:x="37535" fg:w="11"/><text x="88.6543%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,652 instructions, 6.24%)</title><rect x="82.6220%" y="149" width="6.2431%" height="15" fill="rgb(210,37,18)" fg:x="35097" fg:w="2652"/><text x="82.9150%" y="159.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="88.8651%" y="149" width="0.0259%" height="15" fill="rgb(224,184,40)" fg:x="37749" fg:w="11"/><text x="89.1581%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="88.8910%" y="117" width="0.1789%" height="15" fill="rgb(236,39,29)" fg:x="37760" fg:w="76"/><text x="89.1840%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="88.8910%" y="133" width="0.2590%" height="15" fill="rgb(232,48,39)" fg:x="37760" fg:w="110"/><text x="89.1840%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.24%)</title><rect x="89.3029%" y="117" width="0.2378%" height="15" fill="rgb(236,34,42)" fg:x="37935" fg:w="101"/><text x="89.5959%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.32%)</title><rect x="89.3029%" y="133" width="0.3202%" height="15" fill="rgb(243,106,37)" fg:x="37935" fg:w="136"/><text x="89.5959%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (384 instructions, 0.90%)</title><rect x="88.8910%" y="149" width="0.9040%" height="15" fill="rgb(218,96,6)" fg:x="37760" fg:w="384"/><text x="89.1840%" y="159.50"></text></g><g><title>memcpy (272 instructions, 0.64%)</title><rect x="89.7950%" y="149" width="0.6403%" height="15" fill="rgb(235,130,12)" fg:x="38144" fg:w="272"/><text x="90.0879%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.28%)</title><rect x="90.4353%" y="149" width="0.2825%" height="15" fill="rgb(231,95,0)" fg:x="38416" fg:w="120"/><text x="90.7282%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.08%)</title><rect x="90.7178%" y="149" width="0.0753%" height="15" fill="rgb(228,12,23)" fg:x="38536" fg:w="32"/><text x="91.0107%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="90.7931%" y="117" width="0.1789%" height="15" fill="rgb(216,12,1)" fg:x="38568" fg:w="76"/><text x="91.0861%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="90.7931%" y="133" width="0.2590%" height="15" fill="rgb(219,59,3)" fg:x="38568" fg:w="110"/><text x="91.0861%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.41%)</title><rect x="90.7931%" y="149" width="0.4120%" height="15" fill="rgb(215,208,46)" fg:x="38568" fg:w="175"/><text x="91.0861%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="91.2051%" y="149" width="0.1789%" height="15" fill="rgb(254,224,29)" fg:x="38743" fg:w="76"/><text x="91.4980%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="91.3840%" y="149" width="0.1059%" height="15" fill="rgb(232,14,29)" fg:x="38819" fg:w="45"/><text x="91.6769%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="91.4899%" y="149" width="0.1059%" height="15" fill="rgb(208,45,52)" fg:x="38864" fg:w="45"/><text x="91.7829%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="91.5958%" y="149" width="0.1295%" height="15" fill="rgb(234,191,28)" fg:x="38909" fg:w="55"/><text x="91.8888%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="91.7253%" y="101" width="0.1248%" height="15" fill="rgb(244,67,43)" fg:x="38964" fg:w="53"/><text x="92.0183%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="91.8501%" y="101" width="0.3625%" height="15" fill="rgb(236,189,24)" fg:x="39017" fg:w="154"/><text x="92.1431%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.61%)</title><rect x="91.7253%" y="117" width="0.6074%" height="15" fill="rgb(239,214,33)" fg:x="38964" fg:w="258"/><text x="92.0183%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.11%)</title><rect x="91.7253%" y="133" width="1.1135%" height="15" fill="rgb(226,176,41)" fg:x="38964" fg:w="473"/><text x="92.0183%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="92.8388%" y="101" width="0.1789%" height="15" fill="rgb(248,47,8)" fg:x="39437" fg:w="76"/><text x="93.1318%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="92.8388%" y="117" width="0.2590%" height="15" fill="rgb(218,81,44)" fg:x="39437" fg:w="110"/><text x="93.1318%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.41%)</title><rect x="92.8388%" y="133" width="0.4120%" height="15" fill="rgb(213,98,6)" fg:x="39437" fg:w="175"/><text x="93.1318%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (821 instructions, 1.93%)</title><rect x="91.7253%" y="149" width="1.9327%" height="15" fill="rgb(222,85,22)" fg:x="38964" fg:w="821"/><text x="92.0183%" y="159.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="93.6580%" y="149" width="0.0706%" height="15" fill="rgb(239,46,39)" fg:x="39785" fg:w="30"/><text x="93.9510%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="93.7287%" y="149" width="0.1295%" height="15" fill="rgb(237,12,29)" fg:x="39815" fg:w="55"/><text x="94.0216%" y="159.50"></text></g><g><title>std::io::Write::write_all (33 instructions, 0.08%)</title><rect x="93.8581%" y="149" width="0.0777%" height="15" fill="rgb(214,77,8)" fg:x="39870" fg:w="33"/><text x="94.1511%" y="159.50"></text></g><g><title>std::io::Write::write_all (57 instructions, 0.13%)</title><rect x="93.9358%" y="149" width="0.1342%" height="15" fill="rgb(217,168,37)" fg:x="39903" fg:w="57"/><text x="94.2288%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="94.0700%" y="149" width="0.1907%" height="15" fill="rgb(221,217,23)" fg:x="39960" fg:w="81"/><text x="94.3630%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="94.2607%" y="149" width="0.2896%" height="15" fill="rgb(243,229,36)" fg:x="40041" fg:w="123"/><text x="94.5537%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.5502%" y="149" width="0.0259%" height="15" fill="rgb(251,163,40)" fg:x="40164" fg:w="11"/><text x="94.8432%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="94.5761%" y="149" width="0.3955%" height="15" fill="rgb(237,222,12)" fg:x="40175" fg:w="168"/><text x="94.8691%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.9716%" y="149" width="0.0118%" height="15" fill="rgb(248,132,6)" fg:x="40343" fg:w="5"/><text x="95.2646%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.9834%" y="149" width="0.0259%" height="15" fill="rgb(227,167,50)" fg:x="40348" fg:w="11"/><text x="95.2764%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="95.0093%" y="149" width="0.2896%" height="15" fill="rgb(242,84,37)" fg:x="40359" fg:w="123"/><text x="95.3023%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="95.2989%" y="149" width="0.1295%" height="15" fill="rgb(212,4,50)" fg:x="40482" fg:w="55"/><text x="95.5918%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.24%)</title><rect x="95.4283%" y="149" width="0.2354%" height="15" fill="rgb(230,228,32)" fg:x="40537" fg:w="100"/><text x="95.7213%" y="159.50"></text></g><g><title>candid::utils::write_args (10,809 instructions, 25.45%)</title><rect x="72.1274%" y="165" width="25.4455%" height="15" fill="rgb(248,217,23)" fg:x="30639" fg:w="10809"/><text x="72.4204%" y="175.50">candid::utils::write_args</text></g><g><title>sha::principalToAccount_2_::{{closure}} (41,795 instructions, 98.39%)</title><rect x="0.4073%" y="181" width="98.3898%" height="15" fill="rgb(238,197,32)" fg:x="173" fg:w="41795"/><text x="0.7002%" y="191.50">sha::principalToAccount_2_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.7971%" y="181" width="0.0282%" height="15" fill="rgb(236,106,1)" fg:x="41968" fg:w="12"/><text x="99.0900%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="98.8253%" y="165" width="0.1295%" height="15" fill="rgb(219,228,13)" fg:x="41980" fg:w="55"/><text x="99.1183%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="98.9548%" y="165" width="0.1483%" height="15" fill="rgb(238,30,35)" fg:x="42035" fg:w="63"/><text x="99.2477%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="99.3008%" y="165" width="0.1295%" height="15" fill="rgb(236,70,23)" fg:x="42182" fg:w="55"/><text x="99.5938%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="99.4303%" y="165" width="0.1483%" height="15" fill="rgb(249,104,48)" fg:x="42237" fg:w="63"/><text x="99.7233%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (401 instructions, 0.94%)</title><rect x="98.8253%" y="181" width="0.9440%" height="15" fill="rgb(254,117,50)" fg:x="41980" fg:w="401"/><text x="99.1183%" y="191.50"></text></g><g><title>all (42,479 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(223,152,4)" fg:x="0" fg:w="42479"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToAccount (42,479 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(245,6,2)" fg:x="0" fg:w="42479"/><text x="0.2930%" y="207.50">canister_update principalToAccount</text></g></svg></svg>