<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToAccount</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="42397"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="181" width="0.0448%" height="15" fill="rgb(253,43,49)" fg:x="0" fg:w="19"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="0.0448%" y="181" width="0.1863%" height="15" fill="rgb(219,54,36)" fg:x="19" fg:w="79"/><text x="0.3378%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.2311%" y="181" width="0.1793%" height="15" fill="rgb(227,133,34)" fg:x="98" fg:w="76"/><text x="0.5241%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.4104%" y="165" width="0.1793%" height="15" fill="rgb(247,227,15)" fg:x="174" fg:w="76"/><text x="0.7034%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="0.5897%" y="149" width="0.1675%" height="15" fill="rgb(229,96,14)" fg:x="250" fg:w="71"/><text x="0.8826%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.94%)</title><rect x="0.7571%" y="149" width="0.9435%" height="15" fill="rgb(220,79,17)" fg:x="321" fg:w="400"/><text x="1.0501%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="1.7006%" y="149" width="0.2005%" height="15" fill="rgb(205,131,53)" fg:x="721" fg:w="85"/><text x="1.9936%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="1.9011%" y="149" width="0.1274%" height="15" fill="rgb(209,50,29)" fg:x="806" fg:w="54"/><text x="2.1940%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.0284%" y="149" width="0.1274%" height="15" fill="rgb(245,86,46)" fg:x="860" fg:w="54"/><text x="2.3214%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.1558%" y="149" width="0.1274%" height="15" fill="rgb(235,66,46)" fg:x="914" fg:w="54"/><text x="2.4488%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.2832%" y="149" width="0.1274%" height="15" fill="rgb(232,148,31)" fg:x="968" fg:w="54"/><text x="2.5761%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="2.4105%" y="149" width="0.1675%" height="15" fill="rgb(217,149,8)" fg:x="1022" fg:w="71"/><text x="2.7035%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.5780%" y="149" width="0.1533%" height="15" fill="rgb(209,183,11)" fg:x="1093" fg:w="65"/><text x="2.8710%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.94%)</title><rect x="2.7313%" y="149" width="0.9435%" height="15" fill="rgb(208,55,20)" fg:x="1158" fg:w="400"/><text x="3.0243%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.6748%" y="149" width="0.0377%" height="15" fill="rgb(218,39,14)" fg:x="1558" fg:w="16"/><text x="3.9678%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="3.7125%" y="133" width="0.1793%" height="15" fill="rgb(216,169,33)" fg:x="1574" fg:w="76"/><text x="4.0055%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.8918%" y="101" width="0.1415%" height="15" fill="rgb(233,80,24)" fg:x="1650" fg:w="60"/><text x="4.1848%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="3.8918%" y="117" width="0.2005%" height="15" fill="rgb(213,179,31)" fg:x="1650" fg:w="85"/><text x="4.1848%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.0923%" y="69" width="0.0212%" height="15" fill="rgb(209,19,5)" fg:x="1735" fg:w="9"/><text x="4.3852%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.1135%" y="53" width="0.0708%" height="15" fill="rgb(219,18,35)" fg:x="1744" fg:w="30"/><text x="4.4065%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.1135%" y="69" width="0.1297%" height="15" fill="rgb(209,169,16)" fg:x="1744" fg:w="55"/><text x="4.4065%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="4.0923%" y="85" width="0.2783%" height="15" fill="rgb(245,90,51)" fg:x="1735" fg:w="118"/><text x="4.3852%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="4.0923%" y="101" width="0.4033%" height="15" fill="rgb(220,99,45)" fg:x="1735" fg:w="171"/><text x="4.3852%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="4.0923%" y="117" width="0.4151%" height="15" fill="rgb(249,89,25)" fg:x="1735" fg:w="176"/><text x="4.3852%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.88%)</title><rect x="3.8918%" y="133" width="0.8774%" height="15" fill="rgb(239,193,0)" fg:x="1650" fg:w="372"/><text x="4.1848%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (594 instructions, 1.40%)</title><rect x="3.7125%" y="149" width="1.4010%" height="15" fill="rgb(231,126,1)" fg:x="1574" fg:w="594"/><text x="4.0055%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="5.1136%" y="149" width="0.2005%" height="15" fill="rgb(243,166,3)" fg:x="2168" fg:w="85"/><text x="5.4065%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="5.3141%" y="149" width="0.1297%" height="15" fill="rgb(223,22,34)" fg:x="2253" fg:w="55"/><text x="5.6070%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="5.4438%" y="149" width="0.1557%" height="15" fill="rgb(251,52,51)" fg:x="2308" fg:w="66"/><text x="5.7368%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="5.5995%" y="149" width="0.1533%" height="15" fill="rgb(221,165,28)" fg:x="2374" fg:w="65"/><text x="5.8924%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.94%)</title><rect x="5.7528%" y="133" width="0.9435%" height="15" fill="rgb(218,121,47)" fg:x="2439" fg:w="400"/><text x="6.0457%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="6.6962%" y="133" width="0.0377%" height="15" fill="rgb(209,120,9)" fg:x="2839" fg:w="16"/><text x="6.9892%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="6.7340%" y="117" width="0.1793%" height="15" fill="rgb(236,68,12)" fg:x="2855" fg:w="76"/><text x="7.0269%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="6.9132%" y="85" width="0.1415%" height="15" fill="rgb(225,194,26)" fg:x="2931" fg:w="60"/><text x="7.2062%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="6.9132%" y="101" width="0.2005%" height="15" fill="rgb(231,84,39)" fg:x="2931" fg:w="85"/><text x="7.2062%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.1137%" y="53" width="0.0212%" height="15" fill="rgb(210,11,45)" fg:x="3016" fg:w="9"/><text x="7.4067%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.1349%" y="37" width="0.0708%" height="15" fill="rgb(224,54,52)" fg:x="3025" fg:w="30"/><text x="7.4279%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.1349%" y="53" width="0.1297%" height="15" fill="rgb(238,102,14)" fg:x="3025" fg:w="55"/><text x="7.4279%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="7.1137%" y="69" width="0.2783%" height="15" fill="rgb(243,160,52)" fg:x="3016" fg:w="118"/><text x="7.4067%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="7.1137%" y="85" width="0.4033%" height="15" fill="rgb(216,114,19)" fg:x="3016" fg:w="171"/><text x="7.4067%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="7.1137%" y="101" width="0.4151%" height="15" fill="rgb(244,166,37)" fg:x="3016" fg:w="176"/><text x="7.4067%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.88%)</title><rect x="6.9132%" y="117" width="0.8774%" height="15" fill="rgb(246,29,44)" fg:x="2931" fg:w="372"/><text x="7.2062%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (594 instructions, 1.40%)</title><rect x="6.7340%" y="133" width="1.4010%" height="15" fill="rgb(215,56,53)" fg:x="2855" fg:w="594"/><text x="7.0269%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="8.1350%" y="133" width="0.2005%" height="15" fill="rgb(217,60,2)" fg:x="3449" fg:w="85"/><text x="8.4280%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="8.3355%" y="133" width="0.1297%" height="15" fill="rgb(207,26,24)" fg:x="3534" fg:w="55"/><text x="8.6285%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="8.4652%" y="117" width="0.1675%" height="15" fill="rgb(252,210,15)" fg:x="3589" fg:w="71"/><text x="8.7582%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="8.6327%" y="117" width="0.2146%" height="15" fill="rgb(253,209,26)" fg:x="3660" fg:w="91"/><text x="8.9257%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="8.8473%" y="117" width="0.1557%" height="15" fill="rgb(238,170,14)" fg:x="3751" fg:w="66"/><text x="9.1403%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (291 instructions, 0.69%)</title><rect x="8.4652%" y="133" width="0.6864%" height="15" fill="rgb(216,178,15)" fg:x="3589" fg:w="291"/><text x="8.7582%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="9.1516%" y="133" width="0.1793%" height="15" fill="rgb(250,197,2)" fg:x="3880" fg:w="76"/><text x="9.4446%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,718 instructions, 4.05%)</title><rect x="5.7528%" y="149" width="4.0522%" height="15" fill="rgb(212,70,42)" fg:x="2439" fg:w="1718"/><text x="6.0457%" y="159.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="9.8049%" y="149" width="0.1557%" height="15" fill="rgb(227,213,9)" fg:x="4157" fg:w="66"/><text x="10.0979%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.9606%" y="149" width="0.0307%" height="15" fill="rgb(245,99,25)" fg:x="4223" fg:w="13"/><text x="10.2536%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.9913%" y="149" width="0.0307%" height="15" fill="rgb(250,82,29)" fg:x="4236" fg:w="13"/><text x="10.2842%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.0219%" y="149" width="0.0165%" height="15" fill="rgb(241,226,54)" fg:x="4249" fg:w="7"/><text x="10.3149%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="10.0384%" y="149" width="0.0354%" height="15" fill="rgb(221,99,41)" fg:x="4256" fg:w="15"/><text x="10.3314%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.0738%" y="133" width="0.1793%" height="15" fill="rgb(213,90,21)" fg:x="4271" fg:w="76"/><text x="10.3668%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (158 instructions, 0.37%)</title><rect x="10.0738%" y="149" width="0.3727%" height="15" fill="rgb(205,208,24)" fg:x="4271" fg:w="158"/><text x="10.3668%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.4465%" y="117" width="0.1793%" height="15" fill="rgb(246,31,12)" fg:x="4429" fg:w="76"/><text x="10.7395%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.26%)</title><rect x="10.4465%" y="133" width="0.2618%" height="15" fill="rgb(213,154,6)" fg:x="4429" fg:w="111"/><text x="10.7395%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (179 instructions, 0.42%)</title><rect x="10.4465%" y="149" width="0.4222%" height="15" fill="rgb(222,163,29)" fg:x="4429" fg:w="179"/><text x="10.7395%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.8687%" y="149" width="0.1793%" height="15" fill="rgb(227,201,8)" fg:x="4608" fg:w="76"/><text x="11.1617%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.0480%" y="149" width="0.1911%" height="15" fill="rgb(233,9,32)" fg:x="4684" fg:w="81"/><text x="11.3409%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.2390%" y="149" width="0.1793%" height="15" fill="rgb(217,54,24)" fg:x="4765" fg:w="76"/><text x="11.5320%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.4183%" y="149" width="0.1793%" height="15" fill="rgb(235,192,0)" fg:x="4841" fg:w="76"/><text x="11.7112%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.6022%" y="149" width="0.1911%" height="15" fill="rgb(235,45,9)" fg:x="4919" fg:w="81"/><text x="11.8952%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.90%)</title><rect x="11.7933%" y="149" width="0.8986%" height="15" fill="rgb(246,42,40)" fg:x="5000" fg:w="381"/><text x="12.0863%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.90%)</title><rect x="12.6919%" y="149" width="0.8986%" height="15" fill="rgb(248,111,24)" fg:x="5381" fg:w="381"/><text x="12.9849%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,427 instructions, 15.16%)</title><rect x="0.5897%" y="165" width="15.1591%" height="15" fill="rgb(249,65,22)" fg:x="250" fg:w="6427"/><text x="0.8826%" y="175.50">candid::de::IDLDese..</text></g><g><title>memcpy (336 instructions, 0.79%)</title><rect x="15.7488%" y="165" width="0.7925%" height="15" fill="rgb(238,111,51)" fg:x="6677" fg:w="336"/><text x="16.0417%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="16.5413%" y="133" width="0.0118%" height="15" fill="rgb(250,118,22)" fg:x="7013" fg:w="5"/><text x="16.8342%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="16.5531%" y="117" width="0.1250%" height="15" fill="rgb(234,84,26)" fg:x="7018" fg:w="53"/><text x="16.8460%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.90%)</title><rect x="16.6781%" y="117" width="0.9034%" height="15" fill="rgb(243,172,12)" fg:x="7071" fg:w="383"/><text x="16.9710%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.38%)</title><rect x="17.5814%" y="117" width="0.3797%" height="15" fill="rgb(236,150,49)" fg:x="7454" fg:w="161"/><text x="17.8744%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (834 instructions, 1.97%)</title><rect x="16.5531%" y="133" width="1.9671%" height="15" fill="rgb(225,197,26)" fg:x="7018" fg:w="834"/><text x="16.8460%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (952 instructions, 2.25%)</title><rect x="16.5413%" y="149" width="2.2454%" height="15" fill="rgb(214,17,42)" fg:x="7013" fg:w="952"/><text x="16.8342%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="18.7867%" y="149" width="0.1793%" height="15" fill="rgb(224,165,40)" fg:x="7965" fg:w="76"/><text x="19.0797%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="18.9660%" y="133" width="0.0118%" height="15" fill="rgb(246,100,4)" fg:x="8041" fg:w="5"/><text x="19.2589%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="18.9778%" y="117" width="0.1250%" height="15" fill="rgb(222,103,0)" fg:x="8046" fg:w="53"/><text x="19.2707%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.90%)</title><rect x="19.1028%" y="117" width="0.9034%" height="15" fill="rgb(227,189,26)" fg:x="8099" fg:w="383"/><text x="19.3957%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.38%)</title><rect x="20.0061%" y="117" width="0.3797%" height="15" fill="rgb(214,202,17)" fg:x="8482" fg:w="161"/><text x="20.2991%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (834 instructions, 1.97%)</title><rect x="18.9778%" y="133" width="1.9671%" height="15" fill="rgb(229,111,3)" fg:x="8046" fg:w="834"/><text x="19.2707%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,049 instructions, 2.47%)</title><rect x="18.9660%" y="149" width="2.4742%" height="15" fill="rgb(229,172,15)" fg:x="8041" fg:w="1049"/><text x="19.2589%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="21.4402%" y="149" width="0.1793%" height="15" fill="rgb(230,224,35)" fg:x="9090" fg:w="76"/><text x="21.7332%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="21.6195%" y="133" width="0.0118%" height="15" fill="rgb(251,141,6)" fg:x="9166" fg:w="5"/><text x="21.9124%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="21.6312%" y="117" width="0.1250%" height="15" fill="rgb(225,208,6)" fg:x="9171" fg:w="53"/><text x="21.9242%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.90%)</title><rect x="21.7563%" y="117" width="0.9034%" height="15" fill="rgb(246,181,16)" fg:x="9224" fg:w="383"/><text x="22.0492%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.38%)</title><rect x="22.6596%" y="117" width="0.3797%" height="15" fill="rgb(227,129,36)" fg:x="9607" fg:w="161"/><text x="22.9526%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (834 instructions, 1.97%)</title><rect x="21.6312%" y="133" width="1.9671%" height="15" fill="rgb(248,117,24)" fg:x="9171" fg:w="834"/><text x="21.9242%" y="143.50"></text></g><g><title>memcmp (740 instructions, 1.75%)</title><rect x="23.5984%" y="133" width="1.7454%" height="15" fill="rgb(214,185,35)" fg:x="10005" fg:w="740"/><text x="23.8913%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="25.3438%" y="117" width="0.1911%" height="15" fill="rgb(236,150,34)" fg:x="10745" fg:w="81"/><text x="25.6367%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="25.3438%" y="133" width="0.2547%" height="15" fill="rgb(243,228,27)" fg:x="10745" fg:w="108"/><text x="25.6367%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,855 instructions, 4.38%)</title><rect x="21.6195%" y="149" width="4.3753%" height="15" fill="rgb(245,77,44)" fg:x="9166" fg:w="1855"/><text x="21.9124%" y="159.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="25.9948%" y="101" width="0.1250%" height="15" fill="rgb(235,214,42)" fg:x="11021" fg:w="53"/><text x="26.2877%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="25.9948%" y="117" width="0.1863%" height="15" fill="rgb(221,74,3)" fg:x="11021" fg:w="79"/><text x="26.2877%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="26.6835%" y="101" width="0.1250%" height="15" fill="rgb(206,121,29)" fg:x="11313" fg:w="53"/><text x="26.9765%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="26.6835%" y="117" width="0.1863%" height="15" fill="rgb(249,131,53)" fg:x="11313" fg:w="79"/><text x="26.9765%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (584 instructions, 1.38%)</title><rect x="25.9948%" y="133" width="1.3775%" height="15" fill="rgb(236,170,29)" fg:x="11021" fg:w="584"/><text x="26.2877%" y="143.50"></text></g><g><title>candid::types::internal::env_id (861 instructions, 2.03%)</title><rect x="25.9948%" y="149" width="2.0308%" height="15" fill="rgb(247,96,15)" fg:x="11021" fg:w="861"/><text x="26.2877%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,976 instructions, 11.74%)</title><rect x="16.5413%" y="165" width="11.7367%" height="15" fill="rgb(211,210,7)" fg:x="7013" fg:w="4976"/><text x="16.8342%" y="175.50">candid::types:..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.08%)</title><rect x="28.2779%" y="149" width="0.0778%" height="15" fill="rgb(240,88,50)" fg:x="11989" fg:w="33"/><text x="28.5709%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="28.3558%" y="133" width="0.2901%" height="15" fill="rgb(209,229,26)" fg:x="12022" fg:w="123"/><text x="28.6487%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="28.7096%" y="133" width="0.2901%" height="15" fill="rgb(210,68,23)" fg:x="12172" fg:w="123"/><text x="29.0025%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.71%)</title><rect x="28.3558%" y="149" width="0.7076%" height="15" fill="rgb(229,180,13)" fg:x="12022" fg:w="300"/><text x="28.6487%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="29.0634%" y="133" width="0.0660%" height="15" fill="rgb(236,53,44)" fg:x="12322" fg:w="28"/><text x="29.3563%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="29.1294%" y="133" width="0.0660%" height="15" fill="rgb(244,214,29)" fg:x="12350" fg:w="28"/><text x="29.4224%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2133 (15 instructions, 0.04%)</title><rect x="29.1955%" y="133" width="0.0354%" height="15" fill="rgb(220,75,29)" fg:x="12378" fg:w="15"/><text x="29.4884%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2133 (15 instructions, 0.04%)</title><rect x="29.2308%" y="133" width="0.0354%" height="15" fill="rgb(214,183,37)" fg:x="12393" fg:w="15"/><text x="29.5238%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="29.2662%" y="133" width="0.1863%" height="15" fill="rgb(239,117,29)" fg:x="12408" fg:w="79"/><text x="29.5592%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="29.4526%" y="133" width="0.1675%" height="15" fill="rgb(237,171,35)" fg:x="12487" fg:w="71"/><text x="29.7455%" y="143.50"></text></g><g><title>binread::binary_template::write_named (82 instructions, 0.19%)</title><rect x="29.6200%" y="117" width="0.1934%" height="15" fill="rgb(229,178,53)" fg:x="12558" fg:w="82"/><text x="29.9130%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (152 instructions, 0.36%)</title><rect x="29.6200%" y="133" width="0.3585%" height="15" fill="rgb(210,102,19)" fg:x="12558" fg:w="152"/><text x="29.9130%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="29.9785%" y="133" width="0.1533%" height="15" fill="rgb(235,127,22)" fg:x="12710" fg:w="65"/><text x="30.2715%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.94%)</title><rect x="30.1318%" y="133" width="0.9435%" height="15" fill="rgb(244,31,31)" fg:x="12775" fg:w="400"/><text x="30.4248%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="31.0753%" y="117" width="0.1793%" height="15" fill="rgb(231,43,21)" fg:x="13175" fg:w="76"/><text x="31.3683%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="31.2546%" y="85" width="0.1415%" height="15" fill="rgb(217,131,35)" fg:x="13251" fg:w="60"/><text x="31.5475%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="31.2546%" y="101" width="0.2005%" height="15" fill="rgb(221,149,4)" fg:x="13251" fg:w="85"/><text x="31.5475%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="31.4551%" y="53" width="0.0212%" height="15" fill="rgb(232,170,28)" fg:x="13336" fg:w="9"/><text x="31.7480%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="31.4763%" y="37" width="0.0708%" height="15" fill="rgb(238,56,10)" fg:x="13345" fg:w="30"/><text x="31.7693%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="31.4763%" y="53" width="0.1297%" height="15" fill="rgb(235,196,14)" fg:x="13345" fg:w="55"/><text x="31.7693%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="31.4551%" y="69" width="0.2783%" height="15" fill="rgb(216,45,48)" fg:x="13336" fg:w="118"/><text x="31.7480%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="31.4551%" y="85" width="0.4033%" height="15" fill="rgb(238,213,17)" fg:x="13336" fg:w="171"/><text x="31.7480%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="31.4551%" y="101" width="0.4151%" height="15" fill="rgb(212,13,2)" fg:x="13336" fg:w="176"/><text x="31.7480%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.88%)</title><rect x="31.2546%" y="117" width="0.8774%" height="15" fill="rgb(240,114,20)" fg:x="13251" fg:w="372"/><text x="31.5475%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (594 instructions, 1.40%)</title><rect x="31.0753%" y="133" width="1.4010%" height="15" fill="rgb(228,41,40)" fg:x="13175" fg:w="594"/><text x="31.3683%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="32.4764%" y="133" width="0.2005%" height="15" fill="rgb(244,132,35)" fg:x="13769" fg:w="85"/><text x="32.7693%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="32.6768%" y="133" width="0.1297%" height="15" fill="rgb(253,189,4)" fg:x="13854" fg:w="55"/><text x="32.9698%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="32.8066%" y="117" width="0.1274%" height="15" fill="rgb(224,37,19)" fg:x="13909" fg:w="54"/><text x="33.0995%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 instructions, 0.26%)</title><rect x="32.8066%" y="133" width="0.2618%" height="15" fill="rgb(235,223,18)" fg:x="13909" fg:w="111"/><text x="33.0995%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="33.0684%" y="133" width="0.1793%" height="15" fill="rgb(235,163,25)" fg:x="14020" fg:w="76"/><text x="33.3613%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="33.2476%" y="117" width="0.1274%" height="15" fill="rgb(217,145,28)" fg:x="14096" fg:w="54"/><text x="33.5406%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="33.5094%" y="117" width="0.1274%" height="15" fill="rgb(223,223,32)" fg:x="14207" fg:w="54"/><text x="33.8024%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="33.7713%" y="117" width="0.1274%" height="15" fill="rgb(227,189,39)" fg:x="14318" fg:w="54"/><text x="34.0642%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="34.0331%" y="117" width="0.1274%" height="15" fill="rgb(248,10,22)" fg:x="14429" fg:w="54"/><text x="34.3260%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="34.2949%" y="117" width="0.1274%" height="15" fill="rgb(248,46,39)" fg:x="14540" fg:w="54"/><text x="34.5878%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="34.5567%" y="117" width="0.1274%" height="15" fill="rgb(248,113,48)" fg:x="14651" fg:w="54"/><text x="34.8497%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="34.8185%" y="117" width="0.1274%" height="15" fill="rgb(245,16,25)" fg:x="14762" fg:w="54"/><text x="35.1115%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="35.0803%" y="117" width="0.1274%" height="15" fill="rgb(249,152,16)" fg:x="14873" fg:w="54"/><text x="35.3733%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (888 instructions, 2.09%)</title><rect x="33.2476%" y="133" width="2.0945%" height="15" fill="rgb(250,16,1)" fg:x="14096" fg:w="888"/><text x="33.5406%" y="143.50">&lt;..</text></g><g><title>__rust_realloc (104 instructions, 0.25%)</title><rect x="35.3421%" y="101" width="0.2453%" height="15" fill="rgb(249,138,3)" fg:x="14984" fg:w="104"/><text x="35.6351%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (138 instructions, 0.33%)</title><rect x="35.3421%" y="117" width="0.3255%" height="15" fill="rgb(227,71,41)" fg:x="14984" fg:w="138"/><text x="35.6351%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.50%)</title><rect x="35.3421%" y="133" width="0.4977%" height="15" fill="rgb(209,184,23)" fg:x="14984" fg:w="211"/><text x="35.6351%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="35.8398%" y="117" width="0.1274%" height="15" fill="rgb(223,215,31)" fg:x="15195" fg:w="54"/><text x="36.1328%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="36.1016%" y="117" width="0.1274%" height="15" fill="rgb(210,146,28)" fg:x="15306" fg:w="54"/><text x="36.3946%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="36.3634%" y="117" width="0.1274%" height="15" fill="rgb(209,183,41)" fg:x="15417" fg:w="54"/><text x="36.6564%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="36.6252%" y="117" width="0.1274%" height="15" fill="rgb(209,224,45)" fg:x="15528" fg:w="54"/><text x="36.9182%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="36.8870%" y="117" width="0.1274%" height="15" fill="rgb(224,209,51)" fg:x="15639" fg:w="54"/><text x="37.1800%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="37.1489%" y="117" width="0.1274%" height="15" fill="rgb(223,17,39)" fg:x="15750" fg:w="54"/><text x="37.4418%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="37.4107%" y="117" width="0.1274%" height="15" fill="rgb(234,204,37)" fg:x="15861" fg:w="54"/><text x="37.7036%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (777 instructions, 1.83%)</title><rect x="35.8398%" y="133" width="1.8327%" height="15" fill="rgb(236,120,5)" fg:x="15195" fg:w="777"/><text x="36.1328%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 instructions, 0.07%)</title><rect x="37.6725%" y="133" width="0.0708%" height="15" fill="rgb(248,97,27)" fg:x="15972" fg:w="30"/><text x="37.9654%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="37.7432%" y="133" width="0.1557%" height="15" fill="rgb(240,66,17)" fg:x="16002" fg:w="66"/><text x="38.0362%" y="143.50"></text></g><g><title>__rust_realloc (47 instructions, 0.11%)</title><rect x="37.8989%" y="101" width="0.1109%" height="15" fill="rgb(210,79,3)" fg:x="16068" fg:w="47"/><text x="38.1919%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (81 instructions, 0.19%)</title><rect x="37.8989%" y="117" width="0.1911%" height="15" fill="rgb(214,176,27)" fg:x="16068" fg:w="81"/><text x="38.1919%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (154 instructions, 0.36%)</title><rect x="37.8989%" y="133" width="0.3632%" height="15" fill="rgb(235,185,3)" fg:x="16068" fg:w="154"/><text x="38.1919%" y="143.50"></text></g><g><title>memcpy (203 instructions, 0.48%)</title><rect x="38.2621%" y="133" width="0.4788%" height="15" fill="rgb(227,24,12)" fg:x="16222" fg:w="203"/><text x="38.5551%" y="143.50"></text></g><g><title>memcpy (157 instructions, 0.37%)</title><rect x="38.7409%" y="133" width="0.3703%" height="15" fill="rgb(252,169,48)" fg:x="16425" fg:w="157"/><text x="39.0339%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="39.1113%" y="133" width="0.1911%" height="15" fill="rgb(212,65,1)" fg:x="16582" fg:w="81"/><text x="39.4042%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="39.3023%" y="133" width="0.1297%" height="15" fill="rgb(242,39,24)" fg:x="16663" fg:w="55"/><text x="39.5953%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (5,408 instructions, 12.76%)</title><rect x="29.0634%" y="149" width="12.7556%" height="15" fill="rgb(249,32,23)" fg:x="12322" fg:w="5408"/><text x="29.3563%" y="159.50">&lt;candid::types::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.8190%" y="149" width="0.0259%" height="15" fill="rgb(251,195,23)" fg:x="17730" fg:w="11"/><text x="42.1120%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.8449%" y="149" width="0.0259%" height="15" fill="rgb(236,174,8)" fg:x="17741" fg:w="11"/><text x="42.1379%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.8709%" y="149" width="0.0259%" height="15" fill="rgb(220,197,8)" fg:x="17752" fg:w="11"/><text x="42.1639%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,020 instructions, 14.20%)</title><rect x="28.2779%" y="165" width="14.1991%" height="15" fill="rgb(240,108,37)" fg:x="11989" fg:w="6020"/><text x="28.5709%" y="175.50">candid::de::IDLDes..</text></g><g><title>memcpy (411 instructions, 0.97%)</title><rect x="42.4771%" y="165" width="0.9694%" height="15" fill="rgb(232,176,24)" fg:x="18009" fg:w="411"/><text x="42.7700%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="43.4465%" y="133" width="0.0283%" height="15" fill="rgb(243,35,29)" fg:x="18420" fg:w="12"/><text x="43.7394%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="43.4748%" y="133" width="0.3963%" height="15" fill="rgb(210,37,18)" fg:x="18432" fg:w="168"/><text x="43.7677%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.22%)</title><rect x="43.8710%" y="101" width="0.2241%" height="15" fill="rgb(224,184,40)" fg:x="18600" fg:w="95"/><text x="44.1640%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (241 instructions, 0.57%)</title><rect x="43.8710%" y="117" width="0.5684%" height="15" fill="rgb(236,39,29)" fg:x="18600" fg:w="241"/><text x="44.1640%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (268 instructions, 0.63%)</title><rect x="43.8710%" y="133" width="0.6321%" height="15" fill="rgb(232,48,39)" fg:x="18600" fg:w="268"/><text x="44.1640%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="44.5031%" y="133" width="0.0259%" height="15" fill="rgb(236,34,42)" fg:x="18868" fg:w="11"/><text x="44.7961%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (501 instructions, 1.18%)</title><rect x="43.4465%" y="149" width="1.1817%" height="15" fill="rgb(243,106,37)" fg:x="18420" fg:w="501"/><text x="43.7394%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (535 instructions, 1.26%)</title><rect x="43.4465%" y="165" width="1.2619%" height="15" fill="rgb(218,96,6)" fg:x="18420" fg:w="535"/><text x="43.7394%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.13%)</title><rect x="44.7084%" y="149" width="0.1274%" height="15" fill="rgb(235,130,12)" fg:x="18955" fg:w="54"/><text x="45.0013%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.22%)</title><rect x="44.8357%" y="149" width="0.2241%" height="15" fill="rgb(231,95,0)" fg:x="19009" fg:w="95"/><text x="45.1287%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.54%)</title><rect x="44.7084%" y="165" width="0.5448%" height="15" fill="rgb(228,12,23)" fg:x="18955" fg:w="231"/><text x="45.0013%" y="175.50"></text></g><g><title>memset (218 instructions, 0.51%)</title><rect x="45.2532%" y="165" width="0.5142%" height="15" fill="rgb(216,12,1)" fg:x="19186" fg:w="218"/><text x="45.5462%" y="175.50"></text></g><g><title>memcpy (203 instructions, 0.48%)</title><rect x="45.7674%" y="165" width="0.4788%" height="15" fill="rgb(219,59,3)" fg:x="19404" fg:w="203"/><text x="46.0604%" y="175.50"></text></g><g><title>memcpy (471 instructions, 1.11%)</title><rect x="46.2462%" y="165" width="1.1109%" height="15" fill="rgb(215,208,46)" fg:x="19607" fg:w="471"/><text x="46.5392%" y="175.50"></text></g><g><title>memset (56 instructions, 0.13%)</title><rect x="47.3571%" y="149" width="0.1321%" height="15" fill="rgb(254,224,29)" fg:x="20078" fg:w="56"/><text x="47.6501%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.76%)</title><rect x="47.4892%" y="149" width="11.7626%" height="15" fill="rgb(232,14,29)" fg:x="20134" fg:w="4987"/><text x="47.7822%" y="159.50">sha2::sha256::c..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.76%)</title><rect x="59.2518%" y="149" width="11.7626%" height="15" fill="rgb(208,45,52)" fg:x="25121" fg:w="4987"/><text x="59.5448%" y="159.50">sha2::sha256::c..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (10,354 instructions, 24.42%)</title><rect x="47.3571%" y="165" width="24.4215%" height="15" fill="rgb(234,191,28)" fg:x="20078" fg:w="10354"/><text x="47.6501%" y="175.50">&lt;sha2::core_api::Sha256VarCore as..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="71.7787%" y="165" width="0.1793%" height="15" fill="rgb(244,67,43)" fg:x="30432" fg:w="76"/><text x="72.0716%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="71.9579%" y="149" width="0.0118%" height="15" fill="rgb(236,189,24)" fg:x="30508" fg:w="5"/><text x="72.2509%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (90 instructions, 0.21%)</title><rect x="71.9697%" y="101" width="0.2123%" height="15" fill="rgb(239,214,33)" fg:x="30513" fg:w="90"/><text x="72.2627%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="72.1820%" y="101" width="0.1486%" height="15" fill="rgb(226,176,41)" fg:x="30603" fg:w="63"/><text x="72.4750%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (238 instructions, 0.56%)</title><rect x="71.9697%" y="117" width="0.5614%" height="15" fill="rgb(248,47,8)" fg:x="30513" fg:w="238"/><text x="72.2627%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (265 instructions, 0.63%)</title><rect x="71.9697%" y="133" width="0.6250%" height="15" fill="rgb(218,81,44)" fg:x="30513" fg:w="265"/><text x="72.2627%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="72.5948%" y="117" width="0.1297%" height="15" fill="rgb(213,98,6)" fg:x="30778" fg:w="55"/><text x="72.8877%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="72.7245%" y="117" width="0.1486%" height="15" fill="rgb(222,85,22)" fg:x="30833" fg:w="63"/><text x="73.0175%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (200 instructions, 0.47%)</title><rect x="72.5948%" y="133" width="0.4717%" height="15" fill="rgb(239,46,39)" fg:x="30778" fg:w="200"/><text x="72.8877%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (497 instructions, 1.17%)</title><rect x="71.9697%" y="149" width="1.1723%" height="15" fill="rgb(237,12,29)" fg:x="30513" fg:w="497"/><text x="72.2627%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="73.1420%" y="149" width="0.0259%" height="15" fill="rgb(214,77,8)" fg:x="31010" fg:w="11"/><text x="73.4349%" y="159.50"></text></g><g><title>memset (136 instructions, 0.32%)</title><rect x="73.1679%" y="149" width="0.3208%" height="15" fill="rgb(217,168,37)" fg:x="31021" fg:w="136"/><text x="73.4609%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="73.4887%" y="117" width="0.0118%" height="15" fill="rgb(221,217,23)" fg:x="31157" fg:w="5"/><text x="73.7817%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="73.4887%" y="133" width="0.0920%" height="15" fill="rgb(243,229,36)" fg:x="31157" fg:w="39"/><text x="73.7817%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="73.5807%" y="133" width="0.1793%" height="15" fill="rgb(251,163,40)" fg:x="31196" fg:w="76"/><text x="73.8736%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="73.7599%" y="117" width="0.0118%" height="15" fill="rgb(237,222,12)" fg:x="31272" fg:w="5"/><text x="74.0529%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="73.7717%" y="101" width="0.1250%" height="15" fill="rgb(248,132,6)" fg:x="31277" fg:w="53"/><text x="74.0647%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (363 instructions, 0.86%)</title><rect x="73.8967%" y="101" width="0.8562%" height="15" fill="rgb(227,167,50)" fg:x="31330" fg:w="363"/><text x="74.1897%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.17%)</title><rect x="74.7529%" y="101" width="0.1722%" height="15" fill="rgb(242,84,37)" fg:x="31693" fg:w="73"/><text x="75.0459%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.71%)</title><rect x="73.7717%" y="117" width="1.7124%" height="15" fill="rgb(212,4,50)" fg:x="31277" fg:w="726"/><text x="74.0647%" y="127.50"></text></g><g><title>candid::types::internal::env_add (941 instructions, 2.22%)</title><rect x="73.7599%" y="133" width="2.2195%" height="15" fill="rgb(230,228,32)" fg:x="31272" fg:w="941"/><text x="74.0529%" y="143.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="75.9794%" y="133" width="0.1793%" height="15" fill="rgb(248,217,23)" fg:x="32213" fg:w="76"/><text x="76.2724%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="76.1587%" y="133" width="0.1793%" height="15" fill="rgb(238,197,32)" fg:x="32289" fg:w="76"/><text x="76.4517%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="76.3379%" y="117" width="0.0118%" height="15" fill="rgb(236,106,1)" fg:x="32365" fg:w="5"/><text x="76.6309%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="76.3497%" y="101" width="0.1250%" height="15" fill="rgb(219,228,13)" fg:x="32370" fg:w="53"/><text x="76.6427%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (363 instructions, 0.86%)</title><rect x="76.4748%" y="101" width="0.8562%" height="15" fill="rgb(238,30,35)" fg:x="32423" fg:w="363"/><text x="76.7677%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.17%)</title><rect x="77.3309%" y="101" width="0.1722%" height="15" fill="rgb(236,70,23)" fg:x="32786" fg:w="73"/><text x="77.6239%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.71%)</title><rect x="76.3497%" y="117" width="1.7124%" height="15" fill="rgb(249,104,48)" fg:x="32370" fg:w="726"/><text x="76.6427%" y="127.50"></text></g><g><title>memcmp (614 instructions, 1.45%)</title><rect x="78.0621%" y="117" width="1.4482%" height="15" fill="rgb(254,117,50)" fg:x="33096" fg:w="614"/><text x="78.3551%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="79.5103%" y="101" width="0.1911%" height="15" fill="rgb(223,152,4)" fg:x="33710" fg:w="81"/><text x="79.8033%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="79.5103%" y="117" width="0.2547%" height="15" fill="rgb(245,6,2)" fg:x="33710" fg:w="108"/><text x="79.8033%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,621 instructions, 3.82%)</title><rect x="76.3379%" y="133" width="3.8234%" height="15" fill="rgb(249,150,24)" fg:x="32365" fg:w="1621"/><text x="76.6309%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="80.1613%" y="85" width="0.1250%" height="15" fill="rgb(228,185,42)" fg:x="33986" fg:w="53"/><text x="80.4543%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.36%)</title><rect x="80.2863%" y="85" width="0.3609%" height="15" fill="rgb(226,39,33)" fg:x="34039" fg:w="153"/><text x="80.5793%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.60%)</title><rect x="80.1613%" y="101" width="0.5991%" height="15" fill="rgb(221,166,19)" fg:x="33986" fg:w="254"/><text x="80.4543%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (467 instructions, 1.10%)</title><rect x="80.1613%" y="117" width="1.1015%" height="15" fill="rgb(209,109,2)" fg:x="33986" fg:w="467"/><text x="80.4543%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.174 (42 instructions, 0.10%)</title><rect x="81.2628%" y="117" width="0.0991%" height="15" fill="rgb(252,216,26)" fg:x="34453" fg:w="42"/><text x="81.5558%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.3619%" y="117" width="0.0259%" height="15" fill="rgb(227,173,36)" fg:x="34495" fg:w="11"/><text x="81.6549%" y="127.50"></text></g><g><title>candid::types::internal::env_id (680 instructions, 1.60%)</title><rect x="80.1613%" y="133" width="1.6039%" height="15" fill="rgb(209,90,7)" fg:x="33986" fg:w="680"/><text x="80.4543%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,633 instructions, 8.57%)</title><rect x="73.4887%" y="149" width="8.5690%" height="15" fill="rgb(250,194,11)" fg:x="31157" fg:w="3633"/><text x="73.7817%" y="159.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="82.0577%" y="117" width="0.1793%" height="15" fill="rgb(220,72,50)" fg:x="34790" fg:w="76"/><text x="82.3507%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.26%)</title><rect x="82.0577%" y="133" width="0.2618%" height="15" fill="rgb(222,106,48)" fg:x="34790" fg:w="111"/><text x="82.3507%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (179 instructions, 0.42%)</title><rect x="82.0577%" y="149" width="0.4222%" height="15" fill="rgb(216,220,45)" fg:x="34790" fg:w="179"/><text x="82.3507%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.06%)</title><rect x="82.4799%" y="133" width="0.0566%" height="15" fill="rgb(234,112,18)" fg:x="34969" fg:w="24"/><text x="82.7729%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="82.5365%" y="101" width="0.1863%" height="15" fill="rgb(206,179,9)" fg:x="34993" fg:w="79"/><text x="82.8295%" y="111.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.36%)</title><rect x="82.5365%" y="117" width="0.3609%" height="15" fill="rgb(215,115,40)" fg:x="34993" fg:w="153"/><text x="82.8295%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="82.8974%" y="117" width="0.1793%" height="15" fill="rgb(222,69,34)" fg:x="35146" fg:w="76"/><text x="83.1903%" y="127.50"></text></g><g><title>candid::types::internal::unroll (307 instructions, 0.72%)</title><rect x="82.5365%" y="133" width="0.7241%" height="15" fill="rgb(209,161,10)" fg:x="34993" fg:w="307"/><text x="82.8295%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="83.2606%" y="85" width="0.1250%" height="15" fill="rgb(217,6,38)" fg:x="35300" fg:w="53"/><text x="83.5536%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.36%)</title><rect x="83.3856%" y="85" width="0.3609%" height="15" fill="rgb(229,229,48)" fg:x="35353" fg:w="153"/><text x="83.6786%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.60%)</title><rect x="83.2606%" y="101" width="0.5991%" height="15" fill="rgb(225,21,28)" fg:x="35300" fg:w="254"/><text x="83.5536%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (467 instructions, 1.10%)</title><rect x="83.2606%" y="117" width="1.1015%" height="15" fill="rgb(206,33,13)" fg:x="35300" fg:w="467"/><text x="83.5536%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="84.3621%" y="117" width="0.1793%" height="15" fill="rgb(242,178,17)" fg:x="35767" fg:w="76"/><text x="84.6551%" y="127.50"></text></g><g><title>memset (136 instructions, 0.32%)</title><rect x="84.5414%" y="117" width="0.3208%" height="15" fill="rgb(220,162,5)" fg:x="35843" fg:w="136"/><text x="84.8343%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,042 instructions, 2.46%)</title><rect x="83.2606%" y="133" width="2.4577%" height="15" fill="rgb(210,33,43)" fg:x="35300" fg:w="1042"/><text x="83.5536%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="85.7183%" y="101" width="0.1793%" height="15" fill="rgb(216,116,54)" fg:x="36342" fg:w="76"/><text x="86.0113%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.26%)</title><rect x="85.7183%" y="117" width="0.2618%" height="15" fill="rgb(249,92,24)" fg:x="36342" fg:w="111"/><text x="86.0113%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (179 instructions, 0.42%)</title><rect x="85.7183%" y="133" width="0.4222%" height="15" fill="rgb(231,189,14)" fg:x="36342" fg:w="179"/><text x="86.0113%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="86.1405%" y="85" width="0.1250%" height="15" fill="rgb(230,8,41)" fg:x="36521" fg:w="53"/><text x="86.4335%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="86.1405%" y="101" width="0.1863%" height="15" fill="rgb(249,7,27)" fg:x="36521" fg:w="79"/><text x="86.4335%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.69%)</title><rect x="86.1405%" y="117" width="0.6887%" height="15" fill="rgb(232,86,5)" fg:x="36521" fg:w="292"/><text x="86.4335%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="86.8293%" y="117" width="0.0425%" height="15" fill="rgb(224,175,18)" fg:x="36813" fg:w="18"/><text x="87.1222%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="86.8717%" y="117" width="0.0259%" height="15" fill="rgb(220,129,12)" fg:x="36831" fg:w="11"/><text x="87.1647%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (437 instructions, 1.03%)</title><rect x="86.1405%" y="133" width="1.0307%" height="15" fill="rgb(210,19,36)" fg:x="36521" fg:w="437"/><text x="86.4335%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="87.1713%" y="85" width="0.1793%" height="15" fill="rgb(219,96,14)" fg:x="36958" fg:w="76"/><text x="87.4642%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.26%)</title><rect x="87.1713%" y="101" width="0.2618%" height="15" fill="rgb(249,106,1)" fg:x="36958" fg:w="111"/><text x="87.4642%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.42%)</title><rect x="87.1713%" y="117" width="0.4151%" height="15" fill="rgb(249,155,20)" fg:x="36958" fg:w="176"/><text x="87.4642%" y="127.50"></text></g><g><title>leb128::write::signed (226 instructions, 0.53%)</title><rect x="87.1713%" y="133" width="0.5331%" height="15" fill="rgb(244,168,9)" fg:x="36958" fg:w="226"/><text x="87.4642%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (50 instructions, 0.12%)</title><rect x="87.7043%" y="133" width="0.1179%" height="15" fill="rgb(216,23,50)" fg:x="37184" fg:w="50"/><text x="87.9973%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="87.8223%" y="101" width="0.1911%" height="15" fill="rgb(224,219,20)" fg:x="37234" fg:w="81"/><text x="88.1152%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="87.8223%" y="117" width="0.2547%" height="15" fill="rgb(222,156,15)" fg:x="37234" fg:w="108"/><text x="88.1152%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="88.0770%" y="117" width="0.1840%" height="15" fill="rgb(231,97,17)" fg:x="37342" fg:w="78"/><text x="88.3700%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.51%)</title><rect x="87.8223%" y="133" width="0.5142%" height="15" fill="rgb(218,70,48)" fg:x="37234" fg:w="218"/><text x="88.1152%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="88.3364%" y="133" width="0.0259%" height="15" fill="rgb(212,196,52)" fg:x="37452" fg:w="11"/><text x="88.6294%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,697 instructions, 6.36%)</title><rect x="82.4799%" y="149" width="6.3613%" height="15" fill="rgb(243,203,18)" fg:x="34969" fg:w="2697"/><text x="82.7729%" y="159.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="88.8412%" y="149" width="0.0259%" height="15" fill="rgb(252,125,41)" fg:x="37666" fg:w="11"/><text x="89.1342%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="88.8671%" y="117" width="0.1793%" height="15" fill="rgb(223,180,33)" fg:x="37677" fg:w="76"/><text x="89.1601%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.26%)</title><rect x="88.8671%" y="133" width="0.2618%" height="15" fill="rgb(254,159,46)" fg:x="37677" fg:w="111"/><text x="89.1601%" y="143.50"></text></g><g><title>__rust_realloc (104 instructions, 0.25%)</title><rect x="89.2823%" y="117" width="0.2453%" height="15" fill="rgb(254,38,10)" fg:x="37853" fg:w="104"/><text x="89.5752%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 instructions, 0.33%)</title><rect x="89.2823%" y="133" width="0.3279%" height="15" fill="rgb(208,217,32)" fg:x="37853" fg:w="139"/><text x="89.5752%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (388 instructions, 0.92%)</title><rect x="88.8671%" y="149" width="0.9152%" height="15" fill="rgb(221,120,13)" fg:x="37677" fg:w="388"/><text x="89.1601%" y="159.50"></text></g><g><title>memcpy (269 instructions, 0.63%)</title><rect x="89.7823%" y="149" width="0.6345%" height="15" fill="rgb(246,54,52)" fg:x="38065" fg:w="269"/><text x="90.0753%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.28%)</title><rect x="90.4168%" y="149" width="0.2830%" height="15" fill="rgb(242,34,25)" fg:x="38334" fg:w="120"/><text x="90.7097%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.08%)</title><rect x="90.6998%" y="149" width="0.0755%" height="15" fill="rgb(247,209,9)" fg:x="38454" fg:w="32"/><text x="90.9928%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="90.7753%" y="117" width="0.1793%" height="15" fill="rgb(228,71,26)" fg:x="38486" fg:w="76"/><text x="91.0683%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.26%)</title><rect x="90.7753%" y="133" width="0.2618%" height="15" fill="rgb(222,145,49)" fg:x="38486" fg:w="111"/><text x="91.0683%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.42%)</title><rect x="90.7753%" y="149" width="0.4151%" height="15" fill="rgb(218,121,17)" fg:x="38486" fg:w="176"/><text x="91.0683%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="91.1904%" y="149" width="0.1793%" height="15" fill="rgb(244,50,7)" fg:x="38662" fg:w="76"/><text x="91.4834%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="91.3697%" y="149" width="0.1061%" height="15" fill="rgb(246,229,37)" fg:x="38738" fg:w="45"/><text x="91.6626%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="91.4758%" y="149" width="0.1061%" height="15" fill="rgb(225,18,5)" fg:x="38783" fg:w="45"/><text x="91.7688%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="91.5820%" y="149" width="0.1297%" height="15" fill="rgb(213,204,8)" fg:x="38828" fg:w="55"/><text x="91.8749%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="91.7117%" y="101" width="0.1250%" height="15" fill="rgb(238,103,6)" fg:x="38883" fg:w="53"/><text x="92.0046%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.36%)</title><rect x="91.8367%" y="101" width="0.3609%" height="15" fill="rgb(222,25,35)" fg:x="38936" fg:w="153"/><text x="92.1297%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.60%)</title><rect x="91.7117%" y="117" width="0.5991%" height="15" fill="rgb(213,203,35)" fg:x="38883" fg:w="254"/><text x="92.0046%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (467 instructions, 1.10%)</title><rect x="91.7117%" y="133" width="1.1015%" height="15" fill="rgb(221,79,53)" fg:x="38883" fg:w="467"/><text x="92.0046%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="92.8132%" y="101" width="0.1793%" height="15" fill="rgb(243,200,35)" fg:x="39350" fg:w="76"/><text x="93.1061%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.26%)</title><rect x="92.8132%" y="117" width="0.2618%" height="15" fill="rgb(248,60,25)" fg:x="39350" fg:w="111"/><text x="93.1061%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.42%)</title><rect x="92.8132%" y="133" width="0.4151%" height="15" fill="rgb(227,53,46)" fg:x="39350" fg:w="176"/><text x="93.1061%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (810 instructions, 1.91%)</title><rect x="91.7117%" y="149" width="1.9105%" height="15" fill="rgb(216,120,32)" fg:x="38883" fg:w="810"/><text x="92.0046%" y="159.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="93.6222%" y="149" width="0.0708%" height="15" fill="rgb(220,134,1)" fg:x="39693" fg:w="30"/><text x="93.9152%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="93.6929%" y="149" width="0.1297%" height="15" fill="rgb(237,168,5)" fg:x="39723" fg:w="55"/><text x="93.9859%" y="159.50"></text></g><g><title>std::io::Write::write_all (33 instructions, 0.08%)</title><rect x="93.8227%" y="149" width="0.0778%" height="15" fill="rgb(231,100,33)" fg:x="39778" fg:w="33"/><text x="94.1156%" y="159.50"></text></g><g><title>std::io::Write::write_all (57 instructions, 0.13%)</title><rect x="93.9005%" y="149" width="0.1344%" height="15" fill="rgb(236,177,47)" fg:x="39811" fg:w="57"/><text x="94.1935%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="94.0350%" y="149" width="0.1911%" height="15" fill="rgb(235,7,49)" fg:x="39868" fg:w="81"/><text x="94.3279%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="94.2260%" y="149" width="0.2901%" height="15" fill="rgb(232,119,22)" fg:x="39949" fg:w="123"/><text x="94.5190%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.5161%" y="149" width="0.0259%" height="15" fill="rgb(254,73,53)" fg:x="40072" fg:w="11"/><text x="94.8091%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="94.5421%" y="149" width="0.3963%" height="15" fill="rgb(251,35,20)" fg:x="40083" fg:w="168"/><text x="94.8350%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.9383%" y="149" width="0.0118%" height="15" fill="rgb(241,119,20)" fg:x="40251" fg:w="5"/><text x="95.2313%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.9501%" y="149" width="0.0259%" height="15" fill="rgb(207,102,14)" fg:x="40256" fg:w="11"/><text x="95.2431%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="94.9761%" y="149" width="0.2901%" height="15" fill="rgb(248,201,50)" fg:x="40267" fg:w="123"/><text x="95.2690%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="95.2662%" y="149" width="0.1297%" height="15" fill="rgb(222,185,44)" fg:x="40390" fg:w="55"/><text x="95.5591%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.24%)</title><rect x="95.3959%" y="149" width="0.2359%" height="15" fill="rgb(218,107,18)" fg:x="40445" fg:w="100"/><text x="95.6889%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (10,862 instructions, 25.62%)</title><rect x="71.9579%" y="165" width="25.6197%" height="15" fill="rgb(237,177,39)" fg:x="30508" fg:w="10862"/><text x="72.2509%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::principalToAccount_2_::{{closure}} (41,710 instructions, 98.38%)</title><rect x="0.4104%" y="181" width="98.3796%" height="15" fill="rgb(246,69,6)" fg:x="174" fg:w="41710"/><text x="0.7034%" y="191.50">sha::principalToAccount_2_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.7900%" y="181" width="0.0283%" height="15" fill="rgb(234,208,37)" fg:x="41884" fg:w="12"/><text x="99.0830%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="98.8183%" y="165" width="0.1297%" height="15" fill="rgb(225,4,6)" fg:x="41896" fg:w="55"/><text x="99.1113%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="98.9480%" y="165" width="0.1486%" height="15" fill="rgb(233,45,0)" fg:x="41951" fg:w="63"/><text x="99.2410%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="99.2971%" y="165" width="0.1297%" height="15" fill="rgb(226,136,5)" fg:x="42099" fg:w="55"/><text x="99.5901%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="99.4268%" y="165" width="0.1486%" height="15" fill="rgb(211,91,47)" fg:x="42154" fg:w="63"/><text x="99.7198%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (403 instructions, 0.95%)</title><rect x="98.8183%" y="181" width="0.9505%" height="15" fill="rgb(242,88,51)" fg:x="41896" fg:w="403"/><text x="99.1113%" y="191.50"></text></g><g><title>all (42,397 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(230,91,28)" fg:x="0" fg:w="42397"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToAccount (42,397 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(254,186,29)" fg:x="0" fg:w="42397"/><text x="0.2930%" y="207.50">canister_update principalToAccount</text></g></svg></svg>