<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToAccount</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="49455"><g><title>ic_cdk::setup (24 instructions, 0.05%)</title><rect x="0.0000%" y="181" width="0.0485%" height="15" fill="rgb(228,185,30)" fg:x="0" fg:w="24"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.17%)</title><rect x="0.0485%" y="181" width="0.1658%" height="15" fill="rgb(246,134,8)" fg:x="24" fg:w="82"/><text x="0.3415%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="0.2143%" y="181" width="0.1678%" height="15" fill="rgb(214,143,50)" fg:x="106" fg:w="83"/><text x="0.5073%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="0.3822%" y="165" width="0.1678%" height="15" fill="rgb(228,75,8)" fg:x="189" fg:w="83"/><text x="0.6751%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="0.5500%" y="149" width="0.1658%" height="15" fill="rgb(207,175,4)" fg:x="272" fg:w="82"/><text x="0.8430%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.7158%" y="133" width="0.0121%" height="15" fill="rgb(205,108,24)" fg:x="354" fg:w="6"/><text x="1.0088%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.89%)</title><rect x="0.7158%" y="149" width="0.8897%" height="15" fill="rgb(244,120,49)" fg:x="354" fg:w="440"/><text x="1.0088%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="1.6055%" y="149" width="0.1921%" height="15" fill="rgb(223,47,38)" fg:x="794" fg:w="95"/><text x="1.8985%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.7976%" y="149" width="0.1213%" height="15" fill="rgb(229,179,11)" fg:x="889" fg:w="60"/><text x="2.0906%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.9189%" y="149" width="0.1213%" height="15" fill="rgb(231,122,1)" fg:x="949" fg:w="60"/><text x="2.2119%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="2.0402%" y="149" width="0.1213%" height="15" fill="rgb(245,119,9)" fg:x="1009" fg:w="60"/><text x="2.3332%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="2.1616%" y="149" width="0.1213%" height="15" fill="rgb(241,163,25)" fg:x="1069" fg:w="60"/><text x="2.4545%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="2.2829%" y="149" width="0.1658%" height="15" fill="rgb(217,214,3)" fg:x="1129" fg:w="82"/><text x="2.5759%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="2.4487%" y="149" width="0.1415%" height="15" fill="rgb(240,86,28)" fg:x="1211" fg:w="70"/><text x="2.7417%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.5902%" y="133" width="0.0121%" height="15" fill="rgb(215,47,9)" fg:x="1281" fg:w="6"/><text x="2.8832%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.89%)</title><rect x="2.5902%" y="149" width="0.8897%" height="15" fill="rgb(252,25,45)" fg:x="1281" fg:w="440"/><text x="2.8832%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="3.4799%" y="149" width="0.0384%" height="15" fill="rgb(251,164,9)" fg:x="1721" fg:w="19"/><text x="3.7729%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="3.5184%" y="133" width="0.1678%" height="15" fill="rgb(233,194,0)" fg:x="1740" fg:w="83"/><text x="3.8113%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.14%)</title><rect x="3.6862%" y="101" width="0.1355%" height="15" fill="rgb(249,111,24)" fg:x="1823" fg:w="67"/><text x="3.9791%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.20%)</title><rect x="3.6862%" y="117" width="0.1982%" height="15" fill="rgb(250,223,3)" fg:x="1823" fg:w="98"/><text x="3.9791%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.8843%" y="69" width="0.0222%" height="15" fill="rgb(236,178,37)" fg:x="1921" fg:w="11"/><text x="4.1773%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="3.9066%" y="53" width="0.0708%" height="15" fill="rgb(241,158,50)" fg:x="1932" fg:w="35"/><text x="4.1996%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="3.9066%" y="69" width="0.1335%" height="15" fill="rgb(213,121,41)" fg:x="1932" fg:w="66"/><text x="4.1996%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.30%)</title><rect x="3.8843%" y="85" width="0.2972%" height="15" fill="rgb(240,92,3)" fg:x="1921" fg:w="147"/><text x="4.1773%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.43%)</title><rect x="3.8843%" y="101" width="0.4287%" height="15" fill="rgb(205,123,3)" fg:x="1921" fg:w="212"/><text x="4.1773%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.45%)</title><rect x="3.8843%" y="117" width="0.4489%" height="15" fill="rgb(205,97,47)" fg:x="1921" fg:w="222"/><text x="4.1773%" y="127.50"></text></g><g><title>core::fmt::write (461 instructions, 0.93%)</title><rect x="3.6862%" y="133" width="0.9322%" height="15" fill="rgb(247,152,14)" fg:x="1823" fg:w="461"/><text x="3.9791%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (689 instructions, 1.39%)</title><rect x="3.5184%" y="149" width="1.3932%" height="15" fill="rgb(248,195,53)" fg:x="1740" fg:w="689"/><text x="3.8113%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="4.9115%" y="149" width="0.1921%" height="15" fill="rgb(226,201,16)" fg:x="2429" fg:w="95"/><text x="5.2045%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="5.1036%" y="149" width="0.1213%" height="15" fill="rgb(205,98,0)" fg:x="2524" fg:w="60"/><text x="5.3966%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="5.2250%" y="149" width="0.1537%" height="15" fill="rgb(214,191,48)" fg:x="2584" fg:w="76"/><text x="5.5179%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="5.3786%" y="149" width="0.1415%" height="15" fill="rgb(237,112,39)" fg:x="2660" fg:w="70"/><text x="5.6716%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="5.5202%" y="117" width="0.0121%" height="15" fill="rgb(247,203,27)" fg:x="2730" fg:w="6"/><text x="5.8131%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.89%)</title><rect x="5.5202%" y="133" width="0.8897%" height="15" fill="rgb(235,124,28)" fg:x="2730" fg:w="440"/><text x="5.8131%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="6.4099%" y="133" width="0.0384%" height="15" fill="rgb(208,207,46)" fg:x="3170" fg:w="19"/><text x="6.7028%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="6.4483%" y="117" width="0.1678%" height="15" fill="rgb(234,176,4)" fg:x="3189" fg:w="83"/><text x="6.7413%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.14%)</title><rect x="6.6161%" y="85" width="0.1355%" height="15" fill="rgb(230,133,28)" fg:x="3272" fg:w="67"/><text x="6.9091%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.20%)</title><rect x="6.6161%" y="101" width="0.1982%" height="15" fill="rgb(211,137,40)" fg:x="3272" fg:w="98"/><text x="6.9091%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.8143%" y="53" width="0.0222%" height="15" fill="rgb(254,35,13)" fg:x="3370" fg:w="11"/><text x="7.1072%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="6.8365%" y="37" width="0.0708%" height="15" fill="rgb(225,49,51)" fg:x="3381" fg:w="35"/><text x="7.1295%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="6.8365%" y="53" width="0.1335%" height="15" fill="rgb(251,10,15)" fg:x="3381" fg:w="66"/><text x="7.1295%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.30%)</title><rect x="6.8143%" y="69" width="0.2972%" height="15" fill="rgb(228,207,15)" fg:x="3370" fg:w="147"/><text x="7.1072%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.43%)</title><rect x="6.8143%" y="85" width="0.4287%" height="15" fill="rgb(241,99,19)" fg:x="3370" fg:w="212"/><text x="7.1072%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.45%)</title><rect x="6.8143%" y="101" width="0.4489%" height="15" fill="rgb(207,104,49)" fg:x="3370" fg:w="222"/><text x="7.1072%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 0.93%)</title><rect x="6.6161%" y="117" width="0.9322%" height="15" fill="rgb(234,99,18)" fg:x="3272" fg:w="461"/><text x="6.9091%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (689 instructions, 1.39%)</title><rect x="6.4483%" y="133" width="1.3932%" height="15" fill="rgb(213,191,49)" fg:x="3189" fg:w="689"/><text x="6.7413%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="7.8415%" y="133" width="0.1921%" height="15" fill="rgb(210,226,19)" fg:x="3878" fg:w="95"/><text x="8.1344%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="8.0336%" y="133" width="0.1213%" height="15" fill="rgb(229,97,18)" fg:x="3973" fg:w="60"/><text x="8.3265%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="8.1549%" y="117" width="0.1658%" height="15" fill="rgb(211,167,15)" fg:x="4033" fg:w="82"/><text x="8.4479%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.19%)</title><rect x="8.3207%" y="117" width="0.1921%" height="15" fill="rgb(210,169,34)" fg:x="4115" fg:w="95"/><text x="8.6137%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="8.5128%" y="117" width="0.1537%" height="15" fill="rgb(241,121,31)" fg:x="4210" fg:w="76"/><text x="8.8058%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (335 instructions, 0.68%)</title><rect x="8.1549%" y="133" width="0.6774%" height="15" fill="rgb(232,40,11)" fg:x="4033" fg:w="335"/><text x="8.4479%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="8.8323%" y="133" width="0.1678%" height="15" fill="rgb(205,86,26)" fg:x="4368" fg:w="83"/><text x="9.1252%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,966 instructions, 3.98%)</title><rect x="5.5202%" y="149" width="3.9753%" height="15" fill="rgb(231,126,28)" fg:x="2730" fg:w="1966"/><text x="5.8131%" y="159.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="9.4955%" y="149" width="0.1537%" height="15" fill="rgb(219,221,18)" fg:x="4696" fg:w="76"/><text x="9.7885%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="9.6492%" y="149" width="0.0303%" height="15" fill="rgb(211,40,0)" fg:x="4772" fg:w="15"/><text x="9.9421%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="9.6795%" y="149" width="0.0303%" height="15" fill="rgb(239,85,43)" fg:x="4787" fg:w="15"/><text x="9.9725%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.02%)</title><rect x="9.7098%" y="149" width="0.0182%" height="15" fill="rgb(231,55,21)" fg:x="4802" fg:w="9"/><text x="10.0028%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.04%)</title><rect x="9.7280%" y="149" width="0.0364%" height="15" fill="rgb(225,184,43)" fg:x="4811" fg:w="18"/><text x="10.0210%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="9.7644%" y="133" width="0.1678%" height="15" fill="rgb(251,158,41)" fg:x="4829" fg:w="83"/><text x="10.0574%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.36%)</title><rect x="9.7644%" y="149" width="0.3619%" height="15" fill="rgb(234,159,37)" fg:x="4829" fg:w="179"/><text x="10.0574%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="10.1264%" y="117" width="0.1678%" height="15" fill="rgb(216,204,22)" fg:x="5008" fg:w="83"/><text x="10.4193%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="10.1264%" y="133" width="0.2548%" height="15" fill="rgb(214,17,3)" fg:x="5008" fg:w="126"/><text x="10.4193%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.42%)</title><rect x="10.1264%" y="149" width="0.4206%" height="15" fill="rgb(212,111,17)" fg:x="5008" fg:w="208"/><text x="10.4193%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="10.5470%" y="149" width="0.1678%" height="15" fill="rgb(221,157,24)" fg:x="5216" fg:w="83"/><text x="10.8399%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="10.7148%" y="149" width="0.1739%" height="15" fill="rgb(252,16,13)" fg:x="5299" fg:w="86"/><text x="11.0078%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="10.8887%" y="149" width="0.1678%" height="15" fill="rgb(221,62,2)" fg:x="5385" fg:w="83"/><text x="11.1817%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="11.0565%" y="149" width="0.1678%" height="15" fill="rgb(247,87,22)" fg:x="5468" fg:w="83"/><text x="11.3495%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="11.2324%" y="149" width="0.1739%" height="15" fill="rgb(215,73,9)" fg:x="5555" fg:w="86"/><text x="11.5254%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.87%)</title><rect x="11.4063%" y="149" width="0.8654%" height="15" fill="rgb(207,175,33)" fg:x="5641" fg:w="428"/><text x="11.6993%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.87%)</title><rect x="12.2718%" y="149" width="0.8654%" height="15" fill="rgb(243,129,54)" fg:x="6069" fg:w="428"/><text x="12.5647%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,372 instructions, 14.91%)</title><rect x="0.5500%" y="165" width="14.9065%" height="15" fill="rgb(227,119,45)" fg:x="272" fg:w="7372"/><text x="0.8430%" y="175.50">candid::de::IDLDese..</text></g><g><title>memcpy (380 instructions, 0.77%)</title><rect x="15.4565%" y="165" width="0.7684%" height="15" fill="rgb(205,109,36)" fg:x="7644" fg:w="380"/><text x="15.7494%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="16.2249%" y="133" width="0.0283%" height="15" fill="rgb(205,6,39)" fg:x="8024" fg:w="14"/><text x="16.5178%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="16.2532%" y="117" width="0.1193%" height="15" fill="rgb(221,32,16)" fg:x="8038" fg:w="59"/><text x="16.5461%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (396 instructions, 0.80%)</title><rect x="16.3725%" y="117" width="0.8007%" height="15" fill="rgb(228,144,50)" fg:x="8097" fg:w="396"/><text x="16.6654%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.35%)</title><rect x="17.1732%" y="117" width="0.3498%" height="15" fill="rgb(229,201,53)" fg:x="8493" fg:w="173"/><text x="17.4662%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (881 instructions, 1.78%)</title><rect x="16.2532%" y="133" width="1.7814%" height="15" fill="rgb(249,153,27)" fg:x="8038" fg:w="881"/><text x="16.5461%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,027 instructions, 2.08%)</title><rect x="16.2249%" y="149" width="2.0766%" height="15" fill="rgb(227,106,25)" fg:x="8024" fg:w="1027"/><text x="16.5178%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="18.3015%" y="149" width="0.1678%" height="15" fill="rgb(230,65,29)" fg:x="9051" fg:w="83"/><text x="18.5945%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="18.4693%" y="133" width="0.0283%" height="15" fill="rgb(221,57,46)" fg:x="9134" fg:w="14"/><text x="18.7623%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="18.4976%" y="117" width="0.1193%" height="15" fill="rgb(229,161,17)" fg:x="9148" fg:w="59"/><text x="18.7906%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (396 instructions, 0.80%)</title><rect x="18.6169%" y="117" width="0.8007%" height="15" fill="rgb(222,213,11)" fg:x="9207" fg:w="396"/><text x="18.9099%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.35%)</title><rect x="19.4177%" y="117" width="0.3498%" height="15" fill="rgb(235,35,13)" fg:x="9603" fg:w="173"/><text x="19.7106%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (881 instructions, 1.78%)</title><rect x="18.4976%" y="133" width="1.7814%" height="15" fill="rgb(233,158,34)" fg:x="9148" fg:w="881"/><text x="18.7906%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,123 instructions, 2.27%)</title><rect x="18.4693%" y="149" width="2.2708%" height="15" fill="rgb(215,151,48)" fg:x="9134" fg:w="1123"/><text x="18.7623%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="20.7401%" y="149" width="0.1678%" height="15" fill="rgb(229,84,14)" fg:x="10257" fg:w="83"/><text x="21.0330%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="20.9079%" y="133" width="0.0283%" height="15" fill="rgb(229,68,14)" fg:x="10340" fg:w="14"/><text x="21.2009%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="20.9362%" y="117" width="0.1193%" height="15" fill="rgb(243,106,26)" fg:x="10354" fg:w="59"/><text x="21.2292%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (396 instructions, 0.80%)</title><rect x="21.0555%" y="117" width="0.8007%" height="15" fill="rgb(206,45,38)" fg:x="10413" fg:w="396"/><text x="21.3485%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.35%)</title><rect x="21.8562%" y="117" width="0.3498%" height="15" fill="rgb(226,6,15)" fg:x="10809" fg:w="173"/><text x="22.1492%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (881 instructions, 1.78%)</title><rect x="20.9362%" y="133" width="1.7814%" height="15" fill="rgb(232,22,54)" fg:x="10354" fg:w="881"/><text x="21.2292%" y="143.50"></text></g><g><title>memcmp (813 instructions, 1.64%)</title><rect x="22.7176%" y="133" width="1.6439%" height="15" fill="rgb(229,222,32)" fg:x="11235" fg:w="813"/><text x="23.0106%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="24.3615%" y="117" width="0.1739%" height="15" fill="rgb(228,62,29)" fg:x="12048" fg:w="86"/><text x="24.6545%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.24%)</title><rect x="24.3615%" y="133" width="0.2447%" height="15" fill="rgb(251,103,34)" fg:x="12048" fg:w="121"/><text x="24.6545%" y="143.50"></text></g><g><title>candid::types::internal::env_add (2,024 instructions, 4.09%)</title><rect x="20.9079%" y="149" width="4.0926%" height="15" fill="rgb(233,12,30)" fg:x="10340" fg:w="2024"/><text x="21.2009%" y="159.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="25.0005%" y="101" width="0.1193%" height="15" fill="rgb(238,52,0)" fg:x="12364" fg:w="59"/><text x="25.2935%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.19%)</title><rect x="25.0005%" y="117" width="0.1901%" height="15" fill="rgb(223,98,5)" fg:x="12364" fg:w="94"/><text x="25.2935%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="25.6374%" y="101" width="0.1193%" height="15" fill="rgb(228,75,37)" fg:x="12679" fg:w="59"/><text x="25.9304%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.19%)</title><rect x="25.6374%" y="117" width="0.1901%" height="15" fill="rgb(205,115,49)" fg:x="12679" fg:w="94"/><text x="25.9304%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (630 instructions, 1.27%)</title><rect x="25.0005%" y="133" width="1.2739%" height="15" fill="rgb(250,154,43)" fg:x="12364" fg:w="630"/><text x="25.2935%" y="143.50"></text></g><g><title>candid::types::internal::env_id (960 instructions, 1.94%)</title><rect x="25.0005%" y="149" width="1.9412%" height="15" fill="rgb(226,43,29)" fg:x="12364" fg:w="960"/><text x="25.2935%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (5,429 instructions, 10.98%)</title><rect x="16.2249%" y="165" width="10.9777%" height="15" fill="rgb(249,228,39)" fg:x="8024" fg:w="5429"/><text x="16.5178%" y="175.50">candid::types..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.11%)</title><rect x="27.2025%" y="149" width="0.1072%" height="15" fill="rgb(216,79,43)" fg:x="13453" fg:w="53"/><text x="27.4955%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.27%)</title><rect x="27.3097%" y="133" width="0.2669%" height="15" fill="rgb(228,95,12)" fg:x="13506" fg:w="132"/><text x="27.6026%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.27%)</title><rect x="27.6474%" y="133" width="0.2669%" height="15" fill="rgb(249,221,15)" fg:x="13673" fg:w="132"/><text x="27.9403%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (334 instructions, 0.68%)</title><rect x="27.3097%" y="149" width="0.6754%" height="15" fill="rgb(233,34,13)" fg:x="13506" fg:w="334"/><text x="27.6026%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="27.9850%" y="133" width="0.0687%" height="15" fill="rgb(214,103,39)" fg:x="13840" fg:w="34"/><text x="28.2780%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="28.0538%" y="133" width="0.0687%" height="15" fill="rgb(251,126,39)" fg:x="13874" fg:w="34"/><text x="28.3468%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2303 (18 instructions, 0.04%)</title><rect x="28.1225%" y="133" width="0.0364%" height="15" fill="rgb(214,216,36)" fg:x="13908" fg:w="18"/><text x="28.4155%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2303 (18 instructions, 0.04%)</title><rect x="28.1589%" y="133" width="0.0364%" height="15" fill="rgb(220,221,8)" fg:x="13926" fg:w="18"/><text x="28.4519%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.17%)</title><rect x="28.1953%" y="133" width="0.1658%" height="15" fill="rgb(240,216,3)" fg:x="13944" fg:w="82"/><text x="28.4883%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="28.3611%" y="133" width="0.1658%" height="15" fill="rgb(232,218,17)" fg:x="14026" fg:w="82"/><text x="28.6541%" y="143.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.19%)</title><rect x="28.5269%" y="117" width="0.1860%" height="15" fill="rgb(229,163,45)" fg:x="14108" fg:w="92"/><text x="28.8199%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (174 instructions, 0.35%)</title><rect x="28.5269%" y="133" width="0.3518%" height="15" fill="rgb(231,110,42)" fg:x="14108" fg:w="174"/><text x="28.8199%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="28.8788%" y="133" width="0.1415%" height="15" fill="rgb(208,170,48)" fg:x="14282" fg:w="70"/><text x="29.1717%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="29.0203%" y="117" width="0.0121%" height="15" fill="rgb(239,116,25)" fg:x="14352" fg:w="6"/><text x="29.3133%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.89%)</title><rect x="29.0203%" y="133" width="0.8897%" height="15" fill="rgb(219,200,50)" fg:x="14352" fg:w="440"/><text x="29.3133%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="29.9100%" y="117" width="0.1678%" height="15" fill="rgb(245,200,0)" fg:x="14792" fg:w="83"/><text x="30.2030%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.14%)</title><rect x="30.0778%" y="85" width="0.1355%" height="15" fill="rgb(245,119,33)" fg:x="14875" fg:w="67"/><text x="30.3708%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.20%)</title><rect x="30.0778%" y="101" width="0.1982%" height="15" fill="rgb(231,125,12)" fg:x="14875" fg:w="98"/><text x="30.3708%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="30.2760%" y="53" width="0.0222%" height="15" fill="rgb(216,96,41)" fg:x="14973" fg:w="11"/><text x="30.5690%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="30.2983%" y="37" width="0.0708%" height="15" fill="rgb(248,43,45)" fg:x="14984" fg:w="35"/><text x="30.5912%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="30.2983%" y="53" width="0.1335%" height="15" fill="rgb(217,222,7)" fg:x="14984" fg:w="66"/><text x="30.5912%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.30%)</title><rect x="30.2760%" y="69" width="0.2972%" height="15" fill="rgb(233,28,6)" fg:x="14973" fg:w="147"/><text x="30.5690%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.43%)</title><rect x="30.2760%" y="85" width="0.4287%" height="15" fill="rgb(231,218,15)" fg:x="14973" fg:w="212"/><text x="30.5690%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.45%)</title><rect x="30.2760%" y="101" width="0.4489%" height="15" fill="rgb(226,171,48)" fg:x="14973" fg:w="222"/><text x="30.5690%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 0.93%)</title><rect x="30.0778%" y="117" width="0.9322%" height="15" fill="rgb(235,201,9)" fg:x="14875" fg:w="461"/><text x="30.3708%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (689 instructions, 1.39%)</title><rect x="29.9100%" y="133" width="1.3932%" height="15" fill="rgb(217,80,15)" fg:x="14792" fg:w="689"/><text x="30.2030%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="31.3032%" y="133" width="0.1921%" height="15" fill="rgb(219,152,8)" fg:x="15481" fg:w="95"/><text x="31.5962%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="31.4953%" y="133" width="0.1213%" height="15" fill="rgb(243,107,38)" fg:x="15576" fg:w="60"/><text x="31.7883%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="31.6166%" y="117" width="0.1213%" height="15" fill="rgb(231,17,5)" fg:x="15636" fg:w="60"/><text x="31.9096%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 instructions, 0.25%)</title><rect x="31.6166%" y="133" width="0.2507%" height="15" fill="rgb(209,25,54)" fg:x="15636" fg:w="124"/><text x="31.9096%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="31.8674%" y="133" width="0.1678%" height="15" fill="rgb(219,0,2)" fg:x="15760" fg:w="83"/><text x="32.1603%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="32.0352%" y="117" width="0.1213%" height="15" fill="rgb(246,9,5)" fg:x="15843" fg:w="60"/><text x="32.3282%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="32.2859%" y="117" width="0.1213%" height="15" fill="rgb(226,159,4)" fg:x="15967" fg:w="60"/><text x="32.5789%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="32.5366%" y="117" width="0.1213%" height="15" fill="rgb(219,175,34)" fg:x="16091" fg:w="60"/><text x="32.8296%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="32.7874%" y="117" width="0.1213%" height="15" fill="rgb(236,10,46)" fg:x="16215" fg:w="60"/><text x="33.0804%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.0381%" y="117" width="0.1213%" height="15" fill="rgb(240,211,16)" fg:x="16339" fg:w="60"/><text x="33.3311%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.2888%" y="117" width="0.1213%" height="15" fill="rgb(205,3,43)" fg:x="16463" fg:w="60"/><text x="33.5818%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.5396%" y="117" width="0.1213%" height="15" fill="rgb(245,7,22)" fg:x="16587" fg:w="60"/><text x="33.8326%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.7903%" y="117" width="0.1213%" height="15" fill="rgb(239,132,32)" fg:x="16711" fg:w="60"/><text x="34.0833%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (992 instructions, 2.01%)</title><rect x="32.0352%" y="133" width="2.0059%" height="15" fill="rgb(228,202,34)" fg:x="15843" fg:w="992"/><text x="32.3282%" y="143.50"></text></g><g><title>__rust_realloc (110 instructions, 0.22%)</title><rect x="34.0410%" y="101" width="0.2224%" height="15" fill="rgb(254,200,22)" fg:x="16835" fg:w="110"/><text x="34.3340%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.31%)</title><rect x="34.0410%" y="117" width="0.3134%" height="15" fill="rgb(219,10,39)" fg:x="16835" fg:w="155"/><text x="34.3340%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.49%)</title><rect x="34.0410%" y="133" width="0.4914%" height="15" fill="rgb(226,210,39)" fg:x="16835" fg:w="243"/><text x="34.3340%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="34.5324%" y="117" width="0.1213%" height="15" fill="rgb(208,219,16)" fg:x="17078" fg:w="60"/><text x="34.8254%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="34.7831%" y="117" width="0.1213%" height="15" fill="rgb(216,158,51)" fg:x="17202" fg:w="60"/><text x="35.0761%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="35.0339%" y="117" width="0.1213%" height="15" fill="rgb(233,14,44)" fg:x="17326" fg:w="60"/><text x="35.3268%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="35.2846%" y="117" width="0.1213%" height="15" fill="rgb(237,97,39)" fg:x="17450" fg:w="60"/><text x="35.5776%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="35.5353%" y="117" width="0.1213%" height="15" fill="rgb(218,198,43)" fg:x="17574" fg:w="60"/><text x="35.8283%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="35.7861%" y="117" width="0.1213%" height="15" fill="rgb(231,104,20)" fg:x="17698" fg:w="60"/><text x="36.0790%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="36.0368%" y="117" width="0.1213%" height="15" fill="rgb(254,36,13)" fg:x="17822" fg:w="60"/><text x="36.3298%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (868 instructions, 1.76%)</title><rect x="34.5324%" y="133" width="1.7551%" height="15" fill="rgb(248,14,50)" fg:x="17078" fg:w="868"/><text x="34.8254%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 instructions, 0.06%)</title><rect x="36.2875%" y="133" width="0.0586%" height="15" fill="rgb(217,107,29)" fg:x="17946" fg:w="29"/><text x="36.5805%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="36.3462%" y="133" width="0.1537%" height="15" fill="rgb(251,169,33)" fg:x="17975" fg:w="76"/><text x="36.6391%" y="143.50"></text></g><g><title>__rust_realloc (54 instructions, 0.11%)</title><rect x="36.4998%" y="101" width="0.1092%" height="15" fill="rgb(217,108,32)" fg:x="18051" fg:w="54"/><text x="36.7928%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (99 instructions, 0.20%)</title><rect x="36.4998%" y="117" width="0.2002%" height="15" fill="rgb(219,66,42)" fg:x="18051" fg:w="99"/><text x="36.7928%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.38%)</title><rect x="36.4998%" y="133" width="0.3781%" height="15" fill="rgb(206,180,7)" fg:x="18051" fg:w="187"/><text x="36.7928%" y="143.50"></text></g><g><title>memcpy (220 instructions, 0.44%)</title><rect x="36.8780%" y="133" width="0.4448%" height="15" fill="rgb(208,226,31)" fg:x="18238" fg:w="220"/><text x="37.1709%" y="143.50"></text></g><g><title>memcpy (171 instructions, 0.35%)</title><rect x="37.3228%" y="133" width="0.3458%" height="15" fill="rgb(218,26,49)" fg:x="18458" fg:w="171"/><text x="37.6158%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (53 instructions, 0.11%)</title><rect x="37.6686%" y="133" width="0.1072%" height="15" fill="rgb(233,197,48)" fg:x="18629" fg:w="53"/><text x="37.9616%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="37.7758%" y="133" width="0.1739%" height="15" fill="rgb(252,181,51)" fg:x="18682" fg:w="86"/><text x="38.0687%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="37.9497%" y="133" width="0.1213%" height="15" fill="rgb(253,90,19)" fg:x="18768" fg:w="60"/><text x="38.2426%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (6,218 instructions, 12.57%)</title><rect x="27.9850%" y="149" width="12.5730%" height="15" fill="rgb(215,171,30)" fg:x="13840" fg:w="6218"/><text x="28.2780%" y="159.50">&lt;candid::types::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="40.5581%" y="149" width="0.0263%" height="15" fill="rgb(214,222,9)" fg:x="20058" fg:w="13"/><text x="40.8511%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="40.5844%" y="149" width="0.0263%" height="15" fill="rgb(223,3,22)" fg:x="20071" fg:w="13"/><text x="40.8773%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="40.6107%" y="149" width="0.0263%" height="15" fill="rgb(225,196,46)" fg:x="20084" fg:w="13"/><text x="40.9036%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,924 instructions, 14.00%)</title><rect x="27.2025%" y="165" width="14.0006%" height="15" fill="rgb(209,110,37)" fg:x="13453" fg:w="6924"/><text x="27.4955%" y="175.50">candid::de::IDLDes..</text></g><g><title>memcpy (440 instructions, 0.89%)</title><rect x="41.2031%" y="165" width="0.8897%" height="15" fill="rgb(249,89,12)" fg:x="20377" fg:w="440"/><text x="41.4961%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.04%)</title><rect x="42.0928%" y="133" width="0.0384%" height="15" fill="rgb(226,27,33)" fg:x="20817" fg:w="19"/><text x="42.3858%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.37%)</title><rect x="42.1312%" y="133" width="0.3660%" height="15" fill="rgb(213,82,22)" fg:x="20836" fg:w="181"/><text x="42.4242%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (100 instructions, 0.20%)</title><rect x="42.4972%" y="101" width="0.2022%" height="15" fill="rgb(248,140,0)" fg:x="21017" fg:w="100"/><text x="42.7902%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (263 instructions, 0.53%)</title><rect x="42.4972%" y="117" width="0.5318%" height="15" fill="rgb(228,106,3)" fg:x="21017" fg:w="263"/><text x="42.7902%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (298 instructions, 0.60%)</title><rect x="42.4972%" y="133" width="0.6026%" height="15" fill="rgb(209,23,37)" fg:x="21017" fg:w="298"/><text x="42.7902%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="43.0998%" y="133" width="0.0263%" height="15" fill="rgb(241,93,50)" fg:x="21315" fg:w="13"/><text x="43.3928%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (573 instructions, 1.16%)</title><rect x="42.0928%" y="149" width="1.1586%" height="15" fill="rgb(253,46,43)" fg:x="20817" fg:w="573"/><text x="42.3858%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (622 instructions, 1.26%)</title><rect x="42.0928%" y="165" width="1.2577%" height="15" fill="rgb(226,206,43)" fg:x="20817" fg:w="622"/><text x="42.3858%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.13%)</title><rect x="43.3505%" y="149" width="0.1254%" height="15" fill="rgb(217,54,7)" fg:x="21439" fg:w="62"/><text x="43.6435%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (100 instructions, 0.20%)</title><rect x="43.4759%" y="149" width="0.2022%" height="15" fill="rgb(223,5,52)" fg:x="21501" fg:w="100"/><text x="43.7689%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (261 instructions, 0.53%)</title><rect x="43.3505%" y="165" width="0.5278%" height="15" fill="rgb(206,52,46)" fg:x="21439" fg:w="261"/><text x="43.6435%" y="175.50"></text></g><g><title>memset (240 instructions, 0.49%)</title><rect x="43.8783%" y="165" width="0.4853%" height="15" fill="rgb(253,136,11)" fg:x="21700" fg:w="240"/><text x="44.1712%" y="175.50"></text></g><g><title>memcpy (176 instructions, 0.36%)</title><rect x="44.3636%" y="165" width="0.3559%" height="15" fill="rgb(208,106,33)" fg:x="21940" fg:w="176"/><text x="44.6565%" y="175.50"></text></g><g><title>memcpy (504 instructions, 1.02%)</title><rect x="44.7194%" y="165" width="1.0191%" height="15" fill="rgb(206,54,4)" fg:x="22116" fg:w="504"/><text x="45.0124%" y="175.50"></text></g><g><title>memset (64 instructions, 0.13%)</title><rect x="45.7386%" y="149" width="0.1294%" height="15" fill="rgb(213,3,15)" fg:x="22620" fg:w="64"/><text x="46.0315%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,990 instructions, 10.09%)</title><rect x="45.8680%" y="149" width="10.0900%" height="15" fill="rgb(252,211,39)" fg:x="22684" fg:w="4990"/><text x="46.1609%" y="159.50">sha2::sha256..</text></g><g><title>sha2::sha256::compress256 (4,990 instructions, 10.09%)</title><rect x="55.9579%" y="149" width="10.0900%" height="15" fill="rgb(223,6,36)" fg:x="27674" fg:w="4990"/><text x="56.2509%" y="159.50">sha2::sha256..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (10,386 instructions, 21.00%)</title><rect x="45.7386%" y="165" width="21.0009%" height="15" fill="rgb(252,169,45)" fg:x="22620" fg:w="10386"/><text x="46.0315%" y="175.50">&lt;sha2::core_api::Sha256VarCo..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="66.7395%" y="165" width="0.1678%" height="15" fill="rgb(212,48,26)" fg:x="33006" fg:w="83"/><text x="67.0324%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="66.9073%" y="149" width="0.0283%" height="15" fill="rgb(251,102,48)" fg:x="33089" fg:w="14"/><text x="67.2003%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (99 instructions, 0.20%)</title><rect x="66.9356%" y="101" width="0.2002%" height="15" fill="rgb(243,208,16)" fg:x="33103" fg:w="99"/><text x="67.2286%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.14%)</title><rect x="67.1358%" y="101" width="0.1355%" height="15" fill="rgb(219,96,24)" fg:x="33202" fg:w="67"/><text x="67.4287%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (268 instructions, 0.54%)</title><rect x="66.9356%" y="117" width="0.5419%" height="15" fill="rgb(219,33,29)" fg:x="33103" fg:w="268"/><text x="67.2286%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (303 instructions, 0.61%)</title><rect x="66.9356%" y="133" width="0.6127%" height="15" fill="rgb(223,176,5)" fg:x="33103" fg:w="303"/><text x="67.2286%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.13%)</title><rect x="67.5483%" y="117" width="0.1254%" height="15" fill="rgb(228,140,14)" fg:x="33406" fg:w="62"/><text x="67.8412%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.14%)</title><rect x="67.6736%" y="117" width="0.1355%" height="15" fill="rgb(217,179,31)" fg:x="33468" fg:w="67"/><text x="67.9666%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.46%)</title><rect x="67.5483%" y="133" width="0.4610%" height="15" fill="rgb(230,9,30)" fg:x="33406" fg:w="228"/><text x="67.8412%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (576 instructions, 1.16%)</title><rect x="66.9356%" y="149" width="1.1647%" height="15" fill="rgb(230,136,20)" fg:x="33103" fg:w="576"/><text x="67.2286%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="68.1003%" y="149" width="0.0263%" height="15" fill="rgb(215,210,22)" fg:x="33679" fg:w="13"/><text x="68.3933%" y="159.50"></text></g><g><title>memset (152 instructions, 0.31%)</title><rect x="68.1266%" y="149" width="0.3074%" height="15" fill="rgb(218,43,5)" fg:x="33692" fg:w="152"/><text x="68.4195%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="68.4339%" y="117" width="0.0283%" height="15" fill="rgb(216,11,5)" fg:x="33844" fg:w="14"/><text x="68.7269%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 instructions, 0.13%)</title><rect x="68.4339%" y="133" width="0.1274%" height="15" fill="rgb(209,82,29)" fg:x="33844" fg:w="63"/><text x="68.7269%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="68.5613%" y="133" width="0.1678%" height="15" fill="rgb(244,115,12)" fg:x="33907" fg:w="83"/><text x="68.8543%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="68.7291%" y="117" width="0.0283%" height="15" fill="rgb(222,82,18)" fg:x="33990" fg:w="14"/><text x="69.0221%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="68.7575%" y="101" width="0.1193%" height="15" fill="rgb(249,227,8)" fg:x="34004" fg:w="59"/><text x="69.0504%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.76%)</title><rect x="68.8768%" y="101" width="0.7623%" height="15" fill="rgb(253,141,45)" fg:x="34063" fg:w="377"/><text x="69.1697%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="69.6391%" y="101" width="0.1577%" height="15" fill="rgb(234,184,4)" fg:x="34440" fg:w="78"/><text x="69.9320%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.55%)</title><rect x="68.7575%" y="117" width="1.5509%" height="15" fill="rgb(218,194,23)" fg:x="34004" fg:w="767"/><text x="69.0504%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,009 instructions, 2.04%)</title><rect x="68.7291%" y="133" width="2.0402%" height="15" fill="rgb(235,66,41)" fg:x="33990" fg:w="1009"/><text x="69.0221%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="70.7694%" y="133" width="0.1678%" height="15" fill="rgb(245,217,1)" fg:x="34999" fg:w="83"/><text x="71.0624%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="70.9372%" y="133" width="0.1678%" height="15" fill="rgb(229,91,1)" fg:x="35082" fg:w="83"/><text x="71.2302%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="71.1050%" y="117" width="0.0283%" height="15" fill="rgb(207,101,30)" fg:x="35165" fg:w="14"/><text x="71.3980%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="71.1334%" y="101" width="0.1193%" height="15" fill="rgb(223,82,49)" fg:x="35179" fg:w="59"/><text x="71.4263%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.76%)</title><rect x="71.2527%" y="101" width="0.7623%" height="15" fill="rgb(218,167,17)" fg:x="35238" fg:w="377"/><text x="71.5456%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="72.0150%" y="101" width="0.1577%" height="15" fill="rgb(208,103,14)" fg:x="35615" fg:w="78"/><text x="72.3079%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.55%)</title><rect x="71.1334%" y="117" width="1.5509%" height="15" fill="rgb(238,20,8)" fg:x="35179" fg:w="767"/><text x="71.4263%" y="127.50"></text></g><g><title>memcmp (675 instructions, 1.36%)</title><rect x="72.6843%" y="117" width="1.3649%" height="15" fill="rgb(218,80,54)" fg:x="35946" fg:w="675"/><text x="72.9772%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="74.0491%" y="101" width="0.1739%" height="15" fill="rgb(240,144,17)" fg:x="36621" fg:w="86"/><text x="74.3421%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.24%)</title><rect x="74.0491%" y="117" width="0.2447%" height="15" fill="rgb(245,27,50)" fg:x="36621" fg:w="121"/><text x="74.3421%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,772 instructions, 3.58%)</title><rect x="71.1050%" y="133" width="3.5831%" height="15" fill="rgb(251,51,7)" fg:x="35165" fg:w="1772"/><text x="71.3980%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="74.6881%" y="85" width="0.1193%" height="15" fill="rgb(245,217,29)" fg:x="36937" fg:w="59"/><text x="74.9811%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.33%)</title><rect x="74.8074%" y="85" width="0.3316%" height="15" fill="rgb(221,176,29)" fg:x="36996" fg:w="164"/><text x="75.1004%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.58%)</title><rect x="74.6881%" y="101" width="0.5783%" height="15" fill="rgb(212,180,24)" fg:x="36937" fg:w="286"/><text x="74.9811%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 1.03%)</title><rect x="74.6881%" y="117" width="1.0252%" height="15" fill="rgb(254,24,2)" fg:x="36937" fg:w="507"/><text x="74.9811%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.847 (48 instructions, 0.10%)</title><rect x="75.7133%" y="117" width="0.0971%" height="15" fill="rgb(230,100,2)" fg:x="37444" fg:w="48"/><text x="76.0062%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="75.8103%" y="117" width="0.0263%" height="15" fill="rgb(219,142,25)" fg:x="37492" fg:w="13"/><text x="76.1033%" y="127.50"></text></g><g><title>candid::types::internal::env_id (773 instructions, 1.56%)</title><rect x="74.6881%" y="133" width="1.5630%" height="15" fill="rgb(240,73,43)" fg:x="36937" fg:w="773"/><text x="74.9811%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (4,017 instructions, 8.12%)</title><rect x="68.4339%" y="149" width="8.1225%" height="15" fill="rgb(214,114,15)" fg:x="33844" fg:w="4017"/><text x="68.7269%" y="159.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="76.5565%" y="117" width="0.1678%" height="15" fill="rgb(207,130,4)" fg:x="37861" fg:w="83"/><text x="76.8494%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="76.5565%" y="133" width="0.2548%" height="15" fill="rgb(221,25,40)" fg:x="37861" fg:w="126"/><text x="76.8494%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.42%)</title><rect x="76.5565%" y="149" width="0.4206%" height="15" fill="rgb(241,184,7)" fg:x="37861" fg:w="208"/><text x="76.8494%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (30 instructions, 0.06%)</title><rect x="76.9770%" y="133" width="0.0607%" height="15" fill="rgb(235,159,4)" fg:x="38069" fg:w="30"/><text x="77.2700%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.17%)</title><rect x="77.0377%" y="101" width="0.1658%" height="15" fill="rgb(214,87,48)" fg:x="38099" fg:w="82"/><text x="77.3307%" y="111.50"></text></g><g><title>candid::types::internal::unroll (170 instructions, 0.34%)</title><rect x="77.0377%" y="117" width="0.3437%" height="15" fill="rgb(246,198,24)" fg:x="38099" fg:w="170"/><text x="77.3307%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="77.3815%" y="117" width="0.1678%" height="15" fill="rgb(209,66,40)" fg:x="38269" fg:w="83"/><text x="77.6744%" y="127.50"></text></g><g><title>candid::types::internal::unroll (348 instructions, 0.70%)</title><rect x="77.0377%" y="133" width="0.7037%" height="15" fill="rgb(233,147,39)" fg:x="38099" fg:w="348"/><text x="77.3307%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="77.7414%" y="85" width="0.1193%" height="15" fill="rgb(231,145,52)" fg:x="38447" fg:w="59"/><text x="78.0343%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.33%)</title><rect x="77.8607%" y="85" width="0.3316%" height="15" fill="rgb(206,20,26)" fg:x="38506" fg:w="164"/><text x="78.1537%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.58%)</title><rect x="77.7414%" y="101" width="0.5783%" height="15" fill="rgb(238,220,4)" fg:x="38447" fg:w="286"/><text x="78.0343%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 1.03%)</title><rect x="77.7414%" y="117" width="1.0252%" height="15" fill="rgb(252,195,42)" fg:x="38447" fg:w="507"/><text x="78.0343%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="78.7666%" y="117" width="0.1678%" height="15" fill="rgb(209,10,6)" fg:x="38954" fg:w="83"/><text x="79.0595%" y="127.50"></text></g><g><title>memset (152 instructions, 0.31%)</title><rect x="78.9344%" y="117" width="0.3074%" height="15" fill="rgb(229,3,52)" fg:x="39037" fg:w="152"/><text x="79.2274%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,078 instructions, 2.18%)</title><rect x="77.7414%" y="133" width="2.1798%" height="15" fill="rgb(253,49,37)" fg:x="38447" fg:w="1078"/><text x="78.0343%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="79.9211%" y="101" width="0.1678%" height="15" fill="rgb(240,103,49)" fg:x="39525" fg:w="83"/><text x="80.2141%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="79.9211%" y="117" width="0.2548%" height="15" fill="rgb(250,182,30)" fg:x="39525" fg:w="126"/><text x="80.2141%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.42%)</title><rect x="79.9211%" y="133" width="0.4206%" height="15" fill="rgb(248,8,30)" fg:x="39525" fg:w="208"/><text x="80.2141%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="80.3417%" y="85" width="0.1193%" height="15" fill="rgb(237,120,30)" fg:x="39733" fg:w="59"/><text x="80.6347%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.19%)</title><rect x="80.3417%" y="101" width="0.1901%" height="15" fill="rgb(221,146,34)" fg:x="39733" fg:w="94"/><text x="80.6347%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.64%)</title><rect x="80.3417%" y="117" width="0.6369%" height="15" fill="rgb(242,55,13)" fg:x="39733" fg:w="315"/><text x="80.6347%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (23 instructions, 0.05%)</title><rect x="80.9787%" y="117" width="0.0465%" height="15" fill="rgb(242,112,31)" fg:x="40048" fg:w="23"/><text x="81.2716%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.0252%" y="117" width="0.0263%" height="15" fill="rgb(249,192,27)" fg:x="40071" fg:w="13"/><text x="81.3181%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (487 instructions, 0.98%)</title><rect x="80.3417%" y="133" width="0.9847%" height="15" fill="rgb(208,204,44)" fg:x="39733" fg:w="487"/><text x="80.6347%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="81.3265%" y="85" width="0.1678%" height="15" fill="rgb(208,93,54)" fg:x="40220" fg:w="83"/><text x="81.6194%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="81.3265%" y="101" width="0.2548%" height="15" fill="rgb(242,1,31)" fg:x="40220" fg:w="126"/><text x="81.6194%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.41%)</title><rect x="81.3265%" y="117" width="0.4145%" height="15" fill="rgb(241,83,25)" fg:x="40220" fg:w="205"/><text x="81.6194%" y="127.50"></text></g><g><title>leb128::write::signed (264 instructions, 0.53%)</title><rect x="81.3265%" y="133" width="0.5338%" height="15" fill="rgb(205,169,50)" fg:x="40220" fg:w="264"/><text x="81.6194%" y="143.50"></text></g><g><title>leb128::write::signed (50 instructions, 0.10%)</title><rect x="81.8603%" y="117" width="0.1011%" height="15" fill="rgb(239,186,37)" fg:x="40484" fg:w="50"/><text x="82.1532%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::encode (111 instructions, 0.22%)</title><rect x="81.8603%" y="133" width="0.2244%" height="15" fill="rgb(205,221,10)" fg:x="40484" fg:w="111"/><text x="82.1532%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="82.0847%" y="101" width="0.1739%" height="15" fill="rgb(218,196,15)" fg:x="40595" fg:w="86"/><text x="82.3777%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.24%)</title><rect x="82.0847%" y="117" width="0.2447%" height="15" fill="rgb(218,196,35)" fg:x="40595" fg:w="121"/><text x="82.3777%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.17%)</title><rect x="82.3294%" y="117" width="0.1699%" height="15" fill="rgb(233,63,24)" fg:x="40716" fg:w="84"/><text x="82.6224%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (250 instructions, 0.51%)</title><rect x="82.0847%" y="133" width="0.5055%" height="15" fill="rgb(225,8,4)" fg:x="40595" fg:w="250"/><text x="82.3777%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="82.5902%" y="133" width="0.0263%" height="15" fill="rgb(234,105,35)" fg:x="40845" fg:w="13"/><text x="82.8832%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,046 instructions, 6.16%)</title><rect x="76.9770%" y="149" width="6.1591%" height="15" fill="rgb(236,21,32)" fg:x="38069" fg:w="3046"/><text x="77.2700%" y="159.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="83.1362%" y="149" width="0.0263%" height="15" fill="rgb(228,109,6)" fg:x="41115" fg:w="13"/><text x="83.4292%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="83.1625%" y="117" width="0.1678%" height="15" fill="rgb(229,215,31)" fg:x="41128" fg:w="83"/><text x="83.4554%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="83.1625%" y="133" width="0.2548%" height="15" fill="rgb(221,52,54)" fg:x="41128" fg:w="126"/><text x="83.4554%" y="143.50"></text></g><g><title>__rust_realloc (110 instructions, 0.22%)</title><rect x="83.5770%" y="117" width="0.2224%" height="15" fill="rgb(252,129,43)" fg:x="41333" fg:w="110"/><text x="83.8700%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.31%)</title><rect x="83.5770%" y="133" width="0.3134%" height="15" fill="rgb(248,183,27)" fg:x="41333" fg:w="155"/><text x="83.8700%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (448 instructions, 0.91%)</title><rect x="83.1625%" y="149" width="0.9059%" height="15" fill="rgb(250,0,22)" fg:x="41128" fg:w="448"/><text x="83.4554%" y="159.50"></text></g><g><title>memcpy (289 instructions, 0.58%)</title><rect x="84.0683%" y="149" width="0.5844%" height="15" fill="rgb(213,166,10)" fg:x="41576" fg:w="289"/><text x="84.3613%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.26%)</title><rect x="84.6527%" y="149" width="0.2629%" height="15" fill="rgb(207,163,36)" fg:x="41865" fg:w="130"/><text x="84.9457%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="84.9156%" y="117" width="0.1678%" height="15" fill="rgb(208,122,22)" fg:x="41995" fg:w="83"/><text x="85.2085%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="84.9156%" y="133" width="0.2548%" height="15" fill="rgb(207,104,49)" fg:x="41995" fg:w="126"/><text x="85.2085%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.41%)</title><rect x="84.9156%" y="149" width="0.4145%" height="15" fill="rgb(248,211,50)" fg:x="41995" fg:w="205"/><text x="85.2085%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="85.3301%" y="149" width="0.1678%" height="15" fill="rgb(217,13,45)" fg:x="42200" fg:w="83"/><text x="85.6231%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="85.4979%" y="149" width="0.1031%" height="15" fill="rgb(211,216,49)" fg:x="42283" fg:w="51"/><text x="85.7909%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="85.6011%" y="149" width="0.1031%" height="15" fill="rgb(221,58,53)" fg:x="42334" fg:w="51"/><text x="85.8940%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="85.7042%" y="149" width="0.1213%" height="15" fill="rgb(220,112,41)" fg:x="42385" fg:w="60"/><text x="85.9971%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="85.8255%" y="101" width="0.1193%" height="15" fill="rgb(236,38,28)" fg:x="42445" fg:w="59"/><text x="86.1185%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.33%)</title><rect x="85.9448%" y="101" width="0.3316%" height="15" fill="rgb(227,195,22)" fg:x="42504" fg:w="164"/><text x="86.2378%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.58%)</title><rect x="85.8255%" y="117" width="0.5783%" height="15" fill="rgb(214,55,33)" fg:x="42445" fg:w="286"/><text x="86.1185%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 1.03%)</title><rect x="85.8255%" y="133" width="1.0252%" height="15" fill="rgb(248,80,13)" fg:x="42445" fg:w="507"/><text x="86.1185%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="86.8507%" y="85" width="0.1678%" height="15" fill="rgb(238,52,6)" fg:x="42952" fg:w="83"/><text x="87.1436%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="86.8507%" y="101" width="0.2548%" height="15" fill="rgb(224,198,47)" fg:x="42952" fg:w="126"/><text x="87.1436%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.41%)</title><rect x="86.8507%" y="117" width="0.4145%" height="15" fill="rgb(233,171,20)" fg:x="42952" fg:w="205"/><text x="87.1436%" y="127.50"></text></g><g><title>leb128::write::signed (264 instructions, 0.53%)</title><rect x="86.8507%" y="133" width="0.5338%" height="15" fill="rgb(241,30,25)" fg:x="42952" fg:w="264"/><text x="87.1436%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (929 instructions, 1.88%)</title><rect x="85.8255%" y="149" width="1.8785%" height="15" fill="rgb(207,171,38)" fg:x="42445" fg:w="929"/><text x="86.1185%" y="159.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="87.7040%" y="149" width="0.0708%" height="15" fill="rgb(234,70,1)" fg:x="43374" fg:w="35"/><text x="87.9969%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="87.7747%" y="149" width="0.1213%" height="15" fill="rgb(232,178,18)" fg:x="43409" fg:w="60"/><text x="88.0677%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (519 instructions, 1.05%)</title><rect x="87.8961%" y="149" width="1.0494%" height="15" fill="rgb(241,78,40)" fg:x="43469" fg:w="519"/><text x="88.1890%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (543 instructions, 1.10%)</title><rect x="88.9455%" y="149" width="1.0980%" height="15" fill="rgb(222,35,25)" fg:x="43988" fg:w="543"/><text x="89.2385%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="90.0435%" y="149" width="0.1739%" height="15" fill="rgb(207,92,16)" fg:x="44531" fg:w="86"/><text x="90.3364%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.27%)</title><rect x="90.2174%" y="149" width="0.2669%" height="15" fill="rgb(216,59,51)" fg:x="44617" fg:w="132"/><text x="90.5103%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="90.4843%" y="149" width="0.0263%" height="15" fill="rgb(213,80,28)" fg:x="44749" fg:w="13"/><text x="90.7772%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.37%)</title><rect x="90.5106%" y="149" width="0.3660%" height="15" fill="rgb(220,93,7)" fg:x="44762" fg:w="181"/><text x="90.8035%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="90.8766%" y="149" width="0.0142%" height="15" fill="rgb(225,24,44)" fg:x="44943" fg:w="7"/><text x="91.1695%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="90.8907%" y="149" width="0.0263%" height="15" fill="rgb(243,74,40)" fg:x="44950" fg:w="13"/><text x="91.1837%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.27%)</title><rect x="90.9170%" y="149" width="0.2669%" height="15" fill="rgb(228,39,7)" fg:x="44963" fg:w="132"/><text x="91.2100%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="91.1839%" y="149" width="0.1213%" height="15" fill="rgb(227,79,8)" fg:x="45095" fg:w="60"/><text x="91.4769%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (109 instructions, 0.22%)</title><rect x="91.3052%" y="149" width="0.2204%" height="15" fill="rgb(236,58,11)" fg:x="45155" fg:w="109"/><text x="91.5982%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (14,175 instructions, 28.66%)</title><rect x="66.9073%" y="165" width="28.6624%" height="15" fill="rgb(249,63,35)" fg:x="33089" fg:w="14175"/><text x="67.2003%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::principalToAccount_2_::{{closure}} (48,648 instructions, 98.37%)</title><rect x="0.3822%" y="181" width="98.3682%" height="15" fill="rgb(252,114,16)" fg:x="189" fg:w="48648"/><text x="0.6751%" y="191.50">sha::principalToAccount_2_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="98.7504%" y="181" width="0.0283%" height="15" fill="rgb(254,151,24)" fg:x="48837" fg:w="14"/><text x="99.0433%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.13%)</title><rect x="98.7807%" y="165" width="0.1254%" height="15" fill="rgb(253,54,39)" fg:x="48852" fg:w="62"/><text x="99.0737%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.14%)</title><rect x="98.9061%" y="165" width="0.1355%" height="15" fill="rgb(243,25,45)" fg:x="48914" fg:w="67"/><text x="99.1990%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.13%)</title><rect x="99.2478%" y="165" width="0.1254%" height="15" fill="rgb(234,134,9)" fg:x="49083" fg:w="62"/><text x="99.5408%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.14%)</title><rect x="99.3732%" y="165" width="0.1355%" height="15" fill="rgb(227,166,31)" fg:x="49145" fg:w="67"/><text x="99.6661%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (459 instructions, 0.93%)</title><rect x="98.7807%" y="181" width="0.9281%" height="15" fill="rgb(245,143,41)" fg:x="48852" fg:w="459"/><text x="99.0737%" y="191.50"></text></g><g><title>all (49,455 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(238,181,32)" fg:x="0" fg:w="49455"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToAccount (49,455 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(224,113,18)" fg:x="0" fg:w="49455"/><text x="0.2930%" y="207.50">canister_update principalToAccount</text></g></svg></svg>