<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToAccount</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="42551"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="181" width="0.0447%" height="15" fill="rgb(229,96,14)" fg:x="0" fg:w="19"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="0.0447%" y="181" width="0.1833%" height="15" fill="rgb(220,79,17)" fg:x="19" fg:w="78"/><text x="0.3376%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.2280%" y="181" width="0.1786%" height="15" fill="rgb(205,131,53)" fg:x="97" fg:w="76"/><text x="0.5209%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.4066%" y="165" width="0.1786%" height="15" fill="rgb(209,50,29)" fg:x="173" fg:w="76"/><text x="0.6995%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="0.5852%" y="149" width="0.1622%" height="15" fill="rgb(245,86,46)" fg:x="249" fg:w="69"/><text x="0.8781%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.95%)</title><rect x="0.7473%" y="149" width="0.9541%" height="15" fill="rgb(235,66,46)" fg:x="318" fg:w="406"/><text x="1.0403%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="1.7015%" y="149" width="0.1927%" height="15" fill="rgb(232,148,31)" fg:x="724" fg:w="82"/><text x="1.9945%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="1.8942%" y="149" width="0.1269%" height="15" fill="rgb(217,149,8)" fg:x="806" fg:w="54"/><text x="2.1872%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.0211%" y="149" width="0.1269%" height="15" fill="rgb(209,183,11)" fg:x="860" fg:w="54"/><text x="2.3141%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.1480%" y="149" width="0.1269%" height="15" fill="rgb(208,55,20)" fg:x="914" fg:w="54"/><text x="2.4410%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.2749%" y="149" width="0.1269%" height="15" fill="rgb(218,39,14)" fg:x="968" fg:w="54"/><text x="2.5679%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="2.4018%" y="149" width="0.1622%" height="15" fill="rgb(216,169,33)" fg:x="1022" fg:w="69"/><text x="2.6948%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.5640%" y="149" width="0.1528%" height="15" fill="rgb(233,80,24)" fg:x="1091" fg:w="65"/><text x="2.8570%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.95%)</title><rect x="2.7167%" y="149" width="0.9541%" height="15" fill="rgb(213,179,31)" fg:x="1156" fg:w="406"/><text x="3.0097%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.6709%" y="149" width="0.0376%" height="15" fill="rgb(209,19,5)" fg:x="1562" fg:w="16"/><text x="3.9639%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="3.7085%" y="133" width="0.1786%" height="15" fill="rgb(219,18,35)" fg:x="1578" fg:w="76"/><text x="4.0015%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.8871%" y="101" width="0.1410%" height="15" fill="rgb(209,169,16)" fg:x="1654" fg:w="60"/><text x="4.1801%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="3.8871%" y="117" width="0.1998%" height="15" fill="rgb(245,90,51)" fg:x="1654" fg:w="85"/><text x="4.1801%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.0869%" y="69" width="0.0212%" height="15" fill="rgb(220,99,45)" fg:x="1739" fg:w="9"/><text x="4.3798%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.1080%" y="53" width="0.0705%" height="15" fill="rgb(249,89,25)" fg:x="1748" fg:w="30"/><text x="4.4010%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.1080%" y="69" width="0.1293%" height="15" fill="rgb(239,193,0)" fg:x="1748" fg:w="55"/><text x="4.4010%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="4.0869%" y="85" width="0.2773%" height="15" fill="rgb(231,126,1)" fg:x="1739" fg:w="118"/><text x="4.3798%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="4.0869%" y="101" width="0.4019%" height="15" fill="rgb(243,166,3)" fg:x="1739" fg:w="171"/><text x="4.3798%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="4.0869%" y="117" width="0.4136%" height="15" fill="rgb(223,22,34)" fg:x="1739" fg:w="176"/><text x="4.3798%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.87%)</title><rect x="3.8871%" y="133" width="0.8742%" height="15" fill="rgb(251,52,51)" fg:x="1654" fg:w="372"/><text x="4.1801%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.38%)</title><rect x="3.7085%" y="149" width="1.3842%" height="15" fill="rgb(221,165,28)" fg:x="1578" fg:w="589"/><text x="4.0015%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="5.0927%" y="149" width="0.1927%" height="15" fill="rgb(218,121,47)" fg:x="2167" fg:w="82"/><text x="5.3857%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="5.2854%" y="149" width="0.1293%" height="15" fill="rgb(209,120,9)" fg:x="2249" fg:w="55"/><text x="5.5784%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="5.4147%" y="149" width="0.1481%" height="15" fill="rgb(236,68,12)" fg:x="2304" fg:w="63"/><text x="5.7076%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="5.5627%" y="149" width="0.1528%" height="15" fill="rgb(225,194,26)" fg:x="2367" fg:w="65"/><text x="5.8557%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.95%)</title><rect x="5.7155%" y="133" width="0.9541%" height="15" fill="rgb(231,84,39)" fg:x="2432" fg:w="406"/><text x="6.0085%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="6.6696%" y="133" width="0.0376%" height="15" fill="rgb(210,11,45)" fg:x="2838" fg:w="16"/><text x="6.9626%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="6.7072%" y="117" width="0.1786%" height="15" fill="rgb(224,54,52)" fg:x="2854" fg:w="76"/><text x="7.0002%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="6.8859%" y="85" width="0.1410%" height="15" fill="rgb(238,102,14)" fg:x="2930" fg:w="60"/><text x="7.1788%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="6.8859%" y="101" width="0.1998%" height="15" fill="rgb(243,160,52)" fg:x="2930" fg:w="85"/><text x="7.1788%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.0856%" y="53" width="0.0212%" height="15" fill="rgb(216,114,19)" fg:x="3015" fg:w="9"/><text x="7.3786%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.1068%" y="37" width="0.0705%" height="15" fill="rgb(244,166,37)" fg:x="3024" fg:w="30"/><text x="7.3997%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.1068%" y="53" width="0.1293%" height="15" fill="rgb(246,29,44)" fg:x="3024" fg:w="55"/><text x="7.3997%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="7.0856%" y="69" width="0.2773%" height="15" fill="rgb(215,56,53)" fg:x="3015" fg:w="118"/><text x="7.3786%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="7.0856%" y="85" width="0.4019%" height="15" fill="rgb(217,60,2)" fg:x="3015" fg:w="171"/><text x="7.3786%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="7.0856%" y="101" width="0.4136%" height="15" fill="rgb(207,26,24)" fg:x="3015" fg:w="176"/><text x="7.3786%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.87%)</title><rect x="6.8859%" y="117" width="0.8742%" height="15" fill="rgb(252,210,15)" fg:x="2930" fg:w="372"/><text x="7.1788%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.38%)</title><rect x="6.7072%" y="133" width="1.3842%" height="15" fill="rgb(253,209,26)" fg:x="2854" fg:w="589"/><text x="7.0002%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="8.0915%" y="133" width="0.1927%" height="15" fill="rgb(238,170,14)" fg:x="3443" fg:w="82"/><text x="8.3844%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="8.2842%" y="133" width="0.1293%" height="15" fill="rgb(216,178,15)" fg:x="3525" fg:w="55"/><text x="8.5771%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="8.4134%" y="117" width="0.1622%" height="15" fill="rgb(250,197,2)" fg:x="3580" fg:w="69"/><text x="8.7064%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="8.5756%" y="117" width="0.2139%" height="15" fill="rgb(212,70,42)" fg:x="3649" fg:w="91"/><text x="8.8686%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="8.7895%" y="117" width="0.1481%" height="15" fill="rgb(227,213,9)" fg:x="3740" fg:w="63"/><text x="9.0824%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (286 instructions, 0.67%)</title><rect x="8.4134%" y="133" width="0.6721%" height="15" fill="rgb(245,99,25)" fg:x="3580" fg:w="286"/><text x="8.7064%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="9.0856%" y="133" width="0.1786%" height="15" fill="rgb(250,82,29)" fg:x="3866" fg:w="76"/><text x="9.3785%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,713 instructions, 4.03%)</title><rect x="5.7155%" y="149" width="4.0258%" height="15" fill="rgb(241,226,54)" fg:x="2432" fg:w="1713"/><text x="6.0085%" y="159.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="9.7413%" y="149" width="0.1481%" height="15" fill="rgb(221,99,41)" fg:x="4145" fg:w="63"/><text x="10.0342%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.8893%" y="149" width="0.0306%" height="15" fill="rgb(213,90,21)" fg:x="4208" fg:w="13"/><text x="10.1823%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.9199%" y="149" width="0.0306%" height="15" fill="rgb(205,208,24)" fg:x="4221" fg:w="13"/><text x="10.2128%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="9.9504%" y="149" width="0.0165%" height="15" fill="rgb(246,31,12)" fg:x="4234" fg:w="7"/><text x="10.2434%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="9.9669%" y="149" width="0.0353%" height="15" fill="rgb(213,154,6)" fg:x="4241" fg:w="15"/><text x="10.2598%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.0021%" y="133" width="0.1786%" height="15" fill="rgb(222,163,29)" fg:x="4256" fg:w="76"/><text x="10.2951%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.37%)</title><rect x="10.0021%" y="149" width="0.3737%" height="15" fill="rgb(227,201,8)" fg:x="4256" fg:w="159"/><text x="10.2951%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.3758%" y="117" width="0.1786%" height="15" fill="rgb(233,9,32)" fg:x="4415" fg:w="76"/><text x="10.6688%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="10.3758%" y="133" width="0.2585%" height="15" fill="rgb(217,54,24)" fg:x="4415" fg:w="110"/><text x="10.6688%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.42%)</title><rect x="10.3758%" y="149" width="0.4183%" height="15" fill="rgb(235,192,0)" fg:x="4415" fg:w="178"/><text x="10.6688%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.7941%" y="149" width="0.1786%" height="15" fill="rgb(235,45,9)" fg:x="4593" fg:w="76"/><text x="11.0871%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="10.9727%" y="149" width="0.1904%" height="15" fill="rgb(246,42,40)" fg:x="4669" fg:w="81"/><text x="11.2657%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.1631%" y="149" width="0.1786%" height="15" fill="rgb(248,111,24)" fg:x="4750" fg:w="76"/><text x="11.4560%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.3417%" y="149" width="0.1786%" height="15" fill="rgb(249,65,22)" fg:x="4826" fg:w="76"/><text x="11.6347%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.5250%" y="149" width="0.1904%" height="15" fill="rgb(238,111,51)" fg:x="4904" fg:w="81"/><text x="11.8180%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.89%)</title><rect x="11.7154%" y="149" width="0.8930%" height="15" fill="rgb(250,118,22)" fg:x="4985" fg:w="380"/><text x="12.0083%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.89%)</title><rect x="12.6084%" y="149" width="0.8930%" height="15" fill="rgb(234,84,26)" fg:x="5365" fg:w="380"/><text x="12.9014%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,411 instructions, 15.07%)</title><rect x="0.5852%" y="165" width="15.0666%" height="15" fill="rgb(243,172,12)" fg:x="249" fg:w="6411"/><text x="0.8781%" y="175.50">candid::de::IDLDese..</text></g><g><title>memcpy (335 instructions, 0.79%)</title><rect x="15.6518%" y="165" width="0.7873%" height="15" fill="rgb(236,150,49)" fg:x="6660" fg:w="335"/><text x="15.9448%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="16.4391%" y="133" width="0.0282%" height="15" fill="rgb(225,197,26)" fg:x="6995" fg:w="12"/><text x="16.7321%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="16.4673%" y="117" width="0.1246%" height="15" fill="rgb(214,17,42)" fg:x="7007" fg:w="53"/><text x="16.7603%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.90%)</title><rect x="16.5919%" y="117" width="0.9024%" height="15" fill="rgb(224,165,40)" fg:x="7060" fg:w="384"/><text x="16.8848%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="17.4943%" y="117" width="0.3807%" height="15" fill="rgb(246,100,4)" fg:x="7444" fg:w="162"/><text x="17.7873%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.96%)</title><rect x="16.4673%" y="133" width="1.9647%" height="15" fill="rgb(222,103,0)" fg:x="7007" fg:w="836"/><text x="16.7603%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (963 instructions, 2.26%)</title><rect x="16.4391%" y="149" width="2.2632%" height="15" fill="rgb(227,189,26)" fg:x="6995" fg:w="963"/><text x="16.7321%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="18.7023%" y="149" width="0.1786%" height="15" fill="rgb(214,202,17)" fg:x="7958" fg:w="76"/><text x="18.9952%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="18.8809%" y="133" width="0.0282%" height="15" fill="rgb(229,111,3)" fg:x="8034" fg:w="12"/><text x="19.1738%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="18.9091%" y="117" width="0.1246%" height="15" fill="rgb(229,172,15)" fg:x="8046" fg:w="53"/><text x="19.2020%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.90%)</title><rect x="19.0336%" y="117" width="0.9024%" height="15" fill="rgb(230,224,35)" fg:x="8099" fg:w="384"/><text x="19.3266%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="19.9361%" y="117" width="0.3807%" height="15" fill="rgb(251,141,6)" fg:x="8483" fg:w="162"/><text x="20.2290%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.96%)</title><rect x="18.9091%" y="133" width="1.9647%" height="15" fill="rgb(225,208,6)" fg:x="8046" fg:w="836"/><text x="19.2020%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,068 instructions, 2.51%)</title><rect x="18.8809%" y="149" width="2.5099%" height="15" fill="rgb(246,181,16)" fg:x="8034" fg:w="1068"/><text x="19.1738%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="21.3908%" y="149" width="0.1786%" height="15" fill="rgb(227,129,36)" fg:x="9102" fg:w="76"/><text x="21.6838%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="21.5694%" y="133" width="0.0282%" height="15" fill="rgb(248,117,24)" fg:x="9178" fg:w="12"/><text x="21.8624%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="21.5976%" y="117" width="0.1246%" height="15" fill="rgb(214,185,35)" fg:x="9190" fg:w="53"/><text x="21.8906%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.90%)</title><rect x="21.7222%" y="117" width="0.9024%" height="15" fill="rgb(236,150,34)" fg:x="9243" fg:w="384"/><text x="22.0151%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="22.6246%" y="117" width="0.3807%" height="15" fill="rgb(243,228,27)" fg:x="9627" fg:w="162"/><text x="22.9176%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.96%)</title><rect x="21.5976%" y="133" width="1.9647%" height="15" fill="rgb(245,77,44)" fg:x="9190" fg:w="836"/><text x="21.8906%" y="143.50"></text></g><g><title>memcmp (740 instructions, 1.74%)</title><rect x="23.5623%" y="133" width="1.7391%" height="15" fill="rgb(235,214,42)" fg:x="10026" fg:w="740"/><text x="23.8553%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="25.3014%" y="117" width="0.1904%" height="15" fill="rgb(221,74,3)" fg:x="10766" fg:w="81"/><text x="25.5944%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="25.3014%" y="133" width="0.2538%" height="15" fill="rgb(206,121,29)" fg:x="10766" fg:w="108"/><text x="25.5944%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,880 instructions, 4.42%)</title><rect x="21.5694%" y="149" width="4.4182%" height="15" fill="rgb(249,131,53)" fg:x="9178" fg:w="1880"/><text x="21.8624%" y="159.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="25.9876%" y="101" width="0.1246%" height="15" fill="rgb(236,170,29)" fg:x="11058" fg:w="53"/><text x="26.2806%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="25.9876%" y="117" width="0.1857%" height="15" fill="rgb(247,96,15)" fg:x="11058" fg:w="79"/><text x="26.2806%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.6739%" y="101" width="0.1246%" height="15" fill="rgb(211,210,7)" fg:x="11350" fg:w="53"/><text x="26.9668%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="26.6739%" y="117" width="0.1857%" height="15" fill="rgb(240,88,50)" fg:x="11350" fg:w="79"/><text x="26.9668%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (584 instructions, 1.37%)</title><rect x="25.9876%" y="133" width="1.3725%" height="15" fill="rgb(209,229,26)" fg:x="11058" fg:w="584"/><text x="26.2806%" y="143.50"></text></g><g><title>candid::types::internal::env_id (918 instructions, 2.16%)</title><rect x="25.9876%" y="149" width="2.1574%" height="15" fill="rgb(210,68,23)" fg:x="11058" fg:w="918"/><text x="26.2806%" y="159.50">c..</text></g><g><title>candid::types::CandidType::ty (5,088 instructions, 11.96%)</title><rect x="16.4391%" y="165" width="11.9574%" height="15" fill="rgb(229,180,13)" fg:x="6995" fg:w="5088"/><text x="16.7321%" y="175.50">candid::types::..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (34 instructions, 0.08%)</title><rect x="28.3965%" y="149" width="0.0799%" height="15" fill="rgb(236,53,44)" fg:x="12083" fg:w="34"/><text x="28.6895%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="28.4764%" y="133" width="0.2891%" height="15" fill="rgb(244,214,29)" fg:x="12117" fg:w="123"/><text x="28.7694%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="28.8289%" y="133" width="0.2891%" height="15" fill="rgb(220,75,29)" fg:x="12267" fg:w="123"/><text x="29.1219%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.71%)</title><rect x="28.4764%" y="149" width="0.7050%" height="15" fill="rgb(214,183,37)" fg:x="12117" fg:w="300"/><text x="28.7694%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="29.1815%" y="133" width="0.0658%" height="15" fill="rgb(239,117,29)" fg:x="12417" fg:w="28"/><text x="29.4744%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="29.2473%" y="133" width="0.0658%" height="15" fill="rgb(237,171,35)" fg:x="12445" fg:w="28"/><text x="29.5402%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2296 (15 instructions, 0.04%)</title><rect x="29.3131%" y="133" width="0.0353%" height="15" fill="rgb(229,178,53)" fg:x="12473" fg:w="15"/><text x="29.6060%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2296 (15 instructions, 0.04%)</title><rect x="29.3483%" y="133" width="0.0353%" height="15" fill="rgb(210,102,19)" fg:x="12488" fg:w="15"/><text x="29.6413%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="29.3836%" y="133" width="0.1833%" height="15" fill="rgb(235,127,22)" fg:x="12503" fg:w="78"/><text x="29.6765%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="29.5669%" y="133" width="0.1622%" height="15" fill="rgb(244,31,31)" fg:x="12581" fg:w="69"/><text x="29.8598%" y="143.50"></text></g><g><title>binread::binary_template::write_named (79 instructions, 0.19%)</title><rect x="29.7290%" y="117" width="0.1857%" height="15" fill="rgb(231,43,21)" fg:x="12650" fg:w="79"/><text x="30.0220%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (149 instructions, 0.35%)</title><rect x="29.7290%" y="133" width="0.3502%" height="15" fill="rgb(217,131,35)" fg:x="12650" fg:w="149"/><text x="30.0220%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="30.0792%" y="133" width="0.1528%" height="15" fill="rgb(221,149,4)" fg:x="12799" fg:w="65"/><text x="30.3722%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.95%)</title><rect x="30.2320%" y="133" width="0.9541%" height="15" fill="rgb(232,170,28)" fg:x="12864" fg:w="406"/><text x="30.5249%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="31.1861%" y="117" width="0.1786%" height="15" fill="rgb(238,56,10)" fg:x="13270" fg:w="76"/><text x="31.4791%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="31.3647%" y="85" width="0.1410%" height="15" fill="rgb(235,196,14)" fg:x="13346" fg:w="60"/><text x="31.6577%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="31.3647%" y="101" width="0.1998%" height="15" fill="rgb(216,45,48)" fg:x="13346" fg:w="85"/><text x="31.6577%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="31.5645%" y="53" width="0.0212%" height="15" fill="rgb(238,213,17)" fg:x="13431" fg:w="9"/><text x="31.8574%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="31.5856%" y="37" width="0.0705%" height="15" fill="rgb(212,13,2)" fg:x="13440" fg:w="30"/><text x="31.8786%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="31.5856%" y="53" width="0.1293%" height="15" fill="rgb(240,114,20)" fg:x="13440" fg:w="55"/><text x="31.8786%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="31.5645%" y="69" width="0.2773%" height="15" fill="rgb(228,41,40)" fg:x="13431" fg:w="118"/><text x="31.8574%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="31.5645%" y="85" width="0.4019%" height="15" fill="rgb(244,132,35)" fg:x="13431" fg:w="171"/><text x="31.8574%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="31.5645%" y="101" width="0.4136%" height="15" fill="rgb(253,189,4)" fg:x="13431" fg:w="176"/><text x="31.8574%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.87%)</title><rect x="31.3647%" y="117" width="0.8742%" height="15" fill="rgb(224,37,19)" fg:x="13346" fg:w="372"/><text x="31.6577%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.38%)</title><rect x="31.1861%" y="133" width="1.3842%" height="15" fill="rgb(235,223,18)" fg:x="13270" fg:w="589"/><text x="31.4791%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="32.5703%" y="133" width="0.1927%" height="15" fill="rgb(235,163,25)" fg:x="13859" fg:w="82"/><text x="32.8633%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="32.7630%" y="133" width="0.1293%" height="15" fill="rgb(217,145,28)" fg:x="13941" fg:w="55"/><text x="33.0560%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.8923%" y="117" width="0.1316%" height="15" fill="rgb(223,223,32)" fg:x="13996" fg:w="56"/><text x="33.1853%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 instructions, 0.27%)</title><rect x="32.8923%" y="133" width="0.2656%" height="15" fill="rgb(227,189,39)" fg:x="13996" fg:w="113"/><text x="33.1853%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="33.1579%" y="133" width="0.1786%" height="15" fill="rgb(248,10,22)" fg:x="14109" fg:w="76"/><text x="33.4508%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.3365%" y="117" width="0.1316%" height="15" fill="rgb(248,46,39)" fg:x="14185" fg:w="56"/><text x="33.6294%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.6020%" y="117" width="0.1316%" height="15" fill="rgb(248,113,48)" fg:x="14298" fg:w="56"/><text x="33.8950%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.8676%" y="117" width="0.1316%" height="15" fill="rgb(245,16,25)" fg:x="14411" fg:w="56"/><text x="34.1606%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.1332%" y="117" width="0.1316%" height="15" fill="rgb(249,152,16)" fg:x="14524" fg:w="56"/><text x="34.4261%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.3987%" y="117" width="0.1316%" height="15" fill="rgb(250,16,1)" fg:x="14637" fg:w="56"/><text x="34.6917%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.6643%" y="117" width="0.1316%" height="15" fill="rgb(249,138,3)" fg:x="14750" fg:w="56"/><text x="34.9573%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.9298%" y="117" width="0.1316%" height="15" fill="rgb(227,71,41)" fg:x="14863" fg:w="56"/><text x="35.2228%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.1954%" y="117" width="0.1316%" height="15" fill="rgb(209,184,23)" fg:x="14976" fg:w="56"/><text x="35.4884%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (904 instructions, 2.12%)</title><rect x="33.3365%" y="133" width="2.1245%" height="15" fill="rgb(223,215,31)" fg:x="14185" fg:w="904"/><text x="33.6294%" y="143.50">&lt;..</text></g><g><title>__rust_realloc (101 instructions, 0.24%)</title><rect x="35.4610%" y="101" width="0.2374%" height="15" fill="rgb(210,146,28)" fg:x="15089" fg:w="101"/><text x="35.7539%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.32%)</title><rect x="35.4610%" y="117" width="0.3196%" height="15" fill="rgb(209,183,41)" fg:x="15089" fg:w="136"/><text x="35.7539%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.49%)</title><rect x="35.4610%" y="133" width="0.4912%" height="15" fill="rgb(209,224,45)" fg:x="15089" fg:w="209"/><text x="35.7539%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.9522%" y="117" width="0.1316%" height="15" fill="rgb(224,209,51)" fg:x="15298" fg:w="56"/><text x="36.2451%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.2177%" y="117" width="0.1316%" height="15" fill="rgb(223,17,39)" fg:x="15411" fg:w="56"/><text x="36.5107%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.4833%" y="117" width="0.1316%" height="15" fill="rgb(234,204,37)" fg:x="15524" fg:w="56"/><text x="36.7762%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.7488%" y="117" width="0.1316%" height="15" fill="rgb(236,120,5)" fg:x="15637" fg:w="56"/><text x="37.0418%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="37.0144%" y="117" width="0.1316%" height="15" fill="rgb(248,97,27)" fg:x="15750" fg:w="56"/><text x="37.3074%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="37.2800%" y="117" width="0.1316%" height="15" fill="rgb(240,66,17)" fg:x="15863" fg:w="56"/><text x="37.5729%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="37.5455%" y="117" width="0.1316%" height="15" fill="rgb(210,79,3)" fg:x="15976" fg:w="56"/><text x="37.8385%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (791 instructions, 1.86%)</title><rect x="35.9522%" y="133" width="1.8589%" height="15" fill="rgb(214,176,27)" fg:x="15298" fg:w="791"/><text x="36.2451%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 instructions, 0.07%)</title><rect x="37.8111%" y="133" width="0.0705%" height="15" fill="rgb(235,185,3)" fg:x="16089" fg:w="30"/><text x="38.1041%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="37.8816%" y="133" width="0.1481%" height="15" fill="rgb(227,24,12)" fg:x="16119" fg:w="63"/><text x="38.1746%" y="143.50"></text></g><g><title>__rust_realloc (45 instructions, 0.11%)</title><rect x="38.0297%" y="101" width="0.1058%" height="15" fill="rgb(252,169,48)" fg:x="16182" fg:w="45"/><text x="38.3226%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 instructions, 0.19%)</title><rect x="38.0297%" y="117" width="0.1880%" height="15" fill="rgb(212,65,1)" fg:x="16182" fg:w="80"/><text x="38.3226%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (153 instructions, 0.36%)</title><rect x="38.0297%" y="133" width="0.3596%" height="15" fill="rgb(242,39,24)" fg:x="16182" fg:w="153"/><text x="38.3226%" y="143.50"></text></g><g><title>memcpy (206 instructions, 0.48%)</title><rect x="38.3892%" y="133" width="0.4841%" height="15" fill="rgb(249,32,23)" fg:x="16335" fg:w="206"/><text x="38.6822%" y="143.50"></text></g><g><title>memcpy (160 instructions, 0.38%)</title><rect x="38.8734%" y="133" width="0.3760%" height="15" fill="rgb(251,195,23)" fg:x="16541" fg:w="160"/><text x="39.1663%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="39.2494%" y="133" width="0.1904%" height="15" fill="rgb(236,174,8)" fg:x="16701" fg:w="81"/><text x="39.5423%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="39.4397%" y="133" width="0.1293%" height="15" fill="rgb(220,197,8)" fg:x="16782" fg:w="55"/><text x="39.7327%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (5,435 instructions, 12.77%)</title><rect x="29.1815%" y="149" width="12.7729%" height="15" fill="rgb(240,108,37)" fg:x="12417" fg:w="5435"/><text x="29.4744%" y="159.50">&lt;candid::types::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.9544%" y="149" width="0.0259%" height="15" fill="rgb(232,176,24)" fg:x="17852" fg:w="11"/><text x="42.2473%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.9802%" y="149" width="0.0259%" height="15" fill="rgb(243,35,29)" fg:x="17863" fg:w="11"/><text x="42.2732%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="42.0061%" y="149" width="0.0259%" height="15" fill="rgb(210,37,18)" fg:x="17874" fg:w="11"/><text x="42.2990%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,051 instructions, 14.22%)</title><rect x="28.3965%" y="165" width="14.2206%" height="15" fill="rgb(224,184,40)" fg:x="12083" fg:w="6051"/><text x="28.6895%" y="175.50">candid::de::IDLDes..</text></g><g><title>memcpy (410 instructions, 0.96%)</title><rect x="42.6171%" y="165" width="0.9635%" height="15" fill="rgb(236,39,29)" fg:x="18134" fg:w="410"/><text x="42.9101%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="43.5806%" y="133" width="0.0282%" height="15" fill="rgb(232,48,39)" fg:x="18544" fg:w="12"/><text x="43.8736%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="43.6088%" y="133" width="0.3948%" height="15" fill="rgb(236,34,42)" fg:x="18556" fg:w="168"/><text x="43.9018%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.22%)</title><rect x="44.0037%" y="101" width="0.2233%" height="15" fill="rgb(243,106,37)" fg:x="18724" fg:w="95"/><text x="44.2966%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (240 instructions, 0.56%)</title><rect x="44.0037%" y="117" width="0.5640%" height="15" fill="rgb(218,96,6)" fg:x="18724" fg:w="240"/><text x="44.2966%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (267 instructions, 0.63%)</title><rect x="44.0037%" y="133" width="0.6275%" height="15" fill="rgb(235,130,12)" fg:x="18724" fg:w="267"/><text x="44.2966%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="44.6311%" y="133" width="0.0259%" height="15" fill="rgb(231,95,0)" fg:x="18991" fg:w="11"/><text x="44.9241%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (500 instructions, 1.18%)</title><rect x="43.5806%" y="149" width="1.1751%" height="15" fill="rgb(228,12,23)" fg:x="18544" fg:w="500"/><text x="43.8736%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (534 instructions, 1.25%)</title><rect x="43.5806%" y="165" width="1.2550%" height="15" fill="rgb(216,12,1)" fg:x="18544" fg:w="534"/><text x="43.8736%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.13%)</title><rect x="44.8356%" y="149" width="0.1269%" height="15" fill="rgb(219,59,3)" fg:x="19078" fg:w="54"/><text x="45.1286%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.22%)</title><rect x="44.9625%" y="149" width="0.2233%" height="15" fill="rgb(215,208,46)" fg:x="19132" fg:w="95"/><text x="45.2555%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (230 instructions, 0.54%)</title><rect x="44.8356%" y="165" width="0.5405%" height="15" fill="rgb(254,224,29)" fg:x="19078" fg:w="230"/><text x="45.1286%" y="175.50"></text></g><g><title>memset (218 instructions, 0.51%)</title><rect x="45.3761%" y="165" width="0.5123%" height="15" fill="rgb(232,14,29)" fg:x="19308" fg:w="218"/><text x="45.6691%" y="175.50"></text></g><g><title>memcpy (206 instructions, 0.48%)</title><rect x="45.8885%" y="165" width="0.4841%" height="15" fill="rgb(208,45,52)" fg:x="19526" fg:w="206"/><text x="46.1814%" y="175.50"></text></g><g><title>memcpy (470 instructions, 1.10%)</title><rect x="46.3726%" y="165" width="1.1046%" height="15" fill="rgb(234,191,28)" fg:x="19732" fg:w="470"/><text x="46.6656%" y="175.50"></text></g><g><title>memset (56 instructions, 0.13%)</title><rect x="47.4771%" y="149" width="0.1316%" height="15" fill="rgb(244,67,43)" fg:x="20202" fg:w="56"/><text x="47.7701%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.72%)</title><rect x="47.6088%" y="149" width="11.7201%" height="15" fill="rgb(236,189,24)" fg:x="20258" fg:w="4987"/><text x="47.9017%" y="159.50">sha2::sha256::..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.72%)</title><rect x="59.3288%" y="149" width="11.7201%" height="15" fill="rgb(239,214,33)" fg:x="25245" fg:w="4987"/><text x="59.6218%" y="159.50">sha2::sha256::..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (10,354 instructions, 24.33%)</title><rect x="47.4771%" y="165" width="24.3332%" height="15" fill="rgb(226,176,41)" fg:x="20202" fg:w="10354"/><text x="47.7701%" y="175.50">&lt;sha2::core_api::Sha256VarCore as..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="71.8103%" y="165" width="0.1786%" height="15" fill="rgb(248,47,8)" fg:x="30556" fg:w="76"/><text x="72.1033%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="71.9889%" y="149" width="0.0282%" height="15" fill="rgb(218,81,44)" fg:x="30632" fg:w="12"/><text x="72.2819%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (90 instructions, 0.21%)</title><rect x="72.0171%" y="101" width="0.2115%" height="15" fill="rgb(213,98,6)" fg:x="30644" fg:w="90"/><text x="72.3101%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="72.2286%" y="101" width="0.1481%" height="15" fill="rgb(222,85,22)" fg:x="30734" fg:w="63"/><text x="72.5216%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (237 instructions, 0.56%)</title><rect x="72.0171%" y="117" width="0.5570%" height="15" fill="rgb(239,46,39)" fg:x="30644" fg:w="237"/><text x="72.3101%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (264 instructions, 0.62%)</title><rect x="72.0171%" y="133" width="0.6204%" height="15" fill="rgb(237,12,29)" fg:x="30644" fg:w="264"/><text x="72.3101%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="72.6375%" y="117" width="0.1293%" height="15" fill="rgb(214,77,8)" fg:x="30908" fg:w="55"/><text x="72.9305%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="72.7668%" y="117" width="0.1481%" height="15" fill="rgb(217,168,37)" fg:x="30963" fg:w="63"/><text x="73.0598%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (199 instructions, 0.47%)</title><rect x="72.6375%" y="133" width="0.4677%" height="15" fill="rgb(221,217,23)" fg:x="30908" fg:w="199"/><text x="72.9305%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (495 instructions, 1.16%)</title><rect x="72.0171%" y="149" width="1.1633%" height="15" fill="rgb(243,229,36)" fg:x="30644" fg:w="495"/><text x="72.3101%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="73.1804%" y="149" width="0.0259%" height="15" fill="rgb(251,163,40)" fg:x="31139" fg:w="11"/><text x="73.4734%" y="159.50"></text></g><g><title>memset (136 instructions, 0.32%)</title><rect x="73.2063%" y="149" width="0.3196%" height="15" fill="rgb(237,222,12)" fg:x="31150" fg:w="136"/><text x="73.4992%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="73.5259%" y="117" width="0.0282%" height="15" fill="rgb(248,132,6)" fg:x="31286" fg:w="12"/><text x="73.8189%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.12%)</title><rect x="73.5259%" y="133" width="0.1175%" height="15" fill="rgb(227,167,50)" fg:x="31286" fg:w="50"/><text x="73.8189%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="73.6434%" y="133" width="0.1786%" height="15" fill="rgb(242,84,37)" fg:x="31336" fg:w="76"/><text x="73.9364%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="73.8220%" y="117" width="0.0282%" height="15" fill="rgb(212,4,50)" fg:x="31412" fg:w="12"/><text x="74.1150%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="73.8502%" y="101" width="0.1246%" height="15" fill="rgb(230,228,32)" fg:x="31424" fg:w="53"/><text x="74.1432%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.86%)</title><rect x="73.9748%" y="101" width="0.8554%" height="15" fill="rgb(248,217,23)" fg:x="31477" fg:w="364"/><text x="74.2677%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.17%)</title><rect x="74.8302%" y="101" width="0.1692%" height="15" fill="rgb(238,197,32)" fg:x="31841" fg:w="72"/><text x="75.1232%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.71%)</title><rect x="73.8502%" y="117" width="1.7062%" height="15" fill="rgb(236,106,1)" fg:x="31424" fg:w="726"/><text x="74.1432%" y="127.50"></text></g><g><title>candid::types::internal::env_add (958 instructions, 2.25%)</title><rect x="73.8220%" y="133" width="2.2514%" height="15" fill="rgb(219,228,13)" fg:x="31412" fg:w="958"/><text x="74.1150%" y="143.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="76.0734%" y="133" width="0.1786%" height="15" fill="rgb(238,30,35)" fg:x="32370" fg:w="76"/><text x="76.3664%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="76.2520%" y="133" width="0.1786%" height="15" fill="rgb(236,70,23)" fg:x="32446" fg:w="76"/><text x="76.5450%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="76.4306%" y="117" width="0.0282%" height="15" fill="rgb(249,104,48)" fg:x="32522" fg:w="12"/><text x="76.7236%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.4588%" y="101" width="0.1246%" height="15" fill="rgb(254,117,50)" fg:x="32534" fg:w="53"/><text x="76.7518%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.86%)</title><rect x="76.5834%" y="101" width="0.8554%" height="15" fill="rgb(223,152,4)" fg:x="32587" fg:w="364"/><text x="76.8764%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.17%)</title><rect x="77.4388%" y="101" width="0.1692%" height="15" fill="rgb(245,6,2)" fg:x="32951" fg:w="72"/><text x="77.7318%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.71%)</title><rect x="76.4588%" y="117" width="1.7062%" height="15" fill="rgb(249,150,24)" fg:x="32534" fg:w="726"/><text x="76.7518%" y="127.50"></text></g><g><title>memcmp (614 instructions, 1.44%)</title><rect x="78.1650%" y="117" width="1.4430%" height="15" fill="rgb(228,185,42)" fg:x="33260" fg:w="614"/><text x="78.4580%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="79.6080%" y="101" width="0.1904%" height="15" fill="rgb(226,39,33)" fg:x="33874" fg:w="81"/><text x="79.9010%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="79.6080%" y="117" width="0.2538%" height="15" fill="rgb(221,166,19)" fg:x="33874" fg:w="108"/><text x="79.9010%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,644 instructions, 3.86%)</title><rect x="76.4306%" y="133" width="3.8636%" height="15" fill="rgb(209,109,2)" fg:x="32522" fg:w="1644"/><text x="76.7236%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="80.2942%" y="85" width="0.1246%" height="15" fill="rgb(252,216,26)" fg:x="34166" fg:w="53"/><text x="80.5872%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="80.4188%" y="85" width="0.3619%" height="15" fill="rgb(227,173,36)" fg:x="34219" fg:w="154"/><text x="80.7118%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.60%)</title><rect x="80.2942%" y="101" width="0.5993%" height="15" fill="rgb(209,90,7)" fg:x="34166" fg:w="255"/><text x="80.5872%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 1.10%)</title><rect x="80.2942%" y="117" width="1.0999%" height="15" fill="rgb(250,194,11)" fg:x="34166" fg:w="468"/><text x="80.5872%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1078 (42 instructions, 0.10%)</title><rect x="81.3941%" y="117" width="0.0987%" height="15" fill="rgb(220,72,50)" fg:x="34634" fg:w="42"/><text x="81.6871%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.4928%" y="117" width="0.0259%" height="15" fill="rgb(222,106,48)" fg:x="34676" fg:w="11"/><text x="81.7858%" y="127.50"></text></g><g><title>candid::types::internal::env_id (725 instructions, 1.70%)</title><rect x="80.2942%" y="133" width="1.7038%" height="15" fill="rgb(216,220,45)" fg:x="34166" fg:w="725"/><text x="80.5872%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,729 instructions, 8.76%)</title><rect x="73.5259%" y="149" width="8.7636%" height="15" fill="rgb(234,112,18)" fg:x="31286" fg:w="3729"/><text x="73.8189%" y="159.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="82.2895%" y="117" width="0.1786%" height="15" fill="rgb(206,179,9)" fg:x="35015" fg:w="76"/><text x="82.5825%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="82.2895%" y="133" width="0.2585%" height="15" fill="rgb(215,115,40)" fg:x="35015" fg:w="110"/><text x="82.5825%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.42%)</title><rect x="82.2895%" y="149" width="0.4183%" height="15" fill="rgb(222,69,34)" fg:x="35015" fg:w="178"/><text x="82.5825%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.06%)</title><rect x="82.7078%" y="133" width="0.0564%" height="15" fill="rgb(209,161,10)" fg:x="35193" fg:w="24"/><text x="83.0008%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="82.7642%" y="101" width="0.1833%" height="15" fill="rgb(217,6,38)" fg:x="35217" fg:w="78"/><text x="83.0572%" y="111.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.36%)</title><rect x="82.7642%" y="117" width="0.3596%" height="15" fill="rgb(229,229,48)" fg:x="35217" fg:w="153"/><text x="83.0572%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="83.1238%" y="117" width="0.1786%" height="15" fill="rgb(225,21,28)" fg:x="35370" fg:w="76"/><text x="83.4167%" y="127.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.72%)</title><rect x="82.7642%" y="133" width="0.7238%" height="15" fill="rgb(206,33,13)" fg:x="35217" fg:w="308"/><text x="83.0572%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="83.4880%" y="85" width="0.1246%" height="15" fill="rgb(242,178,17)" fg:x="35525" fg:w="53"/><text x="83.7810%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="83.6126%" y="85" width="0.3619%" height="15" fill="rgb(220,162,5)" fg:x="35578" fg:w="154"/><text x="83.9056%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.60%)</title><rect x="83.4880%" y="101" width="0.5993%" height="15" fill="rgb(210,33,43)" fg:x="35525" fg:w="255"/><text x="83.7810%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 1.10%)</title><rect x="83.4880%" y="117" width="1.0999%" height="15" fill="rgb(216,116,54)" fg:x="35525" fg:w="468"/><text x="83.7810%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="84.5879%" y="117" width="0.1786%" height="15" fill="rgb(249,92,24)" fg:x="35993" fg:w="76"/><text x="84.8809%" y="127.50"></text></g><g><title>memset (136 instructions, 0.32%)</title><rect x="84.7665%" y="117" width="0.3196%" height="15" fill="rgb(231,189,14)" fg:x="36069" fg:w="136"/><text x="85.0595%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (986 instructions, 2.32%)</title><rect x="83.4880%" y="133" width="2.3172%" height="15" fill="rgb(230,8,41)" fg:x="35525" fg:w="986"/><text x="83.7810%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="85.8053%" y="101" width="0.1786%" height="15" fill="rgb(249,7,27)" fg:x="36511" fg:w="76"/><text x="86.0982%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="85.8053%" y="117" width="0.2585%" height="15" fill="rgb(232,86,5)" fg:x="36511" fg:w="110"/><text x="86.0982%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.42%)</title><rect x="85.8053%" y="133" width="0.4183%" height="15" fill="rgb(224,175,18)" fg:x="36511" fg:w="178"/><text x="86.0982%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="86.2236%" y="85" width="0.1246%" height="15" fill="rgb(220,129,12)" fg:x="36689" fg:w="53"/><text x="86.5166%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="86.2236%" y="101" width="0.1857%" height="15" fill="rgb(210,19,36)" fg:x="36689" fg:w="79"/><text x="86.5166%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.69%)</title><rect x="86.2236%" y="117" width="0.6862%" height="15" fill="rgb(219,96,14)" fg:x="36689" fg:w="292"/><text x="86.5166%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="86.9098%" y="117" width="0.0423%" height="15" fill="rgb(249,106,1)" fg:x="36981" fg:w="18"/><text x="87.2028%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="86.9521%" y="117" width="0.0259%" height="15" fill="rgb(249,155,20)" fg:x="36999" fg:w="11"/><text x="87.2451%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (437 instructions, 1.03%)</title><rect x="86.2236%" y="133" width="1.0270%" height="15" fill="rgb(244,168,9)" fg:x="36689" fg:w="437"/><text x="86.5166%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="87.2506%" y="85" width="0.1786%" height="15" fill="rgb(216,23,50)" fg:x="37126" fg:w="76"/><text x="87.5436%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="87.2506%" y="101" width="0.2585%" height="15" fill="rgb(224,219,20)" fg:x="37126" fg:w="110"/><text x="87.5436%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.41%)</title><rect x="87.2506%" y="117" width="0.4113%" height="15" fill="rgb(222,156,15)" fg:x="37126" fg:w="175"/><text x="87.5436%" y="127.50"></text></g><g><title>leb128::write::signed (227 instructions, 0.53%)</title><rect x="87.2506%" y="133" width="0.5335%" height="15" fill="rgb(231,97,17)" fg:x="37126" fg:w="227"/><text x="87.5436%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (50 instructions, 0.12%)</title><rect x="87.7841%" y="133" width="0.1175%" height="15" fill="rgb(218,70,48)" fg:x="37353" fg:w="50"/><text x="88.0770%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="87.9016%" y="101" width="0.1904%" height="15" fill="rgb(212,196,52)" fg:x="37403" fg:w="81"/><text x="88.1945%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="87.9016%" y="117" width="0.2538%" height="15" fill="rgb(243,203,18)" fg:x="37403" fg:w="108"/><text x="88.1945%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="88.1554%" y="117" width="0.1833%" height="15" fill="rgb(252,125,41)" fg:x="37511" fg:w="78"/><text x="88.4484%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.51%)</title><rect x="87.9016%" y="133" width="0.5123%" height="15" fill="rgb(223,180,33)" fg:x="37403" fg:w="218"/><text x="88.1945%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="88.4139%" y="133" width="0.0259%" height="15" fill="rgb(254,159,46)" fg:x="37621" fg:w="11"/><text x="88.7069%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,642 instructions, 6.21%)</title><rect x="82.7078%" y="149" width="6.2090%" height="15" fill="rgb(254,38,10)" fg:x="35193" fg:w="2642"/><text x="83.0008%" y="159.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="88.9168%" y="149" width="0.0259%" height="15" fill="rgb(208,217,32)" fg:x="37835" fg:w="11"/><text x="89.2098%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="88.9427%" y="117" width="0.1786%" height="15" fill="rgb(221,120,13)" fg:x="37846" fg:w="76"/><text x="89.2356%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="88.9427%" y="133" width="0.2585%" height="15" fill="rgb(246,54,52)" fg:x="37846" fg:w="110"/><text x="89.2356%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.24%)</title><rect x="89.3540%" y="117" width="0.2374%" height="15" fill="rgb(242,34,25)" fg:x="38021" fg:w="101"/><text x="89.6469%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.32%)</title><rect x="89.3540%" y="133" width="0.3196%" height="15" fill="rgb(247,209,9)" fg:x="38021" fg:w="136"/><text x="89.6469%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (384 instructions, 0.90%)</title><rect x="88.9427%" y="149" width="0.9024%" height="15" fill="rgb(228,71,26)" fg:x="37846" fg:w="384"/><text x="89.2356%" y="159.50"></text></g><g><title>memcpy (272 instructions, 0.64%)</title><rect x="89.8451%" y="149" width="0.6392%" height="15" fill="rgb(222,145,49)" fg:x="38230" fg:w="272"/><text x="90.1381%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.28%)</title><rect x="90.4844%" y="149" width="0.2820%" height="15" fill="rgb(218,121,17)" fg:x="38502" fg:w="120"/><text x="90.7773%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.08%)</title><rect x="90.7664%" y="149" width="0.0752%" height="15" fill="rgb(244,50,7)" fg:x="38622" fg:w="32"/><text x="91.0593%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="90.8416%" y="117" width="0.1786%" height="15" fill="rgb(246,229,37)" fg:x="38654" fg:w="76"/><text x="91.1345%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="90.8416%" y="133" width="0.2585%" height="15" fill="rgb(225,18,5)" fg:x="38654" fg:w="110"/><text x="91.1345%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.41%)</title><rect x="90.8416%" y="149" width="0.4113%" height="15" fill="rgb(213,204,8)" fg:x="38654" fg:w="175"/><text x="91.1345%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="91.2528%" y="149" width="0.1786%" height="15" fill="rgb(238,103,6)" fg:x="38829" fg:w="76"/><text x="91.5458%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="91.4315%" y="149" width="0.1058%" height="15" fill="rgb(222,25,35)" fg:x="38905" fg:w="45"/><text x="91.7244%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="91.5372%" y="149" width="0.1058%" height="15" fill="rgb(213,203,35)" fg:x="38950" fg:w="45"/><text x="91.8302%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="91.6430%" y="149" width="0.1293%" height="15" fill="rgb(221,79,53)" fg:x="38995" fg:w="55"/><text x="91.9359%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="91.7722%" y="101" width="0.1246%" height="15" fill="rgb(243,200,35)" fg:x="39050" fg:w="53"/><text x="92.0652%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="91.8968%" y="101" width="0.3619%" height="15" fill="rgb(248,60,25)" fg:x="39103" fg:w="154"/><text x="92.1898%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.60%)</title><rect x="91.7722%" y="117" width="0.5993%" height="15" fill="rgb(227,53,46)" fg:x="39050" fg:w="255"/><text x="92.0652%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 1.10%)</title><rect x="91.7722%" y="133" width="1.0999%" height="15" fill="rgb(216,120,32)" fg:x="39050" fg:w="468"/><text x="92.0652%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="92.8721%" y="101" width="0.1786%" height="15" fill="rgb(220,134,1)" fg:x="39518" fg:w="76"/><text x="93.1651%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="92.8721%" y="117" width="0.2585%" height="15" fill="rgb(237,168,5)" fg:x="39518" fg:w="110"/><text x="93.1651%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.41%)</title><rect x="92.8721%" y="133" width="0.4113%" height="15" fill="rgb(231,100,33)" fg:x="39518" fg:w="175"/><text x="93.1651%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (810 instructions, 1.90%)</title><rect x="91.7722%" y="149" width="1.9036%" height="15" fill="rgb(236,177,47)" fg:x="39050" fg:w="810"/><text x="92.0652%" y="159.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="93.6758%" y="149" width="0.0705%" height="15" fill="rgb(235,7,49)" fg:x="39860" fg:w="30"/><text x="93.9688%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="93.7463%" y="149" width="0.1293%" height="15" fill="rgb(232,119,22)" fg:x="39890" fg:w="55"/><text x="94.0393%" y="159.50"></text></g><g><title>std::io::Write::write_all (33 instructions, 0.08%)</title><rect x="93.8756%" y="149" width="0.0776%" height="15" fill="rgb(254,73,53)" fg:x="39945" fg:w="33"/><text x="94.1686%" y="159.50"></text></g><g><title>std::io::Write::write_all (57 instructions, 0.13%)</title><rect x="93.9531%" y="149" width="0.1340%" height="15" fill="rgb(251,35,20)" fg:x="39978" fg:w="57"/><text x="94.2461%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="94.0871%" y="149" width="0.1904%" height="15" fill="rgb(241,119,20)" fg:x="40035" fg:w="81"/><text x="94.3801%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="94.2775%" y="149" width="0.2891%" height="15" fill="rgb(207,102,14)" fg:x="40116" fg:w="123"/><text x="94.5704%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.5665%" y="149" width="0.0259%" height="15" fill="rgb(248,201,50)" fg:x="40239" fg:w="11"/><text x="94.8595%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="94.5924%" y="149" width="0.3948%" height="15" fill="rgb(222,185,44)" fg:x="40250" fg:w="168"/><text x="94.8853%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.9872%" y="149" width="0.0118%" height="15" fill="rgb(218,107,18)" fg:x="40418" fg:w="5"/><text x="95.2802%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.9989%" y="149" width="0.0259%" height="15" fill="rgb(237,177,39)" fg:x="40423" fg:w="11"/><text x="95.2919%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="95.0248%" y="149" width="0.2891%" height="15" fill="rgb(246,69,6)" fg:x="40434" fg:w="123"/><text x="95.3178%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="95.3139%" y="149" width="0.1293%" height="15" fill="rgb(234,208,37)" fg:x="40557" fg:w="55"/><text x="95.6068%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.24%)</title><rect x="95.4431%" y="149" width="0.2350%" height="15" fill="rgb(225,4,6)" fg:x="40612" fg:w="100"/><text x="95.7361%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (10,894 instructions, 25.60%)</title><rect x="71.9889%" y="165" width="25.6022%" height="15" fill="rgb(233,45,0)" fg:x="30632" fg:w="10894"/><text x="72.2819%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::principalToAccount_2_::{{closure}} (41,867 instructions, 98.39%)</title><rect x="0.4066%" y="181" width="98.3925%" height="15" fill="rgb(226,136,5)" fg:x="173" fg:w="41867"/><text x="0.6995%" y="191.50">sha::principalToAccount_2_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.7991%" y="181" width="0.0282%" height="15" fill="rgb(211,91,47)" fg:x="42040" fg:w="12"/><text x="99.0921%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="98.8273%" y="165" width="0.1293%" height="15" fill="rgb(242,88,51)" fg:x="42052" fg:w="55"/><text x="99.1203%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="98.9565%" y="165" width="0.1481%" height="15" fill="rgb(230,91,28)" fg:x="42107" fg:w="63"/><text x="99.2495%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="99.3020%" y="165" width="0.1293%" height="15" fill="rgb(254,186,29)" fg:x="42254" fg:w="55"/><text x="99.5950%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="99.4313%" y="165" width="0.1481%" height="15" fill="rgb(238,6,4)" fg:x="42309" fg:w="63"/><text x="99.7242%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (401 instructions, 0.94%)</title><rect x="98.8273%" y="181" width="0.9424%" height="15" fill="rgb(221,151,16)" fg:x="42052" fg:w="401"/><text x="99.1203%" y="191.50"></text></g><g><title>all (42,551 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(251,143,52)" fg:x="0" fg:w="42551"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToAccount (42,551 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(206,90,15)" fg:x="0" fg:w="42551"/><text x="0.2930%" y="207.50">canister_update principalToAccount</text></g></svg></svg>