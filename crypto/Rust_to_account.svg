<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToAccount</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="47956"><g><title>ic_cdk::setup (24 instructions, 0.05%)</title><rect x="0.0000%" y="181" width="0.0500%" height="15" fill="rgb(209,150,17)" fg:x="0" fg:w="24"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="0.0500%" y="181" width="0.1731%" height="15" fill="rgb(234,202,34)" fg:x="24" fg:w="83"/><text x="0.3430%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="0.2231%" y="181" width="0.1731%" height="15" fill="rgb(253,148,53)" fg:x="107" fg:w="83"/><text x="0.5161%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="0.3962%" y="165" width="0.1731%" height="15" fill="rgb(218,129,16)" fg:x="190" fg:w="83"/><text x="0.6892%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="0.5693%" y="149" width="0.1710%" height="15" fill="rgb(216,85,19)" fg:x="273" fg:w="82"/><text x="0.8622%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.7403%" y="133" width="0.0125%" height="15" fill="rgb(235,228,7)" fg:x="355" fg:w="6"/><text x="1.0332%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.92%)</title><rect x="0.7403%" y="149" width="0.9238%" height="15" fill="rgb(245,175,0)" fg:x="355" fg:w="443"/><text x="1.0332%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.20%)</title><rect x="1.6640%" y="149" width="0.1981%" height="15" fill="rgb(208,168,36)" fg:x="798" fg:w="95"/><text x="1.9570%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.13%)</title><rect x="1.8621%" y="149" width="0.1251%" height="15" fill="rgb(246,171,24)" fg:x="893" fg:w="60"/><text x="2.1551%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.13%)</title><rect x="1.9872%" y="149" width="0.1251%" height="15" fill="rgb(215,142,24)" fg:x="953" fg:w="60"/><text x="2.2802%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.13%)</title><rect x="2.1124%" y="149" width="0.1251%" height="15" fill="rgb(250,187,7)" fg:x="1013" fg:w="60"/><text x="2.4053%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.13%)</title><rect x="2.2375%" y="149" width="0.1251%" height="15" fill="rgb(228,66,33)" fg:x="1073" fg:w="60"/><text x="2.5304%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="2.3626%" y="149" width="0.1710%" height="15" fill="rgb(234,215,21)" fg:x="1133" fg:w="82"/><text x="2.6556%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.15%)</title><rect x="2.5336%" y="149" width="0.1460%" height="15" fill="rgb(222,191,20)" fg:x="1215" fg:w="70"/><text x="2.8265%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.6795%" y="133" width="0.0125%" height="15" fill="rgb(245,79,54)" fg:x="1285" fg:w="6"/><text x="2.9725%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.92%)</title><rect x="2.6795%" y="149" width="0.9238%" height="15" fill="rgb(240,10,37)" fg:x="1285" fg:w="443"/><text x="2.9725%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="3.6033%" y="149" width="0.0396%" height="15" fill="rgb(214,192,32)" fg:x="1728" fg:w="19"/><text x="3.8963%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="3.6429%" y="133" width="0.1731%" height="15" fill="rgb(209,36,54)" fg:x="1747" fg:w="83"/><text x="3.9359%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.14%)</title><rect x="3.8160%" y="101" width="0.1397%" height="15" fill="rgb(220,10,11)" fg:x="1830" fg:w="67"/><text x="4.1090%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.20%)</title><rect x="3.8160%" y="117" width="0.2002%" height="15" fill="rgb(221,106,17)" fg:x="1830" fg:w="96"/><text x="4.1090%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="4.0162%" y="69" width="0.0229%" height="15" fill="rgb(251,142,44)" fg:x="1926" fg:w="11"/><text x="4.3092%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="4.0391%" y="53" width="0.0730%" height="15" fill="rgb(238,13,15)" fg:x="1937" fg:w="35"/><text x="4.3321%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="4.0391%" y="69" width="0.1335%" height="15" fill="rgb(208,107,27)" fg:x="1937" fg:w="64"/><text x="4.3321%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.30%)</title><rect x="4.0162%" y="85" width="0.3003%" height="15" fill="rgb(205,136,37)" fg:x="1926" fg:w="144"/><text x="4.3092%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.44%)</title><rect x="4.0162%" y="101" width="0.4358%" height="15" fill="rgb(250,205,27)" fg:x="1926" fg:w="209"/><text x="4.3092%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.46%)</title><rect x="4.0162%" y="117" width="0.4567%" height="15" fill="rgb(210,80,43)" fg:x="1926" fg:w="219"/><text x="4.3092%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 0.95%)</title><rect x="3.8160%" y="133" width="0.9530%" height="15" fill="rgb(247,160,36)" fg:x="1830" fg:w="457"/><text x="4.1090%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.41%)</title><rect x="3.6429%" y="149" width="1.4138%" height="15" fill="rgb(234,13,49)" fg:x="1747" fg:w="678"/><text x="3.9359%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.20%)</title><rect x="5.0567%" y="149" width="0.1981%" height="15" fill="rgb(234,122,0)" fg:x="2425" fg:w="95"/><text x="5.3497%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="5.2548%" y="149" width="0.1251%" height="15" fill="rgb(207,146,38)" fg:x="2520" fg:w="60"/><text x="5.5478%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.16%)</title><rect x="5.3799%" y="149" width="0.1585%" height="15" fill="rgb(207,177,25)" fg:x="2580" fg:w="76"/><text x="5.6729%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.15%)</title><rect x="5.5384%" y="149" width="0.1460%" height="15" fill="rgb(211,178,42)" fg:x="2656" fg:w="70"/><text x="5.8314%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="5.6844%" y="117" width="0.0125%" height="15" fill="rgb(230,69,54)" fg:x="2726" fg:w="6"/><text x="5.9773%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.92%)</title><rect x="5.6844%" y="133" width="0.9238%" height="15" fill="rgb(214,135,41)" fg:x="2726" fg:w="443"/><text x="5.9773%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="6.6081%" y="133" width="0.0396%" height="15" fill="rgb(237,67,25)" fg:x="3169" fg:w="19"/><text x="6.9011%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="6.6478%" y="117" width="0.1731%" height="15" fill="rgb(222,189,50)" fg:x="3188" fg:w="83"/><text x="6.9407%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.14%)</title><rect x="6.8208%" y="85" width="0.1397%" height="15" fill="rgb(245,148,34)" fg:x="3271" fg:w="67"/><text x="7.1138%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.20%)</title><rect x="6.8208%" y="101" width="0.2002%" height="15" fill="rgb(222,29,6)" fg:x="3271" fg:w="96"/><text x="7.1138%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="7.0210%" y="53" width="0.0229%" height="15" fill="rgb(221,189,43)" fg:x="3367" fg:w="11"/><text x="7.3140%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="7.0440%" y="37" width="0.0730%" height="15" fill="rgb(207,36,27)" fg:x="3378" fg:w="35"/><text x="7.3369%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="7.0440%" y="53" width="0.1335%" height="15" fill="rgb(217,90,24)" fg:x="3378" fg:w="64"/><text x="7.3369%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.30%)</title><rect x="7.0210%" y="69" width="0.3003%" height="15" fill="rgb(224,66,35)" fg:x="3367" fg:w="144"/><text x="7.3140%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.44%)</title><rect x="7.0210%" y="85" width="0.4358%" height="15" fill="rgb(221,13,50)" fg:x="3367" fg:w="209"/><text x="7.3140%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.46%)</title><rect x="7.0210%" y="101" width="0.4567%" height="15" fill="rgb(236,68,49)" fg:x="3367" fg:w="219"/><text x="7.3140%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 0.95%)</title><rect x="6.8208%" y="117" width="0.9530%" height="15" fill="rgb(229,146,28)" fg:x="3271" fg:w="457"/><text x="7.1138%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.41%)</title><rect x="6.6478%" y="133" width="1.4138%" height="15" fill="rgb(225,31,38)" fg:x="3188" fg:w="678"/><text x="6.9407%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.20%)</title><rect x="8.0616%" y="133" width="0.1981%" height="15" fill="rgb(250,208,3)" fg:x="3866" fg:w="95"/><text x="8.3545%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="8.2597%" y="133" width="0.1251%" height="15" fill="rgb(246,54,23)" fg:x="3961" fg:w="60"/><text x="8.5526%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="8.3848%" y="117" width="0.1710%" height="15" fill="rgb(243,76,11)" fg:x="4021" fg:w="82"/><text x="8.6777%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.20%)</title><rect x="8.5558%" y="117" width="0.1981%" height="15" fill="rgb(245,21,50)" fg:x="4103" fg:w="95"/><text x="8.8487%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.16%)</title><rect x="8.7539%" y="117" width="0.1585%" height="15" fill="rgb(228,9,43)" fg:x="4198" fg:w="76"/><text x="9.0468%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (335 instructions, 0.70%)</title><rect x="8.3848%" y="133" width="0.6986%" height="15" fill="rgb(208,100,47)" fg:x="4021" fg:w="335"/><text x="8.6777%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="9.0833%" y="133" width="0.1731%" height="15" fill="rgb(232,26,8)" fg:x="4356" fg:w="83"/><text x="9.3763%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,953 instructions, 4.07%)</title><rect x="5.6844%" y="149" width="4.0725%" height="15" fill="rgb(216,166,38)" fg:x="2726" fg:w="1953"/><text x="5.9773%" y="159.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.16%)</title><rect x="9.7569%" y="149" width="0.1585%" height="15" fill="rgb(251,202,51)" fg:x="4679" fg:w="76"/><text x="10.0498%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="9.9153%" y="149" width="0.0313%" height="15" fill="rgb(254,216,34)" fg:x="4755" fg:w="15"/><text x="10.2083%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="9.9466%" y="149" width="0.0313%" height="15" fill="rgb(251,32,27)" fg:x="4770" fg:w="15"/><text x="10.2396%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="9.9779%" y="149" width="0.0313%" height="15" fill="rgb(208,127,28)" fg:x="4785" fg:w="15"/><text x="10.2709%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="10.0092%" y="149" width="0.0146%" height="15" fill="rgb(224,137,22)" fg:x="4800" fg:w="7"/><text x="10.3021%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="10.0238%" y="133" width="0.1731%" height="15" fill="rgb(254,70,32)" fg:x="4807" fg:w="83"/><text x="10.3167%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.37%)</title><rect x="10.0238%" y="149" width="0.3733%" height="15" fill="rgb(229,75,37)" fg:x="4807" fg:w="179"/><text x="10.3167%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="10.3970%" y="117" width="0.1731%" height="15" fill="rgb(252,64,23)" fg:x="4986" fg:w="83"/><text x="10.6900%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="10.3970%" y="133" width="0.2627%" height="15" fill="rgb(232,162,48)" fg:x="4986" fg:w="126"/><text x="10.6900%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.44%)</title><rect x="10.3970%" y="149" width="0.4400%" height="15" fill="rgb(246,160,12)" fg:x="4986" fg:w="211"/><text x="10.6900%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="10.8370%" y="149" width="0.1731%" height="15" fill="rgb(247,166,0)" fg:x="5197" fg:w="83"/><text x="11.1300%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="11.0101%" y="149" width="0.1856%" height="15" fill="rgb(249,219,21)" fg:x="5280" fg:w="89"/><text x="11.3031%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="11.1957%" y="149" width="0.1731%" height="15" fill="rgb(205,209,3)" fg:x="5369" fg:w="83"/><text x="11.4886%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="11.3688%" y="149" width="0.1731%" height="15" fill="rgb(243,44,1)" fg:x="5452" fg:w="83"/><text x="11.6617%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="11.5502%" y="149" width="0.1856%" height="15" fill="rgb(206,159,16)" fg:x="5539" fg:w="89"/><text x="11.8431%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.82%)</title><rect x="11.7358%" y="149" width="0.8174%" height="15" fill="rgb(244,77,30)" fg:x="5628" fg:w="392"/><text x="12.0287%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.82%)</title><rect x="12.5532%" y="149" width="0.8174%" height="15" fill="rgb(218,69,12)" fg:x="6020" fg:w="392"/><text x="12.8461%" y="159.50"></text></g><g><title>memcpy (504 instructions, 1.05%)</title><rect x="13.3706%" y="149" width="1.0510%" height="15" fill="rgb(212,87,7)" fg:x="6412" fg:w="504"/><text x="13.6636%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (7,852 instructions, 16.37%)</title><rect x="0.5693%" y="165" width="16.3733%" height="15" fill="rgb(245,114,25)" fg:x="273" fg:w="7852"/><text x="0.8622%" y="175.50">candid::de::IDLDeseri..</text></g><g><title>memcpy (344 instructions, 0.72%)</title><rect x="16.9426%" y="165" width="0.7173%" height="15" fill="rgb(210,61,42)" fg:x="8125" fg:w="344"/><text x="17.2356%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="17.6599%" y="133" width="0.0146%" height="15" fill="rgb(211,52,33)" fg:x="8469" fg:w="7"/><text x="17.9529%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="17.6745%" y="117" width="0.1230%" height="15" fill="rgb(234,58,33)" fg:x="8476" fg:w="59"/><text x="17.9675%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.70%)</title><rect x="17.7976%" y="117" width="0.7006%" height="15" fill="rgb(220,115,36)" fg:x="8535" fg:w="336"/><text x="18.0905%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="18.4982%" y="117" width="0.1626%" height="15" fill="rgb(243,153,54)" fg:x="8871" fg:w="78"/><text x="18.7912%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.51%)</title><rect x="17.6745%" y="133" width="1.5139%" height="15" fill="rgb(251,47,18)" fg:x="8476" fg:w="726"/><text x="17.9675%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (851 instructions, 1.77%)</title><rect x="17.6599%" y="149" width="1.7745%" height="15" fill="rgb(242,102,42)" fg:x="8469" fg:w="851"/><text x="17.9529%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="19.4345%" y="149" width="0.1731%" height="15" fill="rgb(234,31,38)" fg:x="9320" fg:w="83"/><text x="19.7275%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="19.6076%" y="133" width="0.0146%" height="15" fill="rgb(221,117,51)" fg:x="9403" fg:w="7"/><text x="19.9005%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="19.6222%" y="117" width="0.1230%" height="15" fill="rgb(212,20,18)" fg:x="9410" fg:w="59"/><text x="19.9151%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.70%)</title><rect x="19.7452%" y="117" width="0.7006%" height="15" fill="rgb(245,133,36)" fg:x="9469" fg:w="336"/><text x="20.0382%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="20.4458%" y="117" width="0.1626%" height="15" fill="rgb(212,6,19)" fg:x="9805" fg:w="78"/><text x="20.7388%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.51%)</title><rect x="19.6222%" y="133" width="1.5139%" height="15" fill="rgb(218,1,36)" fg:x="9410" fg:w="726"/><text x="19.9151%" y="143.50"></text></g><g><title>candid::types::internal::env_add (944 instructions, 1.97%)</title><rect x="19.6076%" y="149" width="1.9685%" height="15" fill="rgb(246,84,54)" fg:x="9403" fg:w="944"/><text x="19.9005%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="21.5760%" y="149" width="0.1731%" height="15" fill="rgb(242,110,6)" fg:x="10347" fg:w="83"/><text x="21.8690%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="21.7491%" y="133" width="0.0146%" height="15" fill="rgb(214,47,5)" fg:x="10430" fg:w="7"/><text x="22.0421%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="21.7637%" y="117" width="0.1230%" height="15" fill="rgb(218,159,25)" fg:x="10437" fg:w="59"/><text x="22.0567%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.70%)</title><rect x="21.8867%" y="117" width="0.7006%" height="15" fill="rgb(215,211,28)" fg:x="10496" fg:w="336"/><text x="22.1797%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="22.5874%" y="117" width="0.1626%" height="15" fill="rgb(238,59,32)" fg:x="10832" fg:w="78"/><text x="22.8803%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.51%)</title><rect x="21.7637%" y="133" width="1.5139%" height="15" fill="rgb(226,82,3)" fg:x="10437" fg:w="726"/><text x="22.0567%" y="143.50"></text></g><g><title>memcmp (537 instructions, 1.12%)</title><rect x="23.2776%" y="133" width="1.1198%" height="15" fill="rgb(240,164,32)" fg:x="11163" fg:w="537"/><text x="23.5706%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="24.3974%" y="117" width="0.1856%" height="15" fill="rgb(232,46,7)" fg:x="11700" fg:w="89"/><text x="24.6903%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.28%)</title><rect x="24.3974%" y="133" width="0.2773%" height="15" fill="rgb(229,129,53)" fg:x="11700" fg:w="133"/><text x="24.6903%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,582 instructions, 3.30%)</title><rect x="21.7491%" y="149" width="3.2989%" height="15" fill="rgb(234,188,29)" fg:x="10430" fg:w="1582"/><text x="22.0421%" y="159.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="25.0480%" y="101" width="0.1230%" height="15" fill="rgb(246,141,4)" fg:x="12012" fg:w="59"/><text x="25.3409%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.21%)</title><rect x="25.0480%" y="117" width="0.2127%" height="15" fill="rgb(229,23,39)" fg:x="12012" fg:w="102"/><text x="25.3409%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="25.7215%" y="101" width="0.1230%" height="15" fill="rgb(206,12,3)" fg:x="12335" fg:w="59"/><text x="26.0145%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.21%)</title><rect x="25.7215%" y="117" width="0.2127%" height="15" fill="rgb(252,226,20)" fg:x="12335" fg:w="102"/><text x="26.0145%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (646 instructions, 1.35%)</title><rect x="25.0480%" y="133" width="1.3471%" height="15" fill="rgb(216,123,35)" fg:x="12012" fg:w="646"/><text x="25.3409%" y="143.50"></text></g><g><title>candid::types::internal::env_id (948 instructions, 1.98%)</title><rect x="25.0480%" y="149" width="1.9768%" height="15" fill="rgb(212,68,40)" fg:x="12012" fg:w="948"/><text x="25.3409%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,620 instructions, 9.63%)</title><rect x="17.6599%" y="165" width="9.6338%" height="15" fill="rgb(254,125,32)" fg:x="8469" fg:w="4620"/><text x="17.9529%" y="175.50">candid::typ..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.10%)</title><rect x="27.2938%" y="149" width="0.1022%" height="15" fill="rgb(253,97,22)" fg:x="13089" fg:w="49"/><text x="27.5867%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="27.3959%" y="117" width="0.0563%" height="15" fill="rgb(241,101,14)" fg:x="13138" fg:w="27"/><text x="27.6889%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.30%)</title><rect x="27.3959%" y="133" width="0.2961%" height="15" fill="rgb(238,103,29)" fg:x="13138" fg:w="142"/><text x="27.6889%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="27.7838%" y="117" width="0.0563%" height="15" fill="rgb(233,195,47)" fg:x="13324" fg:w="27"/><text x="28.0768%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.30%)</title><rect x="27.7838%" y="133" width="0.2961%" height="15" fill="rgb(246,218,30)" fg:x="13324" fg:w="142"/><text x="28.0768%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (372 instructions, 0.78%)</title><rect x="27.3959%" y="149" width="0.7757%" height="15" fill="rgb(219,145,47)" fg:x="13138" fg:w="372"/><text x="27.6889%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.07%)</title><rect x="28.1717%" y="133" width="0.0730%" height="15" fill="rgb(243,12,26)" fg:x="13510" fg:w="35"/><text x="28.4646%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.07%)</title><rect x="28.2446%" y="133" width="0.0730%" height="15" fill="rgb(214,87,16)" fg:x="13545" fg:w="35"/><text x="28.5376%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1501 (34 instructions, 0.07%)</title><rect x="28.3176%" y="133" width="0.0709%" height="15" fill="rgb(208,99,42)" fg:x="13580" fg:w="34"/><text x="28.6106%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1501 (34 instructions, 0.07%)</title><rect x="28.3885%" y="133" width="0.0709%" height="15" fill="rgb(253,99,2)" fg:x="13614" fg:w="34"/><text x="28.6815%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="28.4594%" y="133" width="0.1731%" height="15" fill="rgb(220,168,23)" fg:x="13648" fg:w="83"/><text x="28.7524%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="28.6325%" y="133" width="0.1710%" height="15" fill="rgb(242,38,24)" fg:x="13731" fg:w="82"/><text x="28.9255%" y="143.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.19%)</title><rect x="28.8035%" y="133" width="0.1918%" height="15" fill="rgb(225,182,9)" fg:x="13813" fg:w="92"/><text x="29.0965%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.15%)</title><rect x="28.9953%" y="133" width="0.1460%" height="15" fill="rgb(243,178,37)" fg:x="13905" fg:w="70"/><text x="29.2883%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="29.1413%" y="117" width="0.0125%" height="15" fill="rgb(232,139,19)" fg:x="13975" fg:w="6"/><text x="29.4343%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.92%)</title><rect x="29.1413%" y="133" width="0.9238%" height="15" fill="rgb(225,201,24)" fg:x="13975" fg:w="443"/><text x="29.4343%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="30.0651%" y="117" width="0.1731%" height="15" fill="rgb(221,47,46)" fg:x="14418" fg:w="83"/><text x="30.3580%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.14%)</title><rect x="30.2381%" y="85" width="0.1397%" height="15" fill="rgb(249,23,13)" fg:x="14501" fg:w="67"/><text x="30.5311%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.20%)</title><rect x="30.2381%" y="101" width="0.2002%" height="15" fill="rgb(219,9,5)" fg:x="14501" fg:w="96"/><text x="30.5311%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="30.4383%" y="53" width="0.0229%" height="15" fill="rgb(254,171,16)" fg:x="14597" fg:w="11"/><text x="30.7313%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="30.4613%" y="37" width="0.0730%" height="15" fill="rgb(230,171,20)" fg:x="14608" fg:w="35"/><text x="30.7542%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="30.4613%" y="53" width="0.1335%" height="15" fill="rgb(210,71,41)" fg:x="14608" fg:w="64"/><text x="30.7542%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.30%)</title><rect x="30.4383%" y="69" width="0.3003%" height="15" fill="rgb(206,173,20)" fg:x="14597" fg:w="144"/><text x="30.7313%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.44%)</title><rect x="30.4383%" y="85" width="0.4358%" height="15" fill="rgb(233,88,34)" fg:x="14597" fg:w="209"/><text x="30.7313%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.46%)</title><rect x="30.4383%" y="101" width="0.4567%" height="15" fill="rgb(223,209,46)" fg:x="14597" fg:w="219"/><text x="30.7313%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 0.95%)</title><rect x="30.2381%" y="117" width="0.9530%" height="15" fill="rgb(250,43,18)" fg:x="14501" fg:w="457"/><text x="30.5311%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.41%)</title><rect x="30.0651%" y="133" width="1.4138%" height="15" fill="rgb(208,13,10)" fg:x="14418" fg:w="678"/><text x="30.3580%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.20%)</title><rect x="31.4789%" y="133" width="0.1981%" height="15" fill="rgb(212,200,36)" fg:x="15096" fg:w="95"/><text x="31.7718%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="31.6770%" y="133" width="0.1251%" height="15" fill="rgb(225,90,30)" fg:x="15191" fg:w="60"/><text x="31.9699%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="31.8021%" y="133" width="0.1772%" height="15" fill="rgb(236,182,39)" fg:x="15251" fg:w="85"/><text x="32.0950%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="31.9793%" y="133" width="0.1731%" height="15" fill="rgb(212,144,35)" fg:x="15336" fg:w="83"/><text x="32.2723%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="32.1524%" y="133" width="0.1772%" height="15" fill="rgb(228,63,44)" fg:x="15419" fg:w="85"/><text x="32.4454%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="32.3296%" y="133" width="0.1772%" height="15" fill="rgb(228,109,6)" fg:x="15504" fg:w="85"/><text x="32.6226%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="32.5069%" y="133" width="0.1772%" height="15" fill="rgb(238,117,24)" fg:x="15589" fg:w="85"/><text x="32.7999%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="32.6841%" y="133" width="0.1772%" height="15" fill="rgb(242,26,26)" fg:x="15674" fg:w="85"/><text x="32.9771%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="32.8614%" y="133" width="0.1772%" height="15" fill="rgb(221,92,48)" fg:x="15759" fg:w="85"/><text x="33.1543%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="33.0386%" y="133" width="0.1772%" height="15" fill="rgb(209,209,32)" fg:x="15844" fg:w="85"/><text x="33.3316%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="33.2159%" y="133" width="0.1772%" height="15" fill="rgb(221,70,22)" fg:x="15929" fg:w="85"/><text x="33.5088%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="33.3931%" y="133" width="0.1772%" height="15" fill="rgb(248,145,5)" fg:x="16014" fg:w="85"/><text x="33.6861%" y="143.50"></text></g><g><title>__rust_realloc (111 instructions, 0.23%)</title><rect x="33.5704%" y="101" width="0.2315%" height="15" fill="rgb(226,116,26)" fg:x="16099" fg:w="111"/><text x="33.8633%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.33%)</title><rect x="33.5704%" y="117" width="0.3253%" height="15" fill="rgb(244,5,17)" fg:x="16099" fg:w="156"/><text x="33.8633%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.51%)</title><rect x="33.5704%" y="133" width="0.5067%" height="15" fill="rgb(252,159,33)" fg:x="16099" fg:w="243"/><text x="33.8633%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="34.0771%" y="133" width="0.1772%" height="15" fill="rgb(206,71,0)" fg:x="16342" fg:w="85"/><text x="34.3700%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="34.2543%" y="133" width="0.1772%" height="15" fill="rgb(233,118,54)" fg:x="16427" fg:w="85"/><text x="34.5473%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="34.4316%" y="133" width="0.1772%" height="15" fill="rgb(234,83,48)" fg:x="16512" fg:w="85"/><text x="34.7245%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="34.6088%" y="133" width="0.1772%" height="15" fill="rgb(228,3,54)" fg:x="16597" fg:w="85"/><text x="34.9018%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="34.7861%" y="133" width="0.1772%" height="15" fill="rgb(226,155,13)" fg:x="16682" fg:w="85"/><text x="35.0790%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="34.9633%" y="133" width="0.1772%" height="15" fill="rgb(241,28,37)" fg:x="16767" fg:w="85"/><text x="35.2563%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="35.1405%" y="133" width="0.1772%" height="15" fill="rgb(233,93,10)" fg:x="16852" fg:w="85"/><text x="35.4335%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 instructions, 0.07%)</title><rect x="35.3178%" y="133" width="0.0709%" height="15" fill="rgb(225,113,19)" fg:x="16937" fg:w="34"/><text x="35.6108%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.16%)</title><rect x="35.3887%" y="133" width="0.1585%" height="15" fill="rgb(241,2,18)" fg:x="16971" fg:w="76"/><text x="35.6817%" y="143.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.07%)</title><rect x="35.5472%" y="133" width="0.0688%" height="15" fill="rgb(228,207,21)" fg:x="17047" fg:w="33"/><text x="35.8401%" y="143.50"></text></g><g><title>__rust_realloc (55 instructions, 0.11%)</title><rect x="35.6160%" y="101" width="0.1147%" height="15" fill="rgb(213,211,35)" fg:x="17080" fg:w="55"/><text x="35.9090%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (100 instructions, 0.21%)</title><rect x="35.6160%" y="117" width="0.2085%" height="15" fill="rgb(209,83,10)" fg:x="17080" fg:w="100"/><text x="35.9090%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.39%)</title><rect x="35.6160%" y="133" width="0.3899%" height="15" fill="rgb(209,164,1)" fg:x="17080" fg:w="187"/><text x="35.9090%" y="143.50"></text></g><g><title>memcpy (220 instructions, 0.46%)</title><rect x="36.0059%" y="133" width="0.4588%" height="15" fill="rgb(213,184,43)" fg:x="17267" fg:w="220"/><text x="36.2989%" y="143.50"></text></g><g><title>memcpy (171 instructions, 0.36%)</title><rect x="36.4647%" y="133" width="0.3566%" height="15" fill="rgb(231,61,34)" fg:x="17487" fg:w="171"/><text x="36.7576%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="36.8213%" y="133" width="0.1856%" height="15" fill="rgb(235,75,3)" fg:x="17658" fg:w="89"/><text x="37.1142%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="37.0068%" y="133" width="0.1251%" height="15" fill="rgb(220,106,47)" fg:x="17747" fg:w="60"/><text x="37.2998%" y="143.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (5,557 instructions, 11.59%)</title><rect x="28.1717%" y="149" width="11.5877%" height="15" fill="rgb(210,196,33)" fg:x="13510" fg:w="5557"/><text x="28.4646%" y="159.50">&lt;ic_principal:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="39.7594%" y="149" width="0.0271%" height="15" fill="rgb(229,154,42)" fg:x="19067" fg:w="13"/><text x="40.0523%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="39.7865%" y="149" width="0.0271%" height="15" fill="rgb(228,114,26)" fg:x="19080" fg:w="13"/><text x="40.0794%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="39.8136%" y="149" width="0.0271%" height="15" fill="rgb(208,144,1)" fg:x="19093" fg:w="13"/><text x="40.1065%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,296 instructions, 13.13%)</title><rect x="27.2938%" y="165" width="13.1287%" height="15" fill="rgb(239,112,37)" fg:x="13089" fg:w="6296"/><text x="27.5867%" y="175.50">candid::de::IDLD..</text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.09%)</title><rect x="40.4225%" y="165" width="0.0897%" height="15" fill="rgb(210,96,50)" fg:x="19385" fg:w="43"/><text x="40.7154%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="40.5121%" y="149" width="0.0146%" height="15" fill="rgb(222,178,2)" fg:x="19428" fg:w="7"/><text x="40.8051%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="40.5267%" y="133" width="0.0563%" height="15" fill="rgb(226,74,18)" fg:x="19435" fg:w="27"/><text x="40.8197%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="40.5830%" y="133" width="0.0563%" height="15" fill="rgb(225,67,54)" fg:x="19462" fg:w="27"/><text x="40.8760%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.41%)</title><rect x="40.5267%" y="149" width="0.4108%" height="15" fill="rgb(251,92,32)" fg:x="19435" fg:w="197"/><text x="40.8197%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="40.9375%" y="117" width="0.0563%" height="15" fill="rgb(228,149,22)" fg:x="19632" fg:w="27"/><text x="41.2305%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="40.9938%" y="117" width="0.0563%" height="15" fill="rgb(243,54,13)" fg:x="19659" fg:w="27"/><text x="41.2868%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.14%)</title><rect x="41.0501%" y="117" width="0.1418%" height="15" fill="rgb(243,180,28)" fg:x="19686" fg:w="68"/><text x="41.3431%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.51%)</title><rect x="40.9375%" y="133" width="0.5088%" height="15" fill="rgb(208,167,24)" fg:x="19632" fg:w="244"/><text x="41.2305%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (288 instructions, 0.60%)</title><rect x="40.9375%" y="149" width="0.6006%" height="15" fill="rgb(245,73,45)" fg:x="19632" fg:w="288"/><text x="41.2305%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="41.5381%" y="149" width="0.0271%" height="15" fill="rgb(237,203,48)" fg:x="19920" fg:w="13"/><text x="41.8310%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (565 instructions, 1.18%)</title><rect x="40.5121%" y="165" width="1.1782%" height="15" fill="rgb(211,197,16)" fg:x="19428" fg:w="565"/><text x="40.8051%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.14%)</title><rect x="41.6903%" y="149" width="0.1439%" height="15" fill="rgb(243,99,51)" fg:x="19993" fg:w="69"/><text x="41.9833%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.14%)</title><rect x="41.8342%" y="149" width="0.1418%" height="15" fill="rgb(215,123,29)" fg:x="20062" fg:w="68"/><text x="42.1272%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.48%)</title><rect x="41.6903%" y="165" width="0.4817%" height="15" fill="rgb(239,186,37)" fg:x="19993" fg:w="231"/><text x="41.9833%" y="175.50"></text></g><g><title>memset (240 instructions, 0.50%)</title><rect x="42.1720%" y="165" width="0.5005%" height="15" fill="rgb(252,136,39)" fg:x="20224" fg:w="240"/><text x="42.4650%" y="175.50"></text></g><g><title>memcpy (220 instructions, 0.46%)</title><rect x="42.6724%" y="165" width="0.4588%" height="15" fill="rgb(223,213,32)" fg:x="20464" fg:w="220"/><text x="42.9654%" y="175.50"></text></g><g><title>memcpy (504 instructions, 1.05%)</title><rect x="43.1312%" y="165" width="1.0510%" height="15" fill="rgb(233,115,5)" fg:x="20684" fg:w="504"/><text x="43.4242%" y="175.50"></text></g><g><title>memset (64 instructions, 0.13%)</title><rect x="44.1822%" y="149" width="0.1335%" height="15" fill="rgb(207,226,44)" fg:x="21188" fg:w="64"/><text x="44.4751%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,990 instructions, 10.41%)</title><rect x="44.3156%" y="149" width="10.4054%" height="15" fill="rgb(208,126,0)" fg:x="21252" fg:w="4990"/><text x="44.6086%" y="159.50">sha2::sha256:..</text></g><g><title>sha2::sha256::compress256 (4,990 instructions, 10.41%)</title><rect x="54.7210%" y="149" width="10.4054%" height="15" fill="rgb(244,66,21)" fg:x="26242" fg:w="4990"/><text x="55.0140%" y="159.50">sha2::sha256:..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (10,386 instructions, 21.66%)</title><rect x="44.1822%" y="165" width="21.6574%" height="15" fill="rgb(222,97,12)" fg:x="21188" fg:w="10386"/><text x="44.4751%" y="175.50">&lt;sha2::core_api::Sha256VarCor..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="65.8395%" y="165" width="0.1731%" height="15" fill="rgb(219,213,19)" fg:x="31574" fg:w="83"/><text x="66.1325%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="66.0126%" y="149" width="0.0146%" height="15" fill="rgb(252,169,30)" fg:x="31657" fg:w="7"/><text x="66.3056%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="66.0543%" y="101" width="0.0563%" height="15" fill="rgb(206,32,51)" fg:x="31677" fg:w="27"/><text x="66.3473%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.30%)</title><rect x="66.0543%" y="117" width="0.3003%" height="15" fill="rgb(250,172,42)" fg:x="31677" fg:w="144"/><text x="66.3473%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (188 instructions, 0.39%)</title><rect x="66.0543%" y="133" width="0.3920%" height="15" fill="rgb(209,34,43)" fg:x="31677" fg:w="188"/><text x="66.3473%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="66.4463%" y="117" width="0.0563%" height="15" fill="rgb(223,11,35)" fg:x="31865" fg:w="27"/><text x="66.7393%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.30%)</title><rect x="66.4463%" y="133" width="0.3003%" height="15" fill="rgb(251,219,26)" fg:x="31865" fg:w="144"/><text x="66.7393%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (399 instructions, 0.83%)</title><rect x="66.0272%" y="149" width="0.8320%" height="15" fill="rgb(231,119,3)" fg:x="31664" fg:w="399"/><text x="66.3202%" y="159.50"></text></g><g><title>memset (152 instructions, 0.32%)</title><rect x="66.8592%" y="149" width="0.3170%" height="15" fill="rgb(216,97,11)" fg:x="32063" fg:w="152"/><text x="67.1522%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="67.1762%" y="117" width="0.0146%" height="15" fill="rgb(223,59,9)" fg:x="32215" fg:w="7"/><text x="67.4691%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.08%)</title><rect x="67.1762%" y="133" width="0.0813%" height="15" fill="rgb(233,93,31)" fg:x="32215" fg:w="39"/><text x="67.4691%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="67.2575%" y="133" width="0.1731%" height="15" fill="rgb(239,81,33)" fg:x="32254" fg:w="83"/><text x="67.5505%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="67.4306%" y="117" width="0.0146%" height="15" fill="rgb(213,120,34)" fg:x="32337" fg:w="7"/><text x="67.7235%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="67.4452%" y="101" width="0.1230%" height="15" fill="rgb(243,49,53)" fg:x="32344" fg:w="59"/><text x="67.7381%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.79%)</title><rect x="67.5682%" y="101" width="0.7861%" height="15" fill="rgb(247,216,33)" fg:x="32403" fg:w="377"/><text x="67.8612%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="68.3543%" y="101" width="0.1626%" height="15" fill="rgb(226,26,14)" fg:x="32780" fg:w="78"/><text x="68.6473%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.60%)</title><rect x="67.4452%" y="117" width="1.5994%" height="15" fill="rgb(215,49,53)" fg:x="32344" fg:w="767"/><text x="67.7381%" y="127.50"></text></g><g><title>candid::types::internal::env_add (985 instructions, 2.05%)</title><rect x="67.4306%" y="133" width="2.0540%" height="15" fill="rgb(245,162,40)" fg:x="32337" fg:w="985"/><text x="67.7235%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="69.4845%" y="133" width="0.1731%" height="15" fill="rgb(229,68,17)" fg:x="33322" fg:w="83"/><text x="69.7775%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="69.6576%" y="133" width="0.1731%" height="15" fill="rgb(213,182,10)" fg:x="33405" fg:w="83"/><text x="69.9506%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="69.8307%" y="117" width="0.0146%" height="15" fill="rgb(245,125,30)" fg:x="33488" fg:w="7"/><text x="70.1236%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="69.8453%" y="101" width="0.1230%" height="15" fill="rgb(232,202,2)" fg:x="33495" fg:w="59"/><text x="70.1382%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.79%)</title><rect x="69.9683%" y="101" width="0.7861%" height="15" fill="rgb(237,140,51)" fg:x="33554" fg:w="377"/><text x="70.2613%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="70.7544%" y="101" width="0.1626%" height="15" fill="rgb(236,157,25)" fg:x="33931" fg:w="78"/><text x="71.0474%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.60%)</title><rect x="69.8453%" y="117" width="1.5994%" height="15" fill="rgb(219,209,0)" fg:x="33495" fg:w="767"/><text x="70.1382%" y="127.50"></text></g><g><title>memcmp (675 instructions, 1.41%)</title><rect x="71.4447%" y="117" width="1.4075%" height="15" fill="rgb(240,116,54)" fg:x="34262" fg:w="675"/><text x="71.7376%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="72.8522%" y="101" width="0.1856%" height="15" fill="rgb(216,10,36)" fg:x="34937" fg:w="89"/><text x="73.1452%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.28%)</title><rect x="72.8522%" y="117" width="0.2773%" height="15" fill="rgb(222,72,44)" fg:x="34937" fg:w="133"/><text x="73.1452%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,761 instructions, 3.67%)</title><rect x="69.8307%" y="133" width="3.6721%" height="15" fill="rgb(232,159,9)" fg:x="33488" fg:w="1761"/><text x="70.1236%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="73.5028%" y="85" width="0.1230%" height="15" fill="rgb(210,39,32)" fg:x="35249" fg:w="59"/><text x="73.7958%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.34%)</title><rect x="73.6258%" y="85" width="0.3420%" height="15" fill="rgb(216,194,45)" fg:x="35308" fg:w="164"/><text x="73.9188%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.63%)</title><rect x="73.5028%" y="101" width="0.6297%" height="15" fill="rgb(218,18,35)" fg:x="35249" fg:w="302"/><text x="73.7958%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (523 instructions, 1.09%)</title><rect x="73.5028%" y="117" width="1.0906%" height="15" fill="rgb(207,83,51)" fg:x="35249" fg:w="523"/><text x="73.7958%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.303 (80 instructions, 0.17%)</title><rect x="74.5934%" y="117" width="0.1668%" height="15" fill="rgb(225,63,43)" fg:x="35772" fg:w="80"/><text x="74.8863%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="74.7602%" y="117" width="0.0271%" height="15" fill="rgb(207,57,36)" fg:x="35852" fg:w="13"/><text x="75.0532%" y="127.50"></text></g><g><title>candid::types::internal::env_id (801 instructions, 1.67%)</title><rect x="73.5028%" y="133" width="1.6703%" height="15" fill="rgb(216,99,33)" fg:x="35249" fg:w="801"/><text x="73.7958%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,986 instructions, 8.31%)</title><rect x="67.1762%" y="149" width="8.3118%" height="15" fill="rgb(225,42,16)" fg:x="32215" fg:w="3986"/><text x="67.4691%" y="159.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="75.4879%" y="117" width="0.1731%" height="15" fill="rgb(220,201,45)" fg:x="36201" fg:w="83"/><text x="75.7809%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="75.4879%" y="133" width="0.2627%" height="15" fill="rgb(225,33,4)" fg:x="36201" fg:w="126"/><text x="75.7809%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.44%)</title><rect x="75.4879%" y="149" width="0.4400%" height="15" fill="rgb(224,33,50)" fg:x="36201" fg:w="211"/><text x="75.7809%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.08%)</title><rect x="75.9279%" y="133" width="0.0792%" height="15" fill="rgb(246,198,51)" fg:x="36412" fg:w="38"/><text x="76.2209%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="76.0072%" y="101" width="0.1731%" height="15" fill="rgb(205,22,4)" fg:x="36450" fg:w="83"/><text x="76.3001%" y="111.50"></text></g><g><title>candid::types::internal::unroll (179 instructions, 0.37%)</title><rect x="76.0072%" y="117" width="0.3733%" height="15" fill="rgb(206,3,8)" fg:x="36450" fg:w="179"/><text x="76.3001%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="76.3804%" y="117" width="0.1731%" height="15" fill="rgb(251,23,15)" fg:x="36629" fg:w="83"/><text x="76.6734%" y="127.50"></text></g><g><title>candid::types::internal::unroll (365 instructions, 0.76%)</title><rect x="76.0072%" y="133" width="0.7611%" height="15" fill="rgb(252,88,28)" fg:x="36450" fg:w="365"/><text x="76.3001%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="76.7683%" y="85" width="0.1230%" height="15" fill="rgb(212,127,14)" fg:x="36815" fg:w="59"/><text x="77.0613%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.34%)</title><rect x="76.8913%" y="85" width="0.3420%" height="15" fill="rgb(247,145,37)" fg:x="36874" fg:w="164"/><text x="77.1843%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.63%)</title><rect x="76.7683%" y="101" width="0.6297%" height="15" fill="rgb(209,117,53)" fg:x="36815" fg:w="302"/><text x="77.0613%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (523 instructions, 1.09%)</title><rect x="76.7683%" y="117" width="1.0906%" height="15" fill="rgb(212,90,42)" fg:x="36815" fg:w="523"/><text x="77.0613%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="77.8589%" y="117" width="0.1731%" height="15" fill="rgb(218,164,37)" fg:x="37338" fg:w="83"/><text x="78.1518%" y="127.50"></text></g><g><title>memset (152 instructions, 0.32%)</title><rect x="78.0319%" y="117" width="0.3170%" height="15" fill="rgb(246,65,34)" fg:x="37421" fg:w="152"/><text x="78.3249%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,080 instructions, 2.25%)</title><rect x="76.7683%" y="133" width="2.2521%" height="15" fill="rgb(231,100,33)" fg:x="36815" fg:w="1080"/><text x="77.0613%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="79.0204%" y="101" width="0.1731%" height="15" fill="rgb(228,126,14)" fg:x="37895" fg:w="83"/><text x="79.3133%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="79.0204%" y="117" width="0.2627%" height="15" fill="rgb(215,173,21)" fg:x="37895" fg:w="126"/><text x="79.3133%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.44%)</title><rect x="79.0204%" y="133" width="0.4400%" height="15" fill="rgb(210,6,40)" fg:x="37895" fg:w="211"/><text x="79.3133%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="79.4603%" y="85" width="0.1230%" height="15" fill="rgb(212,48,18)" fg:x="38106" fg:w="59"/><text x="79.7533%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.21%)</title><rect x="79.4603%" y="101" width="0.2127%" height="15" fill="rgb(230,214,11)" fg:x="38106" fg:w="102"/><text x="79.7533%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (323 instructions, 0.67%)</title><rect x="79.4603%" y="117" width="0.6735%" height="15" fill="rgb(254,105,39)" fg:x="38106" fg:w="323"/><text x="79.7533%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.06%)</title><rect x="80.1339%" y="117" width="0.0646%" height="15" fill="rgb(245,158,5)" fg:x="38429" fg:w="31"/><text x="80.4268%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="80.1985%" y="117" width="0.0271%" height="15" fill="rgb(249,208,11)" fg:x="38460" fg:w="13"/><text x="80.4915%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (503 instructions, 1.05%)</title><rect x="79.4603%" y="133" width="1.0489%" height="15" fill="rgb(210,39,28)" fg:x="38106" fg:w="503"/><text x="79.7533%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="80.5092%" y="85" width="0.1731%" height="15" fill="rgb(211,56,53)" fg:x="38609" fg:w="83"/><text x="80.8022%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="80.5092%" y="101" width="0.2627%" height="15" fill="rgb(226,201,30)" fg:x="38609" fg:w="126"/><text x="80.8022%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.43%)</title><rect x="80.5092%" y="117" width="0.4337%" height="15" fill="rgb(239,101,34)" fg:x="38609" fg:w="208"/><text x="80.8022%" y="127.50"></text></g><g><title>leb128::write::signed (267 instructions, 0.56%)</title><rect x="80.5092%" y="133" width="0.5568%" height="15" fill="rgb(226,209,5)" fg:x="38609" fg:w="267"/><text x="80.8022%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.14%)</title><rect x="81.0660%" y="133" width="0.1376%" height="15" fill="rgb(250,105,47)" fg:x="38876" fg:w="66"/><text x="81.3589%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="81.2036%" y="101" width="0.1856%" height="15" fill="rgb(230,72,3)" fg:x="38942" fg:w="89"/><text x="81.4966%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.28%)</title><rect x="81.2036%" y="117" width="0.2773%" height="15" fill="rgb(232,218,39)" fg:x="38942" fg:w="133"/><text x="81.4966%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.17%)</title><rect x="81.4809%" y="117" width="0.1731%" height="15" fill="rgb(248,166,6)" fg:x="39075" fg:w="83"/><text x="81.7739%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (270 instructions, 0.56%)</title><rect x="81.2036%" y="133" width="0.5630%" height="15" fill="rgb(247,89,20)" fg:x="38942" fg:w="270"/><text x="81.4966%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.7666%" y="133" width="0.0271%" height="15" fill="rgb(248,130,54)" fg:x="39212" fg:w="13"/><text x="82.0596%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,076 instructions, 6.41%)</title><rect x="75.9279%" y="149" width="6.4142%" height="15" fill="rgb(234,196,4)" fg:x="36412" fg:w="3076"/><text x="76.2209%" y="159.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="82.3421%" y="149" width="0.0271%" height="15" fill="rgb(250,143,31)" fg:x="39488" fg:w="13"/><text x="82.6351%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="82.3693%" y="117" width="0.1731%" height="15" fill="rgb(211,110,34)" fg:x="39501" fg:w="83"/><text x="82.6622%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="82.3693%" y="133" width="0.2627%" height="15" fill="rgb(215,124,48)" fg:x="39501" fg:w="126"/><text x="82.6622%" y="143.50"></text></g><g><title>__rust_realloc (111 instructions, 0.23%)</title><rect x="82.8030%" y="117" width="0.2315%" height="15" fill="rgb(216,46,13)" fg:x="39709" fg:w="111"/><text x="83.0960%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.33%)</title><rect x="82.8030%" y="133" width="0.3253%" height="15" fill="rgb(205,184,25)" fg:x="39709" fg:w="156"/><text x="83.0960%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (451 instructions, 0.94%)</title><rect x="82.3693%" y="149" width="0.9404%" height="15" fill="rgb(228,1,10)" fg:x="39501" fg:w="451"/><text x="82.6622%" y="159.50"></text></g><g><title>memcpy (289 instructions, 0.60%)</title><rect x="83.3097%" y="149" width="0.6026%" height="15" fill="rgb(213,116,27)" fg:x="39952" fg:w="289"/><text x="83.6027%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="83.9123%" y="133" width="0.0480%" height="15" fill="rgb(241,95,50)" fg:x="40241" fg:w="23"/><text x="84.2053%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.29%)</title><rect x="83.9123%" y="149" width="0.2878%" height="15" fill="rgb(238,48,32)" fg:x="40241" fg:w="138"/><text x="84.2053%" y="159.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.08%)</title><rect x="84.2001%" y="149" width="1.0802%" height="15" fill="rgb(235,113,49)" fg:x="40379" fg:w="518"/><text x="84.4931%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="85.2803%" y="117" width="0.1731%" height="15" fill="rgb(205,127,43)" fg:x="40897" fg:w="83"/><text x="85.5732%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="85.2803%" y="133" width="0.2627%" height="15" fill="rgb(250,162,2)" fg:x="40897" fg:w="126"/><text x="85.5732%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.43%)</title><rect x="85.2803%" y="149" width="0.4337%" height="15" fill="rgb(220,13,41)" fg:x="40897" fg:w="208"/><text x="85.5732%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="85.7140%" y="149" width="0.1731%" height="15" fill="rgb(249,221,25)" fg:x="41105" fg:w="83"/><text x="86.0070%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.11%)</title><rect x="85.8871%" y="149" width="0.1063%" height="15" fill="rgb(215,208,19)" fg:x="41188" fg:w="51"/><text x="86.1800%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.11%)</title><rect x="85.9934%" y="149" width="0.1063%" height="15" fill="rgb(236,175,2)" fg:x="41239" fg:w="51"/><text x="86.2864%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="86.0998%" y="149" width="0.1251%" height="15" fill="rgb(241,52,2)" fg:x="41290" fg:w="60"/><text x="86.3927%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="86.2249%" y="101" width="0.1230%" height="15" fill="rgb(248,140,14)" fg:x="41350" fg:w="59"/><text x="86.5178%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.34%)</title><rect x="86.3479%" y="101" width="0.3420%" height="15" fill="rgb(253,22,42)" fg:x="41409" fg:w="164"/><text x="86.6409%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.63%)</title><rect x="86.2249%" y="117" width="0.6297%" height="15" fill="rgb(234,61,47)" fg:x="41350" fg:w="302"/><text x="86.5178%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (523 instructions, 1.09%)</title><rect x="86.2249%" y="133" width="1.0906%" height="15" fill="rgb(208,226,15)" fg:x="41350" fg:w="523"/><text x="86.5178%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="87.3155%" y="101" width="0.1731%" height="15" fill="rgb(217,221,4)" fg:x="41873" fg:w="83"/><text x="87.6084%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="87.3155%" y="117" width="0.2627%" height="15" fill="rgb(212,174,34)" fg:x="41873" fg:w="126"/><text x="87.6084%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.43%)</title><rect x="87.3155%" y="133" width="0.4337%" height="15" fill="rgb(253,83,4)" fg:x="41873" fg:w="208"/><text x="87.6084%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (924 instructions, 1.93%)</title><rect x="86.2249%" y="149" width="1.9268%" height="15" fill="rgb(250,195,49)" fg:x="41350" fg:w="924"/><text x="86.5178%" y="159.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="88.1516%" y="149" width="0.0730%" height="15" fill="rgb(241,192,25)" fg:x="42274" fg:w="35"/><text x="88.4446%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="88.2246%" y="149" width="0.1251%" height="15" fill="rgb(208,124,10)" fg:x="42309" fg:w="60"/><text x="88.5176%" y="159.50"></text></g><g><title>std::io::Write::write_all (519 instructions, 1.08%)</title><rect x="88.3497%" y="149" width="1.0822%" height="15" fill="rgb(222,33,0)" fg:x="42369" fg:w="519"/><text x="88.6427%" y="159.50"></text></g><g><title>std::io::Write::write_all (543 instructions, 1.13%)</title><rect x="89.4320%" y="149" width="1.1323%" height="15" fill="rgb(234,209,28)" fg:x="42888" fg:w="543"/><text x="89.7249%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="90.7499%" y="133" width="0.0563%" height="15" fill="rgb(224,11,23)" fg:x="43520" fg:w="27"/><text x="91.0428%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.48%)</title><rect x="90.5643%" y="149" width="0.4817%" height="15" fill="rgb(232,99,1)" fg:x="43431" fg:w="231"/><text x="90.8572%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="91.0460%" y="149" width="0.0271%" height="15" fill="rgb(237,95,45)" fg:x="43662" fg:w="13"/><text x="91.3389%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="91.0731%" y="133" width="0.0563%" height="15" fill="rgb(208,109,11)" fg:x="43675" fg:w="27"/><text x="91.3660%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="91.1294%" y="133" width="0.0563%" height="15" fill="rgb(216,190,48)" fg:x="43702" fg:w="27"/><text x="91.4223%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.41%)</title><rect x="91.0731%" y="149" width="0.4108%" height="15" fill="rgb(251,171,36)" fg:x="43675" fg:w="197"/><text x="91.3660%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="91.4839%" y="149" width="0.0146%" height="15" fill="rgb(230,62,22)" fg:x="43872" fg:w="7"/><text x="91.7768%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="91.4985%" y="149" width="0.0271%" height="15" fill="rgb(225,114,35)" fg:x="43879" fg:w="13"/><text x="91.7914%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="91.5256%" y="133" width="0.0563%" height="15" fill="rgb(215,118,42)" fg:x="43892" fg:w="27"/><text x="91.8185%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.30%)</title><rect x="91.5256%" y="149" width="0.2961%" height="15" fill="rgb(243,119,21)" fg:x="43892" fg:w="142"/><text x="91.8185%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="91.9468%" y="133" width="0.0563%" height="15" fill="rgb(252,177,53)" fg:x="44094" fg:w="27"/><text x="92.2398%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (175 instructions, 0.36%)</title><rect x="91.8217%" y="149" width="0.3649%" height="15" fill="rgb(237,209,29)" fg:x="44034" fg:w="175"/><text x="92.1146%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (14,070 instructions, 29.34%)</title><rect x="66.0126%" y="165" width="29.3394%" height="15" fill="rgb(212,65,23)" fg:x="31657" fg:w="14070"/><text x="66.3056%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::__canister_method_principalToAccount::{{closure}} (47,177 instructions, 98.38%)</title><rect x="0.3962%" y="181" width="98.3756%" height="15" fill="rgb(230,222,46)" fg:x="190" fg:w="47177"/><text x="0.6892%" y="191.50">sha::__canister_method_principalToAccount::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="98.7718%" y="181" width="0.0292%" height="15" fill="rgb(215,135,32)" fg:x="47367" fg:w="14"/><text x="99.0648%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="98.8031%" y="165" width="0.0563%" height="15" fill="rgb(246,101,22)" fg:x="47382" fg:w="27"/><text x="99.0960%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="99.1033%" y="165" width="0.0563%" height="15" fill="rgb(206,107,13)" fg:x="47526" fg:w="27"/><text x="99.3963%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.14%)</title><rect x="99.1596%" y="165" width="0.1439%" height="15" fill="rgb(250,100,44)" fg:x="47553" fg:w="69"/><text x="99.4526%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.14%)</title><rect x="99.3035%" y="165" width="0.1418%" height="15" fill="rgb(231,147,38)" fg:x="47622" fg:w="68"/><text x="99.5965%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (430 instructions, 0.90%)</title><rect x="98.8031%" y="181" width="0.8967%" height="15" fill="rgb(229,8,40)" fg:x="47382" fg:w="430"/><text x="99.0960%" y="191.50"></text></g><g><title>all (47,956 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(221,135,30)" fg:x="0" fg:w="47956"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToAccount (47,956 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(249,193,18)" fg:x="0" fg:w="47956"/><text x="0.2930%" y="207.50">canister_update principalToAccount</text></g></svg></svg>