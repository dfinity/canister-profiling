<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToAccount</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="42406"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="181" width="0.0448%" height="15" fill="rgb(240,211,49)" fg:x="0" fg:w="19"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="0.0448%" y="181" width="0.1839%" height="15" fill="rgb(219,149,40)" fg:x="19" fg:w="78"/><text x="0.3378%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.2287%" y="181" width="0.1792%" height="15" fill="rgb(210,127,46)" fg:x="97" fg:w="76"/><text x="0.5217%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.4080%" y="165" width="0.1792%" height="15" fill="rgb(220,106,7)" fg:x="173" fg:w="76"/><text x="0.7009%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="0.5872%" y="149" width="0.1627%" height="15" fill="rgb(249,31,22)" fg:x="249" fg:w="69"/><text x="0.8801%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.96%)</title><rect x="0.7499%" y="149" width="0.9574%" height="15" fill="rgb(253,1,49)" fg:x="318" fg:w="406"/><text x="1.0429%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="1.7073%" y="149" width="0.1934%" height="15" fill="rgb(227,144,33)" fg:x="724" fg:w="82"/><text x="2.0003%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="1.9007%" y="149" width="0.1273%" height="15" fill="rgb(249,163,44)" fg:x="806" fg:w="54"/><text x="2.1936%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.0280%" y="149" width="0.1273%" height="15" fill="rgb(234,15,39)" fg:x="860" fg:w="54"/><text x="2.3210%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.1554%" y="149" width="0.1273%" height="15" fill="rgb(207,66,16)" fg:x="914" fg:w="54"/><text x="2.4483%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.2827%" y="149" width="0.1273%" height="15" fill="rgb(233,112,24)" fg:x="968" fg:w="54"/><text x="2.5757%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="2.4100%" y="149" width="0.1627%" height="15" fill="rgb(230,90,22)" fg:x="1022" fg:w="69"/><text x="2.7030%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.5727%" y="149" width="0.1533%" height="15" fill="rgb(229,61,13)" fg:x="1091" fg:w="65"/><text x="2.8657%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.96%)</title><rect x="2.7260%" y="149" width="0.9574%" height="15" fill="rgb(225,57,24)" fg:x="1156" fg:w="406"/><text x="3.0190%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.6834%" y="149" width="0.0377%" height="15" fill="rgb(208,169,48)" fg:x="1562" fg:w="16"/><text x="3.9764%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="3.7212%" y="133" width="0.1792%" height="15" fill="rgb(244,218,51)" fg:x="1578" fg:w="76"/><text x="4.0141%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.9004%" y="101" width="0.1415%" height="15" fill="rgb(214,148,10)" fg:x="1654" fg:w="60"/><text x="4.1934%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="3.9004%" y="117" width="0.2004%" height="15" fill="rgb(225,174,27)" fg:x="1654" fg:w="85"/><text x="4.1934%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.1008%" y="69" width="0.0212%" height="15" fill="rgb(230,96,26)" fg:x="1739" fg:w="9"/><text x="4.3938%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.1221%" y="53" width="0.0707%" height="15" fill="rgb(232,10,30)" fg:x="1748" fg:w="30"/><text x="4.4150%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.1221%" y="69" width="0.1297%" height="15" fill="rgb(222,8,50)" fg:x="1748" fg:w="55"/><text x="4.4150%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="4.1008%" y="85" width="0.2783%" height="15" fill="rgb(213,81,27)" fg:x="1739" fg:w="118"/><text x="4.3938%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="4.1008%" y="101" width="0.4032%" height="15" fill="rgb(245,50,10)" fg:x="1739" fg:w="171"/><text x="4.3938%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="4.1008%" y="117" width="0.4150%" height="15" fill="rgb(216,100,18)" fg:x="1739" fg:w="176"/><text x="4.3938%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.88%)</title><rect x="3.9004%" y="133" width="0.8772%" height="15" fill="rgb(236,147,54)" fg:x="1654" fg:w="372"/><text x="4.1934%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.39%)</title><rect x="3.7212%" y="149" width="1.3890%" height="15" fill="rgb(205,143,26)" fg:x="1578" fg:w="589"/><text x="4.0141%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="5.1101%" y="149" width="0.1934%" height="15" fill="rgb(236,26,9)" fg:x="2167" fg:w="82"/><text x="5.4031%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="5.3035%" y="149" width="0.1297%" height="15" fill="rgb(221,165,53)" fg:x="2249" fg:w="55"/><text x="5.5965%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="5.4332%" y="149" width="0.1486%" height="15" fill="rgb(214,110,17)" fg:x="2304" fg:w="63"/><text x="5.7262%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="5.5818%" y="149" width="0.1533%" height="15" fill="rgb(237,197,12)" fg:x="2367" fg:w="65"/><text x="5.8747%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.96%)</title><rect x="5.7350%" y="133" width="0.9574%" height="15" fill="rgb(205,84,17)" fg:x="2432" fg:w="406"/><text x="6.0280%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="6.6924%" y="133" width="0.0377%" height="15" fill="rgb(237,18,45)" fg:x="2838" fg:w="16"/><text x="6.9854%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="6.7302%" y="117" width="0.1792%" height="15" fill="rgb(221,87,14)" fg:x="2854" fg:w="76"/><text x="7.0231%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="6.9094%" y="85" width="0.1415%" height="15" fill="rgb(238,186,15)" fg:x="2930" fg:w="60"/><text x="7.2024%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="6.9094%" y="101" width="0.2004%" height="15" fill="rgb(208,115,11)" fg:x="2930" fg:w="85"/><text x="7.2024%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.1098%" y="53" width="0.0212%" height="15" fill="rgb(254,175,0)" fg:x="3015" fg:w="9"/><text x="7.4028%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.1311%" y="37" width="0.0707%" height="15" fill="rgb(227,24,42)" fg:x="3024" fg:w="30"/><text x="7.4240%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.1311%" y="53" width="0.1297%" height="15" fill="rgb(223,211,37)" fg:x="3024" fg:w="55"/><text x="7.4240%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="7.1098%" y="69" width="0.2783%" height="15" fill="rgb(235,49,27)" fg:x="3015" fg:w="118"/><text x="7.4028%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="7.1098%" y="85" width="0.4032%" height="15" fill="rgb(254,97,51)" fg:x="3015" fg:w="171"/><text x="7.4028%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="7.1098%" y="101" width="0.4150%" height="15" fill="rgb(249,51,40)" fg:x="3015" fg:w="176"/><text x="7.4028%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.88%)</title><rect x="6.9094%" y="117" width="0.8772%" height="15" fill="rgb(210,128,45)" fg:x="2930" fg:w="372"/><text x="7.2024%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.39%)</title><rect x="6.7302%" y="133" width="1.3890%" height="15" fill="rgb(224,137,50)" fg:x="2854" fg:w="589"/><text x="7.0231%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="8.1191%" y="133" width="0.1934%" height="15" fill="rgb(242,15,9)" fg:x="3443" fg:w="82"/><text x="8.4121%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="8.3125%" y="133" width="0.1297%" height="15" fill="rgb(233,187,41)" fg:x="3525" fg:w="55"/><text x="8.6055%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="8.4422%" y="117" width="0.1627%" height="15" fill="rgb(227,2,29)" fg:x="3580" fg:w="69"/><text x="8.7352%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="8.6049%" y="117" width="0.2146%" height="15" fill="rgb(222,70,3)" fg:x="3649" fg:w="91"/><text x="8.8979%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="8.8195%" y="117" width="0.1486%" height="15" fill="rgb(213,11,42)" fg:x="3740" fg:w="63"/><text x="9.1125%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (286 instructions, 0.67%)</title><rect x="8.4422%" y="133" width="0.6744%" height="15" fill="rgb(225,150,9)" fg:x="3580" fg:w="286"/><text x="8.7352%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="9.1166%" y="133" width="0.1792%" height="15" fill="rgb(230,162,45)" fg:x="3866" fg:w="76"/><text x="9.4096%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,713 instructions, 4.04%)</title><rect x="5.7350%" y="149" width="4.0395%" height="15" fill="rgb(222,14,52)" fg:x="2432" fg:w="1713"/><text x="6.0280%" y="159.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="9.7746%" y="149" width="0.1486%" height="15" fill="rgb(254,198,14)" fg:x="4145" fg:w="63"/><text x="10.0675%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.9231%" y="149" width="0.0307%" height="15" fill="rgb(220,217,30)" fg:x="4208" fg:w="13"/><text x="10.2161%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.9538%" y="149" width="0.0307%" height="15" fill="rgb(215,146,41)" fg:x="4221" fg:w="13"/><text x="10.2467%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="9.9844%" y="149" width="0.0165%" height="15" fill="rgb(217,27,36)" fg:x="4234" fg:w="7"/><text x="10.2774%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="10.0009%" y="149" width="0.0354%" height="15" fill="rgb(219,218,39)" fg:x="4241" fg:w="15"/><text x="10.2939%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.0363%" y="133" width="0.1792%" height="15" fill="rgb(219,4,42)" fg:x="4256" fg:w="76"/><text x="10.3293%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.37%)</title><rect x="10.0363%" y="149" width="0.3749%" height="15" fill="rgb(249,119,36)" fg:x="4256" fg:w="159"/><text x="10.3293%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.4113%" y="117" width="0.1792%" height="15" fill="rgb(209,23,33)" fg:x="4415" fg:w="76"/><text x="10.7042%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="10.4113%" y="133" width="0.2594%" height="15" fill="rgb(211,10,0)" fg:x="4415" fg:w="110"/><text x="10.7042%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.42%)</title><rect x="10.4113%" y="149" width="0.4198%" height="15" fill="rgb(208,99,37)" fg:x="4415" fg:w="178"/><text x="10.7042%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.8310%" y="149" width="0.1792%" height="15" fill="rgb(213,132,31)" fg:x="4593" fg:w="76"/><text x="11.1240%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.0102%" y="149" width="0.1910%" height="15" fill="rgb(243,129,40)" fg:x="4669" fg:w="81"/><text x="11.3032%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.2012%" y="149" width="0.1792%" height="15" fill="rgb(210,66,33)" fg:x="4750" fg:w="76"/><text x="11.4942%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.3805%" y="149" width="0.1792%" height="15" fill="rgb(209,189,4)" fg:x="4826" fg:w="76"/><text x="11.6734%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.5644%" y="149" width="0.1910%" height="15" fill="rgb(214,107,37)" fg:x="4904" fg:w="81"/><text x="11.8574%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.90%)</title><rect x="11.7554%" y="149" width="0.8961%" height="15" fill="rgb(245,88,54)" fg:x="4985" fg:w="380"/><text x="12.0484%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.90%)</title><rect x="12.6515%" y="149" width="0.8961%" height="15" fill="rgb(205,146,20)" fg:x="5365" fg:w="380"/><text x="12.9445%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,440 instructions, 15.19%)</title><rect x="0.5872%" y="165" width="15.1865%" height="15" fill="rgb(220,161,25)" fg:x="249" fg:w="6440"/><text x="0.8801%" y="175.50">candid::de::IDLDese..</text></g><g><title>memcpy (335 instructions, 0.79%)</title><rect x="15.7737%" y="165" width="0.7900%" height="15" fill="rgb(215,152,15)" fg:x="6689" fg:w="335"/><text x="16.0667%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="16.5637%" y="133" width="0.0118%" height="15" fill="rgb(233,192,44)" fg:x="7024" fg:w="5"/><text x="16.8567%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="16.5755%" y="117" width="0.1250%" height="15" fill="rgb(240,170,46)" fg:x="7029" fg:w="53"/><text x="16.8685%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.91%)</title><rect x="16.7005%" y="117" width="0.9055%" height="15" fill="rgb(207,104,33)" fg:x="7082" fg:w="384"/><text x="16.9934%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="17.6060%" y="117" width="0.3820%" height="15" fill="rgb(219,21,39)" fg:x="7466" fg:w="162"/><text x="17.8990%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.97%)</title><rect x="16.5755%" y="133" width="1.9714%" height="15" fill="rgb(214,133,29)" fg:x="7029" fg:w="836"/><text x="16.8685%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (954 instructions, 2.25%)</title><rect x="16.5637%" y="149" width="2.2497%" height="15" fill="rgb(226,93,6)" fg:x="7024" fg:w="954"/><text x="16.8567%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="18.8134%" y="149" width="0.1792%" height="15" fill="rgb(252,222,34)" fg:x="7978" fg:w="76"/><text x="19.1063%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="18.9926%" y="133" width="0.0118%" height="15" fill="rgb(252,92,48)" fg:x="8054" fg:w="5"/><text x="19.2856%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="19.0044%" y="117" width="0.1250%" height="15" fill="rgb(245,223,24)" fg:x="8059" fg:w="53"/><text x="19.2974%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.91%)</title><rect x="19.1294%" y="117" width="0.9055%" height="15" fill="rgb(205,176,3)" fg:x="8112" fg:w="384"/><text x="19.4223%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="20.0349%" y="117" width="0.3820%" height="15" fill="rgb(235,151,15)" fg:x="8496" fg:w="162"/><text x="20.3279%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.97%)</title><rect x="19.0044%" y="133" width="1.9714%" height="15" fill="rgb(237,209,11)" fg:x="8059" fg:w="836"/><text x="19.2974%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,045 instructions, 2.46%)</title><rect x="18.9926%" y="149" width="2.4643%" height="15" fill="rgb(243,227,24)" fg:x="8054" fg:w="1045"/><text x="19.2856%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="21.4569%" y="149" width="0.1792%" height="15" fill="rgb(239,193,16)" fg:x="9099" fg:w="76"/><text x="21.7498%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="21.6361%" y="133" width="0.0118%" height="15" fill="rgb(231,27,9)" fg:x="9175" fg:w="5"/><text x="21.9291%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="21.6479%" y="117" width="0.1250%" height="15" fill="rgb(219,169,10)" fg:x="9180" fg:w="53"/><text x="21.9408%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.91%)</title><rect x="21.7729%" y="117" width="0.9055%" height="15" fill="rgb(244,229,43)" fg:x="9233" fg:w="384"/><text x="22.0658%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="22.6784%" y="117" width="0.3820%" height="15" fill="rgb(254,38,20)" fg:x="9617" fg:w="162"/><text x="22.9714%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.97%)</title><rect x="21.6479%" y="133" width="1.9714%" height="15" fill="rgb(250,47,30)" fg:x="9180" fg:w="836"/><text x="21.9408%" y="143.50"></text></g><g><title>memcmp (740 instructions, 1.75%)</title><rect x="23.6193%" y="133" width="1.7450%" height="15" fill="rgb(224,124,36)" fg:x="10016" fg:w="740"/><text x="23.9123%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="25.3643%" y="117" width="0.1910%" height="15" fill="rgb(246,68,51)" fg:x="10756" fg:w="81"/><text x="25.6573%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="25.3643%" y="133" width="0.2547%" height="15" fill="rgb(253,43,49)" fg:x="10756" fg:w="108"/><text x="25.6573%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,858 instructions, 4.38%)</title><rect x="21.6361%" y="149" width="4.3815%" height="15" fill="rgb(219,54,36)" fg:x="9175" fg:w="1858"/><text x="21.9291%" y="159.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.0175%" y="101" width="0.1250%" height="15" fill="rgb(227,133,34)" fg:x="11033" fg:w="53"/><text x="26.3105%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="26.0175%" y="117" width="0.1839%" height="15" fill="rgb(247,227,15)" fg:x="11033" fg:w="78"/><text x="26.3105%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.7085%" y="101" width="0.1250%" height="15" fill="rgb(229,96,14)" fg:x="11326" fg:w="53"/><text x="27.0015%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="26.7085%" y="117" width="0.1839%" height="15" fill="rgb(220,79,17)" fg:x="11326" fg:w="78"/><text x="27.0015%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (586 instructions, 1.38%)</title><rect x="26.0175%" y="133" width="1.3819%" height="15" fill="rgb(205,131,53)" fg:x="11033" fg:w="586"/><text x="26.3105%" y="143.50"></text></g><g><title>candid::types::internal::env_id (859 instructions, 2.03%)</title><rect x="26.0175%" y="149" width="2.0257%" height="15" fill="rgb(209,50,29)" fg:x="11033" fg:w="859"/><text x="26.3105%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,975 instructions, 11.73%)</title><rect x="16.5637%" y="165" width="11.7318%" height="15" fill="rgb(245,86,46)" fg:x="7024" fg:w="4975"/><text x="16.8567%" y="175.50">candid::types:..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="28.2955%" y="149" width="0.1108%" height="15" fill="rgb(235,66,46)" fg:x="11999" fg:w="47"/><text x="28.5885%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="28.4064%" y="133" width="0.2901%" height="15" fill="rgb(232,148,31)" fg:x="12046" fg:w="123"/><text x="28.6993%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="28.7601%" y="133" width="0.2901%" height="15" fill="rgb(217,149,8)" fg:x="12196" fg:w="123"/><text x="29.0530%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.71%)</title><rect x="28.4064%" y="149" width="0.7074%" height="15" fill="rgb(209,183,11)" fg:x="12046" fg:w="300"/><text x="28.6993%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="29.1138%" y="133" width="0.0660%" height="15" fill="rgb(208,55,20)" fg:x="12346" fg:w="28"/><text x="29.4068%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="29.1798%" y="133" width="0.0660%" height="15" fill="rgb(218,39,14)" fg:x="12374" fg:w="28"/><text x="29.4728%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2229 (15 instructions, 0.04%)</title><rect x="29.2459%" y="133" width="0.0354%" height="15" fill="rgb(216,169,33)" fg:x="12402" fg:w="15"/><text x="29.5388%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2229 (15 instructions, 0.04%)</title><rect x="29.2812%" y="133" width="0.0354%" height="15" fill="rgb(233,80,24)" fg:x="12417" fg:w="15"/><text x="29.5742%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="29.3166%" y="133" width="0.1839%" height="15" fill="rgb(213,179,31)" fg:x="12432" fg:w="78"/><text x="29.6096%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="29.5005%" y="133" width="0.1627%" height="15" fill="rgb(209,19,5)" fg:x="12510" fg:w="69"/><text x="29.7935%" y="143.50"></text></g><g><title>binread::binary_template::write_named (79 instructions, 0.19%)</title><rect x="29.6633%" y="117" width="0.1863%" height="15" fill="rgb(219,18,35)" fg:x="12579" fg:w="79"/><text x="29.9562%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (149 instructions, 0.35%)</title><rect x="29.6633%" y="133" width="0.3514%" height="15" fill="rgb(209,169,16)" fg:x="12579" fg:w="149"/><text x="29.9562%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="30.0146%" y="133" width="0.1533%" height="15" fill="rgb(245,90,51)" fg:x="12728" fg:w="65"/><text x="30.3076%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.96%)</title><rect x="30.1679%" y="133" width="0.9574%" height="15" fill="rgb(220,99,45)" fg:x="12793" fg:w="406"/><text x="30.4609%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="31.1253%" y="117" width="0.1792%" height="15" fill="rgb(249,89,25)" fg:x="13199" fg:w="76"/><text x="31.4183%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="31.3045%" y="85" width="0.1415%" height="15" fill="rgb(239,193,0)" fg:x="13275" fg:w="60"/><text x="31.5975%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="31.3045%" y="101" width="0.2004%" height="15" fill="rgb(231,126,1)" fg:x="13275" fg:w="85"/><text x="31.5975%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="31.5050%" y="53" width="0.0212%" height="15" fill="rgb(243,166,3)" fg:x="13360" fg:w="9"/><text x="31.7979%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="31.5262%" y="37" width="0.0707%" height="15" fill="rgb(223,22,34)" fg:x="13369" fg:w="30"/><text x="31.8192%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="31.5262%" y="53" width="0.1297%" height="15" fill="rgb(251,52,51)" fg:x="13369" fg:w="55"/><text x="31.8192%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="31.5050%" y="69" width="0.2783%" height="15" fill="rgb(221,165,28)" fg:x="13360" fg:w="118"/><text x="31.7979%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.40%)</title><rect x="31.5050%" y="85" width="0.4032%" height="15" fill="rgb(218,121,47)" fg:x="13360" fg:w="171"/><text x="31.7979%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="31.5050%" y="101" width="0.4150%" height="15" fill="rgb(209,120,9)" fg:x="13360" fg:w="176"/><text x="31.7979%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.88%)</title><rect x="31.3045%" y="117" width="0.8772%" height="15" fill="rgb(236,68,12)" fg:x="13275" fg:w="372"/><text x="31.5975%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.39%)</title><rect x="31.1253%" y="133" width="1.3890%" height="15" fill="rgb(225,194,26)" fg:x="13199" fg:w="589"/><text x="31.4183%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="32.5143%" y="133" width="0.1934%" height="15" fill="rgb(231,84,39)" fg:x="13788" fg:w="82"/><text x="32.8072%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="32.7076%" y="133" width="0.1297%" height="15" fill="rgb(210,11,45)" fg:x="13870" fg:w="55"/><text x="33.0006%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.8373%" y="117" width="0.1321%" height="15" fill="rgb(224,54,52)" fg:x="13925" fg:w="56"/><text x="33.1303%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 instructions, 0.27%)</title><rect x="32.8373%" y="133" width="0.2665%" height="15" fill="rgb(238,102,14)" fg:x="13925" fg:w="113"/><text x="33.1303%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="33.1038%" y="133" width="0.1792%" height="15" fill="rgb(243,160,52)" fg:x="14038" fg:w="76"/><text x="33.3968%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.2830%" y="117" width="0.1321%" height="15" fill="rgb(216,114,19)" fg:x="14114" fg:w="56"/><text x="33.5760%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.5495%" y="117" width="0.1321%" height="15" fill="rgb(244,166,37)" fg:x="14227" fg:w="56"/><text x="33.8425%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.8160%" y="117" width="0.1321%" height="15" fill="rgb(246,29,44)" fg:x="14340" fg:w="56"/><text x="34.1089%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.0824%" y="117" width="0.1321%" height="15" fill="rgb(215,56,53)" fg:x="14453" fg:w="56"/><text x="34.3754%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.3489%" y="117" width="0.1321%" height="15" fill="rgb(217,60,2)" fg:x="14566" fg:w="56"/><text x="34.6419%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.6154%" y="117" width="0.1321%" height="15" fill="rgb(207,26,24)" fg:x="14679" fg:w="56"/><text x="34.9084%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.8819%" y="117" width="0.1321%" height="15" fill="rgb(252,210,15)" fg:x="14792" fg:w="56"/><text x="35.1748%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.1483%" y="117" width="0.1321%" height="15" fill="rgb(253,209,26)" fg:x="14905" fg:w="56"/><text x="35.4413%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (904 instructions, 2.13%)</title><rect x="33.2830%" y="133" width="2.1318%" height="15" fill="rgb(238,170,14)" fg:x="14114" fg:w="904"/><text x="33.5760%" y="143.50">&lt;..</text></g><g><title>__rust_realloc (101 instructions, 0.24%)</title><rect x="35.4148%" y="101" width="0.2382%" height="15" fill="rgb(216,178,15)" fg:x="15018" fg:w="101"/><text x="35.7078%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.32%)</title><rect x="35.4148%" y="117" width="0.3207%" height="15" fill="rgb(250,197,2)" fg:x="15018" fg:w="136"/><text x="35.7078%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.49%)</title><rect x="35.4148%" y="133" width="0.4929%" height="15" fill="rgb(212,70,42)" fg:x="15018" fg:w="209"/><text x="35.7078%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.9077%" y="117" width="0.1321%" height="15" fill="rgb(227,213,9)" fg:x="15227" fg:w="56"/><text x="36.2006%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.1741%" y="117" width="0.1321%" height="15" fill="rgb(245,99,25)" fg:x="15340" fg:w="56"/><text x="36.4671%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.4406%" y="117" width="0.1321%" height="15" fill="rgb(250,82,29)" fg:x="15453" fg:w="56"/><text x="36.7336%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.7071%" y="117" width="0.1321%" height="15" fill="rgb(241,226,54)" fg:x="15566" fg:w="56"/><text x="37.0000%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.9735%" y="117" width="0.1321%" height="15" fill="rgb(221,99,41)" fg:x="15679" fg:w="56"/><text x="37.2665%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="37.2400%" y="117" width="0.1321%" height="15" fill="rgb(213,90,21)" fg:x="15792" fg:w="56"/><text x="37.5330%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="37.5065%" y="117" width="0.1321%" height="15" fill="rgb(205,208,24)" fg:x="15905" fg:w="56"/><text x="37.7995%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (791 instructions, 1.87%)</title><rect x="35.9077%" y="133" width="1.8653%" height="15" fill="rgb(246,31,12)" fg:x="15227" fg:w="791"/><text x="36.2006%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 instructions, 0.07%)</title><rect x="37.7730%" y="133" width="0.0707%" height="15" fill="rgb(213,154,6)" fg:x="16018" fg:w="30"/><text x="38.0659%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="37.8437%" y="133" width="0.1486%" height="15" fill="rgb(222,163,29)" fg:x="16048" fg:w="63"/><text x="38.1367%" y="143.50"></text></g><g><title>__rust_realloc (45 instructions, 0.11%)</title><rect x="37.9923%" y="101" width="0.1061%" height="15" fill="rgb(227,201,8)" fg:x="16111" fg:w="45"/><text x="38.2852%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 instructions, 0.19%)</title><rect x="37.9923%" y="117" width="0.1887%" height="15" fill="rgb(233,9,32)" fg:x="16111" fg:w="80"/><text x="38.2852%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (153 instructions, 0.36%)</title><rect x="37.9923%" y="133" width="0.3608%" height="15" fill="rgb(217,54,24)" fg:x="16111" fg:w="153"/><text x="38.2852%" y="143.50"></text></g><g><title>memcpy (206 instructions, 0.49%)</title><rect x="38.3531%" y="133" width="0.4858%" height="15" fill="rgb(235,192,0)" fg:x="16264" fg:w="206"/><text x="38.6460%" y="143.50"></text></g><g><title>memcpy (160 instructions, 0.38%)</title><rect x="38.8388%" y="133" width="0.3773%" height="15" fill="rgb(235,45,9)" fg:x="16470" fg:w="160"/><text x="39.1318%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="39.2161%" y="133" width="0.1910%" height="15" fill="rgb(246,42,40)" fg:x="16630" fg:w="81"/><text x="39.5091%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="39.4072%" y="133" width="0.1297%" height="15" fill="rgb(248,111,24)" fg:x="16711" fg:w="55"/><text x="39.7001%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (5,435 instructions, 12.82%)</title><rect x="29.1138%" y="149" width="12.8166%" height="15" fill="rgb(249,65,22)" fg:x="12346" fg:w="5435"/><text x="29.4068%" y="159.50">&lt;candid::types::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.9304%" y="149" width="0.0259%" height="15" fill="rgb(238,111,51)" fg:x="17781" fg:w="11"/><text x="42.2234%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.9563%" y="149" width="0.0259%" height="15" fill="rgb(250,118,22)" fg:x="17792" fg:w="11"/><text x="42.2493%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.9823%" y="149" width="0.0259%" height="15" fill="rgb(234,84,26)" fg:x="17803" fg:w="11"/><text x="42.2752%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,064 instructions, 14.30%)</title><rect x="28.2955%" y="165" width="14.2999%" height="15" fill="rgb(243,172,12)" fg:x="11999" fg:w="6064"/><text x="28.5885%" y="175.50">candid::de::IDLDes..</text></g><g><title>memcpy (410 instructions, 0.97%)</title><rect x="42.5954%" y="165" width="0.9668%" height="15" fill="rgb(236,150,49)" fg:x="18063" fg:w="410"/><text x="42.8884%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="43.5622%" y="133" width="0.0283%" height="15" fill="rgb(225,197,26)" fg:x="18473" fg:w="12"/><text x="43.8552%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="43.5905%" y="133" width="0.3962%" height="15" fill="rgb(214,17,42)" fg:x="18485" fg:w="168"/><text x="43.8835%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.22%)</title><rect x="43.9867%" y="101" width="0.2240%" height="15" fill="rgb(224,165,40)" fg:x="18653" fg:w="95"/><text x="44.2797%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (240 instructions, 0.57%)</title><rect x="43.9867%" y="117" width="0.5660%" height="15" fill="rgb(246,100,4)" fg:x="18653" fg:w="240"/><text x="44.2797%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (267 instructions, 0.63%)</title><rect x="43.9867%" y="133" width="0.6296%" height="15" fill="rgb(222,103,0)" fg:x="18653" fg:w="267"/><text x="44.2797%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="44.6163%" y="133" width="0.0259%" height="15" fill="rgb(227,189,26)" fg:x="18920" fg:w="11"/><text x="44.9093%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (500 instructions, 1.18%)</title><rect x="43.5622%" y="149" width="1.1791%" height="15" fill="rgb(214,202,17)" fg:x="18473" fg:w="500"/><text x="43.8552%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (535 instructions, 1.26%)</title><rect x="43.5622%" y="165" width="1.2616%" height="15" fill="rgb(229,111,3)" fg:x="18473" fg:w="535"/><text x="43.8552%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.13%)</title><rect x="44.8238%" y="149" width="0.1273%" height="15" fill="rgb(229,172,15)" fg:x="19008" fg:w="54"/><text x="45.1168%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.22%)</title><rect x="44.9512%" y="149" width="0.2240%" height="15" fill="rgb(230,224,35)" fg:x="19062" fg:w="95"/><text x="45.2442%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (230 instructions, 0.54%)</title><rect x="44.8238%" y="165" width="0.5424%" height="15" fill="rgb(251,141,6)" fg:x="19008" fg:w="230"/><text x="45.1168%" y="175.50"></text></g><g><title>memset (218 instructions, 0.51%)</title><rect x="45.3662%" y="165" width="0.5141%" height="15" fill="rgb(225,208,6)" fg:x="19238" fg:w="218"/><text x="45.6592%" y="175.50"></text></g><g><title>memcpy (206 instructions, 0.49%)</title><rect x="45.8803%" y="165" width="0.4858%" height="15" fill="rgb(246,181,16)" fg:x="19456" fg:w="206"/><text x="46.1733%" y="175.50"></text></g><g><title>memcpy (470 instructions, 1.11%)</title><rect x="46.3661%" y="165" width="1.1083%" height="15" fill="rgb(227,129,36)" fg:x="19662" fg:w="470"/><text x="46.6590%" y="175.50"></text></g><g><title>memset (56 instructions, 0.13%)</title><rect x="47.4744%" y="149" width="0.1321%" height="15" fill="rgb(248,117,24)" fg:x="20132" fg:w="56"/><text x="47.7674%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.76%)</title><rect x="47.6065%" y="149" width="11.7601%" height="15" fill="rgb(214,185,35)" fg:x="20188" fg:w="4987"/><text x="47.8994%" y="159.50">sha2::sha256::c..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.76%)</title><rect x="59.3666%" y="149" width="11.7601%" height="15" fill="rgb(236,150,34)" fg:x="25175" fg:w="4987"/><text x="59.6596%" y="159.50">sha2::sha256::c..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (10,354 instructions, 24.42%)</title><rect x="47.4744%" y="165" width="24.4164%" height="15" fill="rgb(243,228,27)" fg:x="20132" fg:w="10354"/><text x="47.7674%" y="175.50">&lt;sha2::core_api::Sha256VarCore as..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="71.8908%" y="165" width="0.1792%" height="15" fill="rgb(245,77,44)" fg:x="30486" fg:w="76"/><text x="72.1837%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="72.0700%" y="149" width="0.0118%" height="15" fill="rgb(235,214,42)" fg:x="30562" fg:w="5"/><text x="72.3630%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (90 instructions, 0.21%)</title><rect x="72.0818%" y="101" width="0.2122%" height="15" fill="rgb(221,74,3)" fg:x="30567" fg:w="90"/><text x="72.3747%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="72.2940%" y="101" width="0.1486%" height="15" fill="rgb(206,121,29)" fg:x="30657" fg:w="63"/><text x="72.5870%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (237 instructions, 0.56%)</title><rect x="72.0818%" y="117" width="0.5589%" height="15" fill="rgb(249,131,53)" fg:x="30567" fg:w="237"/><text x="72.3747%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (264 instructions, 0.62%)</title><rect x="72.0818%" y="133" width="0.6226%" height="15" fill="rgb(236,170,29)" fg:x="30567" fg:w="264"/><text x="72.3747%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="72.7043%" y="117" width="0.1297%" height="15" fill="rgb(247,96,15)" fg:x="30831" fg:w="55"/><text x="72.9973%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="72.8340%" y="117" width="0.1486%" height="15" fill="rgb(211,210,7)" fg:x="30886" fg:w="63"/><text x="73.1270%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (199 instructions, 0.47%)</title><rect x="72.7043%" y="133" width="0.4693%" height="15" fill="rgb(240,88,50)" fg:x="30831" fg:w="199"/><text x="72.9973%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (495 instructions, 1.17%)</title><rect x="72.0818%" y="149" width="1.1673%" height="15" fill="rgb(209,229,26)" fg:x="30567" fg:w="495"/><text x="72.3747%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="73.2491%" y="149" width="0.0259%" height="15" fill="rgb(210,68,23)" fg:x="31062" fg:w="11"/><text x="73.5420%" y="159.50"></text></g><g><title>memset (136 instructions, 0.32%)</title><rect x="73.2750%" y="149" width="0.3207%" height="15" fill="rgb(229,180,13)" fg:x="31073" fg:w="136"/><text x="73.5680%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="73.5957%" y="117" width="0.0118%" height="15" fill="rgb(236,53,44)" fg:x="31209" fg:w="5"/><text x="73.8887%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="73.5957%" y="133" width="0.0920%" height="15" fill="rgb(244,214,29)" fg:x="31209" fg:w="39"/><text x="73.8887%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="73.6877%" y="133" width="0.1792%" height="15" fill="rgb(220,75,29)" fg:x="31248" fg:w="76"/><text x="73.9807%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="73.8669%" y="117" width="0.0118%" height="15" fill="rgb(214,183,37)" fg:x="31324" fg:w="5"/><text x="74.1599%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="73.8787%" y="101" width="0.1250%" height="15" fill="rgb(239,117,29)" fg:x="31329" fg:w="53"/><text x="74.1717%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.86%)</title><rect x="74.0037%" y="101" width="0.8584%" height="15" fill="rgb(237,171,35)" fg:x="31382" fg:w="364"/><text x="74.2966%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.17%)</title><rect x="74.8620%" y="101" width="0.1698%" height="15" fill="rgb(229,178,53)" fg:x="31746" fg:w="72"/><text x="75.1550%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.71%)</title><rect x="73.8787%" y="117" width="1.7120%" height="15" fill="rgb(210,102,19)" fg:x="31329" fg:w="726"/><text x="74.1717%" y="127.50"></text></g><g><title>candid::types::internal::env_add (935 instructions, 2.20%)</title><rect x="73.8669%" y="133" width="2.2049%" height="15" fill="rgb(235,127,22)" fg:x="31324" fg:w="935"/><text x="74.1599%" y="143.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="76.0718%" y="133" width="0.1792%" height="15" fill="rgb(244,31,31)" fg:x="32259" fg:w="76"/><text x="76.3648%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="76.2510%" y="133" width="0.1792%" height="15" fill="rgb(231,43,21)" fg:x="32335" fg:w="76"/><text x="76.5440%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="76.4302%" y="117" width="0.0118%" height="15" fill="rgb(217,131,35)" fg:x="32411" fg:w="5"/><text x="76.7232%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.4420%" y="101" width="0.1250%" height="15" fill="rgb(221,149,4)" fg:x="32416" fg:w="53"/><text x="76.7350%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.86%)</title><rect x="76.5670%" y="101" width="0.8584%" height="15" fill="rgb(232,170,28)" fg:x="32469" fg:w="364"/><text x="76.8600%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.17%)</title><rect x="77.4254%" y="101" width="0.1698%" height="15" fill="rgb(238,56,10)" fg:x="32833" fg:w="72"/><text x="77.7183%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.71%)</title><rect x="76.4420%" y="117" width="1.7120%" height="15" fill="rgb(235,196,14)" fg:x="32416" fg:w="726"/><text x="76.7350%" y="127.50"></text></g><g><title>memcmp (614 instructions, 1.45%)</title><rect x="78.1540%" y="117" width="1.4479%" height="15" fill="rgb(216,45,48)" fg:x="33142" fg:w="614"/><text x="78.4470%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="79.6019%" y="101" width="0.1910%" height="15" fill="rgb(238,213,17)" fg:x="33756" fg:w="81"/><text x="79.8949%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="79.6019%" y="117" width="0.2547%" height="15" fill="rgb(212,13,2)" fg:x="33756" fg:w="108"/><text x="79.8949%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,622 instructions, 3.82%)</title><rect x="76.4302%" y="133" width="3.8249%" height="15" fill="rgb(240,114,20)" fg:x="32411" fg:w="1622"/><text x="76.7232%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="80.2552%" y="85" width="0.1250%" height="15" fill="rgb(228,41,40)" fg:x="34033" fg:w="53"/><text x="80.5481%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="80.3801%" y="85" width="0.3632%" height="15" fill="rgb(244,132,35)" fg:x="34086" fg:w="154"/><text x="80.6731%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.61%)</title><rect x="80.2552%" y="101" width="0.6084%" height="15" fill="rgb(253,189,4)" fg:x="34033" fg:w="258"/><text x="80.5481%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.12%)</title><rect x="80.2552%" y="117" width="1.1154%" height="15" fill="rgb(224,37,19)" fg:x="34033" fg:w="473"/><text x="80.5481%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1266 (42 instructions, 0.10%)</title><rect x="81.3706%" y="117" width="0.0990%" height="15" fill="rgb(235,223,18)" fg:x="34506" fg:w="42"/><text x="81.6635%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.4696%" y="117" width="0.0259%" height="15" fill="rgb(235,163,25)" fg:x="34548" fg:w="11"/><text x="81.7626%" y="127.50"></text></g><g><title>candid::types::internal::env_id (685 instructions, 1.62%)</title><rect x="80.2552%" y="133" width="1.6153%" height="15" fill="rgb(217,145,28)" fg:x="34033" fg:w="685"/><text x="80.5481%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,633 instructions, 8.57%)</title><rect x="73.5957%" y="149" width="8.5672%" height="15" fill="rgb(223,223,32)" fg:x="31209" fg:w="3633"/><text x="73.8887%" y="159.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="82.1629%" y="117" width="0.1792%" height="15" fill="rgb(227,189,39)" fg:x="34842" fg:w="76"/><text x="82.4559%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="82.1629%" y="133" width="0.2594%" height="15" fill="rgb(248,10,22)" fg:x="34842" fg:w="110"/><text x="82.4559%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.42%)</title><rect x="82.1629%" y="149" width="0.4198%" height="15" fill="rgb(248,46,39)" fg:x="34842" fg:w="178"/><text x="82.4559%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.06%)</title><rect x="82.5827%" y="133" width="0.0566%" height="15" fill="rgb(248,113,48)" fg:x="35020" fg:w="24"/><text x="82.8756%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="82.6392%" y="101" width="0.1839%" height="15" fill="rgb(245,16,25)" fg:x="35044" fg:w="78"/><text x="82.9322%" y="111.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.36%)</title><rect x="82.6392%" y="117" width="0.3608%" height="15" fill="rgb(249,152,16)" fg:x="35044" fg:w="153"/><text x="82.9322%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="83.0000%" y="117" width="0.1792%" height="15" fill="rgb(250,16,1)" fg:x="35197" fg:w="76"/><text x="83.2930%" y="127.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.73%)</title><rect x="82.6392%" y="133" width="0.7263%" height="15" fill="rgb(249,138,3)" fg:x="35044" fg:w="308"/><text x="82.9322%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="83.3656%" y="85" width="0.1250%" height="15" fill="rgb(227,71,41)" fg:x="35352" fg:w="53"/><text x="83.6585%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="83.4905%" y="85" width="0.3632%" height="15" fill="rgb(209,184,23)" fg:x="35405" fg:w="154"/><text x="83.7835%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.61%)</title><rect x="83.3656%" y="101" width="0.6084%" height="15" fill="rgb(223,215,31)" fg:x="35352" fg:w="258"/><text x="83.6585%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.12%)</title><rect x="83.3656%" y="117" width="1.1154%" height="15" fill="rgb(210,146,28)" fg:x="35352" fg:w="473"/><text x="83.6585%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="84.4810%" y="117" width="0.1792%" height="15" fill="rgb(209,183,41)" fg:x="35825" fg:w="76"/><text x="84.7739%" y="127.50"></text></g><g><title>memset (136 instructions, 0.32%)</title><rect x="84.6602%" y="117" width="0.3207%" height="15" fill="rgb(209,224,45)" fg:x="35901" fg:w="136"/><text x="84.9532%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (989 instructions, 2.33%)</title><rect x="83.3656%" y="133" width="2.3322%" height="15" fill="rgb(224,209,51)" fg:x="35352" fg:w="989"/><text x="83.6585%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="85.6978%" y="101" width="0.1792%" height="15" fill="rgb(223,17,39)" fg:x="36341" fg:w="76"/><text x="85.9907%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="85.6978%" y="117" width="0.2594%" height="15" fill="rgb(234,204,37)" fg:x="36341" fg:w="110"/><text x="85.9907%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.42%)</title><rect x="85.6978%" y="133" width="0.4198%" height="15" fill="rgb(236,120,5)" fg:x="36341" fg:w="178"/><text x="85.9907%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="86.1175%" y="85" width="0.1250%" height="15" fill="rgb(248,97,27)" fg:x="36519" fg:w="53"/><text x="86.4105%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="86.1175%" y="101" width="0.1839%" height="15" fill="rgb(240,66,17)" fg:x="36519" fg:w="78"/><text x="86.4105%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.69%)</title><rect x="86.1175%" y="117" width="0.6909%" height="15" fill="rgb(210,79,3)" fg:x="36519" fg:w="293"/><text x="86.4105%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="86.8085%" y="117" width="0.0424%" height="15" fill="rgb(214,176,27)" fg:x="36812" fg:w="18"/><text x="87.1014%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="86.8509%" y="117" width="0.0259%" height="15" fill="rgb(235,185,3)" fg:x="36830" fg:w="11"/><text x="87.1439%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (438 instructions, 1.03%)</title><rect x="86.1175%" y="133" width="1.0329%" height="15" fill="rgb(227,24,12)" fg:x="36519" fg:w="438"/><text x="86.4105%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="87.1504%" y="85" width="0.1792%" height="15" fill="rgb(252,169,48)" fg:x="36957" fg:w="76"/><text x="87.4434%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="87.1504%" y="101" width="0.2594%" height="15" fill="rgb(212,65,1)" fg:x="36957" fg:w="110"/><text x="87.4434%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.41%)</title><rect x="87.1504%" y="117" width="0.4127%" height="15" fill="rgb(242,39,24)" fg:x="36957" fg:w="175"/><text x="87.4434%" y="127.50"></text></g><g><title>leb128::write::signed (227 instructions, 0.54%)</title><rect x="87.1504%" y="133" width="0.5353%" height="15" fill="rgb(249,32,23)" fg:x="36957" fg:w="227"/><text x="87.4434%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (56 instructions, 0.13%)</title><rect x="87.6857%" y="133" width="0.1321%" height="15" fill="rgb(251,195,23)" fg:x="37184" fg:w="56"/><text x="87.9787%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="87.8178%" y="101" width="0.1910%" height="15" fill="rgb(236,174,8)" fg:x="37240" fg:w="81"/><text x="88.1107%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="87.8178%" y="117" width="0.2547%" height="15" fill="rgb(220,197,8)" fg:x="37240" fg:w="108"/><text x="88.1107%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="88.0724%" y="117" width="0.1839%" height="15" fill="rgb(240,108,37)" fg:x="37348" fg:w="78"/><text x="88.3654%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.51%)</title><rect x="87.8178%" y="133" width="0.5141%" height="15" fill="rgb(232,176,24)" fg:x="37240" fg:w="218"/><text x="88.1107%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="88.3318%" y="133" width="0.0259%" height="15" fill="rgb(243,35,29)" fg:x="37458" fg:w="11"/><text x="88.6248%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,652 instructions, 6.25%)</title><rect x="82.5827%" y="149" width="6.2538%" height="15" fill="rgb(210,37,18)" fg:x="35020" fg:w="2652"/><text x="82.8756%" y="159.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="88.8365%" y="149" width="0.0259%" height="15" fill="rgb(224,184,40)" fg:x="37672" fg:w="11"/><text x="89.1295%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="88.8624%" y="117" width="0.1792%" height="15" fill="rgb(236,39,29)" fg:x="37683" fg:w="76"/><text x="89.1554%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="88.8624%" y="133" width="0.2594%" height="15" fill="rgb(232,48,39)" fg:x="37683" fg:w="110"/><text x="89.1554%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.24%)</title><rect x="89.2751%" y="117" width="0.2382%" height="15" fill="rgb(236,34,42)" fg:x="37858" fg:w="101"/><text x="89.5681%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.32%)</title><rect x="89.2751%" y="133" width="0.3207%" height="15" fill="rgb(243,106,37)" fg:x="37858" fg:w="136"/><text x="89.5681%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (384 instructions, 0.91%)</title><rect x="88.8624%" y="149" width="0.9055%" height="15" fill="rgb(218,96,6)" fg:x="37683" fg:w="384"/><text x="89.1554%" y="159.50"></text></g><g><title>memcpy (272 instructions, 0.64%)</title><rect x="89.7680%" y="149" width="0.6414%" height="15" fill="rgb(235,130,12)" fg:x="38067" fg:w="272"/><text x="90.0609%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.28%)</title><rect x="90.4094%" y="149" width="0.2830%" height="15" fill="rgb(231,95,0)" fg:x="38339" fg:w="120"/><text x="90.7023%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.08%)</title><rect x="90.6924%" y="149" width="0.0755%" height="15" fill="rgb(228,12,23)" fg:x="38459" fg:w="32"/><text x="90.9853%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="90.7678%" y="117" width="0.1792%" height="15" fill="rgb(216,12,1)" fg:x="38491" fg:w="76"/><text x="91.0608%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="90.7678%" y="133" width="0.2594%" height="15" fill="rgb(219,59,3)" fg:x="38491" fg:w="110"/><text x="91.0608%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.41%)</title><rect x="90.7678%" y="149" width="0.4127%" height="15" fill="rgb(215,208,46)" fg:x="38491" fg:w="175"/><text x="91.0608%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="91.1805%" y="149" width="0.1792%" height="15" fill="rgb(254,224,29)" fg:x="38666" fg:w="76"/><text x="91.4735%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="91.3597%" y="149" width="0.1061%" height="15" fill="rgb(232,14,29)" fg:x="38742" fg:w="45"/><text x="91.6527%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="91.4658%" y="149" width="0.1061%" height="15" fill="rgb(208,45,52)" fg:x="38787" fg:w="45"/><text x="91.7588%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="91.5719%" y="149" width="0.1297%" height="15" fill="rgb(234,191,28)" fg:x="38832" fg:w="55"/><text x="91.8649%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="91.7016%" y="101" width="0.1250%" height="15" fill="rgb(244,67,43)" fg:x="38887" fg:w="53"/><text x="91.9946%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="91.8266%" y="101" width="0.3632%" height="15" fill="rgb(236,189,24)" fg:x="38940" fg:w="154"/><text x="92.1196%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.61%)</title><rect x="91.7016%" y="117" width="0.6084%" height="15" fill="rgb(239,214,33)" fg:x="38887" fg:w="258"/><text x="91.9946%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.12%)</title><rect x="91.7016%" y="133" width="1.1154%" height="15" fill="rgb(226,176,41)" fg:x="38887" fg:w="473"/><text x="91.9946%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="92.8171%" y="101" width="0.1792%" height="15" fill="rgb(248,47,8)" fg:x="39360" fg:w="76"/><text x="93.1100%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="92.8171%" y="117" width="0.2594%" height="15" fill="rgb(218,81,44)" fg:x="39360" fg:w="110"/><text x="93.1100%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.41%)</title><rect x="92.8171%" y="133" width="0.4127%" height="15" fill="rgb(213,98,6)" fg:x="39360" fg:w="175"/><text x="93.1100%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (821 instructions, 1.94%)</title><rect x="91.7016%" y="149" width="1.9360%" height="15" fill="rgb(222,85,22)" fg:x="38887" fg:w="821"/><text x="91.9946%" y="159.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="93.6377%" y="149" width="0.0707%" height="15" fill="rgb(239,46,39)" fg:x="39708" fg:w="30"/><text x="93.9307%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="93.7084%" y="149" width="0.1297%" height="15" fill="rgb(237,12,29)" fg:x="39738" fg:w="55"/><text x="94.0014%" y="159.50"></text></g><g><title>std::io::Write::write_all (33 instructions, 0.08%)</title><rect x="93.8381%" y="149" width="0.0778%" height="15" fill="rgb(214,77,8)" fg:x="39793" fg:w="33"/><text x="94.1311%" y="159.50"></text></g><g><title>std::io::Write::write_all (57 instructions, 0.13%)</title><rect x="93.9160%" y="149" width="0.1344%" height="15" fill="rgb(217,168,37)" fg:x="39826" fg:w="57"/><text x="94.2089%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="94.0504%" y="149" width="0.1910%" height="15" fill="rgb(221,217,23)" fg:x="39883" fg:w="81"/><text x="94.3433%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="94.2414%" y="149" width="0.2901%" height="15" fill="rgb(243,229,36)" fg:x="39964" fg:w="123"/><text x="94.5343%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.5314%" y="149" width="0.0259%" height="15" fill="rgb(251,163,40)" fg:x="40087" fg:w="11"/><text x="94.8244%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="94.5574%" y="149" width="0.3962%" height="15" fill="rgb(237,222,12)" fg:x="40098" fg:w="168"/><text x="94.8503%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.9535%" y="149" width="0.0118%" height="15" fill="rgb(248,132,6)" fg:x="40266" fg:w="5"/><text x="95.2465%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.9653%" y="149" width="0.0259%" height="15" fill="rgb(227,167,50)" fg:x="40271" fg:w="11"/><text x="95.2583%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="94.9913%" y="149" width="0.2901%" height="15" fill="rgb(242,84,37)" fg:x="40282" fg:w="123"/><text x="95.2842%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="95.2813%" y="149" width="0.1297%" height="15" fill="rgb(212,4,50)" fg:x="40405" fg:w="55"/><text x="95.5743%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.24%)</title><rect x="95.4110%" y="149" width="0.2358%" height="15" fill="rgb(230,228,32)" fg:x="40460" fg:w="100"/><text x="95.7040%" y="159.50"></text></g><g><title>candid::utils::write_args (10,809 instructions, 25.49%)</title><rect x="72.0700%" y="165" width="25.4893%" height="15" fill="rgb(248,217,23)" fg:x="30562" fg:w="10809"/><text x="72.3630%" y="175.50">candid::utils::write_args</text></g><g><title>sha::principalToAccount_2_::{{closure}} (41,722 instructions, 98.39%)</title><rect x="0.4080%" y="181" width="98.3870%" height="15" fill="rgb(238,197,32)" fg:x="173" fg:w="41722"/><text x="0.7009%" y="191.50">sha::principalToAccount_2_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.7950%" y="181" width="0.0283%" height="15" fill="rgb(236,106,1)" fg:x="41895" fg:w="12"/><text x="99.0880%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="98.8233%" y="165" width="0.1297%" height="15" fill="rgb(219,228,13)" fg:x="41907" fg:w="55"/><text x="99.1162%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="98.9530%" y="165" width="0.1486%" height="15" fill="rgb(238,30,35)" fg:x="41962" fg:w="63"/><text x="99.2459%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="99.2996%" y="165" width="0.1297%" height="15" fill="rgb(236,70,23)" fg:x="42109" fg:w="55"/><text x="99.5926%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="99.4293%" y="165" width="0.1486%" height="15" fill="rgb(249,104,48)" fg:x="42164" fg:w="63"/><text x="99.7223%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (401 instructions, 0.95%)</title><rect x="98.8233%" y="181" width="0.9456%" height="15" fill="rgb(254,117,50)" fg:x="41907" fg:w="401"/><text x="99.1162%" y="191.50"></text></g><g><title>all (42,406 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(223,152,4)" fg:x="0" fg:w="42406"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToAccount (42,406 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(245,6,2)" fg:x="0" fg:w="42406"/><text x="0.2930%" y="207.50">canister_update principalToAccount</text></g></svg></svg>