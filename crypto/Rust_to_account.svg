<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToAccount</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="47914"><g><title>ic_cdk::setup (24 instructions, 0.05%)</title><rect x="0.0000%" y="181" width="0.0501%" height="15" fill="rgb(253,148,53)" fg:x="0" fg:w="24"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="0.0501%" y="181" width="0.1732%" height="15" fill="rgb(218,129,16)" fg:x="24" fg:w="83"/><text x="0.3431%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="0.2233%" y="181" width="0.1732%" height="15" fill="rgb(216,85,19)" fg:x="107" fg:w="83"/><text x="0.5163%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="0.3965%" y="165" width="0.1732%" height="15" fill="rgb(235,228,7)" fg:x="190" fg:w="83"/><text x="0.6895%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="0.5698%" y="149" width="0.1711%" height="15" fill="rgb(245,175,0)" fg:x="273" fg:w="82"/><text x="0.8627%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.7409%" y="133" width="0.0125%" height="15" fill="rgb(208,168,36)" fg:x="355" fg:w="6"/><text x="1.0339%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.92%)</title><rect x="0.7409%" y="149" width="0.9246%" height="15" fill="rgb(246,171,24)" fg:x="355" fg:w="443"/><text x="1.0339%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.20%)</title><rect x="1.6655%" y="149" width="0.1983%" height="15" fill="rgb(215,142,24)" fg:x="798" fg:w="95"/><text x="1.9585%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.13%)</title><rect x="1.8638%" y="149" width="0.1252%" height="15" fill="rgb(250,187,7)" fg:x="893" fg:w="60"/><text x="2.1567%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.13%)</title><rect x="1.9890%" y="149" width="0.1252%" height="15" fill="rgb(228,66,33)" fg:x="953" fg:w="60"/><text x="2.2819%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.13%)</title><rect x="2.1142%" y="149" width="0.1252%" height="15" fill="rgb(234,215,21)" fg:x="1013" fg:w="60"/><text x="2.4072%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.13%)</title><rect x="2.2394%" y="149" width="0.1252%" height="15" fill="rgb(222,191,20)" fg:x="1073" fg:w="60"/><text x="2.5324%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="2.3647%" y="149" width="0.1711%" height="15" fill="rgb(245,79,54)" fg:x="1133" fg:w="82"/><text x="2.6576%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.15%)</title><rect x="2.5358%" y="149" width="0.1461%" height="15" fill="rgb(240,10,37)" fg:x="1215" fg:w="70"/><text x="2.8288%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.6819%" y="133" width="0.0125%" height="15" fill="rgb(214,192,32)" fg:x="1285" fg:w="6"/><text x="2.9749%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.92%)</title><rect x="2.6819%" y="149" width="0.9246%" height="15" fill="rgb(209,36,54)" fg:x="1285" fg:w="443"/><text x="2.9749%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="3.6065%" y="149" width="0.0397%" height="15" fill="rgb(220,10,11)" fg:x="1728" fg:w="19"/><text x="3.8994%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="3.6461%" y="133" width="0.1732%" height="15" fill="rgb(221,106,17)" fg:x="1747" fg:w="83"/><text x="3.9391%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.14%)</title><rect x="3.8193%" y="101" width="0.1398%" height="15" fill="rgb(251,142,44)" fg:x="1830" fg:w="67"/><text x="4.1123%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.20%)</title><rect x="3.8193%" y="117" width="0.2004%" height="15" fill="rgb(238,13,15)" fg:x="1830" fg:w="96"/><text x="4.1123%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="4.0197%" y="69" width="0.0230%" height="15" fill="rgb(208,107,27)" fg:x="1926" fg:w="11"/><text x="4.3127%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="4.0427%" y="53" width="0.0730%" height="15" fill="rgb(205,136,37)" fg:x="1937" fg:w="35"/><text x="4.3356%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="4.0427%" y="69" width="0.1336%" height="15" fill="rgb(250,205,27)" fg:x="1937" fg:w="64"/><text x="4.3356%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.30%)</title><rect x="4.0197%" y="85" width="0.3005%" height="15" fill="rgb(210,80,43)" fg:x="1926" fg:w="144"/><text x="4.3127%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.44%)</title><rect x="4.0197%" y="101" width="0.4362%" height="15" fill="rgb(247,160,36)" fg:x="1926" fg:w="209"/><text x="4.3127%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.46%)</title><rect x="4.0197%" y="117" width="0.4571%" height="15" fill="rgb(234,13,49)" fg:x="1926" fg:w="219"/><text x="4.3127%" y="127.50"></text></g><g><title>core::fmt::write (453 instructions, 0.95%)</title><rect x="3.8193%" y="133" width="0.9454%" height="15" fill="rgb(234,122,0)" fg:x="1830" fg:w="453"/><text x="4.1123%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (674 instructions, 1.41%)</title><rect x="3.6461%" y="149" width="1.4067%" height="15" fill="rgb(207,146,38)" fg:x="1747" fg:w="674"/><text x="3.9391%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.20%)</title><rect x="5.0528%" y="149" width="0.1983%" height="15" fill="rgb(207,177,25)" fg:x="2421" fg:w="95"/><text x="5.3458%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="5.2511%" y="149" width="0.1252%" height="15" fill="rgb(211,178,42)" fg:x="2516" fg:w="60"/><text x="5.5440%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.16%)</title><rect x="5.3763%" y="149" width="0.1586%" height="15" fill="rgb(230,69,54)" fg:x="2576" fg:w="76"/><text x="5.6693%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.15%)</title><rect x="5.5349%" y="149" width="0.1461%" height="15" fill="rgb(214,135,41)" fg:x="2652" fg:w="70"/><text x="5.8279%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="5.6810%" y="117" width="0.0125%" height="15" fill="rgb(237,67,25)" fg:x="2722" fg:w="6"/><text x="5.9740%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.92%)</title><rect x="5.6810%" y="133" width="0.9246%" height="15" fill="rgb(222,189,50)" fg:x="2722" fg:w="443"/><text x="5.9740%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="6.6056%" y="133" width="0.0397%" height="15" fill="rgb(245,148,34)" fg:x="3165" fg:w="19"/><text x="6.8986%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="6.6452%" y="117" width="0.1732%" height="15" fill="rgb(222,29,6)" fg:x="3184" fg:w="83"/><text x="6.9382%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.14%)</title><rect x="6.8185%" y="85" width="0.1398%" height="15" fill="rgb(221,189,43)" fg:x="3267" fg:w="67"/><text x="7.1114%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.20%)</title><rect x="6.8185%" y="101" width="0.2004%" height="15" fill="rgb(207,36,27)" fg:x="3267" fg:w="96"/><text x="7.1114%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="7.0188%" y="53" width="0.0230%" height="15" fill="rgb(217,90,24)" fg:x="3363" fg:w="11"/><text x="7.3118%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="7.0418%" y="37" width="0.0730%" height="15" fill="rgb(224,66,35)" fg:x="3374" fg:w="35"/><text x="7.3348%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="7.0418%" y="53" width="0.1336%" height="15" fill="rgb(221,13,50)" fg:x="3374" fg:w="64"/><text x="7.3348%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.30%)</title><rect x="7.0188%" y="69" width="0.3005%" height="15" fill="rgb(236,68,49)" fg:x="3363" fg:w="144"/><text x="7.3118%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.44%)</title><rect x="7.0188%" y="85" width="0.4362%" height="15" fill="rgb(229,146,28)" fg:x="3363" fg:w="209"/><text x="7.3118%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.46%)</title><rect x="7.0188%" y="101" width="0.4571%" height="15" fill="rgb(225,31,38)" fg:x="3363" fg:w="219"/><text x="7.3118%" y="111.50"></text></g><g><title>core::fmt::write (453 instructions, 0.95%)</title><rect x="6.8185%" y="117" width="0.9454%" height="15" fill="rgb(250,208,3)" fg:x="3267" fg:w="453"/><text x="7.1114%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (674 instructions, 1.41%)</title><rect x="6.6452%" y="133" width="1.4067%" height="15" fill="rgb(246,54,23)" fg:x="3184" fg:w="674"/><text x="6.9382%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.20%)</title><rect x="8.0519%" y="133" width="0.1983%" height="15" fill="rgb(243,76,11)" fg:x="3858" fg:w="95"/><text x="8.3449%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="8.2502%" y="133" width="0.1252%" height="15" fill="rgb(245,21,50)" fg:x="3953" fg:w="60"/><text x="8.5432%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="8.3754%" y="117" width="0.1711%" height="15" fill="rgb(228,9,43)" fg:x="4013" fg:w="82"/><text x="8.6684%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.20%)</title><rect x="8.5466%" y="117" width="0.1983%" height="15" fill="rgb(208,100,47)" fg:x="4095" fg:w="95"/><text x="8.8395%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.16%)</title><rect x="8.7448%" y="117" width="0.1586%" height="15" fill="rgb(232,26,8)" fg:x="4190" fg:w="76"/><text x="9.0378%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (335 instructions, 0.70%)</title><rect x="8.3754%" y="133" width="0.6992%" height="15" fill="rgb(216,166,38)" fg:x="4013" fg:w="335"/><text x="8.6684%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="9.0746%" y="133" width="0.1732%" height="15" fill="rgb(251,202,51)" fg:x="4348" fg:w="83"/><text x="9.3676%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,952 instructions, 4.07%)</title><rect x="5.6810%" y="149" width="4.0740%" height="15" fill="rgb(254,216,34)" fg:x="2722" fg:w="1952"/><text x="5.9740%" y="159.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.16%)</title><rect x="9.7550%" y="149" width="0.1586%" height="15" fill="rgb(251,32,27)" fg:x="4674" fg:w="76"/><text x="10.0479%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="9.9136%" y="149" width="0.0313%" height="15" fill="rgb(208,127,28)" fg:x="4750" fg:w="15"/><text x="10.2066%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="9.9449%" y="149" width="0.0313%" height="15" fill="rgb(224,137,22)" fg:x="4765" fg:w="15"/><text x="10.2379%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.02%)</title><rect x="9.9762%" y="149" width="0.0188%" height="15" fill="rgb(254,70,32)" fg:x="4780" fg:w="9"/><text x="10.2692%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 instructions, 0.03%)</title><rect x="9.9950%" y="149" width="0.0334%" height="15" fill="rgb(229,75,37)" fg:x="4789" fg:w="16"/><text x="10.2880%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="10.0284%" y="133" width="0.1732%" height="15" fill="rgb(252,64,23)" fg:x="4805" fg:w="83"/><text x="10.3214%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.37%)</title><rect x="10.0284%" y="149" width="0.3736%" height="15" fill="rgb(232,162,48)" fg:x="4805" fg:w="179"/><text x="10.3214%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="10.4020%" y="117" width="0.1732%" height="15" fill="rgb(246,160,12)" fg:x="4984" fg:w="83"/><text x="10.6949%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="10.4020%" y="133" width="0.2630%" height="15" fill="rgb(247,166,0)" fg:x="4984" fg:w="126"/><text x="10.6949%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.44%)</title><rect x="10.4020%" y="149" width="0.4404%" height="15" fill="rgb(249,219,21)" fg:x="4984" fg:w="211"/><text x="10.6949%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="10.8423%" y="149" width="0.1732%" height="15" fill="rgb(205,209,3)" fg:x="5195" fg:w="83"/><text x="11.1353%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="11.0156%" y="149" width="0.1857%" height="15" fill="rgb(243,44,1)" fg:x="5278" fg:w="89"/><text x="11.3085%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="11.2013%" y="149" width="0.1732%" height="15" fill="rgb(206,159,16)" fg:x="5367" fg:w="83"/><text x="11.4943%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="11.3745%" y="149" width="0.1732%" height="15" fill="rgb(244,77,30)" fg:x="5450" fg:w="83"/><text x="11.6675%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="11.5561%" y="149" width="0.1857%" height="15" fill="rgb(218,69,12)" fg:x="5537" fg:w="89"/><text x="11.8491%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.89%)</title><rect x="11.7419%" y="149" width="0.8933%" height="15" fill="rgb(212,87,7)" fg:x="5626" fg:w="428"/><text x="12.0348%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.89%)</title><rect x="12.6351%" y="149" width="0.8933%" height="15" fill="rgb(245,114,25)" fg:x="6054" fg:w="428"/><text x="12.9281%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,398 instructions, 15.44%)</title><rect x="0.5698%" y="165" width="15.4402%" height="15" fill="rgb(210,61,42)" fg:x="273" fg:w="7398"/><text x="0.8627%" y="175.50">candid::de::IDLDeser..</text></g><g><title>memcpy (380 instructions, 0.79%)</title><rect x="16.0099%" y="165" width="0.7931%" height="15" fill="rgb(211,52,33)" fg:x="7671" fg:w="380"/><text x="16.3029%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="16.8030%" y="133" width="0.0146%" height="15" fill="rgb(234,58,33)" fg:x="8051" fg:w="7"/><text x="17.0960%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="16.8176%" y="117" width="0.1231%" height="15" fill="rgb(220,115,36)" fg:x="8058" fg:w="59"/><text x="17.1106%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.70%)</title><rect x="16.9408%" y="117" width="0.7013%" height="15" fill="rgb(243,153,54)" fg:x="8117" fg:w="336"/><text x="17.2337%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="17.6420%" y="117" width="0.1628%" height="15" fill="rgb(251,47,18)" fg:x="8453" fg:w="78"/><text x="17.9350%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.52%)</title><rect x="16.8176%" y="133" width="1.5152%" height="15" fill="rgb(242,102,42)" fg:x="8058" fg:w="726"/><text x="17.1106%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (851 instructions, 1.78%)</title><rect x="16.8030%" y="149" width="1.7761%" height="15" fill="rgb(234,31,38)" fg:x="8051" fg:w="851"/><text x="17.0960%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="18.5791%" y="149" width="0.1732%" height="15" fill="rgb(221,117,51)" fg:x="8902" fg:w="83"/><text x="18.8721%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="18.7523%" y="133" width="0.0146%" height="15" fill="rgb(212,20,18)" fg:x="8985" fg:w="7"/><text x="19.0453%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="18.7670%" y="117" width="0.1231%" height="15" fill="rgb(245,133,36)" fg:x="8992" fg:w="59"/><text x="19.0599%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.70%)</title><rect x="18.8901%" y="117" width="0.7013%" height="15" fill="rgb(212,6,19)" fg:x="9051" fg:w="336"/><text x="19.1831%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="19.5914%" y="117" width="0.1628%" height="15" fill="rgb(218,1,36)" fg:x="9387" fg:w="78"/><text x="19.8843%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.52%)</title><rect x="18.7670%" y="133" width="1.5152%" height="15" fill="rgb(246,84,54)" fg:x="8992" fg:w="726"/><text x="19.0599%" y="143.50"></text></g><g><title>candid::types::internal::env_add (945 instructions, 1.97%)</title><rect x="18.7523%" y="149" width="1.9723%" height="15" fill="rgb(242,110,6)" fg:x="8985" fg:w="945"/><text x="19.0453%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="20.7246%" y="149" width="0.1732%" height="15" fill="rgb(214,47,5)" fg:x="9930" fg:w="83"/><text x="21.0176%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="20.8979%" y="133" width="0.0146%" height="15" fill="rgb(218,159,25)" fg:x="10013" fg:w="7"/><text x="21.1908%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="20.9125%" y="117" width="0.1231%" height="15" fill="rgb(215,211,28)" fg:x="10020" fg:w="59"/><text x="21.2054%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.70%)</title><rect x="21.0356%" y="117" width="0.7013%" height="15" fill="rgb(238,59,32)" fg:x="10079" fg:w="336"/><text x="21.3286%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="21.7369%" y="117" width="0.1628%" height="15" fill="rgb(226,82,3)" fg:x="10415" fg:w="78"/><text x="22.0298%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.52%)</title><rect x="20.9125%" y="133" width="1.5152%" height="15" fill="rgb(240,164,32)" fg:x="10020" fg:w="726"/><text x="21.2054%" y="143.50"></text></g><g><title>memcmp (537 instructions, 1.12%)</title><rect x="22.4277%" y="133" width="1.1208%" height="15" fill="rgb(232,46,7)" fg:x="10746" fg:w="537"/><text x="22.7207%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="23.5484%" y="117" width="0.1857%" height="15" fill="rgb(229,129,53)" fg:x="11283" fg:w="89"/><text x="23.8414%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.26%)</title><rect x="23.5484%" y="133" width="0.2588%" height="15" fill="rgb(234,188,29)" fg:x="11283" fg:w="124"/><text x="23.8414%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,572 instructions, 3.28%)</title><rect x="20.8979%" y="149" width="3.2809%" height="15" fill="rgb(246,141,4)" fg:x="10013" fg:w="1572"/><text x="21.1908%" y="159.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="24.1787%" y="101" width="0.1231%" height="15" fill="rgb(229,23,39)" fg:x="11585" fg:w="59"/><text x="24.4717%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.19%)</title><rect x="24.1787%" y="117" width="0.1941%" height="15" fill="rgb(206,12,3)" fg:x="11585" fg:w="93"/><text x="24.4717%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="24.8383%" y="101" width="0.1231%" height="15" fill="rgb(252,226,20)" fg:x="11901" fg:w="59"/><text x="25.1312%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.19%)</title><rect x="24.8383%" y="117" width="0.1941%" height="15" fill="rgb(216,123,35)" fg:x="11901" fg:w="93"/><text x="25.1312%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (632 instructions, 1.32%)</title><rect x="24.1787%" y="133" width="1.3190%" height="15" fill="rgb(212,68,40)" fg:x="11585" fg:w="632"/><text x="24.4717%" y="143.50"></text></g><g><title>candid::types::internal::env_id (929 instructions, 1.94%)</title><rect x="24.1787%" y="149" width="1.9389%" height="15" fill="rgb(254,125,32)" fg:x="11585" fg:w="929"/><text x="24.4717%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,592 instructions, 9.58%)</title><rect x="16.8030%" y="165" width="9.5838%" height="15" fill="rgb(253,97,22)" fg:x="8051" fg:w="4592"/><text x="17.0960%" y="175.50">candid::typ..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.11%)</title><rect x="26.3869%" y="149" width="0.1106%" height="15" fill="rgb(241,101,14)" fg:x="12643" fg:w="53"/><text x="26.6798%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="26.4975%" y="117" width="0.0564%" height="15" fill="rgb(238,103,29)" fg:x="12696" fg:w="27"/><text x="26.7904%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.30%)</title><rect x="26.4975%" y="133" width="0.2964%" height="15" fill="rgb(233,195,47)" fg:x="12696" fg:w="142"/><text x="26.7904%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="26.8669%" y="117" width="0.0564%" height="15" fill="rgb(246,218,30)" fg:x="12873" fg:w="27"/><text x="27.1599%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.30%)</title><rect x="26.8669%" y="133" width="0.2964%" height="15" fill="rgb(219,145,47)" fg:x="12873" fg:w="142"/><text x="27.1599%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (354 instructions, 0.74%)</title><rect x="26.4975%" y="149" width="0.7388%" height="15" fill="rgb(243,12,26)" fg:x="12696" fg:w="354"/><text x="26.7904%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="27.2363%" y="133" width="0.0710%" height="15" fill="rgb(214,87,16)" fg:x="13050" fg:w="34"/><text x="27.5293%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="27.3073%" y="133" width="0.0710%" height="15" fill="rgb(208,99,42)" fg:x="13084" fg:w="34"/><text x="27.6002%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1488 (18 instructions, 0.04%)</title><rect x="27.3782%" y="133" width="0.0376%" height="15" fill="rgb(253,99,2)" fg:x="13118" fg:w="18"/><text x="27.6712%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1488 (18 instructions, 0.04%)</title><rect x="27.4158%" y="133" width="0.0376%" height="15" fill="rgb(220,168,23)" fg:x="13136" fg:w="18"/><text x="27.7088%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="27.4534%" y="133" width="0.1732%" height="15" fill="rgb(242,38,24)" fg:x="13154" fg:w="83"/><text x="27.7463%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.17%)</title><rect x="27.6266%" y="133" width="0.1711%" height="15" fill="rgb(225,182,9)" fg:x="13237" fg:w="82"/><text x="27.9195%" y="143.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.19%)</title><rect x="27.7977%" y="133" width="0.1920%" height="15" fill="rgb(243,178,37)" fg:x="13319" fg:w="92"/><text x="28.0907%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.15%)</title><rect x="27.9897%" y="133" width="0.1461%" height="15" fill="rgb(232,139,19)" fg:x="13411" fg:w="70"/><text x="28.2827%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="28.1358%" y="117" width="0.0125%" height="15" fill="rgb(225,201,24)" fg:x="13481" fg:w="6"/><text x="28.4288%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.92%)</title><rect x="28.1358%" y="133" width="0.9246%" height="15" fill="rgb(221,47,46)" fg:x="13481" fg:w="443"/><text x="28.4288%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="29.0604%" y="117" width="0.1732%" height="15" fill="rgb(249,23,13)" fg:x="13924" fg:w="83"/><text x="29.3534%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.14%)</title><rect x="29.2336%" y="85" width="0.1398%" height="15" fill="rgb(219,9,5)" fg:x="14007" fg:w="67"/><text x="29.5266%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.20%)</title><rect x="29.2336%" y="101" width="0.2004%" height="15" fill="rgb(254,171,16)" fg:x="14007" fg:w="96"/><text x="29.5266%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="29.4340%" y="53" width="0.0230%" height="15" fill="rgb(230,171,20)" fg:x="14103" fg:w="11"/><text x="29.7270%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="29.4569%" y="37" width="0.0730%" height="15" fill="rgb(210,71,41)" fg:x="14114" fg:w="35"/><text x="29.7499%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="29.4569%" y="53" width="0.1336%" height="15" fill="rgb(206,173,20)" fg:x="14114" fg:w="64"/><text x="29.7499%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.30%)</title><rect x="29.4340%" y="69" width="0.3005%" height="15" fill="rgb(233,88,34)" fg:x="14103" fg:w="144"/><text x="29.7270%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.44%)</title><rect x="29.4340%" y="85" width="0.4362%" height="15" fill="rgb(223,209,46)" fg:x="14103" fg:w="209"/><text x="29.7270%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.46%)</title><rect x="29.4340%" y="101" width="0.4571%" height="15" fill="rgb(250,43,18)" fg:x="14103" fg:w="219"/><text x="29.7270%" y="111.50"></text></g><g><title>core::fmt::write (453 instructions, 0.95%)</title><rect x="29.2336%" y="117" width="0.9454%" height="15" fill="rgb(208,13,10)" fg:x="14007" fg:w="453"/><text x="29.5266%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (674 instructions, 1.41%)</title><rect x="29.0604%" y="133" width="1.4067%" height="15" fill="rgb(212,200,36)" fg:x="13924" fg:w="674"/><text x="29.3534%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.20%)</title><rect x="30.4671%" y="133" width="0.1983%" height="15" fill="rgb(225,90,30)" fg:x="14598" fg:w="95"/><text x="30.7601%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="30.6654%" y="133" width="0.1252%" height="15" fill="rgb(236,182,39)" fg:x="14693" fg:w="60"/><text x="30.9583%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="30.7906%" y="133" width="0.1774%" height="15" fill="rgb(212,144,35)" fg:x="14753" fg:w="85"/><text x="31.0836%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="30.9680%" y="133" width="0.1732%" height="15" fill="rgb(228,63,44)" fg:x="14838" fg:w="83"/><text x="31.2610%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="31.1412%" y="133" width="0.1774%" height="15" fill="rgb(228,109,6)" fg:x="14921" fg:w="85"/><text x="31.4342%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="31.3186%" y="133" width="0.1774%" height="15" fill="rgb(238,117,24)" fg:x="15006" fg:w="85"/><text x="31.6116%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="31.4960%" y="133" width="0.1774%" height="15" fill="rgb(242,26,26)" fg:x="15091" fg:w="85"/><text x="31.7890%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="31.6734%" y="133" width="0.1774%" height="15" fill="rgb(221,92,48)" fg:x="15176" fg:w="85"/><text x="31.9664%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="31.8508%" y="133" width="0.1774%" height="15" fill="rgb(209,209,32)" fg:x="15261" fg:w="85"/><text x="32.1438%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="32.0282%" y="133" width="0.1774%" height="15" fill="rgb(221,70,22)" fg:x="15346" fg:w="85"/><text x="32.3212%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="32.2056%" y="133" width="0.1774%" height="15" fill="rgb(248,145,5)" fg:x="15431" fg:w="85"/><text x="32.4986%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="32.3830%" y="133" width="0.1774%" height="15" fill="rgb(226,116,26)" fg:x="15516" fg:w="85"/><text x="32.6760%" y="143.50"></text></g><g><title>__rust_realloc (111 instructions, 0.23%)</title><rect x="32.5604%" y="101" width="0.2317%" height="15" fill="rgb(244,5,17)" fg:x="15601" fg:w="111"/><text x="32.8534%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.33%)</title><rect x="32.5604%" y="117" width="0.3256%" height="15" fill="rgb(252,159,33)" fg:x="15601" fg:w="156"/><text x="32.8534%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.51%)</title><rect x="32.5604%" y="133" width="0.5072%" height="15" fill="rgb(206,71,0)" fg:x="15601" fg:w="243"/><text x="32.8534%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="33.0676%" y="133" width="0.1774%" height="15" fill="rgb(233,118,54)" fg:x="15844" fg:w="85"/><text x="33.3605%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="33.2450%" y="133" width="0.1774%" height="15" fill="rgb(234,83,48)" fg:x="15929" fg:w="85"/><text x="33.5379%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="33.4224%" y="133" width="0.1774%" height="15" fill="rgb(228,3,54)" fg:x="16014" fg:w="85"/><text x="33.7154%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="33.5998%" y="133" width="0.1774%" height="15" fill="rgb(226,155,13)" fg:x="16099" fg:w="85"/><text x="33.8928%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="33.7772%" y="133" width="0.1774%" height="15" fill="rgb(241,28,37)" fg:x="16184" fg:w="85"/><text x="34.0702%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="33.9546%" y="133" width="0.1774%" height="15" fill="rgb(233,93,10)" fg:x="16269" fg:w="85"/><text x="34.2476%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.18%)</title><rect x="34.1320%" y="133" width="0.1774%" height="15" fill="rgb(225,113,19)" fg:x="16354" fg:w="85"/><text x="34.4250%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 instructions, 0.07%)</title><rect x="34.3094%" y="133" width="0.0710%" height="15" fill="rgb(241,2,18)" fg:x="16439" fg:w="34"/><text x="34.6024%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.16%)</title><rect x="34.3803%" y="133" width="0.1586%" height="15" fill="rgb(228,207,21)" fg:x="16473" fg:w="76"/><text x="34.6733%" y="143.50"></text></g><g><title>__rust_realloc (55 instructions, 0.11%)</title><rect x="34.5390%" y="101" width="0.1148%" height="15" fill="rgb(213,211,35)" fg:x="16549" fg:w="55"/><text x="34.8319%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (100 instructions, 0.21%)</title><rect x="34.5390%" y="117" width="0.2087%" height="15" fill="rgb(209,83,10)" fg:x="16549" fg:w="100"/><text x="34.8319%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.39%)</title><rect x="34.5390%" y="133" width="0.3903%" height="15" fill="rgb(209,164,1)" fg:x="16549" fg:w="187"/><text x="34.8319%" y="143.50"></text></g><g><title>memcpy (220 instructions, 0.46%)</title><rect x="34.9292%" y="133" width="0.4592%" height="15" fill="rgb(213,184,43)" fg:x="16736" fg:w="220"/><text x="35.2222%" y="143.50"></text></g><g><title>memcpy (171 instructions, 0.36%)</title><rect x="35.3884%" y="133" width="0.3569%" height="15" fill="rgb(231,61,34)" fg:x="16956" fg:w="171"/><text x="35.6814%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (53 instructions, 0.11%)</title><rect x="35.7453%" y="133" width="0.1106%" height="15" fill="rgb(235,75,3)" fg:x="17127" fg:w="53"/><text x="36.0383%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="35.8559%" y="133" width="0.1857%" height="15" fill="rgb(220,106,47)" fg:x="17180" fg:w="89"/><text x="36.1489%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="36.0417%" y="133" width="0.1252%" height="15" fill="rgb(210,196,33)" fg:x="17269" fg:w="60"/><text x="36.3346%" y="143.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (5,518 instructions, 11.52%)</title><rect x="27.2363%" y="149" width="11.5165%" height="15" fill="rgb(229,154,42)" fg:x="13050" fg:w="5518"/><text x="27.5293%" y="159.50">&lt;ic_principal:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="38.7528%" y="149" width="0.0271%" height="15" fill="rgb(228,114,26)" fg:x="18568" fg:w="13"/><text x="39.0457%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="38.7799%" y="149" width="0.0271%" height="15" fill="rgb(208,144,1)" fg:x="18581" fg:w="13"/><text x="39.0729%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="38.8070%" y="149" width="0.0271%" height="15" fill="rgb(239,112,37)" fg:x="18594" fg:w="13"/><text x="39.1000%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,243 instructions, 13.03%)</title><rect x="26.3869%" y="165" width="13.0296%" height="15" fill="rgb(210,96,50)" fg:x="12643" fg:w="6243"/><text x="26.6798%" y="175.50">candid::de::IDLD..</text></g><g><title>memcpy (440 instructions, 0.92%)</title><rect x="39.4165%" y="165" width="0.9183%" height="15" fill="rgb(222,178,2)" fg:x="18886" fg:w="440"/><text x="39.7094%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="40.3348%" y="133" width="0.0146%" height="15" fill="rgb(226,74,18)" fg:x="19326" fg:w="7"/><text x="40.6277%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="40.3494%" y="117" width="0.0564%" height="15" fill="rgb(225,67,54)" fg:x="19333" fg:w="27"/><text x="40.6423%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="40.4057%" y="117" width="0.0564%" height="15" fill="rgb(251,92,32)" fg:x="19360" fg:w="27"/><text x="40.6987%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.41%)</title><rect x="40.3494%" y="133" width="0.4112%" height="15" fill="rgb(228,149,22)" fg:x="19333" fg:w="197"/><text x="40.6423%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="40.7605%" y="101" width="0.0564%" height="15" fill="rgb(243,54,13)" fg:x="19530" fg:w="27"/><text x="41.0535%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="40.8169%" y="101" width="0.0564%" height="15" fill="rgb(243,180,28)" fg:x="19557" fg:w="27"/><text x="41.1098%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (99 instructions, 0.21%)</title><rect x="40.8732%" y="101" width="0.2066%" height="15" fill="rgb(208,167,24)" fg:x="19584" fg:w="99"/><text x="41.1662%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (275 instructions, 0.57%)</title><rect x="40.7605%" y="117" width="0.5739%" height="15" fill="rgb(245,73,45)" fg:x="19530" fg:w="275"/><text x="41.0535%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (310 instructions, 0.65%)</title><rect x="40.7605%" y="133" width="0.6470%" height="15" fill="rgb(237,203,48)" fg:x="19530" fg:w="310"/><text x="41.0535%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="41.4075%" y="133" width="0.0271%" height="15" fill="rgb(211,197,16)" fg:x="19840" fg:w="13"/><text x="41.7005%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (589 instructions, 1.23%)</title><rect x="40.3348%" y="149" width="1.2293%" height="15" fill="rgb(243,99,51)" fg:x="19326" fg:w="589"/><text x="40.6277%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (638 instructions, 1.33%)</title><rect x="40.3348%" y="165" width="1.3316%" height="15" fill="rgb(215,123,29)" fg:x="19326" fg:w="638"/><text x="40.6277%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (67 instructions, 0.14%)</title><rect x="41.6663%" y="149" width="0.1398%" height="15" fill="rgb(239,186,37)" fg:x="19964" fg:w="67"/><text x="41.9593%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (99 instructions, 0.21%)</title><rect x="41.8062%" y="149" width="0.2066%" height="15" fill="rgb(252,136,39)" fg:x="20031" fg:w="99"/><text x="42.0991%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (260 instructions, 0.54%)</title><rect x="41.6663%" y="165" width="0.5426%" height="15" fill="rgb(223,213,32)" fg:x="19964" fg:w="260"/><text x="41.9593%" y="175.50"></text></g><g><title>memset (240 instructions, 0.50%)</title><rect x="42.2090%" y="165" width="0.5009%" height="15" fill="rgb(233,115,5)" fg:x="20224" fg:w="240"/><text x="42.5019%" y="175.50"></text></g><g><title>memcpy (176 instructions, 0.37%)</title><rect x="42.7099%" y="165" width="0.3673%" height="15" fill="rgb(207,226,44)" fg:x="20464" fg:w="176"/><text x="43.0028%" y="175.50"></text></g><g><title>memcpy (504 instructions, 1.05%)</title><rect x="43.0772%" y="165" width="1.0519%" height="15" fill="rgb(208,126,0)" fg:x="20640" fg:w="504"/><text x="43.3701%" y="175.50"></text></g><g><title>memset (64 instructions, 0.13%)</title><rect x="44.1291%" y="149" width="0.1336%" height="15" fill="rgb(244,66,21)" fg:x="21144" fg:w="64"/><text x="44.4220%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,990 instructions, 10.41%)</title><rect x="44.2626%" y="149" width="10.4145%" height="15" fill="rgb(222,97,12)" fg:x="21208" fg:w="4990"/><text x="44.5556%" y="159.50">sha2::sha256:..</text></g><g><title>sha2::sha256::compress256 (4,990 instructions, 10.41%)</title><rect x="54.6771%" y="149" width="10.4145%" height="15" fill="rgb(219,213,19)" fg:x="26198" fg:w="4990"/><text x="54.9701%" y="159.50">sha2::sha256:..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (10,386 instructions, 21.68%)</title><rect x="44.1291%" y="165" width="21.6763%" height="15" fill="rgb(252,169,30)" fg:x="21144" fg:w="10386"/><text x="44.4220%" y="175.50">&lt;sha2::core_api::Sha256VarCor..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="65.8054%" y="165" width="0.1732%" height="15" fill="rgb(206,32,51)" fg:x="31530" fg:w="83"/><text x="66.0984%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="65.9786%" y="149" width="0.0146%" height="15" fill="rgb(250,172,42)" fg:x="31613" fg:w="7"/><text x="66.2716%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (105 instructions, 0.22%)</title><rect x="66.0204%" y="101" width="0.2191%" height="15" fill="rgb(209,34,43)" fg:x="31633" fg:w="105"/><text x="66.3133%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.14%)</title><rect x="66.2395%" y="101" width="0.1419%" height="15" fill="rgb(223,11,35)" fg:x="31738" fg:w="68"/><text x="66.5325%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (269 instructions, 0.56%)</title><rect x="66.0204%" y="117" width="0.5614%" height="15" fill="rgb(251,219,26)" fg:x="31633" fg:w="269"/><text x="66.3133%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (304 instructions, 0.63%)</title><rect x="66.0204%" y="133" width="0.6345%" height="15" fill="rgb(231,119,3)" fg:x="31633" fg:w="304"/><text x="66.3133%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.14%)</title><rect x="66.6548%" y="117" width="0.1440%" height="15" fill="rgb(216,97,11)" fg:x="31937" fg:w="69"/><text x="66.9478%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.14%)</title><rect x="66.7988%" y="117" width="0.1419%" height="15" fill="rgb(223,59,9)" fg:x="32006" fg:w="68"/><text x="67.0918%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.48%)</title><rect x="66.6548%" y="133" width="0.4821%" height="15" fill="rgb(233,93,31)" fg:x="31937" fg:w="231"/><text x="66.9478%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (593 instructions, 1.24%)</title><rect x="65.9932%" y="149" width="1.2376%" height="15" fill="rgb(239,81,33)" fg:x="31620" fg:w="593"/><text x="66.2862%" y="159.50"></text></g><g><title>memset (152 instructions, 0.32%)</title><rect x="67.2309%" y="149" width="0.3172%" height="15" fill="rgb(213,120,34)" fg:x="32213" fg:w="152"/><text x="67.5238%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="67.5481%" y="117" width="0.0146%" height="15" fill="rgb(243,49,53)" fg:x="32365" fg:w="7"/><text x="67.8411%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.08%)</title><rect x="67.5481%" y="133" width="0.0814%" height="15" fill="rgb(247,216,33)" fg:x="32365" fg:w="39"/><text x="67.8411%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="67.6295%" y="133" width="0.1732%" height="15" fill="rgb(226,26,14)" fg:x="32404" fg:w="83"/><text x="67.9225%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="67.8027%" y="117" width="0.0146%" height="15" fill="rgb(215,49,53)" fg:x="32487" fg:w="7"/><text x="68.0957%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="67.8173%" y="101" width="0.1231%" height="15" fill="rgb(245,162,40)" fg:x="32494" fg:w="59"/><text x="68.1103%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.79%)</title><rect x="67.9405%" y="101" width="0.7868%" height="15" fill="rgb(229,68,17)" fg:x="32553" fg:w="377"/><text x="68.2334%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="68.7273%" y="101" width="0.1628%" height="15" fill="rgb(213,182,10)" fg:x="32930" fg:w="78"/><text x="69.0203%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.60%)</title><rect x="67.8173%" y="117" width="1.6008%" height="15" fill="rgb(245,125,30)" fg:x="32494" fg:w="767"/><text x="68.1103%" y="127.50"></text></g><g><title>candid::types::internal::env_add (986 instructions, 2.06%)</title><rect x="67.8027%" y="133" width="2.0579%" height="15" fill="rgb(232,202,2)" fg:x="32487" fg:w="986"/><text x="68.0957%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="69.8606%" y="133" width="0.1732%" height="15" fill="rgb(237,140,51)" fg:x="33473" fg:w="83"/><text x="70.1536%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="70.0338%" y="133" width="0.1732%" height="15" fill="rgb(236,157,25)" fg:x="33556" fg:w="83"/><text x="70.3268%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="70.2070%" y="117" width="0.0146%" height="15" fill="rgb(219,209,0)" fg:x="33639" fg:w="7"/><text x="70.5000%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="70.2216%" y="101" width="0.1231%" height="15" fill="rgb(240,116,54)" fg:x="33646" fg:w="59"/><text x="70.5146%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.79%)</title><rect x="70.3448%" y="101" width="0.7868%" height="15" fill="rgb(216,10,36)" fg:x="33705" fg:w="377"/><text x="70.6378%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.16%)</title><rect x="71.1316%" y="101" width="0.1628%" height="15" fill="rgb(222,72,44)" fg:x="34082" fg:w="78"/><text x="71.4246%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.60%)</title><rect x="70.2216%" y="117" width="1.6008%" height="15" fill="rgb(232,159,9)" fg:x="33646" fg:w="767"/><text x="70.5146%" y="127.50"></text></g><g><title>memcmp (675 instructions, 1.41%)</title><rect x="71.8224%" y="117" width="1.4088%" height="15" fill="rgb(210,39,32)" fg:x="34413" fg:w="675"/><text x="72.1154%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="73.2312%" y="101" width="0.1857%" height="15" fill="rgb(216,194,45)" fg:x="35088" fg:w="89"/><text x="73.5242%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.26%)</title><rect x="73.2312%" y="117" width="0.2588%" height="15" fill="rgb(218,18,35)" fg:x="35088" fg:w="124"/><text x="73.5242%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,751 instructions, 3.65%)</title><rect x="70.2070%" y="133" width="3.6545%" height="15" fill="rgb(207,83,51)" fg:x="33639" fg:w="1751"/><text x="70.5000%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="73.8615%" y="85" width="0.1231%" height="15" fill="rgb(225,63,43)" fg:x="35390" fg:w="59"/><text x="74.1545%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.34%)</title><rect x="73.9846%" y="85" width="0.3423%" height="15" fill="rgb(207,57,36)" fg:x="35449" fg:w="164"/><text x="74.2776%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.60%)</title><rect x="73.8615%" y="101" width="0.6011%" height="15" fill="rgb(216,99,33)" fg:x="35390" fg:w="288"/><text x="74.1545%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (511 instructions, 1.07%)</title><rect x="73.8615%" y="117" width="1.0665%" height="15" fill="rgb(225,42,16)" fg:x="35390" fg:w="511"/><text x="74.1545%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.320 (48 instructions, 0.10%)</title><rect x="74.9280%" y="117" width="0.1002%" height="15" fill="rgb(220,201,45)" fg:x="35901" fg:w="48"/><text x="75.2210%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="75.0282%" y="117" width="0.0271%" height="15" fill="rgb(225,33,4)" fg:x="35949" fg:w="13"/><text x="75.3211%" y="127.50"></text></g><g><title>candid::types::internal::env_id (754 instructions, 1.57%)</title><rect x="73.8615%" y="133" width="1.5737%" height="15" fill="rgb(224,33,50)" fg:x="35390" fg:w="754"/><text x="74.1545%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,930 instructions, 8.20%)</title><rect x="67.5481%" y="149" width="8.2022%" height="15" fill="rgb(246,198,51)" fg:x="32365" fg:w="3930"/><text x="67.8411%" y="159.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="75.7503%" y="117" width="0.1732%" height="15" fill="rgb(205,22,4)" fg:x="36295" fg:w="83"/><text x="76.0433%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="75.7503%" y="133" width="0.2630%" height="15" fill="rgb(206,3,8)" fg:x="36295" fg:w="126"/><text x="76.0433%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.44%)</title><rect x="75.7503%" y="149" width="0.4404%" height="15" fill="rgb(251,23,15)" fg:x="36295" fg:w="211"/><text x="76.0433%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (30 instructions, 0.06%)</title><rect x="76.1907%" y="133" width="0.0626%" height="15" fill="rgb(252,88,28)" fg:x="36506" fg:w="30"/><text x="76.4836%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="76.2533%" y="101" width="0.1732%" height="15" fill="rgb(212,127,14)" fg:x="36536" fg:w="83"/><text x="76.5463%" y="111.50"></text></g><g><title>candid::types::internal::unroll (171 instructions, 0.36%)</title><rect x="76.2533%" y="117" width="0.3569%" height="15" fill="rgb(247,145,37)" fg:x="36536" fg:w="171"/><text x="76.5463%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="76.6102%" y="117" width="0.1732%" height="15" fill="rgb(209,117,53)" fg:x="36707" fg:w="83"/><text x="76.9031%" y="127.50"></text></g><g><title>candid::types::internal::unroll (349 instructions, 0.73%)</title><rect x="76.2533%" y="133" width="0.7284%" height="15" fill="rgb(212,90,42)" fg:x="36536" fg:w="349"/><text x="76.5463%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="76.9817%" y="85" width="0.1231%" height="15" fill="rgb(218,164,37)" fg:x="36885" fg:w="59"/><text x="77.2746%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.34%)</title><rect x="77.1048%" y="85" width="0.3423%" height="15" fill="rgb(246,65,34)" fg:x="36944" fg:w="164"/><text x="77.3978%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.60%)</title><rect x="76.9817%" y="101" width="0.6011%" height="15" fill="rgb(231,100,33)" fg:x="36885" fg:w="288"/><text x="77.2746%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (511 instructions, 1.07%)</title><rect x="76.9817%" y="117" width="1.0665%" height="15" fill="rgb(228,126,14)" fg:x="36885" fg:w="511"/><text x="77.2746%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="78.0482%" y="117" width="0.1732%" height="15" fill="rgb(215,173,21)" fg:x="37396" fg:w="83"/><text x="78.3411%" y="127.50"></text></g><g><title>memset (152 instructions, 0.32%)</title><rect x="78.2214%" y="117" width="0.3172%" height="15" fill="rgb(210,6,40)" fg:x="37479" fg:w="152"/><text x="78.5144%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,066 instructions, 2.22%)</title><rect x="76.9817%" y="133" width="2.2248%" height="15" fill="rgb(212,48,18)" fg:x="36885" fg:w="1066"/><text x="77.2746%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="79.2065%" y="101" width="0.1732%" height="15" fill="rgb(230,214,11)" fg:x="37951" fg:w="83"/><text x="79.4995%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="79.2065%" y="117" width="0.2630%" height="15" fill="rgb(254,105,39)" fg:x="37951" fg:w="126"/><text x="79.4995%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.44%)</title><rect x="79.2065%" y="133" width="0.4404%" height="15" fill="rgb(245,158,5)" fg:x="37951" fg:w="211"/><text x="79.4995%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="79.6469%" y="85" width="0.1231%" height="15" fill="rgb(249,208,11)" fg:x="38162" fg:w="59"/><text x="79.9398%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.19%)</title><rect x="79.6469%" y="101" width="0.1941%" height="15" fill="rgb(210,39,28)" fg:x="38162" fg:w="93"/><text x="79.9398%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (316 instructions, 0.66%)</title><rect x="79.6469%" y="117" width="0.6595%" height="15" fill="rgb(211,56,53)" fg:x="38162" fg:w="316"/><text x="79.9398%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (23 instructions, 0.05%)</title><rect x="80.3064%" y="117" width="0.0480%" height="15" fill="rgb(226,201,30)" fg:x="38478" fg:w="23"/><text x="80.5994%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="80.3544%" y="117" width="0.0271%" height="15" fill="rgb(239,101,34)" fg:x="38501" fg:w="13"/><text x="80.6474%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (489 instructions, 1.02%)</title><rect x="79.6469%" y="133" width="1.0206%" height="15" fill="rgb(226,209,5)" fg:x="38162" fg:w="489"/><text x="79.9398%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="80.6674%" y="85" width="0.1732%" height="15" fill="rgb(250,105,47)" fg:x="38651" fg:w="83"/><text x="80.9604%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="80.6674%" y="101" width="0.2630%" height="15" fill="rgb(230,72,3)" fg:x="38651" fg:w="126"/><text x="80.9604%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.43%)</title><rect x="80.6674%" y="117" width="0.4341%" height="15" fill="rgb(232,218,39)" fg:x="38651" fg:w="208"/><text x="80.9604%" y="127.50"></text></g><g><title>leb128::write::signed (267 instructions, 0.56%)</title><rect x="80.6674%" y="133" width="0.5572%" height="15" fill="rgb(248,166,6)" fg:x="38651" fg:w="267"/><text x="80.9604%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (62 instructions, 0.13%)</title><rect x="81.2247%" y="133" width="0.1294%" height="15" fill="rgb(247,89,20)" fg:x="38918" fg:w="62"/><text x="81.5177%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.19%)</title><rect x="81.3541%" y="101" width="0.1857%" height="15" fill="rgb(248,130,54)" fg:x="38980" fg:w="89"/><text x="81.6471%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.26%)</title><rect x="81.3541%" y="117" width="0.2588%" height="15" fill="rgb(234,196,4)" fg:x="38980" fg:w="124"/><text x="81.6471%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.17%)</title><rect x="81.6129%" y="117" width="0.1732%" height="15" fill="rgb(250,143,31)" fg:x="39104" fg:w="83"/><text x="81.9059%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.53%)</title><rect x="81.3541%" y="133" width="0.5259%" height="15" fill="rgb(211,110,34)" fg:x="38980" fg:w="252"/><text x="81.6471%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.8800%" y="133" width="0.0271%" height="15" fill="rgb(215,124,48)" fg:x="39232" fg:w="13"/><text x="82.1730%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,994 instructions, 6.25%)</title><rect x="76.1907%" y="149" width="6.2487%" height="15" fill="rgb(216,46,13)" fg:x="36506" fg:w="2994"/><text x="76.4836%" y="159.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="82.4394%" y="149" width="0.0271%" height="15" fill="rgb(205,184,25)" fg:x="39500" fg:w="13"/><text x="82.7323%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="82.4665%" y="117" width="0.1732%" height="15" fill="rgb(228,1,10)" fg:x="39513" fg:w="83"/><text x="82.7595%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="82.4665%" y="133" width="0.2630%" height="15" fill="rgb(213,116,27)" fg:x="39513" fg:w="126"/><text x="82.7595%" y="143.50"></text></g><g><title>__rust_realloc (111 instructions, 0.23%)</title><rect x="82.9006%" y="117" width="0.2317%" height="15" fill="rgb(241,95,50)" fg:x="39721" fg:w="111"/><text x="83.1936%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.33%)</title><rect x="82.9006%" y="133" width="0.3256%" height="15" fill="rgb(238,48,32)" fg:x="39721" fg:w="156"/><text x="83.1936%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (451 instructions, 0.94%)</title><rect x="82.4665%" y="149" width="0.9413%" height="15" fill="rgb(235,113,49)" fg:x="39513" fg:w="451"/><text x="82.7595%" y="159.50"></text></g><g><title>memcpy (289 instructions, 0.60%)</title><rect x="83.4078%" y="149" width="0.6032%" height="15" fill="rgb(205,127,43)" fg:x="39964" fg:w="289"/><text x="83.7007%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="84.0109%" y="133" width="0.0480%" height="15" fill="rgb(250,162,2)" fg:x="40253" fg:w="23"/><text x="84.3039%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.29%)</title><rect x="84.0109%" y="149" width="0.2880%" height="15" fill="rgb(220,13,41)" fg:x="40253" fg:w="138"/><text x="84.3039%" y="159.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.08%)</title><rect x="84.2990%" y="149" width="1.0811%" height="15" fill="rgb(249,221,25)" fg:x="40391" fg:w="518"/><text x="84.5919%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="85.3801%" y="117" width="0.1732%" height="15" fill="rgb(215,208,19)" fg:x="40909" fg:w="83"/><text x="85.6730%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="85.3801%" y="133" width="0.2630%" height="15" fill="rgb(236,175,2)" fg:x="40909" fg:w="126"/><text x="85.6730%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.43%)</title><rect x="85.3801%" y="149" width="0.4341%" height="15" fill="rgb(241,52,2)" fg:x="40909" fg:w="208"/><text x="85.6730%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="85.8142%" y="149" width="0.1732%" height="15" fill="rgb(248,140,14)" fg:x="41117" fg:w="83"/><text x="86.1071%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.11%)</title><rect x="85.9874%" y="149" width="0.1064%" height="15" fill="rgb(253,22,42)" fg:x="41200" fg:w="51"/><text x="86.2804%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.11%)</title><rect x="86.0938%" y="149" width="0.1064%" height="15" fill="rgb(234,61,47)" fg:x="41251" fg:w="51"/><text x="86.3868%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="86.2003%" y="149" width="0.1252%" height="15" fill="rgb(208,226,15)" fg:x="41302" fg:w="60"/><text x="86.4932%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="86.3255%" y="101" width="0.1231%" height="15" fill="rgb(217,221,4)" fg:x="41362" fg:w="59"/><text x="86.6185%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.34%)</title><rect x="86.4486%" y="101" width="0.3423%" height="15" fill="rgb(212,174,34)" fg:x="41421" fg:w="164"/><text x="86.7416%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.60%)</title><rect x="86.3255%" y="117" width="0.6011%" height="15" fill="rgb(253,83,4)" fg:x="41362" fg:w="288"/><text x="86.6185%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (511 instructions, 1.07%)</title><rect x="86.3255%" y="133" width="1.0665%" height="15" fill="rgb(250,195,49)" fg:x="41362" fg:w="511"/><text x="86.6185%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.17%)</title><rect x="87.3920%" y="101" width="0.1732%" height="15" fill="rgb(241,192,25)" fg:x="41873" fg:w="83"/><text x="87.6850%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.26%)</title><rect x="87.3920%" y="117" width="0.2630%" height="15" fill="rgb(208,124,10)" fg:x="41873" fg:w="126"/><text x="87.6850%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.43%)</title><rect x="87.3920%" y="133" width="0.4341%" height="15" fill="rgb(222,33,0)" fg:x="41873" fg:w="208"/><text x="87.6850%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (908 instructions, 1.90%)</title><rect x="86.3255%" y="149" width="1.8951%" height="15" fill="rgb(234,209,28)" fg:x="41362" fg:w="908"/><text x="86.6185%" y="159.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="88.2206%" y="149" width="0.0730%" height="15" fill="rgb(224,11,23)" fg:x="42270" fg:w="35"/><text x="88.5135%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.13%)</title><rect x="88.2936%" y="149" width="0.1252%" height="15" fill="rgb(232,99,1)" fg:x="42305" fg:w="60"/><text x="88.5866%" y="159.50"></text></g><g><title>std::io::Write::write_all (519 instructions, 1.08%)</title><rect x="88.4188%" y="149" width="1.0832%" height="15" fill="rgb(237,95,45)" fg:x="42365" fg:w="519"/><text x="88.7118%" y="159.50"></text></g><g><title>std::io::Write::write_all (543 instructions, 1.13%)</title><rect x="89.5020%" y="149" width="1.1333%" height="15" fill="rgb(208,109,11)" fg:x="42884" fg:w="543"/><text x="89.7950%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="90.8211%" y="133" width="0.0564%" height="15" fill="rgb(216,190,48)" fg:x="43516" fg:w="27"/><text x="91.1140%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.48%)</title><rect x="90.6353%" y="149" width="0.4821%" height="15" fill="rgb(251,171,36)" fg:x="43427" fg:w="231"/><text x="90.9283%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="91.1174%" y="149" width="0.0271%" height="15" fill="rgb(230,62,22)" fg:x="43658" fg:w="13"/><text x="91.4104%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="91.1446%" y="133" width="0.0564%" height="15" fill="rgb(225,114,35)" fg:x="43671" fg:w="27"/><text x="91.4375%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="91.2009%" y="133" width="0.0564%" height="15" fill="rgb(215,118,42)" fg:x="43698" fg:w="27"/><text x="91.4939%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.41%)</title><rect x="91.1446%" y="149" width="0.4112%" height="15" fill="rgb(243,119,21)" fg:x="43671" fg:w="197"/><text x="91.4375%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="91.5557%" y="149" width="0.0146%" height="15" fill="rgb(252,177,53)" fg:x="43868" fg:w="7"/><text x="91.8487%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="91.5703%" y="149" width="0.0271%" height="15" fill="rgb(237,209,29)" fg:x="43875" fg:w="13"/><text x="91.8633%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="91.5974%" y="133" width="0.0564%" height="15" fill="rgb(212,65,23)" fg:x="43888" fg:w="27"/><text x="91.8904%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.30%)</title><rect x="91.5974%" y="149" width="0.2964%" height="15" fill="rgb(230,222,46)" fg:x="43888" fg:w="142"/><text x="91.8904%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="92.0190%" y="133" width="0.0564%" height="15" fill="rgb(215,135,32)" fg:x="44090" fg:w="27"/><text x="92.3120%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (175 instructions, 0.37%)</title><rect x="91.8938%" y="149" width="0.3652%" height="15" fill="rgb(246,101,22)" fg:x="44030" fg:w="175"/><text x="92.1868%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (14,103 instructions, 29.43%)</title><rect x="65.9786%" y="165" width="29.4340%" height="15" fill="rgb(206,107,13)" fg:x="31613" fg:w="14103"/><text x="66.2716%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::__canister_method_principalToAccount::{{closure}} (47,101 instructions, 98.30%)</title><rect x="0.3965%" y="181" width="98.3032%" height="15" fill="rgb(250,100,44)" fg:x="190" fg:w="47101"/><text x="0.6895%" y="191.50">sha::__canister_method_principalToAccount::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="98.6998%" y="181" width="0.0292%" height="15" fill="rgb(231,147,38)" fg:x="47291" fg:w="14"/><text x="98.9927%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.14%)</title><rect x="98.7311%" y="165" width="0.1440%" height="15" fill="rgb(229,8,40)" fg:x="47306" fg:w="69"/><text x="99.0240%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.14%)</title><rect x="98.8751%" y="165" width="0.1419%" height="15" fill="rgb(221,135,30)" fg:x="47375" fg:w="68"/><text x="99.1680%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.14%)</title><rect x="99.2173%" y="165" width="0.1440%" height="15" fill="rgb(249,193,18)" fg:x="47539" fg:w="69"/><text x="99.5103%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.14%)</title><rect x="99.3614%" y="165" width="0.1419%" height="15" fill="rgb(209,133,39)" fg:x="47608" fg:w="68"/><text x="99.6543%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (464 instructions, 0.97%)</title><rect x="98.7311%" y="181" width="0.9684%" height="15" fill="rgb(232,100,14)" fg:x="47306" fg:w="464"/><text x="99.0240%" y="191.50"></text></g><g><title>all (47,914 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(224,185,1)" fg:x="0" fg:w="47914"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToAccount (47,914 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(223,139,8)" fg:x="0" fg:w="47914"/><text x="0.2930%" y="207.50">canister_update principalToAccount</text></g></svg></svg>