<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToAccount</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="42432"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="181" width="0.0448%" height="15" fill="rgb(228,185,30)" fg:x="0" fg:w="19"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="0.0448%" y="181" width="0.1838%" height="15" fill="rgb(246,134,8)" fg:x="19" fg:w="78"/><text x="0.3377%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.2286%" y="181" width="0.1791%" height="15" fill="rgb(214,143,50)" fg:x="97" fg:w="76"/><text x="0.5216%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.4077%" y="165" width="0.1791%" height="15" fill="rgb(228,75,8)" fg:x="173" fg:w="76"/><text x="0.7007%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="0.5868%" y="149" width="0.1673%" height="15" fill="rgb(207,175,4)" fg:x="249" fg:w="71"/><text x="0.8798%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.95%)</title><rect x="0.7541%" y="149" width="0.9474%" height="15" fill="rgb(205,108,24)" fg:x="320" fg:w="402"/><text x="1.0471%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.20%)</title><rect x="1.7015%" y="149" width="0.1956%" height="15" fill="rgb(244,120,49)" fg:x="722" fg:w="83"/><text x="1.9945%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="1.8972%" y="149" width="0.1273%" height="15" fill="rgb(223,47,38)" fg:x="805" fg:w="54"/><text x="2.1901%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.0244%" y="149" width="0.1273%" height="15" fill="rgb(229,179,11)" fg:x="859" fg:w="54"/><text x="2.3174%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.1517%" y="149" width="0.1273%" height="15" fill="rgb(231,122,1)" fg:x="913" fg:w="54"/><text x="2.4446%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.2789%" y="149" width="0.1273%" height="15" fill="rgb(245,119,9)" fg:x="967" fg:w="54"/><text x="2.5719%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="2.4062%" y="149" width="0.1673%" height="15" fill="rgb(241,163,25)" fg:x="1021" fg:w="71"/><text x="2.6992%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.5735%" y="149" width="0.1532%" height="15" fill="rgb(217,214,3)" fg:x="1092" fg:w="65"/><text x="2.8665%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.95%)</title><rect x="2.7267%" y="149" width="0.9474%" height="15" fill="rgb(240,86,28)" fg:x="1157" fg:w="402"/><text x="3.0197%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.6741%" y="149" width="0.0377%" height="15" fill="rgb(215,47,9)" fg:x="1559" fg:w="16"/><text x="3.9671%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="3.7118%" y="133" width="0.1791%" height="15" fill="rgb(252,25,45)" fg:x="1575" fg:w="76"/><text x="4.0048%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.8909%" y="101" width="0.1414%" height="15" fill="rgb(251,164,9)" fg:x="1651" fg:w="60"/><text x="4.1839%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="3.8909%" y="117" width="0.2003%" height="15" fill="rgb(233,194,0)" fg:x="1651" fg:w="85"/><text x="4.1839%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.0913%" y="69" width="0.0212%" height="15" fill="rgb(249,111,24)" fg:x="1736" fg:w="9"/><text x="4.3842%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.1125%" y="53" width="0.0707%" height="15" fill="rgb(250,223,3)" fg:x="1745" fg:w="30"/><text x="4.4054%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.1125%" y="69" width="0.1296%" height="15" fill="rgb(236,178,37)" fg:x="1745" fg:w="55"/><text x="4.4054%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.27%)</title><rect x="4.0913%" y="85" width="0.2687%" height="15" fill="rgb(241,158,50)" fg:x="1736" fg:w="114"/><text x="4.3842%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.39%)</title><rect x="4.0913%" y="101" width="0.3936%" height="15" fill="rgb(213,121,41)" fg:x="1736" fg:w="167"/><text x="4.3842%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.41%)</title><rect x="4.0913%" y="117" width="0.4054%" height="15" fill="rgb(240,92,3)" fg:x="1736" fg:w="172"/><text x="4.3842%" y="127.50"></text></g><g><title>core::fmt::write (368 instructions, 0.87%)</title><rect x="3.8909%" y="133" width="0.8673%" height="15" fill="rgb(205,123,3)" fg:x="1651" fg:w="368"/><text x="4.1839%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (565 instructions, 1.33%)</title><rect x="3.7118%" y="149" width="1.3315%" height="15" fill="rgb(205,97,47)" fg:x="1575" fg:w="565"/><text x="4.0048%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.20%)</title><rect x="5.0434%" y="149" width="0.1956%" height="15" fill="rgb(247,152,14)" fg:x="2140" fg:w="83"/><text x="5.3363%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="5.2390%" y="149" width="0.1296%" height="15" fill="rgb(248,195,53)" fg:x="2223" fg:w="55"/><text x="5.5319%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="5.3686%" y="149" width="0.1532%" height="15" fill="rgb(226,201,16)" fg:x="2278" fg:w="65"/><text x="5.6616%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="5.5218%" y="149" width="0.1532%" height="15" fill="rgb(205,98,0)" fg:x="2343" fg:w="65"/><text x="5.8147%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.95%)</title><rect x="5.6750%" y="133" width="0.9474%" height="15" fill="rgb(214,191,48)" fg:x="2408" fg:w="402"/><text x="5.9679%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="6.6224%" y="133" width="0.0377%" height="15" fill="rgb(237,112,39)" fg:x="2810" fg:w="16"/><text x="6.9153%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="6.6601%" y="117" width="0.1791%" height="15" fill="rgb(247,203,27)" fg:x="2826" fg:w="76"/><text x="6.9530%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="6.8392%" y="85" width="0.1414%" height="15" fill="rgb(235,124,28)" fg:x="2902" fg:w="60"/><text x="7.1321%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="6.8392%" y="101" width="0.2003%" height="15" fill="rgb(208,207,46)" fg:x="2902" fg:w="85"/><text x="7.1321%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.0395%" y="53" width="0.0212%" height="15" fill="rgb(234,176,4)" fg:x="2987" fg:w="9"/><text x="7.3325%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.0607%" y="37" width="0.0707%" height="15" fill="rgb(230,133,28)" fg:x="2996" fg:w="30"/><text x="7.3537%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.0607%" y="53" width="0.1296%" height="15" fill="rgb(211,137,40)" fg:x="2996" fg:w="55"/><text x="7.3537%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.27%)</title><rect x="7.0395%" y="69" width="0.2687%" height="15" fill="rgb(254,35,13)" fg:x="2987" fg:w="114"/><text x="7.3325%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.39%)</title><rect x="7.0395%" y="85" width="0.3936%" height="15" fill="rgb(225,49,51)" fg:x="2987" fg:w="167"/><text x="7.3325%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.41%)</title><rect x="7.0395%" y="101" width="0.4054%" height="15" fill="rgb(251,10,15)" fg:x="2987" fg:w="172"/><text x="7.3325%" y="111.50"></text></g><g><title>core::fmt::write (368 instructions, 0.87%)</title><rect x="6.8392%" y="117" width="0.8673%" height="15" fill="rgb(228,207,15)" fg:x="2902" fg:w="368"/><text x="7.1321%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (565 instructions, 1.33%)</title><rect x="6.6601%" y="133" width="1.3315%" height="15" fill="rgb(241,99,19)" fg:x="2826" fg:w="565"/><text x="6.9530%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.20%)</title><rect x="7.9916%" y="133" width="0.1956%" height="15" fill="rgb(207,104,49)" fg:x="3391" fg:w="83"/><text x="8.2846%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="8.1872%" y="133" width="0.1296%" height="15" fill="rgb(234,99,18)" fg:x="3474" fg:w="55"/><text x="8.4802%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="8.3168%" y="117" width="0.1673%" height="15" fill="rgb(213,191,49)" fg:x="3529" fg:w="71"/><text x="8.6098%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.21%)</title><rect x="8.4842%" y="117" width="0.2121%" height="15" fill="rgb(210,226,19)" fg:x="3600" fg:w="90"/><text x="8.7771%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="8.6963%" y="117" width="0.1532%" height="15" fill="rgb(229,97,18)" fg:x="3690" fg:w="65"/><text x="8.9892%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (289 instructions, 0.68%)</title><rect x="8.3168%" y="133" width="0.6811%" height="15" fill="rgb(211,167,15)" fg:x="3529" fg:w="289"/><text x="8.6098%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="8.9979%" y="133" width="0.1791%" height="15" fill="rgb(210,169,34)" fg:x="3818" fg:w="76"/><text x="9.2909%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,689 instructions, 3.98%)</title><rect x="5.6750%" y="149" width="3.9805%" height="15" fill="rgb(241,121,31)" fg:x="2408" fg:w="1689"/><text x="5.9679%" y="159.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="9.6554%" y="149" width="0.1532%" height="15" fill="rgb(232,40,11)" fg:x="4097" fg:w="65"/><text x="9.9484%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.8086%" y="149" width="0.0306%" height="15" fill="rgb(205,86,26)" fg:x="4162" fg:w="13"/><text x="10.1016%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.8393%" y="149" width="0.0306%" height="15" fill="rgb(231,126,28)" fg:x="4175" fg:w="13"/><text x="10.1322%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="9.8699%" y="149" width="0.0165%" height="15" fill="rgb(219,221,18)" fg:x="4188" fg:w="7"/><text x="10.1629%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="9.8864%" y="149" width="0.0354%" height="15" fill="rgb(211,40,0)" fg:x="4195" fg:w="15"/><text x="10.1794%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="9.9218%" y="133" width="0.1791%" height="15" fill="rgb(239,85,43)" fg:x="4210" fg:w="76"/><text x="10.2147%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.37%)</title><rect x="9.9218%" y="149" width="0.3747%" height="15" fill="rgb(231,55,21)" fg:x="4210" fg:w="159"/><text x="10.2147%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.2965%" y="117" width="0.1791%" height="15" fill="rgb(225,184,43)" fg:x="4369" fg:w="76"/><text x="10.5894%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="10.2965%" y="133" width="0.2592%" height="15" fill="rgb(251,158,41)" fg:x="4369" fg:w="110"/><text x="10.5894%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.42%)</title><rect x="10.2965%" y="149" width="0.4242%" height="15" fill="rgb(234,159,37)" fg:x="4369" fg:w="180"/><text x="10.5894%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="10.7207%" y="149" width="0.1791%" height="15" fill="rgb(216,204,22)" fg:x="4549" fg:w="76"/><text x="11.0137%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="10.8998%" y="149" width="0.1909%" height="15" fill="rgb(214,17,3)" fg:x="4625" fg:w="81"/><text x="11.1928%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.0907%" y="149" width="0.1791%" height="15" fill="rgb(212,111,17)" fg:x="4706" fg:w="76"/><text x="11.3837%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.2698%" y="149" width="0.1791%" height="15" fill="rgb(221,157,24)" fg:x="4782" fg:w="76"/><text x="11.5628%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.4536%" y="149" width="0.1909%" height="15" fill="rgb(252,16,13)" fg:x="4860" fg:w="81"/><text x="11.7466%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.94%)</title><rect x="11.6445%" y="149" width="0.9403%" height="15" fill="rgb(221,62,2)" fg:x="4941" fg:w="399"/><text x="11.9375%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.94%)</title><rect x="12.5848%" y="149" width="0.9403%" height="15" fill="rgb(247,87,22)" fg:x="5340" fg:w="399"/><text x="12.8778%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,450 instructions, 15.20%)</title><rect x="0.5868%" y="165" width="15.2008%" height="15" fill="rgb(215,73,9)" fg:x="249" fg:w="6450"/><text x="0.8798%" y="175.50">candid::de::IDLDese..</text></g><g><title>memcpy (354 instructions, 0.83%)</title><rect x="15.7876%" y="165" width="0.8343%" height="15" fill="rgb(207,175,33)" fg:x="6699" fg:w="354"/><text x="16.0806%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="16.6219%" y="133" width="0.0283%" height="15" fill="rgb(243,129,54)" fg:x="7053" fg:w="12"/><text x="16.9149%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="16.6502%" y="117" width="0.1249%" height="15" fill="rgb(227,119,45)" fg:x="7065" fg:w="53"/><text x="16.9431%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.90%)</title><rect x="16.7751%" y="117" width="0.9050%" height="15" fill="rgb(205,109,36)" fg:x="7118" fg:w="384"/><text x="17.0680%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="17.6801%" y="117" width="0.3818%" height="15" fill="rgb(205,6,39)" fg:x="7502" fg:w="162"/><text x="17.9730%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.97%)</title><rect x="16.6502%" y="133" width="1.9702%" height="15" fill="rgb(221,32,16)" fg:x="7065" fg:w="836"/><text x="16.9431%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (963 instructions, 2.27%)</title><rect x="16.6219%" y="149" width="2.2695%" height="15" fill="rgb(228,144,50)" fg:x="7053" fg:w="963"/><text x="16.9149%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="18.8914%" y="149" width="0.1791%" height="15" fill="rgb(229,201,53)" fg:x="8016" fg:w="76"/><text x="19.1844%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="19.0705%" y="133" width="0.0283%" height="15" fill="rgb(249,153,27)" fg:x="8092" fg:w="12"/><text x="19.3635%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="19.0988%" y="117" width="0.1249%" height="15" fill="rgb(227,106,25)" fg:x="8104" fg:w="53"/><text x="19.3918%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.90%)</title><rect x="19.2237%" y="117" width="0.9050%" height="15" fill="rgb(230,65,29)" fg:x="8157" fg:w="384"/><text x="19.5167%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="20.1287%" y="117" width="0.3818%" height="15" fill="rgb(221,57,46)" fg:x="8541" fg:w="162"/><text x="20.4216%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.97%)</title><rect x="19.0988%" y="133" width="1.9702%" height="15" fill="rgb(229,161,17)" fg:x="8104" fg:w="836"/><text x="19.3918%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,056 instructions, 2.49%)</title><rect x="19.0705%" y="149" width="2.4887%" height="15" fill="rgb(222,213,11)" fg:x="8092" fg:w="1056"/><text x="19.3635%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="21.5592%" y="149" width="0.1791%" height="15" fill="rgb(235,35,13)" fg:x="9148" fg:w="76"/><text x="21.8522%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="21.7383%" y="133" width="0.0283%" height="15" fill="rgb(233,158,34)" fg:x="9224" fg:w="12"/><text x="22.0313%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="21.7666%" y="117" width="0.1249%" height="15" fill="rgb(215,151,48)" fg:x="9236" fg:w="53"/><text x="22.0596%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.90%)</title><rect x="21.8915%" y="117" width="0.9050%" height="15" fill="rgb(229,84,14)" fg:x="9289" fg:w="384"/><text x="22.1845%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.38%)</title><rect x="22.7965%" y="117" width="0.3818%" height="15" fill="rgb(229,68,14)" fg:x="9673" fg:w="162"/><text x="23.0894%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.97%)</title><rect x="21.7666%" y="133" width="1.9702%" height="15" fill="rgb(243,106,26)" fg:x="9236" fg:w="836"/><text x="22.0596%" y="143.50"></text></g><g><title>memcmp (740 instructions, 1.74%)</title><rect x="23.7368%" y="133" width="1.7440%" height="15" fill="rgb(206,45,38)" fg:x="10072" fg:w="740"/><text x="24.0298%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="25.4808%" y="117" width="0.1909%" height="15" fill="rgb(226,6,15)" fg:x="10812" fg:w="81"/><text x="25.7737%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="25.4808%" y="133" width="0.2545%" height="15" fill="rgb(232,22,54)" fg:x="10812" fg:w="108"/><text x="25.7737%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,863 instructions, 4.39%)</title><rect x="21.7383%" y="149" width="4.3906%" height="15" fill="rgb(229,222,32)" fg:x="9224" fg:w="1863"/><text x="22.0313%" y="159.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.1289%" y="101" width="0.1249%" height="15" fill="rgb(228,62,29)" fg:x="11087" fg:w="53"/><text x="26.4218%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="26.1289%" y="117" width="0.1862%" height="15" fill="rgb(251,103,34)" fg:x="11087" fg:w="79"/><text x="26.4218%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.8217%" y="101" width="0.1249%" height="15" fill="rgb(233,12,30)" fg:x="11381" fg:w="53"/><text x="27.1147%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="26.8217%" y="117" width="0.1862%" height="15" fill="rgb(238,52,0)" fg:x="11381" fg:w="79"/><text x="27.1147%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (588 instructions, 1.39%)</title><rect x="26.1289%" y="133" width="1.3857%" height="15" fill="rgb(223,98,5)" fg:x="11087" fg:w="588"/><text x="26.4218%" y="143.50"></text></g><g><title>candid::types::internal::env_id (891 instructions, 2.10%)</title><rect x="26.1289%" y="149" width="2.0998%" height="15" fill="rgb(228,75,37)" fg:x="11087" fg:w="891"/><text x="26.4218%" y="159.50">c..</text></g><g><title>candid::types::CandidType::ty (5,022 instructions, 11.84%)</title><rect x="16.6219%" y="165" width="11.8354%" height="15" fill="rgb(205,115,49)" fg:x="7053" fg:w="5022"/><text x="16.9149%" y="175.50">candid::types::..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.11%)</title><rect x="28.4573%" y="149" width="0.1061%" height="15" fill="rgb(250,154,43)" fg:x="12075" fg:w="45"/><text x="28.7503%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="28.5633%" y="133" width="0.2899%" height="15" fill="rgb(226,43,29)" fg:x="12120" fg:w="123"/><text x="28.8563%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="28.9169%" y="133" width="0.2899%" height="15" fill="rgb(249,228,39)" fg:x="12270" fg:w="123"/><text x="29.2098%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.71%)</title><rect x="28.5633%" y="149" width="0.7070%" height="15" fill="rgb(216,79,43)" fg:x="12120" fg:w="300"/><text x="28.8563%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="29.2704%" y="133" width="0.0660%" height="15" fill="rgb(228,95,12)" fg:x="12420" fg:w="28"/><text x="29.5633%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="29.3363%" y="133" width="0.0660%" height="15" fill="rgb(249,221,15)" fg:x="12448" fg:w="28"/><text x="29.6293%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2223 (15 instructions, 0.04%)</title><rect x="29.4023%" y="133" width="0.0354%" height="15" fill="rgb(233,34,13)" fg:x="12476" fg:w="15"/><text x="29.6953%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2223 (15 instructions, 0.04%)</title><rect x="29.4377%" y="133" width="0.0354%" height="15" fill="rgb(214,103,39)" fg:x="12491" fg:w="15"/><text x="29.7307%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="29.4730%" y="133" width="0.1838%" height="15" fill="rgb(251,126,39)" fg:x="12506" fg:w="78"/><text x="29.7660%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="29.6569%" y="133" width="0.1673%" height="15" fill="rgb(214,216,36)" fg:x="12584" fg:w="71"/><text x="29.9498%" y="143.50"></text></g><g><title>binread::binary_template::write_named (80 instructions, 0.19%)</title><rect x="29.8242%" y="117" width="0.1885%" height="15" fill="rgb(220,221,8)" fg:x="12655" fg:w="80"/><text x="30.1172%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (150 instructions, 0.35%)</title><rect x="29.8242%" y="133" width="0.3535%" height="15" fill="rgb(240,216,3)" fg:x="12655" fg:w="150"/><text x="30.1172%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="30.1777%" y="133" width="0.1532%" height="15" fill="rgb(232,218,17)" fg:x="12805" fg:w="65"/><text x="30.4707%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.95%)</title><rect x="30.3309%" y="133" width="0.9474%" height="15" fill="rgb(229,163,45)" fg:x="12870" fg:w="402"/><text x="30.6239%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="31.2783%" y="117" width="0.1791%" height="15" fill="rgb(231,110,42)" fg:x="13272" fg:w="76"/><text x="31.5712%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="31.4574%" y="85" width="0.1414%" height="15" fill="rgb(208,170,48)" fg:x="13348" fg:w="60"/><text x="31.7504%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="31.4574%" y="101" width="0.2003%" height="15" fill="rgb(239,116,25)" fg:x="13348" fg:w="85"/><text x="31.7504%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="31.6577%" y="53" width="0.0212%" height="15" fill="rgb(219,200,50)" fg:x="13433" fg:w="9"/><text x="31.9507%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="31.6789%" y="37" width="0.0707%" height="15" fill="rgb(245,200,0)" fg:x="13442" fg:w="30"/><text x="31.9719%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="31.6789%" y="53" width="0.1296%" height="15" fill="rgb(245,119,33)" fg:x="13442" fg:w="55"/><text x="31.9719%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.27%)</title><rect x="31.6577%" y="69" width="0.2687%" height="15" fill="rgb(231,125,12)" fg:x="13433" fg:w="114"/><text x="31.9507%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.39%)</title><rect x="31.6577%" y="85" width="0.3936%" height="15" fill="rgb(216,96,41)" fg:x="13433" fg:w="167"/><text x="31.9507%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.41%)</title><rect x="31.6577%" y="101" width="0.4054%" height="15" fill="rgb(248,43,45)" fg:x="13433" fg:w="172"/><text x="31.9507%" y="111.50"></text></g><g><title>core::fmt::write (368 instructions, 0.87%)</title><rect x="31.4574%" y="117" width="0.8673%" height="15" fill="rgb(217,222,7)" fg:x="13348" fg:w="368"/><text x="31.7504%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (565 instructions, 1.33%)</title><rect x="31.2783%" y="133" width="1.3315%" height="15" fill="rgb(233,28,6)" fg:x="13272" fg:w="565"/><text x="31.5712%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.20%)</title><rect x="32.6098%" y="133" width="0.1956%" height="15" fill="rgb(231,218,15)" fg:x="13837" fg:w="83"/><text x="32.9028%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="32.8054%" y="133" width="0.1296%" height="15" fill="rgb(226,171,48)" fg:x="13920" fg:w="55"/><text x="33.0984%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="32.9350%" y="117" width="0.1273%" height="15" fill="rgb(235,201,9)" fg:x="13975" fg:w="54"/><text x="33.2280%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 instructions, 0.25%)</title><rect x="32.9350%" y="133" width="0.2522%" height="15" fill="rgb(217,80,15)" fg:x="13975" fg:w="107"/><text x="33.2280%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="33.1872%" y="133" width="0.1791%" height="15" fill="rgb(219,152,8)" fg:x="14082" fg:w="76"/><text x="33.4802%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="33.3663%" y="117" width="0.1273%" height="15" fill="rgb(243,107,38)" fg:x="14158" fg:w="54"/><text x="33.6593%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="33.6185%" y="117" width="0.1273%" height="15" fill="rgb(231,17,5)" fg:x="14265" fg:w="54"/><text x="33.9115%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="33.8707%" y="117" width="0.1273%" height="15" fill="rgb(209,25,54)" fg:x="14372" fg:w="54"/><text x="34.1636%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="34.1228%" y="117" width="0.1273%" height="15" fill="rgb(219,0,2)" fg:x="14479" fg:w="54"/><text x="34.4158%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="34.3750%" y="117" width="0.1273%" height="15" fill="rgb(246,9,5)" fg:x="14586" fg:w="54"/><text x="34.6680%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="34.6272%" y="117" width="0.1273%" height="15" fill="rgb(226,159,4)" fg:x="14693" fg:w="54"/><text x="34.9201%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="34.8793%" y="117" width="0.1273%" height="15" fill="rgb(219,175,34)" fg:x="14800" fg:w="54"/><text x="35.1723%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="35.1315%" y="117" width="0.1273%" height="15" fill="rgb(236,10,46)" fg:x="14907" fg:w="54"/><text x="35.4245%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (856 instructions, 2.02%)</title><rect x="33.3663%" y="133" width="2.0173%" height="15" fill="rgb(240,211,16)" fg:x="14158" fg:w="856"/><text x="33.6593%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.24%)</title><rect x="35.3837%" y="101" width="0.2380%" height="15" fill="rgb(205,3,43)" fg:x="15014" fg:w="101"/><text x="35.6766%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.32%)</title><rect x="35.3837%" y="117" width="0.3205%" height="15" fill="rgb(245,7,22)" fg:x="15014" fg:w="136"/><text x="35.6766%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.50%)</title><rect x="35.3837%" y="133" width="0.4973%" height="15" fill="rgb(239,132,32)" fg:x="15014" fg:w="211"/><text x="35.6766%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="35.8809%" y="117" width="0.1273%" height="15" fill="rgb(228,202,34)" fg:x="15225" fg:w="54"/><text x="36.1739%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="36.1331%" y="117" width="0.1273%" height="15" fill="rgb(254,200,22)" fg:x="15332" fg:w="54"/><text x="36.4261%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="36.3853%" y="117" width="0.1273%" height="15" fill="rgb(219,10,39)" fg:x="15439" fg:w="54"/><text x="36.6782%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="36.6374%" y="117" width="0.1273%" height="15" fill="rgb(226,210,39)" fg:x="15546" fg:w="54"/><text x="36.9304%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="36.8896%" y="117" width="0.1273%" height="15" fill="rgb(208,219,16)" fg:x="15653" fg:w="54"/><text x="37.1826%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="37.1418%" y="117" width="0.1273%" height="15" fill="rgb(216,158,51)" fg:x="15760" fg:w="54"/><text x="37.4347%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="37.3939%" y="117" width="0.1273%" height="15" fill="rgb(233,14,44)" fg:x="15867" fg:w="54"/><text x="37.6869%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (749 instructions, 1.77%)</title><rect x="35.8809%" y="133" width="1.7652%" height="15" fill="rgb(237,97,39)" fg:x="15225" fg:w="749"/><text x="36.1739%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 instructions, 0.06%)</title><rect x="37.6461%" y="133" width="0.0566%" height="15" fill="rgb(218,198,43)" fg:x="15974" fg:w="24"/><text x="37.9391%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="37.7027%" y="133" width="0.1532%" height="15" fill="rgb(231,104,20)" fg:x="15998" fg:w="65"/><text x="37.9956%" y="143.50"></text></g><g><title>__rust_realloc (48 instructions, 0.11%)</title><rect x="37.8559%" y="101" width="0.1131%" height="15" fill="rgb(254,36,13)" fg:x="16063" fg:w="48"/><text x="38.1488%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 instructions, 0.20%)</title><rect x="37.8559%" y="117" width="0.1956%" height="15" fill="rgb(248,14,50)" fg:x="16063" fg:w="83"/><text x="38.1488%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (158 instructions, 0.37%)</title><rect x="37.8559%" y="133" width="0.3724%" height="15" fill="rgb(217,107,29)" fg:x="16063" fg:w="158"/><text x="38.1488%" y="143.50"></text></g><g><title>memcpy (206 instructions, 0.49%)</title><rect x="38.2282%" y="133" width="0.4855%" height="15" fill="rgb(251,169,33)" fg:x="16221" fg:w="206"/><text x="38.5212%" y="143.50"></text></g><g><title>memcpy (160 instructions, 0.38%)</title><rect x="38.7137%" y="133" width="0.3771%" height="15" fill="rgb(217,108,32)" fg:x="16427" fg:w="160"/><text x="39.0067%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (48 instructions, 0.11%)</title><rect x="39.0908%" y="133" width="0.1131%" height="15" fill="rgb(219,66,42)" fg:x="16587" fg:w="48"/><text x="39.3837%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="39.2039%" y="133" width="0.1909%" height="15" fill="rgb(206,180,7)" fg:x="16635" fg:w="81"/><text x="39.4969%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="39.3948%" y="133" width="0.1296%" height="15" fill="rgb(208,226,31)" fg:x="16716" fg:w="55"/><text x="39.6878%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (5,354 instructions, 12.62%)</title><rect x="29.2704%" y="149" width="12.6178%" height="15" fill="rgb(218,26,49)" fg:x="12420" fg:w="5354"/><text x="29.5633%" y="159.50">&lt;candid::types::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.8882%" y="149" width="0.0259%" height="15" fill="rgb(233,197,48)" fg:x="17774" fg:w="11"/><text x="42.1812%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.9141%" y="149" width="0.0259%" height="15" fill="rgb(252,181,51)" fg:x="17785" fg:w="11"/><text x="42.2071%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.9400%" y="149" width="0.0259%" height="15" fill="rgb(253,90,19)" fg:x="17796" fg:w="11"/><text x="42.2330%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (5,971 instructions, 14.07%)</title><rect x="28.4573%" y="165" width="14.0719%" height="15" fill="rgb(215,171,30)" fg:x="12075" fg:w="5971"/><text x="28.7503%" y="175.50">candid::de::IDLDes..</text></g><g><title>memcpy (410 instructions, 0.97%)</title><rect x="42.5292%" y="165" width="0.9663%" height="15" fill="rgb(214,222,9)" fg:x="18046" fg:w="410"/><text x="42.8222%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 instructions, 0.04%)</title><rect x="43.4955%" y="133" width="0.0354%" height="15" fill="rgb(223,3,22)" fg:x="18456" fg:w="15"/><text x="43.7884%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="43.5308%" y="133" width="0.3959%" height="15" fill="rgb(225,196,46)" fg:x="18471" fg:w="168"/><text x="43.8238%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.22%)</title><rect x="43.9268%" y="101" width="0.2239%" height="15" fill="rgb(209,110,37)" fg:x="18639" fg:w="95"/><text x="44.2197%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (240 instructions, 0.57%)</title><rect x="43.9268%" y="117" width="0.5656%" height="15" fill="rgb(249,89,12)" fg:x="18639" fg:w="240"/><text x="44.2197%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (267 instructions, 0.63%)</title><rect x="43.9268%" y="133" width="0.6292%" height="15" fill="rgb(226,27,33)" fg:x="18639" fg:w="267"/><text x="44.2197%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="44.5560%" y="133" width="0.0259%" height="15" fill="rgb(213,82,22)" fg:x="18906" fg:w="11"/><text x="44.8490%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (501 instructions, 1.18%)</title><rect x="43.4955%" y="149" width="1.1807%" height="15" fill="rgb(248,140,0)" fg:x="18456" fg:w="501"/><text x="43.7884%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (538 instructions, 1.27%)</title><rect x="43.4955%" y="165" width="1.2679%" height="15" fill="rgb(228,106,3)" fg:x="18456" fg:w="538"/><text x="43.7884%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.13%)</title><rect x="44.7634%" y="149" width="0.1273%" height="15" fill="rgb(209,23,37)" fg:x="18994" fg:w="54"/><text x="45.0564%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.22%)</title><rect x="44.8906%" y="149" width="0.2239%" height="15" fill="rgb(241,93,50)" fg:x="19048" fg:w="95"/><text x="45.1836%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (230 instructions, 0.54%)</title><rect x="44.7634%" y="165" width="0.5420%" height="15" fill="rgb(253,46,43)" fg:x="18994" fg:w="230"/><text x="45.0564%" y="175.50"></text></g><g><title>memset (218 instructions, 0.51%)</title><rect x="45.3054%" y="165" width="0.5138%" height="15" fill="rgb(226,206,43)" fg:x="19224" fg:w="218"/><text x="45.5984%" y="175.50"></text></g><g><title>memcpy (163 instructions, 0.38%)</title><rect x="45.8192%" y="165" width="0.3841%" height="15" fill="rgb(217,54,7)" fg:x="19442" fg:w="163"/><text x="46.1122%" y="175.50"></text></g><g><title>memcpy (470 instructions, 1.11%)</title><rect x="46.2033%" y="165" width="1.1077%" height="15" fill="rgb(223,5,52)" fg:x="19605" fg:w="470"/><text x="46.4963%" y="175.50"></text></g><g><title>memset (56 instructions, 0.13%)</title><rect x="47.3110%" y="149" width="0.1320%" height="15" fill="rgb(206,52,46)" fg:x="20075" fg:w="56"/><text x="47.6040%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.75%)</title><rect x="47.4430%" y="149" width="11.7529%" height="15" fill="rgb(253,136,11)" fg:x="20131" fg:w="4987"/><text x="47.7359%" y="159.50">sha2::sha256::..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.75%)</title><rect x="59.1959%" y="149" width="11.7529%" height="15" fill="rgb(208,106,33)" fg:x="25118" fg:w="4987"/><text x="59.4889%" y="159.50">sha2::sha256::..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (10,354 instructions, 24.40%)</title><rect x="47.3110%" y="165" width="24.4014%" height="15" fill="rgb(206,54,4)" fg:x="20075" fg:w="10354"/><text x="47.6040%" y="175.50">&lt;sha2::core_api::Sha256VarCore as..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="71.7124%" y="165" width="0.1791%" height="15" fill="rgb(213,3,15)" fg:x="30429" fg:w="76"/><text x="72.0054%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="71.8915%" y="149" width="0.0283%" height="15" fill="rgb(252,211,39)" fg:x="30505" fg:w="12"/><text x="72.1845%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (90 instructions, 0.21%)</title><rect x="71.9198%" y="101" width="0.2121%" height="15" fill="rgb(223,6,36)" fg:x="30517" fg:w="90"/><text x="72.2127%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="72.1319%" y="101" width="0.1485%" height="15" fill="rgb(252,169,45)" fg:x="30607" fg:w="63"/><text x="72.4249%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (237 instructions, 0.56%)</title><rect x="71.9198%" y="117" width="0.5585%" height="15" fill="rgb(212,48,26)" fg:x="30517" fg:w="237"/><text x="72.2127%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (264 instructions, 0.62%)</title><rect x="71.9198%" y="133" width="0.6222%" height="15" fill="rgb(251,102,48)" fg:x="30517" fg:w="264"/><text x="72.2127%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="72.5419%" y="117" width="0.1296%" height="15" fill="rgb(243,208,16)" fg:x="30781" fg:w="55"/><text x="72.8349%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="72.6716%" y="117" width="0.1485%" height="15" fill="rgb(219,96,24)" fg:x="30836" fg:w="63"/><text x="72.9645%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (199 instructions, 0.47%)</title><rect x="72.5419%" y="133" width="0.4690%" height="15" fill="rgb(219,33,29)" fg:x="30781" fg:w="199"/><text x="72.8349%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (495 instructions, 1.17%)</title><rect x="71.9198%" y="149" width="1.1666%" height="15" fill="rgb(223,176,5)" fg:x="30517" fg:w="495"/><text x="72.2127%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="73.0863%" y="149" width="0.0259%" height="15" fill="rgb(228,140,14)" fg:x="31012" fg:w="11"/><text x="73.3793%" y="159.50"></text></g><g><title>memset (136 instructions, 0.32%)</title><rect x="73.1123%" y="149" width="0.3205%" height="15" fill="rgb(217,179,31)" fg:x="31023" fg:w="136"/><text x="73.4052%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="73.4328%" y="117" width="0.0283%" height="15" fill="rgb(230,9,30)" fg:x="31159" fg:w="12"/><text x="73.7258%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.12%)</title><rect x="73.4328%" y="133" width="0.1178%" height="15" fill="rgb(230,136,20)" fg:x="31159" fg:w="50"/><text x="73.7258%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="73.5506%" y="133" width="0.1791%" height="15" fill="rgb(215,210,22)" fg:x="31209" fg:w="76"/><text x="73.8436%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="73.7297%" y="117" width="0.0283%" height="15" fill="rgb(218,43,5)" fg:x="31285" fg:w="12"/><text x="74.0227%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="73.7580%" y="101" width="0.1249%" height="15" fill="rgb(216,11,5)" fg:x="31297" fg:w="53"/><text x="74.0510%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.86%)</title><rect x="73.8829%" y="101" width="0.8578%" height="15" fill="rgb(209,82,29)" fg:x="31350" fg:w="364"/><text x="74.1759%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.17%)</title><rect x="74.7408%" y="101" width="0.1697%" height="15" fill="rgb(244,115,12)" fg:x="31714" fg:w="72"/><text x="75.0337%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.71%)</title><rect x="73.7580%" y="117" width="1.7110%" height="15" fill="rgb(222,82,18)" fg:x="31297" fg:w="726"/><text x="74.0510%" y="127.50"></text></g><g><title>candid::types::internal::env_add (946 instructions, 2.23%)</title><rect x="73.7297%" y="133" width="2.2294%" height="15" fill="rgb(249,227,8)" fg:x="31285" fg:w="946"/><text x="74.0227%" y="143.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="75.9592%" y="133" width="0.1791%" height="15" fill="rgb(253,141,45)" fg:x="32231" fg:w="76"/><text x="76.2522%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="76.1383%" y="133" width="0.1791%" height="15" fill="rgb(234,184,4)" fg:x="32307" fg:w="76"/><text x="76.4313%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="76.3174%" y="117" width="0.0283%" height="15" fill="rgb(218,194,23)" fg:x="32383" fg:w="12"/><text x="76.6104%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.3457%" y="101" width="0.1249%" height="15" fill="rgb(235,66,41)" fg:x="32395" fg:w="53"/><text x="76.6387%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.86%)</title><rect x="76.4706%" y="101" width="0.8578%" height="15" fill="rgb(245,217,1)" fg:x="32448" fg:w="364"/><text x="76.7636%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.17%)</title><rect x="77.3284%" y="101" width="0.1697%" height="15" fill="rgb(229,91,1)" fg:x="32812" fg:w="72"/><text x="77.6214%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.71%)</title><rect x="76.3457%" y="117" width="1.7110%" height="15" fill="rgb(207,101,30)" fg:x="32395" fg:w="726"/><text x="76.6387%" y="127.50"></text></g><g><title>memcmp (614 instructions, 1.45%)</title><rect x="78.0567%" y="117" width="1.4470%" height="15" fill="rgb(223,82,49)" fg:x="33121" fg:w="614"/><text x="78.3496%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="79.5037%" y="101" width="0.1909%" height="15" fill="rgb(218,167,17)" fg:x="33735" fg:w="81"/><text x="79.7966%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="79.5037%" y="117" width="0.2545%" height="15" fill="rgb(208,103,14)" fg:x="33735" fg:w="108"/><text x="79.7966%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,627 instructions, 3.83%)</title><rect x="76.3174%" y="133" width="3.8344%" height="15" fill="rgb(238,20,8)" fg:x="32383" fg:w="1627"/><text x="76.6104%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="80.1518%" y="85" width="0.1249%" height="15" fill="rgb(218,80,54)" fg:x="34010" fg:w="53"/><text x="80.4447%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="80.2767%" y="85" width="0.3629%" height="15" fill="rgb(240,144,17)" fg:x="34063" fg:w="154"/><text x="80.5696%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.61%)</title><rect x="80.1518%" y="101" width="0.6080%" height="15" fill="rgb(245,27,50)" fg:x="34010" fg:w="258"/><text x="80.4447%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.11%)</title><rect x="80.1518%" y="117" width="1.1147%" height="15" fill="rgb(251,51,7)" fg:x="34010" fg:w="473"/><text x="80.4447%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.564 (42 instructions, 0.10%)</title><rect x="81.2665%" y="117" width="0.0990%" height="15" fill="rgb(245,217,29)" fg:x="34483" fg:w="42"/><text x="81.5595%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.3655%" y="117" width="0.0259%" height="15" fill="rgb(221,176,29)" fg:x="34525" fg:w="11"/><text x="81.6584%" y="127.50"></text></g><g><title>candid::types::internal::env_id (704 instructions, 1.66%)</title><rect x="80.1518%" y="133" width="1.6591%" height="15" fill="rgb(212,180,24)" fg:x="34010" fg:w="704"/><text x="80.4447%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,669 instructions, 8.65%)</title><rect x="73.4328%" y="149" width="8.6468%" height="15" fill="rgb(254,24,2)" fg:x="31159" fg:w="3669"/><text x="73.7258%" y="159.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="82.0796%" y="117" width="0.1791%" height="15" fill="rgb(230,100,2)" fg:x="34828" fg:w="76"/><text x="82.3725%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="82.0796%" y="133" width="0.2592%" height="15" fill="rgb(219,142,25)" fg:x="34828" fg:w="110"/><text x="82.3725%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.42%)</title><rect x="82.0796%" y="149" width="0.4242%" height="15" fill="rgb(240,73,43)" fg:x="34828" fg:w="180"/><text x="82.3725%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.06%)</title><rect x="82.5038%" y="133" width="0.0566%" height="15" fill="rgb(214,114,15)" fg:x="35008" fg:w="24"/><text x="82.7967%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="82.5603%" y="101" width="0.1838%" height="15" fill="rgb(207,130,4)" fg:x="35032" fg:w="78"/><text x="82.8533%" y="111.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.36%)</title><rect x="82.5603%" y="117" width="0.3606%" height="15" fill="rgb(221,25,40)" fg:x="35032" fg:w="153"/><text x="82.8533%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="82.9209%" y="117" width="0.1791%" height="15" fill="rgb(241,184,7)" fg:x="35185" fg:w="76"/><text x="83.2139%" y="127.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.73%)</title><rect x="82.5603%" y="133" width="0.7259%" height="15" fill="rgb(235,159,4)" fg:x="35032" fg:w="308"/><text x="82.8533%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="83.2862%" y="85" width="0.1249%" height="15" fill="rgb(214,87,48)" fg:x="35340" fg:w="53"/><text x="83.5792%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="83.4111%" y="85" width="0.3629%" height="15" fill="rgb(246,198,24)" fg:x="35393" fg:w="154"/><text x="83.7041%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.61%)</title><rect x="83.2862%" y="101" width="0.6080%" height="15" fill="rgb(209,66,40)" fg:x="35340" fg:w="258"/><text x="83.5792%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.11%)</title><rect x="83.2862%" y="117" width="1.1147%" height="15" fill="rgb(233,147,39)" fg:x="35340" fg:w="473"/><text x="83.5792%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="84.4009%" y="117" width="0.1791%" height="15" fill="rgb(231,145,52)" fg:x="35813" fg:w="76"/><text x="84.6939%" y="127.50"></text></g><g><title>memset (136 instructions, 0.32%)</title><rect x="84.5800%" y="117" width="0.3205%" height="15" fill="rgb(206,20,26)" fg:x="35889" fg:w="136"/><text x="84.8730%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (986 instructions, 2.32%)</title><rect x="83.2862%" y="133" width="2.3237%" height="15" fill="rgb(238,220,4)" fg:x="35340" fg:w="986"/><text x="83.5792%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="85.6099%" y="101" width="0.1791%" height="15" fill="rgb(252,195,42)" fg:x="36326" fg:w="76"/><text x="85.9029%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="85.6099%" y="117" width="0.2592%" height="15" fill="rgb(209,10,6)" fg:x="36326" fg:w="110"/><text x="85.9029%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.42%)</title><rect x="85.6099%" y="133" width="0.4242%" height="15" fill="rgb(229,3,52)" fg:x="36326" fg:w="180"/><text x="85.9029%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="86.0341%" y="85" width="0.1249%" height="15" fill="rgb(253,49,37)" fg:x="36506" fg:w="53"/><text x="86.3271%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="86.0341%" y="101" width="0.1862%" height="15" fill="rgb(240,103,49)" fg:x="36506" fg:w="79"/><text x="86.3271%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (294 instructions, 0.69%)</title><rect x="86.0341%" y="117" width="0.6929%" height="15" fill="rgb(250,182,30)" fg:x="36506" fg:w="294"/><text x="86.3271%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="86.7270%" y="117" width="0.0424%" height="15" fill="rgb(248,8,30)" fg:x="36800" fg:w="18"/><text x="87.0200%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="86.7694%" y="117" width="0.0259%" height="15" fill="rgb(237,120,30)" fg:x="36818" fg:w="11"/><text x="87.0624%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (437 instructions, 1.03%)</title><rect x="86.0341%" y="133" width="1.0299%" height="15" fill="rgb(221,146,34)" fg:x="36506" fg:w="437"/><text x="86.3271%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="87.0640%" y="85" width="0.1791%" height="15" fill="rgb(242,55,13)" fg:x="36943" fg:w="76"/><text x="87.3570%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="87.0640%" y="101" width="0.2592%" height="15" fill="rgb(242,112,31)" fg:x="36943" fg:w="110"/><text x="87.3570%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.42%)</title><rect x="87.0640%" y="117" width="0.4171%" height="15" fill="rgb(249,192,27)" fg:x="36943" fg:w="177"/><text x="87.3570%" y="127.50"></text></g><g><title>leb128::write::signed (229 instructions, 0.54%)</title><rect x="87.0640%" y="133" width="0.5397%" height="15" fill="rgb(208,204,44)" fg:x="36943" fg:w="229"/><text x="87.3570%" y="143.50"></text></g><g><title>leb128::write::signed (47 instructions, 0.11%)</title><rect x="87.6037%" y="117" width="0.1108%" height="15" fill="rgb(208,93,54)" fg:x="37172" fg:w="47"/><text x="87.8967%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::encode (95 instructions, 0.22%)</title><rect x="87.6037%" y="133" width="0.2239%" height="15" fill="rgb(242,1,31)" fg:x="37172" fg:w="95"/><text x="87.8967%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="87.8276%" y="101" width="0.1909%" height="15" fill="rgb(241,83,25)" fg:x="37267" fg:w="81"/><text x="88.1206%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="87.8276%" y="117" width="0.2545%" height="15" fill="rgb(205,169,50)" fg:x="37267" fg:w="108"/><text x="88.1206%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="88.0821%" y="117" width="0.1838%" height="15" fill="rgb(239,186,37)" fg:x="37375" fg:w="78"/><text x="88.3751%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.51%)</title><rect x="87.8276%" y="133" width="0.5138%" height="15" fill="rgb(205,221,10)" fg:x="37267" fg:w="218"/><text x="88.1206%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="88.3413%" y="133" width="0.0259%" height="15" fill="rgb(218,196,15)" fg:x="37485" fg:w="11"/><text x="88.6343%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,689 instructions, 6.34%)</title><rect x="82.5038%" y="149" width="6.3372%" height="15" fill="rgb(218,196,35)" fg:x="35008" fg:w="2689"/><text x="82.7967%" y="159.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="88.8410%" y="149" width="0.0259%" height="15" fill="rgb(233,63,24)" fg:x="37697" fg:w="11"/><text x="89.1339%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="88.8669%" y="117" width="0.1791%" height="15" fill="rgb(225,8,4)" fg:x="37708" fg:w="76"/><text x="89.1599%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="88.8669%" y="133" width="0.2592%" height="15" fill="rgb(234,105,35)" fg:x="37708" fg:w="110"/><text x="89.1599%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.24%)</title><rect x="89.2840%" y="117" width="0.2380%" height="15" fill="rgb(236,21,32)" fg:x="37885" fg:w="101"/><text x="89.5770%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.32%)</title><rect x="89.2840%" y="133" width="0.3205%" height="15" fill="rgb(228,109,6)" fg:x="37885" fg:w="136"/><text x="89.5770%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (388 instructions, 0.91%)</title><rect x="88.8669%" y="149" width="0.9144%" height="15" fill="rgb(229,215,31)" fg:x="37708" fg:w="388"/><text x="89.1599%" y="159.50"></text></g><g><title>memcpy (272 instructions, 0.64%)</title><rect x="89.7813%" y="149" width="0.6410%" height="15" fill="rgb(221,52,54)" fg:x="38096" fg:w="272"/><text x="90.0743%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.28%)</title><rect x="90.4223%" y="149" width="0.2828%" height="15" fill="rgb(252,129,43)" fg:x="38368" fg:w="120"/><text x="90.7153%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="90.7051%" y="117" width="0.1791%" height="15" fill="rgb(248,183,27)" fg:x="38488" fg:w="76"/><text x="90.9981%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="90.7051%" y="133" width="0.2592%" height="15" fill="rgb(250,0,22)" fg:x="38488" fg:w="110"/><text x="90.9981%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.42%)</title><rect x="90.7051%" y="149" width="0.4171%" height="15" fill="rgb(213,166,10)" fg:x="38488" fg:w="177"/><text x="90.9981%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="91.1223%" y="149" width="0.1791%" height="15" fill="rgb(207,163,36)" fg:x="38665" fg:w="76"/><text x="91.4152%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="91.3014%" y="149" width="0.1061%" height="15" fill="rgb(208,122,22)" fg:x="38741" fg:w="45"/><text x="91.5943%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="91.4074%" y="149" width="0.1061%" height="15" fill="rgb(207,104,49)" fg:x="38786" fg:w="45"/><text x="91.7004%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="91.5135%" y="149" width="0.1296%" height="15" fill="rgb(248,211,50)" fg:x="38831" fg:w="55"/><text x="91.8064%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="91.6431%" y="101" width="0.1249%" height="15" fill="rgb(217,13,45)" fg:x="38886" fg:w="53"/><text x="91.9361%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.36%)</title><rect x="91.7680%" y="101" width="0.3629%" height="15" fill="rgb(211,216,49)" fg:x="38939" fg:w="154"/><text x="92.0610%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.61%)</title><rect x="91.6431%" y="117" width="0.6080%" height="15" fill="rgb(221,58,53)" fg:x="38886" fg:w="258"/><text x="91.9361%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.11%)</title><rect x="91.6431%" y="133" width="1.1147%" height="15" fill="rgb(220,112,41)" fg:x="38886" fg:w="473"/><text x="91.9361%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="92.7578%" y="85" width="0.1791%" height="15" fill="rgb(236,38,28)" fg:x="39359" fg:w="76"/><text x="93.0508%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.26%)</title><rect x="92.7578%" y="101" width="0.2592%" height="15" fill="rgb(227,195,22)" fg:x="39359" fg:w="110"/><text x="93.0508%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.42%)</title><rect x="92.7578%" y="117" width="0.4171%" height="15" fill="rgb(214,55,33)" fg:x="39359" fg:w="177"/><text x="93.0508%" y="127.50"></text></g><g><title>leb128::write::signed (229 instructions, 0.54%)</title><rect x="92.7578%" y="133" width="0.5397%" height="15" fill="rgb(248,80,13)" fg:x="39359" fg:w="229"/><text x="93.0508%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (839 instructions, 1.98%)</title><rect x="91.6431%" y="149" width="1.9773%" height="15" fill="rgb(238,52,6)" fg:x="38886" fg:w="839"/><text x="91.9361%" y="159.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="93.6204%" y="149" width="0.0707%" height="15" fill="rgb(224,198,47)" fg:x="39725" fg:w="30"/><text x="93.9133%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="93.6911%" y="149" width="0.1296%" height="15" fill="rgb(233,171,20)" fg:x="39755" fg:w="55"/><text x="93.9841%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (33 instructions, 0.08%)</title><rect x="93.8207%" y="149" width="0.0778%" height="15" fill="rgb(241,30,25)" fg:x="39810" fg:w="33"/><text x="94.1137%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (57 instructions, 0.13%)</title><rect x="93.8985%" y="149" width="0.1343%" height="15" fill="rgb(207,171,38)" fg:x="39843" fg:w="57"/><text x="94.1914%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="94.0328%" y="149" width="0.1909%" height="15" fill="rgb(234,70,1)" fg:x="39900" fg:w="81"/><text x="94.3258%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="94.2237%" y="149" width="0.2899%" height="15" fill="rgb(232,178,18)" fg:x="39981" fg:w="123"/><text x="94.5167%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.5136%" y="149" width="0.0259%" height="15" fill="rgb(241,78,40)" fg:x="40104" fg:w="11"/><text x="94.8065%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="94.5395%" y="149" width="0.3959%" height="15" fill="rgb(222,35,25)" fg:x="40115" fg:w="168"/><text x="94.8325%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.9354%" y="149" width="0.0118%" height="15" fill="rgb(207,92,16)" fg:x="40283" fg:w="5"/><text x="95.2284%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.9472%" y="149" width="0.0259%" height="15" fill="rgb(216,59,51)" fg:x="40288" fg:w="11"/><text x="95.2402%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="94.9731%" y="149" width="0.2899%" height="15" fill="rgb(213,80,28)" fg:x="40299" fg:w="123"/><text x="95.2661%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="95.2630%" y="149" width="0.1296%" height="15" fill="rgb(220,93,7)" fg:x="40422" fg:w="55"/><text x="95.5560%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.24%)</title><rect x="95.3926%" y="149" width="0.2357%" height="15" fill="rgb(225,24,44)" fg:x="40477" fg:w="100"/><text x="95.6856%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (10,902 instructions, 25.69%)</title><rect x="71.8915%" y="165" width="25.6929%" height="15" fill="rgb(243,74,40)" fg:x="30505" fg:w="10902"/><text x="72.1845%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::principalToAccount_2_::{{closure}} (41,748 instructions, 98.39%)</title><rect x="0.4077%" y="181" width="98.3880%" height="15" fill="rgb(228,39,7)" fg:x="173" fg:w="41748"/><text x="0.7007%" y="191.50">sha::principalToAccount_2_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.7957%" y="181" width="0.0283%" height="15" fill="rgb(227,79,8)" fg:x="41921" fg:w="12"/><text x="99.0887%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="98.8240%" y="165" width="0.1296%" height="15" fill="rgb(236,58,11)" fg:x="41933" fg:w="55"/><text x="99.1170%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="98.9536%" y="165" width="0.1485%" height="15" fill="rgb(249,63,35)" fg:x="41988" fg:w="63"/><text x="99.2466%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="99.3001%" y="165" width="0.1296%" height="15" fill="rgb(252,114,16)" fg:x="42135" fg:w="55"/><text x="99.5930%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="99.4297%" y="165" width="0.1485%" height="15" fill="rgb(254,151,24)" fg:x="42190" fg:w="63"/><text x="99.7226%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (401 instructions, 0.95%)</title><rect x="98.8240%" y="181" width="0.9450%" height="15" fill="rgb(253,54,39)" fg:x="41933" fg:w="401"/><text x="99.1170%" y="191.50"></text></g><g><title>all (42,432 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(243,25,45)" fg:x="0" fg:w="42432"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToAccount (42,432 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(234,134,9)" fg:x="0" fg:w="42432"/><text x="0.2930%" y="207.50">canister_update principalToAccount</text></g></svg></svg>