<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="182" onload="init(evt)" viewBox="0 0 1024 182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="182" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Motoko.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="165.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="165.00"> </text><svg id="frames" x="10" width="1004" total_samples="24532"><g><title>trans_state5 (10 instructions, 0.04%)</title><rect x="0.0000%" y="101" width="0.0408%" height="15" fill="rgb(234,217,39)" fg:x="0" fg:w="10"/><text x="0.2930%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.23%)</title><rect x="0.0408%" y="101" width="0.2283%" height="15" fill="rgb(207,178,40)" fg:x="10" fg:w="56"/><text x="0.3337%" y="111.50"></text></g><g><title>leb128_decode (50 instructions, 0.20%)</title><rect x="0.2690%" y="85" width="0.2038%" height="15" fill="rgb(221,136,13)" fg:x="66" fg:w="50"/><text x="0.5620%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.23%)</title><rect x="0.4729%" y="85" width="0.2283%" height="15" fill="rgb(249,199,10)" fg:x="116" fg:w="56"/><text x="0.7658%" y="95.50"></text></g><g><title>leb128_decode (50 instructions, 0.20%)</title><rect x="0.7011%" y="85" width="0.2038%" height="15" fill="rgb(249,222,13)" fg:x="172" fg:w="50"/><text x="0.9941%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.26%)</title><rect x="0.9049%" y="85" width="0.2609%" height="15" fill="rgb(244,185,38)" fg:x="222" fg:w="64"/><text x="1.1979%" y="95.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (17 instructions, 0.07%)</title><rect x="1.1658%" y="85" width="0.0693%" height="15" fill="rgb(236,202,9)" fg:x="286" fg:w="17"/><text x="1.4588%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.26%)</title><rect x="1.2351%" y="85" width="0.2609%" height="15" fill="rgb(250,229,37)" fg:x="303" fg:w="64"/><text x="1.5281%" y="95.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (12 instructions, 0.05%)</title><rect x="1.4960%" y="85" width="0.0489%" height="15" fill="rgb(206,174,23)" fg:x="367" fg:w="12"/><text x="1.7890%" y="95.50"></text></g><g><title>parse_idl_header (440 instructions, 1.79%)</title><rect x="0.2690%" y="101" width="1.7936%" height="15" fill="rgb(211,33,43)" fg:x="66" fg:w="440"/><text x="0.5620%" y="111.50"></text></g><g><title>memset (6 instructions, 0.02%)</title><rect x="2.0626%" y="85" width="0.0245%" height="15" fill="rgb(245,58,50)" fg:x="506" fg:w="6"/><text x="2.3556%" y="95.50"></text></g><g><title>idl_sub_buf_init (15 instructions, 0.06%)</title><rect x="2.0626%" y="101" width="0.0611%" height="15" fill="rgb(244,68,36)" fg:x="506" fg:w="15"/><text x="2.3556%" y="111.50"></text></g><g><title>leb128_decode (50 instructions, 0.20%)</title><rect x="2.1238%" y="101" width="0.2038%" height="15" fill="rgb(232,229,15)" fg:x="521" fg:w="50"/><text x="2.4167%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.26%)</title><rect x="2.3276%" y="101" width="0.2609%" height="15" fill="rgb(254,30,23)" fg:x="571" fg:w="64"/><text x="2.6205%" y="111.50"></text></g><g><title>leb128_decode (50 instructions, 0.20%)</title><rect x="2.5885%" y="85" width="0.2038%" height="15" fill="rgb(235,160,14)" fg:x="635" fg:w="50"/><text x="2.8814%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.23%)</title><rect x="2.7923%" y="85" width="0.2283%" height="15" fill="rgb(212,155,44)" fg:x="685" fg:w="56"/><text x="3.0852%" y="95.50"></text></g><g><title>memcpy (147 instructions, 0.60%)</title><rect x="3.0205%" y="85" width="0.5992%" height="15" fill="rgb(226,2,50)" fg:x="741" fg:w="147"/><text x="3.3135%" y="95.50"></text></g><g><title>@deserialize_go&lt;P&gt; (360 instructions, 1.47%)</title><rect x="2.5885%" y="101" width="1.4675%" height="15" fill="rgb(234,177,6)" fg:x="635" fg:w="360"/><text x="2.8814%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.26%)</title><rect x="4.0559%" y="101" width="0.2609%" height="15" fill="rgb(217,24,9)" fg:x="995" fg:w="64"/><text x="4.3489%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_array::h817c463cc2b856af (60 instructions, 0.24%)</title><rect x="4.3168%" y="37" width="0.2446%" height="15" fill="rgb(220,13,46)" fg:x="1059" fg:w="60"/><text x="4.6098%" y="47.50"></text></g><g><title>Array_init (537 instructions, 2.19%)</title><rect x="4.3168%" y="53" width="2.1890%" height="15" fill="rgb(239,221,27)" fg:x="1059" fg:w="537"/><text x="4.6098%" y="63.50">A..</text></g><g><title>motoko_rts::memory::alloc_array::h817c463cc2b856af (60 instructions, 0.24%)</title><rect x="6.5425%" y="37" width="0.2446%" height="15" fill="rgb(222,198,25)" fg:x="1605" fg:w="60"/><text x="6.8354%" y="47.50"></text></g><g><title>Array_init (537 instructions, 2.19%)</title><rect x="6.5425%" y="53" width="2.1890%" height="15" fill="rgb(211,99,13)" fg:x="1605" fg:w="537"/><text x="6.8354%" y="63.50">A..</text></g><g><title>init.1 (1,092 instructions, 4.45%)</title><rect x="4.3168%" y="69" width="4.4513%" height="15" fill="rgb(232,111,31)" fg:x="1059" fg:w="1092"/><text x="4.6098%" y="79.50">init..</text></g><g><title>@eq&lt;v(sha224:u,sha256:u)&gt; (65 instructions, 0.26%)</title><rect x="8.7681%" y="53" width="0.2650%" height="15" fill="rgb(245,82,37)" fg:x="2151" fg:w="65"/><text x="9.0611%" y="63.50"></text></g><g><title>reset.1 (183 instructions, 0.75%)</title><rect x="8.7681%" y="69" width="0.7460%" height="15" fill="rgb(227,149,46)" fg:x="2151" fg:w="183"/><text x="9.0611%" y="79.50"></text></g><g><title>Digest (2,303 instructions, 9.39%)</title><rect x="4.3168%" y="85" width="9.3877%" height="15" fill="rgb(218,36,50)" fg:x="1059" fg:w="2303"/><text x="4.6098%" y="95.50">Digest</text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.07%)</title><rect x="13.7045%" y="85" width="0.0693%" height="15" fill="rgb(226,80,48)" fg:x="3362" fg:w="17"/><text x="13.9975%" y="95.50"></text></g><g><title>@blob_vals (28 instructions, 0.11%)</title><rect x="13.7738%" y="69" width="0.1141%" height="15" fill="rgb(238,224,15)" fg:x="3379" fg:w="28"/><text x="14.0668%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h56833a827c874225 (9 instructions, 0.04%)</title><rect x="13.8880%" y="53" width="0.0367%" height="15" fill="rgb(241,136,10)" fg:x="3407" fg:w="9"/><text x="14.1810%" y="63.50"></text></g><g><title>@anon-func-75.3 (125 instructions, 0.51%)</title><rect x="13.8880%" y="69" width="0.5095%" height="15" fill="rgb(208,32,45)" fg:x="3407" fg:w="125"/><text x="14.1810%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="14.3975%" y="53" width="0.0693%" height="15" fill="rgb(207,135,9)" fg:x="3532" fg:w="17"/><text x="14.6905%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="14.4668%" y="53" width="0.1997%" height="15" fill="rgb(206,86,44)" fg:x="3549" fg:w="49"/><text x="14.7598%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="14.6666%" y="53" width="0.1467%" height="15" fill="rgb(245,177,15)" fg:x="3598" fg:w="36"/><text x="14.9595%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="14.8133%" y="53" width="0.0693%" height="15" fill="rgb(206,64,50)" fg:x="3634" fg:w="17"/><text x="15.1063%" y="63.50"></text></g><g><title>next.1 (20 instructions, 0.08%)</title><rect x="14.8826%" y="53" width="0.0815%" height="15" fill="rgb(234,36,40)" fg:x="3651" fg:w="20"/><text x="15.1756%" y="63.50"></text></g><g><title>writeIter (232 instructions, 0.95%)</title><rect x="14.3975%" y="69" width="0.9457%" height="15" fill="rgb(213,64,8)" fg:x="3532" fg:w="232"/><text x="14.6905%" y="79.50"></text></g><g><title>writeBlob (420 instructions, 1.71%)</title><rect x="13.7738%" y="85" width="1.7120%" height="15" fill="rgb(210,75,36)" fg:x="3379" fg:w="420"/><text x="14.0668%" y="95.50"></text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.07%)</title><rect x="15.4859%" y="85" width="0.0693%" height="15" fill="rgb(229,88,21)" fg:x="3799" fg:w="17"/><text x="15.7789%" y="95.50"></text></g><g><title>@blob_vals (28 instructions, 0.11%)</title><rect x="15.5552%" y="69" width="0.1141%" height="15" fill="rgb(252,204,47)" fg:x="3816" fg:w="28"/><text x="15.8482%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h56833a827c874225 (9 instructions, 0.04%)</title><rect x="15.6693%" y="53" width="0.0367%" height="15" fill="rgb(208,77,27)" fg:x="3844" fg:w="9"/><text x="15.9623%" y="63.50"></text></g><g><title>@anon-func-75.3 (125 instructions, 0.51%)</title><rect x="15.6693%" y="69" width="0.5095%" height="15" fill="rgb(221,76,26)" fg:x="3844" fg:w="125"/><text x="15.9623%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="16.1789%" y="53" width="0.0693%" height="15" fill="rgb(225,139,18)" fg:x="3969" fg:w="17"/><text x="16.4718%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="16.2482%" y="53" width="0.1997%" height="15" fill="rgb(230,137,11)" fg:x="3986" fg:w="49"/><text x="16.5411%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="16.4479%" y="53" width="0.3220%" height="15" fill="rgb(212,28,1)" fg:x="4035" fg:w="79"/><text x="16.7409%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="16.7699%" y="53" width="0.0693%" height="15" fill="rgb(248,164,17)" fg:x="4114" fg:w="17"/><text x="17.0629%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="16.8392%" y="53" width="0.1997%" height="15" fill="rgb(222,171,42)" fg:x="4131" fg:w="49"/><text x="17.1322%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="17.0390%" y="53" width="0.1467%" height="15" fill="rgb(243,84,45)" fg:x="4180" fg:w="36"/><text x="17.3319%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="17.1857%" y="53" width="0.0693%" height="15" fill="rgb(252,49,23)" fg:x="4216" fg:w="17"/><text x="17.4787%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="17.2550%" y="53" width="0.1997%" height="15" fill="rgb(215,19,7)" fg:x="4233" fg:w="49"/><text x="17.5480%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="17.4548%" y="53" width="0.3220%" height="15" fill="rgb(238,81,41)" fg:x="4282" fg:w="79"/><text x="17.7477%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="17.7768%" y="53" width="0.0693%" height="15" fill="rgb(210,199,37)" fg:x="4361" fg:w="17"/><text x="18.0698%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="17.8461%" y="53" width="0.1997%" height="15" fill="rgb(244,192,49)" fg:x="4378" fg:w="49"/><text x="18.1390%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="18.0458%" y="53" width="0.1467%" height="15" fill="rgb(226,211,11)" fg:x="4427" fg:w="36"/><text x="18.3388%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="18.1926%" y="53" width="0.0693%" height="15" fill="rgb(236,162,54)" fg:x="4463" fg:w="17"/><text x="18.4855%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="18.2619%" y="53" width="0.1997%" height="15" fill="rgb(220,229,9)" fg:x="4480" fg:w="49"/><text x="18.5548%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="18.4616%" y="53" width="0.3220%" height="15" fill="rgb(250,87,22)" fg:x="4529" fg:w="79"/><text x="18.7546%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="18.7836%" y="53" width="0.0693%" height="15" fill="rgb(239,43,17)" fg:x="4608" fg:w="17"/><text x="19.0766%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="18.8529%" y="53" width="0.1997%" height="15" fill="rgb(231,177,25)" fg:x="4625" fg:w="49"/><text x="19.1459%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="19.0527%" y="53" width="0.1467%" height="15" fill="rgb(219,179,1)" fg:x="4674" fg:w="36"/><text x="19.3456%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="19.1994%" y="53" width="0.0693%" height="15" fill="rgb(238,219,53)" fg:x="4710" fg:w="17"/><text x="19.4924%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="19.2687%" y="53" width="0.1997%" height="15" fill="rgb(232,167,36)" fg:x="4727" fg:w="49"/><text x="19.5617%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="19.4684%" y="53" width="0.3220%" height="15" fill="rgb(244,19,51)" fg:x="4776" fg:w="79"/><text x="19.7614%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="19.7905%" y="53" width="0.0693%" height="15" fill="rgb(224,6,22)" fg:x="4855" fg:w="17"/><text x="20.0834%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="19.8598%" y="53" width="0.1997%" height="15" fill="rgb(224,145,5)" fg:x="4872" fg:w="49"/><text x="20.1527%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="20.0595%" y="53" width="0.1467%" height="15" fill="rgb(234,130,49)" fg:x="4921" fg:w="36"/><text x="20.3525%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="20.2063%" y="53" width="0.0693%" height="15" fill="rgb(254,6,2)" fg:x="4957" fg:w="17"/><text x="20.4992%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="20.2756%" y="53" width="0.1997%" height="15" fill="rgb(208,96,46)" fg:x="4974" fg:w="49"/><text x="20.5685%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="20.4753%" y="53" width="0.3220%" height="15" fill="rgb(239,3,39)" fg:x="5023" fg:w="79"/><text x="20.7683%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="20.7973%" y="53" width="0.0693%" height="15" fill="rgb(233,210,1)" fg:x="5102" fg:w="17"/><text x="21.0903%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="20.8666%" y="53" width="0.1997%" height="15" fill="rgb(244,137,37)" fg:x="5119" fg:w="49"/><text x="21.1596%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="21.0664%" y="53" width="0.1467%" height="15" fill="rgb(240,136,2)" fg:x="5168" fg:w="36"/><text x="21.3593%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="21.2131%" y="53" width="0.0693%" height="15" fill="rgb(239,18,37)" fg:x="5204" fg:w="17"/><text x="21.5061%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="21.2824%" y="53" width="0.1997%" height="15" fill="rgb(218,185,22)" fg:x="5221" fg:w="49"/><text x="21.5754%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="21.4821%" y="53" width="0.3220%" height="15" fill="rgb(225,218,4)" fg:x="5270" fg:w="79"/><text x="21.7751%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="21.8042%" y="53" width="0.0693%" height="15" fill="rgb(230,182,32)" fg:x="5349" fg:w="17"/><text x="22.0971%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="21.8735%" y="53" width="0.1997%" height="15" fill="rgb(242,56,43)" fg:x="5366" fg:w="49"/><text x="22.1664%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="22.0732%" y="53" width="0.1467%" height="15" fill="rgb(233,99,24)" fg:x="5415" fg:w="36"/><text x="22.3662%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="22.2200%" y="53" width="0.0693%" height="15" fill="rgb(234,209,42)" fg:x="5451" fg:w="17"/><text x="22.5129%" y="63.50"></text></g><g><title>next.1 (20 instructions, 0.08%)</title><rect x="22.2893%" y="53" width="0.0815%" height="15" fill="rgb(227,7,12)" fg:x="5468" fg:w="20"/><text x="22.5822%" y="63.50"></text></g><g><title>writeIter (2,162 instructions, 8.81%)</title><rect x="16.1789%" y="69" width="8.8130%" height="15" fill="rgb(245,203,43)" fg:x="3969" fg:w="2162"/><text x="16.4718%" y="79.50">writeIter</text></g><g><title>writeBlob (2,350 instructions, 9.58%)</title><rect x="15.5552%" y="85" width="9.5793%" height="15" fill="rgb(238,205,33)" fg:x="3816" fg:w="2350"/><text x="15.8482%" y="95.50">writeBlob</text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.07%)</title><rect x="25.1345%" y="85" width="0.0693%" height="15" fill="rgb(231,56,7)" fg:x="6166" fg:w="17"/><text x="25.4275%" y="95.50"></text></g><g><title>@blob_vals (28 instructions, 0.11%)</title><rect x="25.2038%" y="69" width="0.1141%" height="15" fill="rgb(244,186,29)" fg:x="6183" fg:w="28"/><text x="25.4968%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h56833a827c874225 (9 instructions, 0.04%)</title><rect x="25.3180%" y="53" width="0.0367%" height="15" fill="rgb(234,111,31)" fg:x="6211" fg:w="9"/><text x="25.6109%" y="63.50"></text></g><g><title>@anon-func-75.3 (125 instructions, 0.51%)</title><rect x="25.3180%" y="69" width="0.5095%" height="15" fill="rgb(241,149,10)" fg:x="6211" fg:w="125"/><text x="25.6109%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="25.8275%" y="53" width="0.0693%" height="15" fill="rgb(249,206,44)" fg:x="6336" fg:w="17"/><text x="26.1205%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="25.8968%" y="53" width="0.1997%" height="15" fill="rgb(251,153,30)" fg:x="6353" fg:w="49"/><text x="26.1898%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="26.0965%" y="53" width="0.3220%" height="15" fill="rgb(239,152,38)" fg:x="6402" fg:w="79"/><text x="26.3895%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="26.4186%" y="53" width="0.0693%" height="15" fill="rgb(249,139,47)" fg:x="6481" fg:w="17"/><text x="26.7115%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="26.4879%" y="53" width="0.1997%" height="15" fill="rgb(244,64,35)" fg:x="6498" fg:w="49"/><text x="26.7808%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="26.6876%" y="53" width="0.1467%" height="15" fill="rgb(216,46,15)" fg:x="6547" fg:w="36"/><text x="26.9806%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="26.8343%" y="53" width="0.0693%" height="15" fill="rgb(250,74,19)" fg:x="6583" fg:w="17"/><text x="27.1273%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="26.9036%" y="53" width="0.1997%" height="15" fill="rgb(249,42,33)" fg:x="6600" fg:w="49"/><text x="27.1966%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="27.1034%" y="53" width="0.3220%" height="15" fill="rgb(242,149,17)" fg:x="6649" fg:w="79"/><text x="27.3963%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="27.4254%" y="53" width="0.0693%" height="15" fill="rgb(244,29,21)" fg:x="6728" fg:w="17"/><text x="27.7184%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="27.4947%" y="53" width="0.1997%" height="15" fill="rgb(220,130,37)" fg:x="6745" fg:w="49"/><text x="27.7877%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="27.6944%" y="53" width="0.1467%" height="15" fill="rgb(211,67,2)" fg:x="6794" fg:w="36"/><text x="27.9874%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="27.8412%" y="53" width="0.0693%" height="15" fill="rgb(235,68,52)" fg:x="6830" fg:w="17"/><text x="28.1342%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="27.9105%" y="53" width="0.1997%" height="15" fill="rgb(246,142,3)" fg:x="6847" fg:w="49"/><text x="28.2035%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="28.1102%" y="53" width="0.3220%" height="15" fill="rgb(241,25,7)" fg:x="6896" fg:w="79"/><text x="28.4032%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="28.4323%" y="53" width="0.0693%" height="15" fill="rgb(242,119,39)" fg:x="6975" fg:w="17"/><text x="28.7252%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="28.5015%" y="53" width="0.1997%" height="15" fill="rgb(241,98,45)" fg:x="6992" fg:w="49"/><text x="28.7945%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="28.7013%" y="53" width="0.1467%" height="15" fill="rgb(254,28,30)" fg:x="7041" fg:w="36"/><text x="28.9943%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="28.8480%" y="53" width="0.0693%" height="15" fill="rgb(241,142,54)" fg:x="7077" fg:w="17"/><text x="29.1410%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="28.9173%" y="53" width="0.1997%" height="15" fill="rgb(222,85,15)" fg:x="7094" fg:w="49"/><text x="29.2103%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="29.1171%" y="53" width="0.3220%" height="15" fill="rgb(210,85,47)" fg:x="7143" fg:w="79"/><text x="29.4100%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="29.4391%" y="53" width="0.0693%" height="15" fill="rgb(224,206,25)" fg:x="7222" fg:w="17"/><text x="29.7321%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="29.5084%" y="53" width="0.1997%" height="15" fill="rgb(243,201,19)" fg:x="7239" fg:w="49"/><text x="29.8014%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="29.7081%" y="53" width="0.1467%" height="15" fill="rgb(236,59,4)" fg:x="7288" fg:w="36"/><text x="30.0011%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="29.8549%" y="53" width="0.0693%" height="15" fill="rgb(254,179,45)" fg:x="7324" fg:w="17"/><text x="30.1479%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="29.9242%" y="53" width="0.1997%" height="15" fill="rgb(226,14,10)" fg:x="7341" fg:w="49"/><text x="30.2171%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="30.1239%" y="53" width="0.3220%" height="15" fill="rgb(244,27,41)" fg:x="7390" fg:w="79"/><text x="30.4169%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="30.4459%" y="53" width="0.0693%" height="15" fill="rgb(235,35,32)" fg:x="7469" fg:w="17"/><text x="30.7389%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="30.5152%" y="53" width="0.1997%" height="15" fill="rgb(218,68,31)" fg:x="7486" fg:w="49"/><text x="30.8082%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="30.7150%" y="53" width="0.1467%" height="15" fill="rgb(207,120,37)" fg:x="7535" fg:w="36"/><text x="31.0080%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="30.8617%" y="53" width="0.0693%" height="15" fill="rgb(227,98,0)" fg:x="7571" fg:w="17"/><text x="31.1547%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="30.9310%" y="53" width="0.1997%" height="15" fill="rgb(207,7,3)" fg:x="7588" fg:w="49"/><text x="31.2240%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="31.1308%" y="53" width="0.3220%" height="15" fill="rgb(206,98,19)" fg:x="7637" fg:w="79"/><text x="31.4237%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="31.4528%" y="53" width="0.0693%" height="15" fill="rgb(217,5,26)" fg:x="7716" fg:w="17"/><text x="31.7458%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="31.5221%" y="53" width="0.1997%" height="15" fill="rgb(235,190,38)" fg:x="7733" fg:w="49"/><text x="31.8151%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="31.7218%" y="53" width="0.1467%" height="15" fill="rgb(247,86,24)" fg:x="7782" fg:w="36"/><text x="32.0148%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="31.8686%" y="53" width="0.0693%" height="15" fill="rgb(205,101,16)" fg:x="7818" fg:w="17"/><text x="32.1615%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="31.9379%" y="53" width="0.1997%" height="15" fill="rgb(246,168,33)" fg:x="7835" fg:w="49"/><text x="32.2308%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="32.1376%" y="53" width="0.3220%" height="15" fill="rgb(231,114,1)" fg:x="7884" fg:w="79"/><text x="32.4306%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="32.4596%" y="53" width="0.0693%" height="15" fill="rgb(207,184,53)" fg:x="7963" fg:w="17"/><text x="32.7526%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="32.5289%" y="53" width="0.1997%" height="15" fill="rgb(224,95,51)" fg:x="7980" fg:w="49"/><text x="32.8219%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="32.7287%" y="53" width="0.1467%" height="15" fill="rgb(212,188,45)" fg:x="8029" fg:w="36"/><text x="33.0216%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="32.8754%" y="53" width="0.0693%" height="15" fill="rgb(223,154,38)" fg:x="8065" fg:w="17"/><text x="33.1684%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="32.9447%" y="53" width="0.1997%" height="15" fill="rgb(251,22,52)" fg:x="8082" fg:w="49"/><text x="33.2377%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="33.1445%" y="53" width="0.3220%" height="15" fill="rgb(229,209,22)" fg:x="8131" fg:w="79"/><text x="33.4374%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="33.4665%" y="53" width="0.0693%" height="15" fill="rgb(234,138,34)" fg:x="8210" fg:w="17"/><text x="33.7595%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="33.5358%" y="53" width="0.1997%" height="15" fill="rgb(212,95,11)" fg:x="8227" fg:w="49"/><text x="33.8288%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="33.7355%" y="53" width="0.1467%" height="15" fill="rgb(240,179,47)" fg:x="8276" fg:w="36"/><text x="34.0285%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="33.8823%" y="53" width="0.0693%" height="15" fill="rgb(240,163,11)" fg:x="8312" fg:w="17"/><text x="34.1752%" y="63.50"></text></g><g><title>next.1 (20 instructions, 0.08%)</title><rect x="33.9516%" y="53" width="0.0815%" height="15" fill="rgb(236,37,12)" fg:x="8329" fg:w="20"/><text x="34.2445%" y="63.50"></text></g><g><title>writeIter (2,856 instructions, 11.64%)</title><rect x="25.8275%" y="69" width="11.6419%" height="15" fill="rgb(232,164,16)" fg:x="6336" fg:w="2856"/><text x="26.1205%" y="79.50">writeIter</text></g><g><title>writeBlob (3,044 instructions, 12.41%)</title><rect x="25.2038%" y="85" width="12.4083%" height="15" fill="rgb(244,205,15)" fg:x="6183" fg:w="3044"/><text x="25.4968%" y="95.50">writeBlob</text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="37.6121%" y="85" width="0.0693%" height="15" fill="rgb(223,117,47)" fg:x="9227" fg:w="17"/><text x="37.9051%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_array::h817c463cc2b856af (60 instructions, 0.24%)</title><rect x="37.6814%" y="85" width="0.2446%" height="15" fill="rgb(244,107,35)" fg:x="9244" fg:w="60"/><text x="37.9744%" y="95.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="37.9260%" y="69" width="0.1386%" height="15" fill="rgb(205,140,8)" fg:x="9304" fg:w="34"/><text x="38.2189%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="38.0646%" y="69" width="0.0530%" height="15" fill="rgb(228,84,46)" fg:x="9338" fg:w="13"/><text x="38.3575%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="38.4151%" y="69" width="0.1386%" height="15" fill="rgb(254,188,9)" fg:x="9424" fg:w="34"/><text x="38.7081%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="38.5537%" y="69" width="0.0530%" height="15" fill="rgb(206,112,54)" fg:x="9458" fg:w="13"/><text x="38.8467%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="38.9043%" y="69" width="0.1386%" height="15" fill="rgb(216,84,49)" fg:x="9544" fg:w="34"/><text x="39.1973%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="39.0429%" y="69" width="0.0530%" height="15" fill="rgb(214,194,35)" fg:x="9578" fg:w="13"/><text x="39.3359%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="39.3934%" y="69" width="0.1386%" height="15" fill="rgb(249,28,3)" fg:x="9664" fg:w="34"/><text x="39.6864%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="39.5320%" y="69" width="0.0530%" height="15" fill="rgb(222,56,52)" fg:x="9698" fg:w="13"/><text x="39.8250%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="39.8826%" y="69" width="0.1386%" height="15" fill="rgb(245,217,50)" fg:x="9784" fg:w="34"/><text x="40.1756%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="40.0212%" y="69" width="0.0530%" height="15" fill="rgb(213,201,24)" fg:x="9818" fg:w="13"/><text x="40.3142%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="40.3718%" y="69" width="0.1386%" height="15" fill="rgb(248,116,28)" fg:x="9904" fg:w="34"/><text x="40.6647%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="40.5104%" y="69" width="0.0530%" height="15" fill="rgb(219,72,43)" fg:x="9938" fg:w="13"/><text x="40.8033%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="40.8609%" y="69" width="0.1386%" height="15" fill="rgb(209,138,14)" fg:x="10024" fg:w="34"/><text x="41.1539%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="40.9995%" y="69" width="0.0530%" height="15" fill="rgb(222,18,33)" fg:x="10058" fg:w="13"/><text x="41.2925%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="41.3501%" y="69" width="0.1386%" height="15" fill="rgb(213,199,7)" fg:x="10144" fg:w="34"/><text x="41.6430%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="41.4887%" y="69" width="0.0530%" height="15" fill="rgb(250,110,10)" fg:x="10178" fg:w="13"/><text x="41.7816%" y="79.50"></text></g><g><title>@anon-func-9.27 (960 instructions, 3.91%)</title><rect x="37.9260%" y="85" width="3.9133%" height="15" fill="rgb(248,123,6)" fg:x="9304" fg:w="960"/><text x="38.2189%" y="95.50">@an..</text></g><g><title>@anon-func-61.3 (101 instructions, 0.41%)</title><rect x="41.8392%" y="69" width="0.4117%" height="15" fill="rgb(206,91,31)" fg:x="10264" fg:w="101"/><text x="42.1322%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="42.2509%" y="53" width="0.0693%" height="15" fill="rgb(211,154,13)" fg:x="10365" fg:w="17"/><text x="42.5439%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="42.3202%" y="37" width="0.1101%" height="15" fill="rgb(225,148,7)" fg:x="10382" fg:w="27"/><text x="42.6132%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="42.3202%" y="53" width="0.3546%" height="15" fill="rgb(220,160,43)" fg:x="10382" fg:w="87"/><text x="42.6132%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="42.6749%" y="53" width="0.3220%" height="15" fill="rgb(213,52,39)" fg:x="10469" fg:w="79"/><text x="42.9678%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="42.9969%" y="53" width="0.0693%" height="15" fill="rgb(243,137,7)" fg:x="10548" fg:w="17"/><text x="43.2899%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="43.0662%" y="37" width="0.1101%" height="15" fill="rgb(230,79,13)" fg:x="10565" fg:w="27"/><text x="43.3592%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="43.0662%" y="53" width="0.3546%" height="15" fill="rgb(247,105,23)" fg:x="10565" fg:w="87"/><text x="43.3592%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="43.4208%" y="53" width="0.1467%" height="15" fill="rgb(223,179,41)" fg:x="10652" fg:w="36"/><text x="43.7138%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="43.5676%" y="53" width="0.0693%" height="15" fill="rgb(218,9,34)" fg:x="10688" fg:w="17"/><text x="43.8606%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="43.6369%" y="37" width="0.1101%" height="15" fill="rgb(222,106,8)" fg:x="10705" fg:w="27"/><text x="43.9299%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="43.6369%" y="53" width="0.3546%" height="15" fill="rgb(211,220,0)" fg:x="10705" fg:w="87"/><text x="43.9299%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="43.9915%" y="53" width="0.3220%" height="15" fill="rgb(229,52,16)" fg:x="10792" fg:w="79"/><text x="44.2845%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="44.3135%" y="53" width="0.0693%" height="15" fill="rgb(212,155,18)" fg:x="10871" fg:w="17"/><text x="44.6065%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="44.3828%" y="37" width="0.1101%" height="15" fill="rgb(242,21,14)" fg:x="10888" fg:w="27"/><text x="44.6758%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="44.3828%" y="53" width="0.3546%" height="15" fill="rgb(222,19,48)" fg:x="10888" fg:w="87"/><text x="44.6758%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="44.7375%" y="53" width="0.1467%" height="15" fill="rgb(232,45,27)" fg:x="10975" fg:w="36"/><text x="45.0305%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="44.8842%" y="53" width="0.0693%" height="15" fill="rgb(249,103,42)" fg:x="11011" fg:w="17"/><text x="45.1772%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="44.9535%" y="37" width="0.1101%" height="15" fill="rgb(246,81,33)" fg:x="11028" fg:w="27"/><text x="45.2465%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="44.9535%" y="53" width="0.3546%" height="15" fill="rgb(252,33,42)" fg:x="11028" fg:w="87"/><text x="45.2465%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="45.3082%" y="53" width="0.3220%" height="15" fill="rgb(209,212,41)" fg:x="11115" fg:w="79"/><text x="45.6011%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="45.6302%" y="53" width="0.0693%" height="15" fill="rgb(207,154,6)" fg:x="11194" fg:w="17"/><text x="45.9232%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="45.6995%" y="37" width="0.1101%" height="15" fill="rgb(223,64,47)" fg:x="11211" fg:w="27"/><text x="45.9925%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="45.6995%" y="53" width="0.3546%" height="15" fill="rgb(211,161,38)" fg:x="11211" fg:w="87"/><text x="45.9925%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="46.0541%" y="53" width="0.1467%" height="15" fill="rgb(219,138,40)" fg:x="11298" fg:w="36"/><text x="46.3471%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="46.2009%" y="53" width="0.0693%" height="15" fill="rgb(241,228,46)" fg:x="11334" fg:w="17"/><text x="46.4938%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="46.2702%" y="37" width="0.1101%" height="15" fill="rgb(223,209,38)" fg:x="11351" fg:w="27"/><text x="46.5631%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="46.2702%" y="53" width="0.3546%" height="15" fill="rgb(236,164,45)" fg:x="11351" fg:w="87"/><text x="46.5631%" y="63.50"></text></g><g><title>writeByte.1 (79 instructions, 0.32%)</title><rect x="46.6248%" y="53" width="0.3220%" height="15" fill="rgb(231,15,5)" fg:x="11438" fg:w="79"/><text x="46.9178%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="46.9468%" y="53" width="0.0693%" height="15" fill="rgb(252,35,15)" fg:x="11517" fg:w="17"/><text x="47.2398%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="47.0161%" y="37" width="0.1101%" height="15" fill="rgb(248,181,18)" fg:x="11534" fg:w="27"/><text x="47.3091%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="47.0161%" y="53" width="0.3546%" height="15" fill="rgb(233,39,42)" fg:x="11534" fg:w="87"/><text x="47.3091%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.15%)</title><rect x="47.3708%" y="53" width="0.1467%" height="15" fill="rgb(238,110,33)" fg:x="11621" fg:w="36"/><text x="47.6637%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="47.5175%" y="53" width="0.0693%" height="15" fill="rgb(233,195,10)" fg:x="11657" fg:w="17"/><text x="47.8105%" y="63.50"></text></g><g><title>next (24 instructions, 0.10%)</title><rect x="47.5868%" y="53" width="0.0978%" height="15" fill="rgb(254,105,3)" fg:x="11674" fg:w="24"/><text x="47.8798%" y="63.50"></text></g><g><title>writeIter (1,776 instructions, 7.24%)</title><rect x="42.2509%" y="69" width="7.2395%" height="15" fill="rgb(221,225,9)" fg:x="10365" fg:w="1776"/><text x="42.5439%" y="79.50">writeIter</text></g><g><title>writeArray (1,932 instructions, 7.88%)</title><rect x="41.8392%" y="85" width="7.8754%" height="15" fill="rgb(224,227,45)" fg:x="10264" fg:w="1932"/><text x="42.1322%" y="95.50">writeArray</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="49.7147%" y="85" width="0.0693%" height="15" fill="rgb(229,198,43)" fg:x="12196" fg:w="17"/><text x="50.0076%" y="95.50"></text></g><g><title>process_block.1 (5,675 instructions, 23.13%)</title><rect x="49.7840%" y="53" width="23.1331%" height="15" fill="rgb(206,209,35)" fg:x="12213" fg:w="5675"/><text x="50.0769%" y="63.50">process_block.1</text></g><g><title>writePadding (6,364 instructions, 25.94%)</title><rect x="49.7840%" y="69" width="25.9416%" height="15" fill="rgb(245,195,53)" fg:x="12213" fg:w="6364"/><text x="50.0769%" y="79.50">writePadding</text></g><g><title>@eq&lt;v(sha224:u,sha256:u)&gt; (65 instructions, 0.26%)</title><rect x="75.7256%" y="69" width="0.2650%" height="15" fill="rgb(240,92,26)" fg:x="18577" fg:w="65"/><text x="76.0186%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.23%)</title><rect x="75.9905%" y="53" width="0.2283%" height="15" fill="rgb(207,40,23)" fg:x="18642" fg:w="56"/><text x="76.2835%" y="63.50"></text></g><g><title>Arr.toBlob (936 instructions, 3.82%)</title><rect x="75.9905%" y="69" width="3.8154%" height="15" fill="rgb(223,111,35)" fg:x="18642" fg:w="936"/><text x="76.2835%" y="79.50">Arr..</text></g><g><title>sum.1 (8,185 instructions, 33.36%)</title><rect x="49.7840%" y="85" width="33.3646%" height="15" fill="rgb(229,147,28)" fg:x="12213" fg:w="8185"/><text x="50.0769%" y="95.50">sum.1</text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.23%)</title><rect x="83.1485%" y="69" width="0.2283%" height="15" fill="rgb(211,29,28)" fg:x="20398" fg:w="56"/><text x="83.4415%" y="79.50"></text></g><g><title>memcpy (60 instructions, 0.24%)</title><rect x="83.3768%" y="69" width="0.2446%" height="15" fill="rgb(228,72,33)" fg:x="20454" fg:w="60"/><text x="83.6698%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.23%)</title><rect x="83.6214%" y="69" width="0.2283%" height="15" fill="rgb(205,214,31)" fg:x="20514" fg:w="56"/><text x="83.9144%" y="79.50"></text></g><g><title>memcpy (194 instructions, 0.79%)</title><rect x="83.8497%" y="69" width="0.7908%" height="15" fill="rgb(224,111,15)" fg:x="20570" fg:w="194"/><text x="84.1426%" y="79.50"></text></g><g><title>$lambda.13 (1,590 instructions, 6.48%)</title><rect x="83.1485%" y="85" width="6.4813%" height="15" fill="rgb(253,21,26)" fg:x="20398" fg:w="1590"/><text x="83.4415%" y="95.50">$lambda..</text></g><g><title>$lambda.2 (21,417 instructions, 87.30%)</title><rect x="4.3168%" y="101" width="87.3023%" height="15" fill="rgb(245,139,43)" fg:x="1059" fg:w="21417"/><text x="4.6098%" y="111.50">$lambda.2</text></g><g><title>schedule_copying_gc (108 instructions, 0.44%)</title><rect x="91.6191%" y="101" width="0.4402%" height="15" fill="rgb(252,170,7)" fg:x="22476" fg:w="108"/><text x="91.9121%" y="111.50"></text></g><g><title>trans_state4 (16 instructions, 0.07%)</title><rect x="92.0594%" y="101" width="0.0652%" height="15" fill="rgb(231,118,14)" fg:x="22584" fg:w="16"/><text x="92.3523%" y="111.50"></text></g><g><title>all (24,532 instructions, 100%)</title><rect x="0.0000%" y="133" width="100.0000%" height="15" fill="rgb(238,83,0)" fg:x="0" fg:w="24532"/><text x="0.2930%" y="143.50"></text></g><g><title>principalToNeuron (24,532 instructions, 100.00%)</title><rect x="0.0000%" y="117" width="100.0000%" height="15" fill="rgb(221,39,39)" fg:x="0" fg:w="24532"/><text x="0.2930%" y="127.50">principalToNeuron</text></g></svg></svg>