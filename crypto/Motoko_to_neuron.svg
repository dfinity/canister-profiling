<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="198" onload="init(evt)" viewBox="0 0 1024 198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="198" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Motoko.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="181.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="181.00"> </text><svg id="frames" x="10" width="1004" total_samples="25335"><g><title>trans_state5 (10 instructions, 0.04%)</title><rect x="0.0000%" y="117" width="0.0395%" height="15" fill="rgb(225,139,18)" fg:x="0" fg:w="10"/><text x="0.2930%" y="127.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.22%)</title><rect x="0.0395%" y="101" width="0.2250%" height="15" fill="rgb(230,137,11)" fg:x="10" fg:w="57"/><text x="0.3324%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.26%)</title><rect x="0.0395%" y="117" width="0.2566%" height="15" fill="rgb(212,28,1)" fg:x="10" fg:w="65"/><text x="0.3324%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.19%)</title><rect x="0.2960%" y="101" width="0.1895%" height="15" fill="rgb(248,164,17)" fg:x="75" fg:w="48"/><text x="0.5890%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.22%)</title><rect x="0.4855%" y="101" width="0.2250%" height="15" fill="rgb(222,171,42)" fg:x="123" fg:w="57"/><text x="0.7785%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.19%)</title><rect x="0.7105%" y="101" width="0.1895%" height="15" fill="rgb(243,84,45)" fg:x="180" fg:w="48"/><text x="1.0034%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.25%)</title><rect x="0.8999%" y="101" width="0.2526%" height="15" fill="rgb(252,49,23)" fg:x="228" fg:w="64"/><text x="1.1929%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (17 instructions, 0.07%)</title><rect x="1.1526%" y="101" width="0.0671%" height="15" fill="rgb(215,19,7)" fg:x="292" fg:w="17"/><text x="1.4455%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.25%)</title><rect x="1.2197%" y="101" width="0.2526%" height="15" fill="rgb(238,81,41)" fg:x="309" fg:w="64"/><text x="1.5126%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.05%)</title><rect x="1.4723%" y="101" width="0.0474%" height="15" fill="rgb(210,199,37)" fg:x="373" fg:w="12"/><text x="1.7652%" y="111.50"></text></g><g><title>parse_idl_header (438 instructions, 1.73%)</title><rect x="0.2960%" y="117" width="1.7288%" height="15" fill="rgb(244,192,49)" fg:x="75" fg:w="438"/><text x="0.5890%" y="127.50"></text></g><g><title>memset (6 instructions, 0.02%)</title><rect x="2.0249%" y="101" width="0.0237%" height="15" fill="rgb(226,211,11)" fg:x="513" fg:w="6"/><text x="2.3178%" y="111.50"></text></g><g><title>idl_sub_buf_init (15 instructions, 0.06%)</title><rect x="2.0249%" y="117" width="0.0592%" height="15" fill="rgb(236,162,54)" fg:x="513" fg:w="15"/><text x="2.3178%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.19%)</title><rect x="2.0841%" y="117" width="0.1895%" height="15" fill="rgb(220,229,9)" fg:x="528" fg:w="48"/><text x="2.3770%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.25%)</title><rect x="2.2735%" y="117" width="0.2526%" height="15" fill="rgb(250,87,22)" fg:x="576" fg:w="64"/><text x="2.5665%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.08%)</title><rect x="2.5261%" y="101" width="0.0789%" height="15" fill="rgb(239,43,17)" fg:x="640" fg:w="20"/><text x="2.8191%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.19%)</title><rect x="2.6051%" y="101" width="0.1895%" height="15" fill="rgb(231,177,25)" fg:x="660" fg:w="48"/><text x="2.8981%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.22%)</title><rect x="2.7946%" y="85" width="0.2250%" height="15" fill="rgb(219,179,1)" fg:x="708" fg:w="57"/><text x="3.0875%" y="95.50"></text></g><g><title>alloc_blob (65 instructions, 0.26%)</title><rect x="2.7946%" y="101" width="0.2566%" height="15" fill="rgb(238,219,53)" fg:x="708" fg:w="65"/><text x="3.0875%" y="111.50"></text></g><g><title>memcpy (147 instructions, 0.58%)</title><rect x="3.0511%" y="101" width="0.5802%" height="15" fill="rgb(232,167,36)" fg:x="773" fg:w="147"/><text x="3.3441%" y="111.50"></text></g><g><title>@deserialize_go&lt;P&gt; (393 instructions, 1.55%)</title><rect x="2.5261%" y="117" width="1.5512%" height="15" fill="rgb(244,19,51)" fg:x="640" fg:w="393"/><text x="2.8191%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.25%)</title><rect x="4.0774%" y="117" width="0.2526%" height="15" fill="rgb(224,6,22)" fg:x="1033" fg:w="64"/><text x="4.3703%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.08%)</title><rect x="4.3300%" y="117" width="0.0789%" height="15" fill="rgb(224,145,5)" fg:x="1097" fg:w="20"/><text x="4.6229%" y="127.50"></text></g><g><title>motoko_rts::memory::alloc_array::hc667600bec1393ae (60 instructions, 0.24%)</title><rect x="4.4089%" y="37" width="0.2368%" height="15" fill="rgb(234,130,49)" fg:x="1117" fg:w="60"/><text x="4.7019%" y="47.50"></text></g><g><title>alloc_array (68 instructions, 0.27%)</title><rect x="4.4089%" y="53" width="0.2684%" height="15" fill="rgb(254,6,2)" fg:x="1117" fg:w="68"/><text x="4.7019%" y="63.50"></text></g><g><title>Array_init (546 instructions, 2.16%)</title><rect x="4.4089%" y="69" width="2.1551%" height="15" fill="rgb(208,96,46)" fg:x="1117" fg:w="546"/><text x="4.7019%" y="79.50">A..</text></g><g><title>motoko_rts::memory::alloc_array::hc667600bec1393ae (60 instructions, 0.24%)</title><rect x="6.5996%" y="37" width="0.2368%" height="15" fill="rgb(239,3,39)" fg:x="1672" fg:w="60"/><text x="6.8925%" y="47.50"></text></g><g><title>alloc_array (68 instructions, 0.27%)</title><rect x="6.5996%" y="53" width="0.2684%" height="15" fill="rgb(233,210,1)" fg:x="1672" fg:w="68"/><text x="6.8925%" y="63.50"></text></g><g><title>Array_init (546 instructions, 2.16%)</title><rect x="6.5996%" y="69" width="2.1551%" height="15" fill="rgb(244,137,37)" fg:x="1672" fg:w="546"/><text x="6.8925%" y="79.50">A..</text></g><g><title>init.1 (1,110 instructions, 4.38%)</title><rect x="4.4089%" y="85" width="4.3813%" height="15" fill="rgb(240,136,2)" fg:x="1117" fg:w="1110"/><text x="4.7019%" y="95.50">init..</text></g><g><title>@eq&lt;v(sha224:u,sha256:u)&gt; (65 instructions, 0.26%)</title><rect x="8.7902%" y="69" width="0.2566%" height="15" fill="rgb(239,18,37)" fg:x="2227" fg:w="65"/><text x="9.0832%" y="79.50"></text></g><g><title>reset.1 (183 instructions, 0.72%)</title><rect x="8.7902%" y="85" width="0.7223%" height="15" fill="rgb(218,185,22)" fg:x="2227" fg:w="183"/><text x="9.0832%" y="95.50"></text></g><g><title>Digest (2,321 instructions, 9.16%)</title><rect x="4.4089%" y="101" width="9.1612%" height="15" fill="rgb(225,218,4)" fg:x="1117" fg:w="2321"/><text x="4.7019%" y="111.50">Digest</text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.07%)</title><rect x="13.5702%" y="101" width="0.0671%" height="15" fill="rgb(230,182,32)" fg:x="3438" fg:w="17"/><text x="13.8631%" y="111.50"></text></g><g><title>@blob_vals (28 instructions, 0.11%)</title><rect x="13.6373%" y="85" width="0.1105%" height="15" fill="rgb(242,56,43)" fg:x="3455" fg:w="28"/><text x="13.9302%" y="95.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="13.7478%" y="69" width="0.0355%" height="15" fill="rgb(233,99,24)" fg:x="3483" fg:w="9"/><text x="14.0407%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="13.7833%" y="69" width="0.0355%" height="15" fill="rgb(234,209,42)" fg:x="3492" fg:w="9"/><text x="14.0763%" y="79.50"></text></g><g><title>@anon-func-75.3 (146 instructions, 0.58%)</title><rect x="13.7478%" y="85" width="0.5763%" height="15" fill="rgb(227,7,12)" fg:x="3483" fg:w="146"/><text x="14.0407%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="14.3241%" y="69" width="0.0671%" height="15" fill="rgb(245,203,43)" fg:x="3629" fg:w="17"/><text x="14.6170%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="14.3912%" y="53" width="0.0355%" height="15" fill="rgb(238,205,33)" fg:x="3646" fg:w="9"/><text x="14.6841%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="14.3912%" y="69" width="0.2526%" height="15" fill="rgb(231,56,7)" fg:x="3646" fg:w="64"/><text x="14.6841%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="14.6438%" y="69" width="0.1421%" height="15" fill="rgb(244,186,29)" fg:x="3710" fg:w="36"/><text x="14.9367%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="14.7859%" y="69" width="0.0671%" height="15" fill="rgb(234,111,31)" fg:x="3746" fg:w="17"/><text x="15.0788%" y="79.50"></text></g><g><title>next.1 (20 instructions, 0.08%)</title><rect x="14.8530%" y="69" width="0.0789%" height="15" fill="rgb(241,149,10)" fg:x="3763" fg:w="20"/><text x="15.1459%" y="79.50"></text></g><g><title>writeIter (247 instructions, 0.97%)</title><rect x="14.3241%" y="85" width="0.9749%" height="15" fill="rgb(249,206,44)" fg:x="3629" fg:w="247"/><text x="14.6170%" y="95.50"></text></g><g><title>writeBlob (456 instructions, 1.80%)</title><rect x="13.6373%" y="101" width="1.7999%" height="15" fill="rgb(251,153,30)" fg:x="3455" fg:w="456"/><text x="13.9302%" y="111.50"></text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.07%)</title><rect x="15.4371%" y="101" width="0.0671%" height="15" fill="rgb(239,152,38)" fg:x="3911" fg:w="17"/><text x="15.7301%" y="111.50"></text></g><g><title>@blob_vals (28 instructions, 0.11%)</title><rect x="15.5042%" y="85" width="0.1105%" height="15" fill="rgb(249,139,47)" fg:x="3928" fg:w="28"/><text x="15.7972%" y="95.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="15.6148%" y="69" width="0.0355%" height="15" fill="rgb(244,64,35)" fg:x="3956" fg:w="9"/><text x="15.9077%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="15.6503%" y="69" width="0.0355%" height="15" fill="rgb(216,46,15)" fg:x="3965" fg:w="9"/><text x="15.9433%" y="79.50"></text></g><g><title>@anon-func-75.3 (146 instructions, 0.58%)</title><rect x="15.6148%" y="85" width="0.5763%" height="15" fill="rgb(250,74,19)" fg:x="3956" fg:w="146"/><text x="15.9077%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="16.1910%" y="69" width="0.0671%" height="15" fill="rgb(249,42,33)" fg:x="4102" fg:w="17"/><text x="16.4840%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="16.2581%" y="53" width="0.0355%" height="15" fill="rgb(242,149,17)" fg:x="4119" fg:w="9"/><text x="16.5511%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="16.2581%" y="69" width="0.2526%" height="15" fill="rgb(244,29,21)" fg:x="4119" fg:w="64"/><text x="16.5511%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="16.5108%" y="69" width="0.3118%" height="15" fill="rgb(220,130,37)" fg:x="4183" fg:w="79"/><text x="16.8037%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="16.8226%" y="69" width="0.0671%" height="15" fill="rgb(211,67,2)" fg:x="4262" fg:w="17"/><text x="17.1155%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="16.8897%" y="53" width="0.0355%" height="15" fill="rgb(235,68,52)" fg:x="4279" fg:w="9"/><text x="17.1826%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="16.8897%" y="69" width="0.2526%" height="15" fill="rgb(246,142,3)" fg:x="4279" fg:w="64"/><text x="17.1826%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="17.1423%" y="69" width="0.1421%" height="15" fill="rgb(241,25,7)" fg:x="4343" fg:w="36"/><text x="17.4353%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="17.2844%" y="69" width="0.0671%" height="15" fill="rgb(242,119,39)" fg:x="4379" fg:w="17"/><text x="17.5774%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="17.3515%" y="53" width="0.0355%" height="15" fill="rgb(241,98,45)" fg:x="4396" fg:w="9"/><text x="17.6445%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="17.3515%" y="69" width="0.2526%" height="15" fill="rgb(254,28,30)" fg:x="4396" fg:w="64"/><text x="17.6445%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="17.6041%" y="69" width="0.3118%" height="15" fill="rgb(241,142,54)" fg:x="4460" fg:w="79"/><text x="17.8971%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="17.9159%" y="69" width="0.0671%" height="15" fill="rgb(222,85,15)" fg:x="4539" fg:w="17"/><text x="18.2089%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="17.9830%" y="53" width="0.0355%" height="15" fill="rgb(210,85,47)" fg:x="4556" fg:w="9"/><text x="18.2760%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="17.9830%" y="69" width="0.2526%" height="15" fill="rgb(224,206,25)" fg:x="4556" fg:w="64"/><text x="18.2760%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="18.2356%" y="69" width="0.1421%" height="15" fill="rgb(243,201,19)" fg:x="4620" fg:w="36"/><text x="18.5286%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="18.3777%" y="69" width="0.0671%" height="15" fill="rgb(236,59,4)" fg:x="4656" fg:w="17"/><text x="18.6707%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="18.4448%" y="53" width="0.0355%" height="15" fill="rgb(254,179,45)" fg:x="4673" fg:w="9"/><text x="18.7378%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="18.4448%" y="69" width="0.2526%" height="15" fill="rgb(226,14,10)" fg:x="4673" fg:w="64"/><text x="18.7378%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="18.6975%" y="69" width="0.3118%" height="15" fill="rgb(244,27,41)" fg:x="4737" fg:w="79"/><text x="18.9904%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="19.0093%" y="69" width="0.0671%" height="15" fill="rgb(235,35,32)" fg:x="4816" fg:w="17"/><text x="19.3022%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="19.0764%" y="53" width="0.0355%" height="15" fill="rgb(218,68,31)" fg:x="4833" fg:w="9"/><text x="19.3693%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="19.0764%" y="69" width="0.2526%" height="15" fill="rgb(207,120,37)" fg:x="4833" fg:w="64"/><text x="19.3693%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="19.3290%" y="69" width="0.1421%" height="15" fill="rgb(227,98,0)" fg:x="4897" fg:w="36"/><text x="19.6220%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="19.4711%" y="69" width="0.0671%" height="15" fill="rgb(207,7,3)" fg:x="4933" fg:w="17"/><text x="19.7641%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="19.5382%" y="53" width="0.0355%" height="15" fill="rgb(206,98,19)" fg:x="4950" fg:w="9"/><text x="19.8312%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="19.5382%" y="69" width="0.2526%" height="15" fill="rgb(217,5,26)" fg:x="4950" fg:w="64"/><text x="19.8312%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="19.7908%" y="69" width="0.3118%" height="15" fill="rgb(235,190,38)" fg:x="5014" fg:w="79"/><text x="20.0838%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="20.1026%" y="69" width="0.0671%" height="15" fill="rgb(247,86,24)" fg:x="5093" fg:w="17"/><text x="20.3956%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="20.1697%" y="53" width="0.0355%" height="15" fill="rgb(205,101,16)" fg:x="5110" fg:w="9"/><text x="20.4627%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="20.1697%" y="69" width="0.2526%" height="15" fill="rgb(246,168,33)" fg:x="5110" fg:w="64"/><text x="20.4627%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="20.4223%" y="69" width="0.1421%" height="15" fill="rgb(231,114,1)" fg:x="5174" fg:w="36"/><text x="20.7153%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="20.5644%" y="69" width="0.0671%" height="15" fill="rgb(207,184,53)" fg:x="5210" fg:w="17"/><text x="20.8574%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="20.6315%" y="53" width="0.0355%" height="15" fill="rgb(224,95,51)" fg:x="5227" fg:w="9"/><text x="20.9245%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="20.6315%" y="69" width="0.2526%" height="15" fill="rgb(212,188,45)" fg:x="5227" fg:w="64"/><text x="20.9245%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="20.8842%" y="69" width="0.3118%" height="15" fill="rgb(223,154,38)" fg:x="5291" fg:w="79"/><text x="21.1771%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="21.1960%" y="69" width="0.0671%" height="15" fill="rgb(251,22,52)" fg:x="5370" fg:w="17"/><text x="21.4889%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="21.2631%" y="53" width="0.0355%" height="15" fill="rgb(229,209,22)" fg:x="5387" fg:w="9"/><text x="21.5560%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="21.2631%" y="69" width="0.2526%" height="15" fill="rgb(234,138,34)" fg:x="5387" fg:w="64"/><text x="21.5560%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="21.5157%" y="69" width="0.1421%" height="15" fill="rgb(212,95,11)" fg:x="5451" fg:w="36"/><text x="21.8087%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="21.6578%" y="69" width="0.0671%" height="15" fill="rgb(240,179,47)" fg:x="5487" fg:w="17"/><text x="21.9508%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="21.7249%" y="53" width="0.0355%" height="15" fill="rgb(240,163,11)" fg:x="5504" fg:w="9"/><text x="22.0179%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="21.7249%" y="69" width="0.2526%" height="15" fill="rgb(236,37,12)" fg:x="5504" fg:w="64"/><text x="22.0179%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="21.9775%" y="69" width="0.3118%" height="15" fill="rgb(232,164,16)" fg:x="5568" fg:w="79"/><text x="22.2705%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="22.2893%" y="69" width="0.0671%" height="15" fill="rgb(244,205,15)" fg:x="5647" fg:w="17"/><text x="22.5823%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="22.3564%" y="53" width="0.0355%" height="15" fill="rgb(223,117,47)" fg:x="5664" fg:w="9"/><text x="22.6494%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="22.3564%" y="69" width="0.2526%" height="15" fill="rgb(244,107,35)" fg:x="5664" fg:w="64"/><text x="22.6494%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="22.6090%" y="69" width="0.1421%" height="15" fill="rgb(205,140,8)" fg:x="5728" fg:w="36"/><text x="22.9020%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="22.7511%" y="69" width="0.0671%" height="15" fill="rgb(228,84,46)" fg:x="5764" fg:w="17"/><text x="23.0441%" y="79.50"></text></g><g><title>next.1 (20 instructions, 0.08%)</title><rect x="22.8182%" y="69" width="0.0789%" height="15" fill="rgb(254,188,9)" fg:x="5781" fg:w="20"/><text x="23.1112%" y="79.50"></text></g><g><title>writeIter (2,342 instructions, 9.24%)</title><rect x="16.1910%" y="85" width="9.2441%" height="15" fill="rgb(206,112,54)" fg:x="4102" fg:w="2342"/><text x="16.4840%" y="95.50">writeIter</text></g><g><title>writeBlob (2,551 instructions, 10.07%)</title><rect x="15.5042%" y="101" width="10.0691%" height="15" fill="rgb(216,84,49)" fg:x="3928" fg:w="2551"/><text x="15.7972%" y="111.50">writeBlob</text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.07%)</title><rect x="25.5733%" y="101" width="0.0671%" height="15" fill="rgb(214,194,35)" fg:x="6479" fg:w="17"/><text x="25.8663%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.22%)</title><rect x="25.6404%" y="69" width="0.2250%" height="15" fill="rgb(249,28,3)" fg:x="6496" fg:w="57"/><text x="25.9334%" y="79.50"></text></g><g><title>alloc_blob (65 instructions, 0.26%)</title><rect x="25.6404%" y="85" width="0.2566%" height="15" fill="rgb(222,56,52)" fg:x="6496" fg:w="65"/><text x="25.9334%" y="95.50"></text></g><g><title>memcpy (74 instructions, 0.29%)</title><rect x="25.8970%" y="85" width="0.2921%" height="15" fill="rgb(245,217,50)" fg:x="6561" fg:w="74"/><text x="26.1899%" y="95.50"></text></g><g><title>toBlob (171 instructions, 0.67%)</title><rect x="25.6404%" y="101" width="0.6750%" height="15" fill="rgb(213,201,24)" fg:x="6496" fg:w="171"/><text x="25.9334%" y="111.50"></text></g><g><title>@blob_vals (28 instructions, 0.11%)</title><rect x="26.3154%" y="85" width="0.1105%" height="15" fill="rgb(248,116,28)" fg:x="6667" fg:w="28"/><text x="26.6083%" y="95.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="26.4259%" y="69" width="0.0355%" height="15" fill="rgb(219,72,43)" fg:x="6695" fg:w="9"/><text x="26.7189%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="26.4614%" y="69" width="0.0355%" height="15" fill="rgb(209,138,14)" fg:x="6704" fg:w="9"/><text x="26.7544%" y="79.50"></text></g><g><title>@anon-func-75.3 (146 instructions, 0.58%)</title><rect x="26.4259%" y="85" width="0.5763%" height="15" fill="rgb(222,18,33)" fg:x="6695" fg:w="146"/><text x="26.7189%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="27.0022%" y="69" width="0.0671%" height="15" fill="rgb(213,199,7)" fg:x="6841" fg:w="17"/><text x="27.2951%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="27.0693%" y="53" width="0.0355%" height="15" fill="rgb(250,110,10)" fg:x="6858" fg:w="9"/><text x="27.3622%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="27.0693%" y="69" width="0.2526%" height="15" fill="rgb(248,123,6)" fg:x="6858" fg:w="64"/><text x="27.3622%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="27.3219%" y="69" width="0.3118%" height="15" fill="rgb(206,91,31)" fg:x="6922" fg:w="79"/><text x="27.6149%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="27.6337%" y="69" width="0.0671%" height="15" fill="rgb(211,154,13)" fg:x="7001" fg:w="17"/><text x="27.9267%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="27.7008%" y="53" width="0.0355%" height="15" fill="rgb(225,148,7)" fg:x="7018" fg:w="9"/><text x="27.9938%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="27.7008%" y="69" width="0.2526%" height="15" fill="rgb(220,160,43)" fg:x="7018" fg:w="64"/><text x="27.9938%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="27.9534%" y="69" width="0.1421%" height="15" fill="rgb(213,52,39)" fg:x="7082" fg:w="36"/><text x="28.2464%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="28.0955%" y="69" width="0.0671%" height="15" fill="rgb(243,137,7)" fg:x="7118" fg:w="17"/><text x="28.3885%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="28.1626%" y="53" width="0.0355%" height="15" fill="rgb(230,79,13)" fg:x="7135" fg:w="9"/><text x="28.4556%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="28.1626%" y="69" width="0.2526%" height="15" fill="rgb(247,105,23)" fg:x="7135" fg:w="64"/><text x="28.4556%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="28.4152%" y="69" width="0.3118%" height="15" fill="rgb(223,179,41)" fg:x="7199" fg:w="79"/><text x="28.7082%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="28.7271%" y="69" width="0.0671%" height="15" fill="rgb(218,9,34)" fg:x="7278" fg:w="17"/><text x="29.0200%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="28.7942%" y="53" width="0.0355%" height="15" fill="rgb(222,106,8)" fg:x="7295" fg:w="9"/><text x="29.0871%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="28.7942%" y="69" width="0.2526%" height="15" fill="rgb(211,220,0)" fg:x="7295" fg:w="64"/><text x="29.0871%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="29.0468%" y="69" width="0.1421%" height="15" fill="rgb(229,52,16)" fg:x="7359" fg:w="36"/><text x="29.3397%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="29.1889%" y="69" width="0.0671%" height="15" fill="rgb(212,155,18)" fg:x="7395" fg:w="17"/><text x="29.4818%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="29.2560%" y="53" width="0.0355%" height="15" fill="rgb(242,21,14)" fg:x="7412" fg:w="9"/><text x="29.5489%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="29.2560%" y="69" width="0.2526%" height="15" fill="rgb(222,19,48)" fg:x="7412" fg:w="64"/><text x="29.5489%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="29.5086%" y="69" width="0.3118%" height="15" fill="rgb(232,45,27)" fg:x="7476" fg:w="79"/><text x="29.8016%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="29.8204%" y="69" width="0.0671%" height="15" fill="rgb(249,103,42)" fg:x="7555" fg:w="17"/><text x="30.1134%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="29.8875%" y="53" width="0.0355%" height="15" fill="rgb(246,81,33)" fg:x="7572" fg:w="9"/><text x="30.1805%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="29.8875%" y="69" width="0.2526%" height="15" fill="rgb(252,33,42)" fg:x="7572" fg:w="64"/><text x="30.1805%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="30.1401%" y="69" width="0.1421%" height="15" fill="rgb(209,212,41)" fg:x="7636" fg:w="36"/><text x="30.4331%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="30.2822%" y="69" width="0.0671%" height="15" fill="rgb(207,154,6)" fg:x="7672" fg:w="17"/><text x="30.5752%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="30.3493%" y="53" width="0.0355%" height="15" fill="rgb(223,64,47)" fg:x="7689" fg:w="9"/><text x="30.6423%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="30.3493%" y="69" width="0.2526%" height="15" fill="rgb(211,161,38)" fg:x="7689" fg:w="64"/><text x="30.6423%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="30.6019%" y="69" width="0.3118%" height="15" fill="rgb(219,138,40)" fg:x="7753" fg:w="79"/><text x="30.8949%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="30.9138%" y="69" width="0.0671%" height="15" fill="rgb(241,228,46)" fg:x="7832" fg:w="17"/><text x="31.2067%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="30.9809%" y="53" width="0.0355%" height="15" fill="rgb(223,209,38)" fg:x="7849" fg:w="9"/><text x="31.2738%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="30.9809%" y="69" width="0.2526%" height="15" fill="rgb(236,164,45)" fg:x="7849" fg:w="64"/><text x="31.2738%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="31.2335%" y="69" width="0.1421%" height="15" fill="rgb(231,15,5)" fg:x="7913" fg:w="36"/><text x="31.5264%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="31.3756%" y="69" width="0.0671%" height="15" fill="rgb(252,35,15)" fg:x="7949" fg:w="17"/><text x="31.6685%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="31.4427%" y="53" width="0.0355%" height="15" fill="rgb(248,181,18)" fg:x="7966" fg:w="9"/><text x="31.7356%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="31.4427%" y="69" width="0.2526%" height="15" fill="rgb(233,39,42)" fg:x="7966" fg:w="64"/><text x="31.7356%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="31.6953%" y="69" width="0.3118%" height="15" fill="rgb(238,110,33)" fg:x="8030" fg:w="79"/><text x="31.9883%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="32.0071%" y="69" width="0.0671%" height="15" fill="rgb(233,195,10)" fg:x="8109" fg:w="17"/><text x="32.3001%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="32.0742%" y="53" width="0.0355%" height="15" fill="rgb(254,105,3)" fg:x="8126" fg:w="9"/><text x="32.3672%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="32.0742%" y="69" width="0.2526%" height="15" fill="rgb(221,225,9)" fg:x="8126" fg:w="64"/><text x="32.3672%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="32.3268%" y="69" width="0.1421%" height="15" fill="rgb(224,227,45)" fg:x="8190" fg:w="36"/><text x="32.6198%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="32.4689%" y="69" width="0.0671%" height="15" fill="rgb(229,198,43)" fg:x="8226" fg:w="17"/><text x="32.7619%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="32.5360%" y="53" width="0.0355%" height="15" fill="rgb(206,209,35)" fg:x="8243" fg:w="9"/><text x="32.8290%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="32.5360%" y="69" width="0.2526%" height="15" fill="rgb(245,195,53)" fg:x="8243" fg:w="64"/><text x="32.8290%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="32.7886%" y="69" width="0.3118%" height="15" fill="rgb(240,92,26)" fg:x="8307" fg:w="79"/><text x="33.0816%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="33.1005%" y="69" width="0.0671%" height="15" fill="rgb(207,40,23)" fg:x="8386" fg:w="17"/><text x="33.3934%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="33.1676%" y="53" width="0.0355%" height="15" fill="rgb(223,111,35)" fg:x="8403" fg:w="9"/><text x="33.4605%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="33.1676%" y="69" width="0.2526%" height="15" fill="rgb(229,147,28)" fg:x="8403" fg:w="64"/><text x="33.4605%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="33.4202%" y="69" width="0.1421%" height="15" fill="rgb(211,29,28)" fg:x="8467" fg:w="36"/><text x="33.7131%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="33.5623%" y="69" width="0.0671%" height="15" fill="rgb(228,72,33)" fg:x="8503" fg:w="17"/><text x="33.8552%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="33.6294%" y="53" width="0.0355%" height="15" fill="rgb(205,214,31)" fg:x="8520" fg:w="9"/><text x="33.9223%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="33.6294%" y="69" width="0.2526%" height="15" fill="rgb(224,111,15)" fg:x="8520" fg:w="64"/><text x="33.9223%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="33.8820%" y="69" width="0.3118%" height="15" fill="rgb(253,21,26)" fg:x="8584" fg:w="79"/><text x="34.1750%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="34.1938%" y="69" width="0.0671%" height="15" fill="rgb(245,139,43)" fg:x="8663" fg:w="17"/><text x="34.4868%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="34.2609%" y="53" width="0.0355%" height="15" fill="rgb(252,170,7)" fg:x="8680" fg:w="9"/><text x="34.5539%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="34.2609%" y="69" width="0.2526%" height="15" fill="rgb(231,118,14)" fg:x="8680" fg:w="64"/><text x="34.5539%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="34.5135%" y="69" width="0.1421%" height="15" fill="rgb(238,83,0)" fg:x="8744" fg:w="36"/><text x="34.8065%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="34.6556%" y="69" width="0.0671%" height="15" fill="rgb(221,39,39)" fg:x="8780" fg:w="17"/><text x="34.9486%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="34.7227%" y="53" width="0.0355%" height="15" fill="rgb(222,119,46)" fg:x="8797" fg:w="9"/><text x="35.0157%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="34.7227%" y="69" width="0.2526%" height="15" fill="rgb(222,165,49)" fg:x="8797" fg:w="64"/><text x="35.0157%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="34.9753%" y="69" width="0.3118%" height="15" fill="rgb(219,113,52)" fg:x="8861" fg:w="79"/><text x="35.2683%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="35.2872%" y="69" width="0.0671%" height="15" fill="rgb(214,7,15)" fg:x="8940" fg:w="17"/><text x="35.5801%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h180f7882737ded73 (9 instructions, 0.04%)</title><rect x="35.3543%" y="53" width="0.0355%" height="15" fill="rgb(235,32,4)" fg:x="8957" fg:w="9"/><text x="35.6472%" y="63.50"></text></g><g><title>next.1 (64 instructions, 0.25%)</title><rect x="35.3543%" y="69" width="0.2526%" height="15" fill="rgb(238,90,54)" fg:x="8957" fg:w="64"/><text x="35.6472%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="35.6069%" y="69" width="0.1421%" height="15" fill="rgb(213,208,19)" fg:x="9021" fg:w="36"/><text x="35.8998%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="35.7490%" y="69" width="0.0671%" height="15" fill="rgb(233,156,4)" fg:x="9057" fg:w="17"/><text x="36.0419%" y="79.50"></text></g><g><title>next.1 (20 instructions, 0.08%)</title><rect x="35.8161%" y="69" width="0.0789%" height="15" fill="rgb(207,194,5)" fg:x="9074" fg:w="20"/><text x="36.1090%" y="79.50"></text></g><g><title>writeIter (3,096 instructions, 12.22%)</title><rect x="27.0022%" y="85" width="12.2202%" height="15" fill="rgb(206,111,30)" fg:x="6841" fg:w="3096"/><text x="27.2951%" y="95.50">writeIter</text></g><g><title>writeBlob (3,305 instructions, 13.05%)</title><rect x="26.3154%" y="101" width="13.0452%" height="15" fill="rgb(243,70,54)" fg:x="6667" fg:w="3305"/><text x="26.6083%" y="111.50">writeBlob</text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="39.3606%" y="101" width="0.0671%" height="15" fill="rgb(242,28,8)" fg:x="9972" fg:w="17"/><text x="39.6535%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_array::hc667600bec1393ae (60 instructions, 0.24%)</title><rect x="39.4277%" y="85" width="0.2368%" height="15" fill="rgb(219,106,18)" fg:x="9989" fg:w="60"/><text x="39.7206%" y="95.50"></text></g><g><title>alloc_array (68 instructions, 0.27%)</title><rect x="39.4277%" y="101" width="0.2684%" height="15" fill="rgb(244,222,10)" fg:x="9989" fg:w="68"/><text x="39.7206%" y="111.50"></text></g><g><title>B_sub (34 instructions, 0.13%)</title><rect x="39.6961%" y="85" width="0.1342%" height="15" fill="rgb(236,179,52)" fg:x="10057" fg:w="34"/><text x="39.9890%" y="95.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="39.8303%" y="85" width="0.0513%" height="15" fill="rgb(213,23,39)" fg:x="10091" fg:w="13"/><text x="40.1232%" y="95.50"></text></g><g><title>B_sub (34 instructions, 0.13%)</title><rect x="40.1697%" y="85" width="0.1342%" height="15" fill="rgb(238,48,10)" fg:x="10177" fg:w="34"/><text x="40.4627%" y="95.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="40.3039%" y="85" width="0.0513%" height="15" fill="rgb(251,196,23)" fg:x="10211" fg:w="13"/><text x="40.5969%" y="95.50"></text></g><g><title>B_sub (34 instructions, 0.13%)</title><rect x="40.6434%" y="85" width="0.1342%" height="15" fill="rgb(250,152,24)" fg:x="10297" fg:w="34"/><text x="40.9363%" y="95.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="40.7776%" y="85" width="0.0513%" height="15" fill="rgb(209,150,17)" fg:x="10331" fg:w="13"/><text x="41.0705%" y="95.50"></text></g><g><title>B_sub (34 instructions, 0.13%)</title><rect x="41.1170%" y="85" width="0.1342%" height="15" fill="rgb(234,202,34)" fg:x="10417" fg:w="34"/><text x="41.4100%" y="95.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="41.2512%" y="85" width="0.0513%" height="15" fill="rgb(253,148,53)" fg:x="10451" fg:w="13"/><text x="41.5442%" y="95.50"></text></g><g><title>B_sub (34 instructions, 0.13%)</title><rect x="41.5907%" y="85" width="0.1342%" height="15" fill="rgb(218,129,16)" fg:x="10537" fg:w="34"/><text x="41.8837%" y="95.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="41.7249%" y="85" width="0.0513%" height="15" fill="rgb(216,85,19)" fg:x="10571" fg:w="13"/><text x="42.0179%" y="95.50"></text></g><g><title>B_sub (34 instructions, 0.13%)</title><rect x="42.0643%" y="85" width="0.1342%" height="15" fill="rgb(235,228,7)" fg:x="10657" fg:w="34"/><text x="42.3573%" y="95.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="42.1985%" y="85" width="0.0513%" height="15" fill="rgb(245,175,0)" fg:x="10691" fg:w="13"/><text x="42.4915%" y="95.50"></text></g><g><title>B_sub (34 instructions, 0.13%)</title><rect x="42.5380%" y="85" width="0.1342%" height="15" fill="rgb(208,168,36)" fg:x="10777" fg:w="34"/><text x="42.8310%" y="95.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="42.6722%" y="85" width="0.0513%" height="15" fill="rgb(246,171,24)" fg:x="10811" fg:w="13"/><text x="42.9652%" y="95.50"></text></g><g><title>B_sub (34 instructions, 0.13%)</title><rect x="43.0116%" y="85" width="0.1342%" height="15" fill="rgb(215,142,24)" fg:x="10897" fg:w="34"/><text x="43.3046%" y="95.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="43.1458%" y="85" width="0.0513%" height="15" fill="rgb(250,187,7)" fg:x="10931" fg:w="13"/><text x="43.4388%" y="95.50"></text></g><g><title>@anon-func-9.27 (960 instructions, 3.79%)</title><rect x="39.6961%" y="101" width="3.7892%" height="15" fill="rgb(228,66,33)" fg:x="10057" fg:w="960"/><text x="39.9890%" y="111.50">@an..</text></g><g><title>@anon-func-61.3 (101 instructions, 0.40%)</title><rect x="43.4853%" y="85" width="0.3987%" height="15" fill="rgb(234,215,21)" fg:x="11017" fg:w="101"/><text x="43.7783%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="43.8840%" y="69" width="0.0671%" height="15" fill="rgb(222,191,20)" fg:x="11118" fg:w="17"/><text x="44.1769%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="43.9511%" y="53" width="0.1066%" height="15" fill="rgb(245,79,54)" fg:x="11135" fg:w="27"/><text x="44.2440%" y="63.50"></text></g><g><title>next (87 instructions, 0.34%)</title><rect x="43.9511%" y="69" width="0.3434%" height="15" fill="rgb(240,10,37)" fg:x="11135" fg:w="87"/><text x="44.2440%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="44.2945%" y="69" width="0.3118%" height="15" fill="rgb(214,192,32)" fg:x="11222" fg:w="79"/><text x="44.5874%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="44.6063%" y="69" width="0.0671%" height="15" fill="rgb(209,36,54)" fg:x="11301" fg:w="17"/><text x="44.8992%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="44.6734%" y="53" width="0.1066%" height="15" fill="rgb(220,10,11)" fg:x="11318" fg:w="27"/><text x="44.9663%" y="63.50"></text></g><g><title>next (87 instructions, 0.34%)</title><rect x="44.6734%" y="69" width="0.3434%" height="15" fill="rgb(221,106,17)" fg:x="11318" fg:w="87"/><text x="44.9663%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="45.0168%" y="69" width="0.1421%" height="15" fill="rgb(251,142,44)" fg:x="11405" fg:w="36"/><text x="45.3097%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="45.1589%" y="69" width="0.0671%" height="15" fill="rgb(238,13,15)" fg:x="11441" fg:w="17"/><text x="45.4518%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="45.2260%" y="53" width="0.1066%" height="15" fill="rgb(208,107,27)" fg:x="11458" fg:w="27"/><text x="45.5189%" y="63.50"></text></g><g><title>next (87 instructions, 0.34%)</title><rect x="45.2260%" y="69" width="0.3434%" height="15" fill="rgb(205,136,37)" fg:x="11458" fg:w="87"/><text x="45.5189%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="45.5694%" y="69" width="0.3118%" height="15" fill="rgb(250,205,27)" fg:x="11545" fg:w="79"/><text x="45.8623%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="45.8812%" y="69" width="0.0671%" height="15" fill="rgb(210,80,43)" fg:x="11624" fg:w="17"/><text x="46.1742%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="45.9483%" y="53" width="0.1066%" height="15" fill="rgb(247,160,36)" fg:x="11641" fg:w="27"/><text x="46.2413%" y="63.50"></text></g><g><title>next (87 instructions, 0.34%)</title><rect x="45.9483%" y="69" width="0.3434%" height="15" fill="rgb(234,13,49)" fg:x="11641" fg:w="87"/><text x="46.2413%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="46.2917%" y="69" width="0.1421%" height="15" fill="rgb(234,122,0)" fg:x="11728" fg:w="36"/><text x="46.5847%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="46.4338%" y="69" width="0.0671%" height="15" fill="rgb(207,146,38)" fg:x="11764" fg:w="17"/><text x="46.7268%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="46.5009%" y="53" width="0.1066%" height="15" fill="rgb(207,177,25)" fg:x="11781" fg:w="27"/><text x="46.7939%" y="63.50"></text></g><g><title>next (87 instructions, 0.34%)</title><rect x="46.5009%" y="69" width="0.3434%" height="15" fill="rgb(211,178,42)" fg:x="11781" fg:w="87"/><text x="46.7939%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="46.8443%" y="69" width="0.3118%" height="15" fill="rgb(230,69,54)" fg:x="11868" fg:w="79"/><text x="47.1373%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="47.1561%" y="69" width="0.0671%" height="15" fill="rgb(214,135,41)" fg:x="11947" fg:w="17"/><text x="47.4491%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="47.2232%" y="53" width="0.1066%" height="15" fill="rgb(237,67,25)" fg:x="11964" fg:w="27"/><text x="47.5162%" y="63.50"></text></g><g><title>next (87 instructions, 0.34%)</title><rect x="47.2232%" y="69" width="0.3434%" height="15" fill="rgb(222,189,50)" fg:x="11964" fg:w="87"/><text x="47.5162%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="47.5666%" y="69" width="0.1421%" height="15" fill="rgb(245,148,34)" fg:x="12051" fg:w="36"/><text x="47.8596%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="47.7087%" y="69" width="0.0671%" height="15" fill="rgb(222,29,6)" fg:x="12087" fg:w="17"/><text x="48.0017%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="47.7758%" y="53" width="0.1066%" height="15" fill="rgb(221,189,43)" fg:x="12104" fg:w="27"/><text x="48.0688%" y="63.50"></text></g><g><title>next (87 instructions, 0.34%)</title><rect x="47.7758%" y="69" width="0.3434%" height="15" fill="rgb(207,36,27)" fg:x="12104" fg:w="87"/><text x="48.0688%" y="79.50"></text></g><g><title>writeByte.1 (79 instructions, 0.31%)</title><rect x="48.1192%" y="69" width="0.3118%" height="15" fill="rgb(217,90,24)" fg:x="12191" fg:w="79"/><text x="48.4122%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="48.4310%" y="69" width="0.0671%" height="15" fill="rgb(224,66,35)" fg:x="12270" fg:w="17"/><text x="48.7240%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="48.4981%" y="53" width="0.1066%" height="15" fill="rgb(221,13,50)" fg:x="12287" fg:w="27"/><text x="48.7911%" y="63.50"></text></g><g><title>next (87 instructions, 0.34%)</title><rect x="48.4981%" y="69" width="0.3434%" height="15" fill="rgb(236,68,49)" fg:x="12287" fg:w="87"/><text x="48.7911%" y="79.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="48.8415%" y="69" width="0.1421%" height="15" fill="rgb(229,146,28)" fg:x="12374" fg:w="36"/><text x="49.1345%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="48.9836%" y="69" width="0.0671%" height="15" fill="rgb(225,31,38)" fg:x="12410" fg:w="17"/><text x="49.2766%" y="79.50"></text></g><g><title>next (24 instructions, 0.09%)</title><rect x="49.0507%" y="69" width="0.0947%" height="15" fill="rgb(250,208,3)" fg:x="12427" fg:w="24"/><text x="49.3437%" y="79.50"></text></g><g><title>writeIter (1,776 instructions, 7.01%)</title><rect x="43.8840%" y="85" width="7.0101%" height="15" fill="rgb(246,54,23)" fg:x="11118" fg:w="1776"/><text x="44.1769%" y="95.50">writeIter</text></g><g><title>writeArray (1,932 instructions, 7.63%)</title><rect x="43.4853%" y="101" width="7.6258%" height="15" fill="rgb(243,76,11)" fg:x="11017" fg:w="1932"/><text x="43.7783%" y="111.50">writeArray</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="51.1111%" y="101" width="0.0671%" height="15" fill="rgb(245,21,50)" fg:x="12949" fg:w="17"/><text x="51.4041%" y="111.50"></text></g><g><title>process_block.1 (5,675 instructions, 22.40%)</title><rect x="51.1782%" y="69" width="22.3998%" height="15" fill="rgb(228,9,43)" fg:x="12966" fg:w="5675"/><text x="51.4712%" y="79.50">process_block.1</text></g><g><title>writePadding (6,365 instructions, 25.12%)</title><rect x="51.1782%" y="85" width="25.1233%" height="15" fill="rgb(208,100,47)" fg:x="12966" fg:w="6365"/><text x="51.4712%" y="95.50">writePadding</text></g><g><title>@eq&lt;v(sha224:u,sha256:u)&gt; (65 instructions, 0.26%)</title><rect x="76.3016%" y="85" width="0.2566%" height="15" fill="rgb(232,26,8)" fg:x="19331" fg:w="65"/><text x="76.5945%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.22%)</title><rect x="76.5581%" y="53" width="0.2250%" height="15" fill="rgb(216,166,38)" fg:x="19396" fg:w="57"/><text x="76.8511%" y="63.50"></text></g><g><title>alloc_blob (65 instructions, 0.26%)</title><rect x="76.5581%" y="69" width="0.2566%" height="15" fill="rgb(251,202,51)" fg:x="19396" fg:w="65"/><text x="76.8511%" y="79.50"></text></g><g><title>Arr.toBlob (946 instructions, 3.73%)</title><rect x="76.5581%" y="85" width="3.7340%" height="15" fill="rgb(254,216,34)" fg:x="19396" fg:w="946"/><text x="76.8511%" y="95.50">Arr..</text></g><g><title>sum.1 (8,196 instructions, 32.35%)</title><rect x="51.1782%" y="101" width="32.3505%" height="15" fill="rgb(251,32,27)" fg:x="12966" fg:w="8196"/><text x="51.4712%" y="111.50">sum.1</text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.22%)</title><rect x="83.5287%" y="69" width="0.2250%" height="15" fill="rgb(208,127,28)" fg:x="21162" fg:w="57"/><text x="83.8217%" y="79.50"></text></g><g><title>alloc_blob (65 instructions, 0.26%)</title><rect x="83.5287%" y="85" width="0.2566%" height="15" fill="rgb(224,137,22)" fg:x="21162" fg:w="65"/><text x="83.8217%" y="95.50"></text></g><g><title>memcpy (60 instructions, 0.24%)</title><rect x="83.7853%" y="85" width="0.2368%" height="15" fill="rgb(254,70,32)" fg:x="21227" fg:w="60"/><text x="84.0782%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.22%)</title><rect x="84.0221%" y="69" width="0.2250%" height="15" fill="rgb(229,75,37)" fg:x="21287" fg:w="57"/><text x="84.3151%" y="79.50"></text></g><g><title>alloc_blob (65 instructions, 0.26%)</title><rect x="84.0221%" y="85" width="0.2566%" height="15" fill="rgb(252,64,23)" fg:x="21287" fg:w="65"/><text x="84.3151%" y="95.50"></text></g><g><title>leb128_encode (11 instructions, 0.04%)</title><rect x="84.2787%" y="85" width="0.0434%" height="15" fill="rgb(232,162,48)" fg:x="21352" fg:w="11"/><text x="84.5716%" y="95.50"></text></g><g><title>memcpy (194 instructions, 0.77%)</title><rect x="84.3221%" y="85" width="0.7657%" height="15" fill="rgb(246,160,12)" fg:x="21363" fg:w="194"/><text x="84.6151%" y="95.50"></text></g><g><title>$lambda.15 (1,615 instructions, 6.37%)</title><rect x="83.5287%" y="101" width="6.3746%" height="15" fill="rgb(247,166,0)" fg:x="21162" fg:w="1615"/><text x="83.8217%" y="111.50">$lambda..</text></g><g><title>$lambda.3 (22,154 instructions, 87.44%)</title><rect x="4.4089%" y="117" width="87.4442%" height="15" fill="rgb(249,219,21)" fg:x="1117" fg:w="22154"/><text x="4.7019%" y="127.50">$lambda.3</text></g><g><title>schedule_copying_gc (108 instructions, 0.43%)</title><rect x="91.8532%" y="117" width="0.4263%" height="15" fill="rgb(205,209,3)" fg:x="23271" fg:w="108"/><text x="92.1461%" y="127.50"></text></g><g><title>trans_state4 (11 instructions, 0.04%)</title><rect x="92.2795%" y="117" width="0.0434%" height="15" fill="rgb(243,44,1)" fg:x="23379" fg:w="11"/><text x="92.5724%" y="127.50"></text></g><g><title>all (25,335 instructions, 100%)</title><rect x="0.0000%" y="149" width="100.0000%" height="15" fill="rgb(206,159,16)" fg:x="0" fg:w="25335"/><text x="0.2930%" y="159.50"></text></g><g><title>principalToNeuron (25,335 instructions, 100.00%)</title><rect x="0.0000%" y="133" width="100.0000%" height="15" fill="rgb(244,77,30)" fg:x="0" fg:w="25335"/><text x="0.2930%" y="143.50">principalToNeuron</text></g></svg></svg>