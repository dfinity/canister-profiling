<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="182" onload="init(evt)" viewBox="0 0 1024 182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="182" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Motoko.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="165.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="165.00"> </text><svg id="frames" x="10" width="1004" total_samples="24897"><g><title>trans_state5 (10 instructions, 0.04%)</title><rect x="0.0000%" y="101" width="0.0402%" height="15" fill="rgb(207,178,40)" fg:x="0" fg:w="10"/><text x="0.2930%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.22%)</title><rect x="0.0402%" y="101" width="0.2249%" height="15" fill="rgb(221,136,13)" fg:x="10" fg:w="56"/><text x="0.3331%" y="111.50"></text></g><g><title>leb128_decode (50 instructions, 0.20%)</title><rect x="0.2651%" y="85" width="0.2008%" height="15" fill="rgb(249,199,10)" fg:x="66" fg:w="50"/><text x="0.5581%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.22%)</title><rect x="0.4659%" y="85" width="0.2249%" height="15" fill="rgb(249,222,13)" fg:x="116" fg:w="56"/><text x="0.7589%" y="95.50"></text></g><g><title>leb128_decode (50 instructions, 0.20%)</title><rect x="0.6908%" y="85" width="0.2008%" height="15" fill="rgb(244,185,38)" fg:x="172" fg:w="50"/><text x="0.9838%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.26%)</title><rect x="0.8917%" y="85" width="0.2571%" height="15" fill="rgb(236,202,9)" fg:x="222" fg:w="64"/><text x="1.1846%" y="95.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (17 instructions, 0.07%)</title><rect x="1.1487%" y="85" width="0.0683%" height="15" fill="rgb(250,229,37)" fg:x="286" fg:w="17"/><text x="1.4417%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.26%)</title><rect x="1.2170%" y="85" width="0.2571%" height="15" fill="rgb(206,174,23)" fg:x="303" fg:w="64"/><text x="1.5100%" y="95.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (12 instructions, 0.05%)</title><rect x="1.4741%" y="85" width="0.0482%" height="15" fill="rgb(211,33,43)" fg:x="367" fg:w="12"/><text x="1.7670%" y="95.50"></text></g><g><title>parse_idl_header (440 instructions, 1.77%)</title><rect x="0.2651%" y="101" width="1.7673%" height="15" fill="rgb(245,58,50)" fg:x="66" fg:w="440"/><text x="0.5581%" y="111.50"></text></g><g><title>memset (6 instructions, 0.02%)</title><rect x="2.0324%" y="85" width="0.0241%" height="15" fill="rgb(244,68,36)" fg:x="506" fg:w="6"/><text x="2.3253%" y="95.50"></text></g><g><title>idl_sub_buf_init (15 instructions, 0.06%)</title><rect x="2.0324%" y="101" width="0.0602%" height="15" fill="rgb(232,229,15)" fg:x="506" fg:w="15"/><text x="2.3253%" y="111.50"></text></g><g><title>leb128_decode (50 instructions, 0.20%)</title><rect x="2.0926%" y="101" width="0.2008%" height="15" fill="rgb(254,30,23)" fg:x="521" fg:w="50"/><text x="2.3856%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.26%)</title><rect x="2.2934%" y="101" width="0.2571%" height="15" fill="rgb(235,160,14)" fg:x="571" fg:w="64"/><text x="2.5864%" y="111.50"></text></g><g><title>leb128_decode (50 instructions, 0.20%)</title><rect x="2.5505%" y="85" width="0.2008%" height="15" fill="rgb(212,155,44)" fg:x="635" fg:w="50"/><text x="2.8435%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.22%)</title><rect x="2.7513%" y="85" width="0.2249%" height="15" fill="rgb(226,2,50)" fg:x="685" fg:w="56"/><text x="3.0443%" y="95.50"></text></g><g><title>memcpy (147 instructions, 0.59%)</title><rect x="2.9763%" y="85" width="0.5904%" height="15" fill="rgb(234,177,6)" fg:x="741" fg:w="147"/><text x="3.2692%" y="95.50"></text></g><g><title>@deserialize_go&lt;P&gt; (360 instructions, 1.45%)</title><rect x="2.5505%" y="101" width="1.4460%" height="15" fill="rgb(217,24,9)" fg:x="635" fg:w="360"/><text x="2.8435%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.26%)</title><rect x="3.9965%" y="101" width="0.2571%" height="15" fill="rgb(220,13,46)" fg:x="995" fg:w="64"/><text x="4.2894%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_array::h817c463cc2b856af (60 instructions, 0.24%)</title><rect x="4.2535%" y="37" width="0.2410%" height="15" fill="rgb(239,221,27)" fg:x="1059" fg:w="60"/><text x="4.5465%" y="47.50"></text></g><g><title>Array_init (537 instructions, 2.16%)</title><rect x="4.2535%" y="53" width="2.1569%" height="15" fill="rgb(222,198,25)" fg:x="1059" fg:w="537"/><text x="4.5465%" y="63.50">A..</text></g><g><title>motoko_rts::memory::alloc_array::h817c463cc2b856af (60 instructions, 0.24%)</title><rect x="6.4466%" y="37" width="0.2410%" height="15" fill="rgb(211,99,13)" fg:x="1605" fg:w="60"/><text x="6.7395%" y="47.50"></text></g><g><title>Array_init (537 instructions, 2.16%)</title><rect x="6.4466%" y="53" width="2.1569%" height="15" fill="rgb(232,111,31)" fg:x="1605" fg:w="537"/><text x="6.7395%" y="63.50">A..</text></g><g><title>init.1 (1,092 instructions, 4.39%)</title><rect x="4.2535%" y="69" width="4.3861%" height="15" fill="rgb(245,82,37)" fg:x="1059" fg:w="1092"/><text x="4.5465%" y="79.50">init..</text></g><g><title>@eq&lt;v(sha224:u,sha256:u)&gt; (65 instructions, 0.26%)</title><rect x="8.6396%" y="53" width="0.2611%" height="15" fill="rgb(227,149,46)" fg:x="2151" fg:w="65"/><text x="8.9326%" y="63.50"></text></g><g><title>reset.1 (183 instructions, 0.74%)</title><rect x="8.6396%" y="69" width="0.7350%" height="15" fill="rgb(218,36,50)" fg:x="2151" fg:w="183"/><text x="8.9326%" y="79.50"></text></g><g><title>Digest (2,303 instructions, 9.25%)</title><rect x="4.2535%" y="85" width="9.2501%" height="15" fill="rgb(226,80,48)" fg:x="1059" fg:w="2303"/><text x="4.5465%" y="95.50">Digest</text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.07%)</title><rect x="13.5036%" y="85" width="0.0683%" height="15" fill="rgb(238,224,15)" fg:x="3362" fg:w="17"/><text x="13.7966%" y="95.50"></text></g><g><title>@blob_vals (28 instructions, 0.11%)</title><rect x="13.5719%" y="69" width="0.1125%" height="15" fill="rgb(241,136,10)" fg:x="3379" fg:w="28"/><text x="13.8649%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h56833a827c874225 (9 instructions, 0.04%)</title><rect x="13.6844%" y="53" width="0.0361%" height="15" fill="rgb(208,32,45)" fg:x="3407" fg:w="9"/><text x="13.9773%" y="63.50"></text></g><g><title>anon-func-75.3 (125 instructions, 0.50%)</title><rect x="13.6844%" y="69" width="0.5021%" height="15" fill="rgb(207,135,9)" fg:x="3407" fg:w="125"/><text x="13.9773%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="14.1864%" y="53" width="0.0683%" height="15" fill="rgb(206,86,44)" fg:x="3532" fg:w="17"/><text x="14.4794%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="14.2547%" y="53" width="0.1968%" height="15" fill="rgb(245,177,15)" fg:x="3549" fg:w="49"/><text x="14.5477%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="14.4515%" y="53" width="0.1446%" height="15" fill="rgb(206,64,50)" fg:x="3598" fg:w="36"/><text x="14.7445%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="14.5961%" y="53" width="0.0683%" height="15" fill="rgb(234,36,40)" fg:x="3634" fg:w="17"/><text x="14.8891%" y="63.50"></text></g><g><title>next.1 (20 instructions, 0.08%)</title><rect x="14.6644%" y="53" width="0.0803%" height="15" fill="rgb(213,64,8)" fg:x="3651" fg:w="20"/><text x="14.9574%" y="63.50"></text></g><g><title>writeIter (232 instructions, 0.93%)</title><rect x="14.1864%" y="69" width="0.9318%" height="15" fill="rgb(210,75,36)" fg:x="3532" fg:w="232"/><text x="14.4794%" y="79.50"></text></g><g><title>writeBlob (420 instructions, 1.69%)</title><rect x="13.5719%" y="85" width="1.6870%" height="15" fill="rgb(229,88,21)" fg:x="3379" fg:w="420"/><text x="13.8649%" y="95.50"></text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.07%)</title><rect x="15.2589%" y="85" width="0.0683%" height="15" fill="rgb(252,204,47)" fg:x="3799" fg:w="17"/><text x="15.5518%" y="95.50"></text></g><g><title>@blob_vals (28 instructions, 0.11%)</title><rect x="15.3271%" y="69" width="0.1125%" height="15" fill="rgb(208,77,27)" fg:x="3816" fg:w="28"/><text x="15.6201%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h56833a827c874225 (9 instructions, 0.04%)</title><rect x="15.4396%" y="53" width="0.0361%" height="15" fill="rgb(221,76,26)" fg:x="3844" fg:w="9"/><text x="15.7326%" y="63.50"></text></g><g><title>anon-func-75.3 (125 instructions, 0.50%)</title><rect x="15.4396%" y="69" width="0.5021%" height="15" fill="rgb(225,139,18)" fg:x="3844" fg:w="125"/><text x="15.7326%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="15.9417%" y="53" width="0.0683%" height="15" fill="rgb(230,137,11)" fg:x="3969" fg:w="17"/><text x="16.2346%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="16.0100%" y="53" width="0.1968%" height="15" fill="rgb(212,28,1)" fg:x="3986" fg:w="49"/><text x="16.3029%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="16.2068%" y="53" width="0.3093%" height="15" fill="rgb(248,164,17)" fg:x="4035" fg:w="77"/><text x="16.4997%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="16.5160%" y="53" width="0.0683%" height="15" fill="rgb(222,171,42)" fg:x="4112" fg:w="17"/><text x="16.8090%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="16.5843%" y="53" width="0.1968%" height="15" fill="rgb(243,84,45)" fg:x="4129" fg:w="49"/><text x="16.8773%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="16.7811%" y="53" width="0.1446%" height="15" fill="rgb(252,49,23)" fg:x="4178" fg:w="36"/><text x="17.0741%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="16.9257%" y="53" width="0.0683%" height="15" fill="rgb(215,19,7)" fg:x="4214" fg:w="17"/><text x="17.2187%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="16.9940%" y="53" width="0.1968%" height="15" fill="rgb(238,81,41)" fg:x="4231" fg:w="49"/><text x="17.2870%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="17.1908%" y="53" width="0.3093%" height="15" fill="rgb(210,199,37)" fg:x="4280" fg:w="77"/><text x="17.4838%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="17.5001%" y="53" width="0.0683%" height="15" fill="rgb(244,192,49)" fg:x="4357" fg:w="17"/><text x="17.7931%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="17.5684%" y="53" width="0.1968%" height="15" fill="rgb(226,211,11)" fg:x="4374" fg:w="49"/><text x="17.8614%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="17.7652%" y="53" width="0.1446%" height="15" fill="rgb(236,162,54)" fg:x="4423" fg:w="36"/><text x="18.0582%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="17.9098%" y="53" width="0.0683%" height="15" fill="rgb(220,229,9)" fg:x="4459" fg:w="17"/><text x="18.2028%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="17.9781%" y="53" width="0.1968%" height="15" fill="rgb(250,87,22)" fg:x="4476" fg:w="49"/><text x="18.2710%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="18.1749%" y="53" width="0.3093%" height="15" fill="rgb(239,43,17)" fg:x="4525" fg:w="77"/><text x="18.4678%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="18.4842%" y="53" width="0.0683%" height="15" fill="rgb(231,177,25)" fg:x="4602" fg:w="17"/><text x="18.7771%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="18.5524%" y="53" width="0.1968%" height="15" fill="rgb(219,179,1)" fg:x="4619" fg:w="49"/><text x="18.8454%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="18.7492%" y="53" width="0.1446%" height="15" fill="rgb(238,219,53)" fg:x="4668" fg:w="36"/><text x="19.0422%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="18.8938%" y="53" width="0.0683%" height="15" fill="rgb(232,167,36)" fg:x="4704" fg:w="17"/><text x="19.1868%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="18.9621%" y="53" width="0.1968%" height="15" fill="rgb(244,19,51)" fg:x="4721" fg:w="49"/><text x="19.2551%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="19.1589%" y="53" width="0.3093%" height="15" fill="rgb(224,6,22)" fg:x="4770" fg:w="77"/><text x="19.4519%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="19.4682%" y="53" width="0.0683%" height="15" fill="rgb(224,145,5)" fg:x="4847" fg:w="17"/><text x="19.7612%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="19.5365%" y="53" width="0.1968%" height="15" fill="rgb(234,130,49)" fg:x="4864" fg:w="49"/><text x="19.8295%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="19.7333%" y="53" width="0.1446%" height="15" fill="rgb(254,6,2)" fg:x="4913" fg:w="36"/><text x="20.0263%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="19.8779%" y="53" width="0.0683%" height="15" fill="rgb(208,96,46)" fg:x="4949" fg:w="17"/><text x="20.1709%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="19.9462%" y="53" width="0.1968%" height="15" fill="rgb(239,3,39)" fg:x="4966" fg:w="49"/><text x="20.2391%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="20.1430%" y="53" width="0.3093%" height="15" fill="rgb(233,210,1)" fg:x="5015" fg:w="77"/><text x="20.4360%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="20.4523%" y="53" width="0.0683%" height="15" fill="rgb(244,137,37)" fg:x="5092" fg:w="17"/><text x="20.7452%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="20.5205%" y="53" width="0.1968%" height="15" fill="rgb(240,136,2)" fg:x="5109" fg:w="49"/><text x="20.8135%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="20.7174%" y="53" width="0.1446%" height="15" fill="rgb(239,18,37)" fg:x="5158" fg:w="36"/><text x="21.0103%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="20.8620%" y="53" width="0.0683%" height="15" fill="rgb(218,185,22)" fg:x="5194" fg:w="17"/><text x="21.1549%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="20.9302%" y="53" width="0.1968%" height="15" fill="rgb(225,218,4)" fg:x="5211" fg:w="49"/><text x="21.2232%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="21.1270%" y="53" width="0.3093%" height="15" fill="rgb(230,182,32)" fg:x="5260" fg:w="77"/><text x="21.4200%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="21.4363%" y="53" width="0.0683%" height="15" fill="rgb(242,56,43)" fg:x="5337" fg:w="17"/><text x="21.7293%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="21.5046%" y="53" width="0.1968%" height="15" fill="rgb(233,99,24)" fg:x="5354" fg:w="49"/><text x="21.7976%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="21.7014%" y="53" width="0.1446%" height="15" fill="rgb(234,209,42)" fg:x="5403" fg:w="36"/><text x="21.9944%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="21.8460%" y="53" width="0.0683%" height="15" fill="rgb(227,7,12)" fg:x="5439" fg:w="17"/><text x="22.1390%" y="63.50"></text></g><g><title>next.1 (20 instructions, 0.08%)</title><rect x="21.9143%" y="53" width="0.0803%" height="15" fill="rgb(245,203,43)" fg:x="5456" fg:w="20"/><text x="22.2073%" y="63.50"></text></g><g><title>writeIter (2,150 instructions, 8.64%)</title><rect x="15.9417%" y="69" width="8.6356%" height="15" fill="rgb(238,205,33)" fg:x="3969" fg:w="2150"/><text x="16.2346%" y="79.50">writeIter</text></g><g><title>writeBlob (2,338 instructions, 9.39%)</title><rect x="15.3271%" y="85" width="9.3907%" height="15" fill="rgb(231,56,7)" fg:x="3816" fg:w="2338"/><text x="15.6201%" y="95.50">writeBlob</text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.07%)</title><rect x="24.7178%" y="85" width="0.0683%" height="15" fill="rgb(244,186,29)" fg:x="6154" fg:w="17"/><text x="25.0108%" y="95.50"></text></g><g><title>@blob_vals (28 instructions, 0.11%)</title><rect x="24.7861%" y="69" width="0.1125%" height="15" fill="rgb(234,111,31)" fg:x="6171" fg:w="28"/><text x="25.0791%" y="79.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::post_write_barrier::h56833a827c874225 (9 instructions, 0.04%)</title><rect x="24.8986%" y="53" width="0.0361%" height="15" fill="rgb(241,149,10)" fg:x="6199" fg:w="9"/><text x="25.1916%" y="63.50"></text></g><g><title>anon-func-75.3 (125 instructions, 0.50%)</title><rect x="24.8986%" y="69" width="0.5021%" height="15" fill="rgb(249,206,44)" fg:x="6199" fg:w="125"/><text x="25.1916%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="25.4007%" y="53" width="0.0683%" height="15" fill="rgb(251,153,30)" fg:x="6324" fg:w="17"/><text x="25.6936%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="25.4689%" y="53" width="0.1968%" height="15" fill="rgb(239,152,38)" fg:x="6341" fg:w="49"/><text x="25.7619%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="25.6657%" y="53" width="0.3093%" height="15" fill="rgb(249,139,47)" fg:x="6390" fg:w="77"/><text x="25.9587%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="25.9750%" y="53" width="0.0683%" height="15" fill="rgb(244,64,35)" fg:x="6467" fg:w="17"/><text x="26.2680%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="26.0433%" y="53" width="0.1968%" height="15" fill="rgb(216,46,15)" fg:x="6484" fg:w="49"/><text x="26.3363%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="26.2401%" y="53" width="0.1446%" height="15" fill="rgb(250,74,19)" fg:x="6533" fg:w="36"/><text x="26.5331%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="26.3847%" y="53" width="0.0683%" height="15" fill="rgb(249,42,33)" fg:x="6569" fg:w="17"/><text x="26.6777%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="26.4530%" y="53" width="0.1968%" height="15" fill="rgb(242,149,17)" fg:x="6586" fg:w="49"/><text x="26.7460%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="26.6498%" y="53" width="0.3093%" height="15" fill="rgb(244,29,21)" fg:x="6635" fg:w="77"/><text x="26.9428%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="26.9591%" y="53" width="0.0683%" height="15" fill="rgb(220,130,37)" fg:x="6712" fg:w="17"/><text x="27.2520%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="27.0274%" y="53" width="0.1968%" height="15" fill="rgb(211,67,2)" fg:x="6729" fg:w="49"/><text x="27.3203%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="27.2242%" y="53" width="0.1446%" height="15" fill="rgb(235,68,52)" fg:x="6778" fg:w="36"/><text x="27.5171%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="27.3688%" y="53" width="0.0683%" height="15" fill="rgb(246,142,3)" fg:x="6814" fg:w="17"/><text x="27.6617%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="27.4370%" y="53" width="0.1968%" height="15" fill="rgb(241,25,7)" fg:x="6831" fg:w="49"/><text x="27.7300%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="27.6339%" y="53" width="0.3093%" height="15" fill="rgb(242,119,39)" fg:x="6880" fg:w="77"/><text x="27.9268%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="27.9431%" y="53" width="0.0683%" height="15" fill="rgb(241,98,45)" fg:x="6957" fg:w="17"/><text x="28.2361%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="28.0114%" y="53" width="0.1968%" height="15" fill="rgb(254,28,30)" fg:x="6974" fg:w="49"/><text x="28.3044%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="28.2082%" y="53" width="0.1446%" height="15" fill="rgb(241,142,54)" fg:x="7023" fg:w="36"/><text x="28.5012%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="28.3528%" y="53" width="0.0683%" height="15" fill="rgb(222,85,15)" fg:x="7059" fg:w="17"/><text x="28.6458%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="28.4211%" y="53" width="0.1968%" height="15" fill="rgb(210,85,47)" fg:x="7076" fg:w="49"/><text x="28.7141%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="28.6179%" y="53" width="0.3093%" height="15" fill="rgb(224,206,25)" fg:x="7125" fg:w="77"/><text x="28.9109%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="28.9272%" y="53" width="0.0683%" height="15" fill="rgb(243,201,19)" fg:x="7202" fg:w="17"/><text x="29.2201%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="28.9955%" y="53" width="0.1968%" height="15" fill="rgb(236,59,4)" fg:x="7219" fg:w="49"/><text x="29.2884%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="29.1923%" y="53" width="0.1446%" height="15" fill="rgb(254,179,45)" fg:x="7268" fg:w="36"/><text x="29.4852%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="29.3369%" y="53" width="0.0683%" height="15" fill="rgb(226,14,10)" fg:x="7304" fg:w="17"/><text x="29.6298%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="29.4051%" y="53" width="0.1968%" height="15" fill="rgb(244,27,41)" fg:x="7321" fg:w="49"/><text x="29.6981%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="29.6020%" y="53" width="0.3093%" height="15" fill="rgb(235,35,32)" fg:x="7370" fg:w="77"/><text x="29.8949%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="29.9112%" y="53" width="0.0683%" height="15" fill="rgb(218,68,31)" fg:x="7447" fg:w="17"/><text x="30.2042%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="29.9795%" y="53" width="0.1968%" height="15" fill="rgb(207,120,37)" fg:x="7464" fg:w="49"/><text x="30.2725%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="30.1763%" y="53" width="0.1446%" height="15" fill="rgb(227,98,0)" fg:x="7513" fg:w="36"/><text x="30.4693%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="30.3209%" y="53" width="0.0683%" height="15" fill="rgb(207,7,3)" fg:x="7549" fg:w="17"/><text x="30.6139%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="30.3892%" y="53" width="0.1968%" height="15" fill="rgb(206,98,19)" fg:x="7566" fg:w="49"/><text x="30.6822%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="30.5860%" y="53" width="0.3093%" height="15" fill="rgb(217,5,26)" fg:x="7615" fg:w="77"/><text x="30.8790%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="30.8953%" y="53" width="0.0683%" height="15" fill="rgb(235,190,38)" fg:x="7692" fg:w="17"/><text x="31.1883%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="30.9636%" y="53" width="0.1968%" height="15" fill="rgb(247,86,24)" fg:x="7709" fg:w="49"/><text x="31.2565%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="31.1604%" y="53" width="0.1446%" height="15" fill="rgb(205,101,16)" fg:x="7758" fg:w="36"/><text x="31.4533%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="31.3050%" y="53" width="0.0683%" height="15" fill="rgb(246,168,33)" fg:x="7794" fg:w="17"/><text x="31.5979%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="31.3733%" y="53" width="0.1968%" height="15" fill="rgb(231,114,1)" fg:x="7811" fg:w="49"/><text x="31.6662%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="31.5701%" y="53" width="0.3093%" height="15" fill="rgb(207,184,53)" fg:x="7860" fg:w="77"/><text x="31.8630%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="31.8793%" y="53" width="0.0683%" height="15" fill="rgb(224,95,51)" fg:x="7937" fg:w="17"/><text x="32.1723%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="31.9476%" y="53" width="0.1968%" height="15" fill="rgb(212,188,45)" fg:x="7954" fg:w="49"/><text x="32.2406%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="32.1444%" y="53" width="0.1446%" height="15" fill="rgb(223,154,38)" fg:x="8003" fg:w="36"/><text x="32.4374%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="32.2890%" y="53" width="0.0683%" height="15" fill="rgb(251,22,52)" fg:x="8039" fg:w="17"/><text x="32.5820%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="32.3573%" y="53" width="0.1968%" height="15" fill="rgb(229,209,22)" fg:x="8056" fg:w="49"/><text x="32.6503%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="32.5541%" y="53" width="0.3093%" height="15" fill="rgb(234,138,34)" fg:x="8105" fg:w="77"/><text x="32.8471%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="32.8634%" y="53" width="0.0683%" height="15" fill="rgb(212,95,11)" fg:x="8182" fg:w="17"/><text x="33.1564%" y="63.50"></text></g><g><title>next.1 (49 instructions, 0.20%)</title><rect x="32.9317%" y="53" width="0.1968%" height="15" fill="rgb(240,179,47)" fg:x="8199" fg:w="49"/><text x="33.2246%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="33.1285%" y="53" width="0.1446%" height="15" fill="rgb(240,163,11)" fg:x="8248" fg:w="36"/><text x="33.4215%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="33.2731%" y="53" width="0.0683%" height="15" fill="rgb(236,37,12)" fg:x="8284" fg:w="17"/><text x="33.5661%" y="63.50"></text></g><g><title>next.1 (20 instructions, 0.08%)</title><rect x="33.3414%" y="53" width="0.0803%" height="15" fill="rgb(232,164,16)" fg:x="8301" fg:w="20"/><text x="33.6343%" y="63.50"></text></g><g><title>writeIter (2,840 instructions, 11.41%)</title><rect x="25.4007%" y="69" width="11.4070%" height="15" fill="rgb(244,205,15)" fg:x="6324" fg:w="2840"/><text x="25.6936%" y="79.50">writeIter</text></g><g><title>writeBlob (3,028 instructions, 12.16%)</title><rect x="24.7861%" y="85" width="12.1621%" height="15" fill="rgb(223,117,47)" fg:x="6171" fg:w="3028"/><text x="25.0791%" y="95.50">writeBlob</text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="36.9482%" y="85" width="0.0683%" height="15" fill="rgb(244,107,35)" fg:x="9199" fg:w="17"/><text x="37.2412%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_array::h817c463cc2b856af (60 instructions, 0.24%)</title><rect x="37.0165%" y="85" width="0.2410%" height="15" fill="rgb(205,140,8)" fg:x="9216" fg:w="60"/><text x="37.3095%" y="95.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="37.2575%" y="69" width="0.1366%" height="15" fill="rgb(228,84,46)" fg:x="9276" fg:w="34"/><text x="37.5505%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="37.3941%" y="69" width="0.0522%" height="15" fill="rgb(254,188,9)" fg:x="9310" fg:w="13"/><text x="37.6870%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="37.7395%" y="69" width="0.1366%" height="15" fill="rgb(206,112,54)" fg:x="9396" fg:w="34"/><text x="38.0325%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="37.8760%" y="69" width="0.0522%" height="15" fill="rgb(216,84,49)" fg:x="9430" fg:w="13"/><text x="38.1690%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="38.2215%" y="69" width="0.1366%" height="15" fill="rgb(214,194,35)" fg:x="9516" fg:w="34"/><text x="38.5144%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="38.3580%" y="69" width="0.0522%" height="15" fill="rgb(249,28,3)" fg:x="9550" fg:w="13"/><text x="38.6510%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="38.7035%" y="69" width="0.1366%" height="15" fill="rgb(222,56,52)" fg:x="9636" fg:w="34"/><text x="38.9964%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="38.8400%" y="69" width="0.0522%" height="15" fill="rgb(245,217,50)" fg:x="9670" fg:w="13"/><text x="39.1330%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="39.1854%" y="69" width="0.1366%" height="15" fill="rgb(213,201,24)" fg:x="9756" fg:w="34"/><text x="39.4784%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="39.3220%" y="69" width="0.0522%" height="15" fill="rgb(248,116,28)" fg:x="9790" fg:w="13"/><text x="39.6150%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="39.6674%" y="69" width="0.1366%" height="15" fill="rgb(219,72,43)" fg:x="9876" fg:w="34"/><text x="39.9604%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="39.8040%" y="69" width="0.0522%" height="15" fill="rgb(209,138,14)" fg:x="9910" fg:w="13"/><text x="40.0970%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="40.1494%" y="69" width="0.1366%" height="15" fill="rgb(222,18,33)" fg:x="9996" fg:w="34"/><text x="40.4424%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="40.2860%" y="69" width="0.0522%" height="15" fill="rgb(213,199,7)" fg:x="10030" fg:w="13"/><text x="40.5789%" y="79.50"></text></g><g><title>B_sub (34 instructions, 0.14%)</title><rect x="40.6314%" y="69" width="0.1366%" height="15" fill="rgb(250,110,10)" fg:x="10116" fg:w="34"/><text x="40.9244%" y="79.50"></text></g><g><title>mul&lt;Nat64&gt; (13 instructions, 0.05%)</title><rect x="40.7680%" y="69" width="0.0522%" height="15" fill="rgb(248,123,6)" fg:x="10150" fg:w="13"/><text x="41.0609%" y="79.50"></text></g><g><title>anon-func-9.27 (960 instructions, 3.86%)</title><rect x="37.2575%" y="85" width="3.8559%" height="15" fill="rgb(206,91,31)" fg:x="9276" fg:w="960"/><text x="37.5505%" y="95.50">ano..</text></g><g><title>anon-func-61.3 (95 instructions, 0.38%)</title><rect x="41.1134%" y="69" width="0.3816%" height="15" fill="rgb(211,154,13)" fg:x="10236" fg:w="95"/><text x="41.4064%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="41.4950%" y="53" width="0.0683%" height="15" fill="rgb(225,148,7)" fg:x="10331" fg:w="17"/><text x="41.7879%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="41.5632%" y="37" width="0.1084%" height="15" fill="rgb(220,160,43)" fg:x="10348" fg:w="27"/><text x="41.8562%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="41.5632%" y="53" width="0.3494%" height="15" fill="rgb(213,52,39)" fg:x="10348" fg:w="87"/><text x="41.8562%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="41.9127%" y="53" width="0.3093%" height="15" fill="rgb(243,137,7)" fg:x="10435" fg:w="77"/><text x="42.2056%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="42.2220%" y="53" width="0.0683%" height="15" fill="rgb(230,79,13)" fg:x="10512" fg:w="17"/><text x="42.5149%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="42.2902%" y="37" width="0.1084%" height="15" fill="rgb(247,105,23)" fg:x="10529" fg:w="27"/><text x="42.5832%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="42.2902%" y="53" width="0.3494%" height="15" fill="rgb(223,179,41)" fg:x="10529" fg:w="87"/><text x="42.5832%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="42.6397%" y="53" width="0.1446%" height="15" fill="rgb(218,9,34)" fg:x="10616" fg:w="36"/><text x="42.9326%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="42.7843%" y="53" width="0.0683%" height="15" fill="rgb(222,106,8)" fg:x="10652" fg:w="17"/><text x="43.0772%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="42.8526%" y="37" width="0.1084%" height="15" fill="rgb(211,220,0)" fg:x="10669" fg:w="27"/><text x="43.1455%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="42.8526%" y="53" width="0.3494%" height="15" fill="rgb(229,52,16)" fg:x="10669" fg:w="87"/><text x="43.1455%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="43.2020%" y="53" width="0.3093%" height="15" fill="rgb(212,155,18)" fg:x="10756" fg:w="77"/><text x="43.4950%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="43.5113%" y="53" width="0.0683%" height="15" fill="rgb(242,21,14)" fg:x="10833" fg:w="17"/><text x="43.8042%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="43.5795%" y="37" width="0.1084%" height="15" fill="rgb(222,19,48)" fg:x="10850" fg:w="27"/><text x="43.8725%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="43.5795%" y="53" width="0.3494%" height="15" fill="rgb(232,45,27)" fg:x="10850" fg:w="87"/><text x="43.8725%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="43.9290%" y="53" width="0.1446%" height="15" fill="rgb(249,103,42)" fg:x="10937" fg:w="36"/><text x="44.2220%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="44.0736%" y="53" width="0.0683%" height="15" fill="rgb(246,81,33)" fg:x="10973" fg:w="17"/><text x="44.3666%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="44.1419%" y="37" width="0.1084%" height="15" fill="rgb(252,33,42)" fg:x="10990" fg:w="27"/><text x="44.4348%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="44.1419%" y="53" width="0.3494%" height="15" fill="rgb(209,212,41)" fg:x="10990" fg:w="87"/><text x="44.4348%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="44.4913%" y="53" width="0.3093%" height="15" fill="rgb(207,154,6)" fg:x="11077" fg:w="77"/><text x="44.7843%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="44.8006%" y="53" width="0.0683%" height="15" fill="rgb(223,64,47)" fg:x="11154" fg:w="17"/><text x="45.0935%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="44.8689%" y="37" width="0.1084%" height="15" fill="rgb(211,161,38)" fg:x="11171" fg:w="27"/><text x="45.1618%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="44.8689%" y="53" width="0.3494%" height="15" fill="rgb(219,138,40)" fg:x="11171" fg:w="87"/><text x="45.1618%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="45.2183%" y="53" width="0.1446%" height="15" fill="rgb(241,228,46)" fg:x="11258" fg:w="36"/><text x="45.5113%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="45.3629%" y="53" width="0.0683%" height="15" fill="rgb(223,209,38)" fg:x="11294" fg:w="17"/><text x="45.6559%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="45.4312%" y="37" width="0.1084%" height="15" fill="rgb(236,164,45)" fg:x="11311" fg:w="27"/><text x="45.7241%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="45.4312%" y="53" width="0.3494%" height="15" fill="rgb(231,15,5)" fg:x="11311" fg:w="87"/><text x="45.7241%" y="63.50"></text></g><g><title>writeByte.1 (77 instructions, 0.31%)</title><rect x="45.7806%" y="53" width="0.3093%" height="15" fill="rgb(252,35,15)" fg:x="11398" fg:w="77"/><text x="46.0736%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="46.0899%" y="53" width="0.0683%" height="15" fill="rgb(248,181,18)" fg:x="11475" fg:w="17"/><text x="46.3829%" y="63.50"></text></g><g><title>B_add (27 instructions, 0.11%)</title><rect x="46.1582%" y="37" width="0.1084%" height="15" fill="rgb(233,39,42)" fg:x="11492" fg:w="27"/><text x="46.4511%" y="47.50"></text></g><g><title>next (87 instructions, 0.35%)</title><rect x="46.1582%" y="53" width="0.3494%" height="15" fill="rgb(238,110,33)" fg:x="11492" fg:w="87"/><text x="46.4511%" y="63.50"></text></g><g><title>writeByte.1 (36 instructions, 0.14%)</title><rect x="46.5076%" y="53" width="0.1446%" height="15" fill="rgb(233,195,10)" fg:x="11579" fg:w="36"/><text x="46.8006%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="46.6522%" y="53" width="0.0683%" height="15" fill="rgb(254,105,3)" fg:x="11615" fg:w="17"/><text x="46.9452%" y="63.50"></text></g><g><title>next (24 instructions, 0.10%)</title><rect x="46.7205%" y="53" width="0.0964%" height="15" fill="rgb(221,225,9)" fg:x="11632" fg:w="24"/><text x="47.0135%" y="63.50"></text></g><g><title>writeIter (1,768 instructions, 7.10%)</title><rect x="41.4950%" y="69" width="7.1013%" height="15" fill="rgb(224,227,45)" fg:x="10331" fg:w="1768"/><text x="41.7879%" y="79.50">writeIter</text></g><g><title>writeArray (1,918 instructions, 7.70%)</title><rect x="41.1134%" y="85" width="7.7037%" height="15" fill="rgb(229,198,43)" fg:x="10236" fg:w="1918"/><text x="41.4064%" y="95.50">writeArray</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="48.8171%" y="85" width="0.0683%" height="15" fill="rgb(206,209,35)" fg:x="12154" fg:w="17"/><text x="49.1101%" y="95.50"></text></g><g><title>process_block.1 (6,073 instructions, 24.39%)</title><rect x="48.8854%" y="53" width="24.3925%" height="15" fill="rgb(245,195,53)" fg:x="12171" fg:w="6073"/><text x="49.1784%" y="63.50">process_block.1</text></g><g><title>writePadding (6,762 instructions, 27.16%)</title><rect x="48.8854%" y="69" width="27.1599%" height="15" fill="rgb(240,92,26)" fg:x="12171" fg:w="6762"/><text x="49.1784%" y="79.50">writePadding</text></g><g><title>@eq&lt;v(sha224:u,sha256:u)&gt; (65 instructions, 0.26%)</title><rect x="76.0453%" y="69" width="0.2611%" height="15" fill="rgb(207,40,23)" fg:x="18933" fg:w="65"/><text x="76.3383%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.22%)</title><rect x="76.3064%" y="53" width="0.2249%" height="15" fill="rgb(223,111,35)" fg:x="18998" fg:w="56"/><text x="76.5994%" y="63.50"></text></g><g><title>Arr.toBlob (936 instructions, 3.76%)</title><rect x="76.3064%" y="69" width="3.7595%" height="15" fill="rgb(229,147,28)" fg:x="18998" fg:w="936"/><text x="76.5994%" y="79.50">Arr..</text></g><g><title>sum.1 (8,583 instructions, 34.47%)</title><rect x="48.8854%" y="85" width="34.4740%" height="15" fill="rgb(211,29,28)" fg:x="12171" fg:w="8583"/><text x="49.1784%" y="95.50">sum.1</text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.22%)</title><rect x="83.3594%" y="69" width="0.2249%" height="15" fill="rgb(228,72,33)" fg:x="20754" fg:w="56"/><text x="83.6524%" y="79.50"></text></g><g><title>memcpy (60 instructions, 0.24%)</title><rect x="83.5844%" y="69" width="0.2410%" height="15" fill="rgb(205,214,31)" fg:x="20810" fg:w="60"/><text x="83.8773%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.22%)</title><rect x="83.8254%" y="69" width="0.2249%" height="15" fill="rgb(224,111,15)" fg:x="20870" fg:w="56"/><text x="84.1183%" y="79.50"></text></g><g><title>leb128_encode (11 instructions, 0.04%)</title><rect x="84.0503%" y="69" width="0.0442%" height="15" fill="rgb(253,21,26)" fg:x="20926" fg:w="11"/><text x="84.3433%" y="79.50"></text></g><g><title>memcpy (194 instructions, 0.78%)</title><rect x="84.0945%" y="69" width="0.7792%" height="15" fill="rgb(245,139,43)" fg:x="20937" fg:w="194"/><text x="84.3874%" y="79.50"></text></g><g><title>$lambda.14 (1,595 instructions, 6.41%)</title><rect x="83.3594%" y="85" width="6.4064%" height="15" fill="rgb(252,170,7)" fg:x="20754" fg:w="1595"/><text x="83.6524%" y="95.50">$lambda..</text></g><g><title>$lambda.2 (21,778 instructions, 87.47%)</title><rect x="4.2535%" y="101" width="87.4724%" height="15" fill="rgb(231,118,14)" fg:x="1059" fg:w="21778"/><text x="4.5465%" y="111.50">$lambda.2</text></g><g><title>schedule_copying_gc (108 instructions, 0.43%)</title><rect x="91.7259%" y="101" width="0.4338%" height="15" fill="rgb(238,83,0)" fg:x="22837" fg:w="108"/><text x="92.0189%" y="111.50"></text></g><g><title>trans_state4 (16 instructions, 0.06%)</title><rect x="92.1597%" y="101" width="0.0643%" height="15" fill="rgb(221,39,39)" fg:x="22945" fg:w="16"/><text x="92.4527%" y="111.50"></text></g><g><title>all (24,897 instructions, 100%)</title><rect x="0.0000%" y="133" width="100.0000%" height="15" fill="rgb(222,119,46)" fg:x="0" fg:w="24897"/><text x="0.2930%" y="143.50"></text></g><g><title>principalToNeuron (24,897 instructions, 100.00%)</title><rect x="0.0000%" y="117" width="100.0000%" height="15" fill="rgb(222,165,49)" fg:x="0" fg:w="24897"/><text x="0.2930%" y="127.50">principalToNeuron</text></g></svg></svg>