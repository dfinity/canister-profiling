<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">NFT.transferFromDip721</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="71233"><g><title>ic_cdk::setup (24 instructions, 0.03%)</title><rect x="0.0000%" y="213" width="0.0337%" height="15" fill="rgb(218,226,17)" fg:x="0" fg:w="24"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="0.0337%" y="213" width="0.1151%" height="15" fill="rgb(248,89,38)" fg:x="24" fg:w="82"/><text x="0.3267%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="0.1488%" y="213" width="0.1151%" height="15" fill="rgb(237,73,46)" fg:x="106" fg:w="82"/><text x="0.4418%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="0.2639%" y="181" width="0.1151%" height="15" fill="rgb(242,78,33)" fg:x="188" fg:w="82"/><text x="0.5569%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="0.3790%" y="165" width="0.1151%" height="15" fill="rgb(235,60,3)" fg:x="270" fg:w="82"/><text x="0.6720%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.62%)</title><rect x="0.4942%" y="165" width="0.6219%" height="15" fill="rgb(216,172,19)" fg:x="352" fg:w="443"/><text x="0.7871%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.13%)</title><rect x="1.1161%" y="165" width="0.1334%" height="15" fill="rgb(227,6,42)" fg:x="795" fg:w="95"/><text x="1.4090%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="1.2494%" y="165" width="0.0842%" height="15" fill="rgb(223,207,42)" fg:x="890" fg:w="60"/><text x="1.5424%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="1.3337%" y="165" width="0.0842%" height="15" fill="rgb(246,138,30)" fg:x="950" fg:w="60"/><text x="1.6266%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="1.4179%" y="165" width="0.0842%" height="15" fill="rgb(251,199,47)" fg:x="1010" fg:w="60"/><text x="1.7109%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="1.5021%" y="165" width="0.0842%" height="15" fill="rgb(228,218,44)" fg:x="1070" fg:w="60"/><text x="1.7951%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="1.5863%" y="165" width="0.1151%" height="15" fill="rgb(220,68,6)" fg:x="1130" fg:w="82"/><text x="1.8793%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="1.7015%" y="165" width="0.0983%" height="15" fill="rgb(240,60,26)" fg:x="1212" fg:w="70"/><text x="1.9944%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.62%)</title><rect x="1.7997%" y="165" width="0.6219%" height="15" fill="rgb(211,200,19)" fg:x="1282" fg:w="443"/><text x="2.0927%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="2.4216%" y="165" width="0.0267%" height="15" fill="rgb(242,145,30)" fg:x="1725" fg:w="19"/><text x="2.7146%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="2.4483%" y="149" width="0.1151%" height="15" fill="rgb(225,64,13)" fg:x="1744" fg:w="82"/><text x="2.7413%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.09%)</title><rect x="2.5634%" y="117" width="0.0941%" height="15" fill="rgb(218,103,35)" fg:x="1826" fg:w="67"/><text x="2.8564%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (96 instructions, 0.13%)</title><rect x="2.5634%" y="133" width="0.1348%" height="15" fill="rgb(216,93,46)" fg:x="1826" fg:w="96"/><text x="2.8564%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="2.6982%" y="85" width="0.0154%" height="15" fill="rgb(225,159,27)" fg:x="1922" fg:w="11"/><text x="2.9912%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.07%)</title><rect x="2.7136%" y="69" width="0.0716%" height="15" fill="rgb(225,204,11)" fg:x="1933" fg:w="51"/><text x="3.0066%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (80 instructions, 0.11%)</title><rect x="2.7136%" y="85" width="0.1123%" height="15" fill="rgb(205,56,4)" fg:x="1933" fg:w="80"/><text x="3.0066%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.22%)</title><rect x="2.6982%" y="101" width="0.2246%" height="15" fill="rgb(206,6,35)" fg:x="1922" fg:w="160"/><text x="2.9912%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (230 instructions, 0.32%)</title><rect x="2.6982%" y="117" width="0.3229%" height="15" fill="rgb(247,73,52)" fg:x="1922" fg:w="230"/><text x="2.9912%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (240 instructions, 0.34%)</title><rect x="2.6982%" y="133" width="0.3369%" height="15" fill="rgb(246,97,4)" fg:x="1922" fg:w="240"/><text x="2.9912%" y="143.50"></text></g><g><title>core::fmt::write (478 instructions, 0.67%)</title><rect x="2.5634%" y="149" width="0.6710%" height="15" fill="rgb(212,37,15)" fg:x="1826" fg:w="478"/><text x="2.8564%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (698 instructions, 0.98%)</title><rect x="2.4483%" y="165" width="0.9799%" height="15" fill="rgb(208,130,40)" fg:x="1744" fg:w="698"/><text x="2.7413%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.13%)</title><rect x="3.4282%" y="165" width="0.1334%" height="15" fill="rgb(236,55,29)" fg:x="2442" fg:w="95"/><text x="3.7212%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.08%)</title><rect x="3.5616%" y="165" width="0.0842%" height="15" fill="rgb(209,156,45)" fg:x="2537" fg:w="60"/><text x="3.8545%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="3.6458%" y="165" width="0.1067%" height="15" fill="rgb(249,107,4)" fg:x="2597" fg:w="76"/><text x="3.9388%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="3.7525%" y="165" width="0.0983%" height="15" fill="rgb(227,7,13)" fg:x="2673" fg:w="70"/><text x="4.0454%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.62%)</title><rect x="3.8507%" y="149" width="0.6219%" height="15" fill="rgb(250,129,14)" fg:x="2743" fg:w="443"/><text x="4.1437%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="4.4726%" y="149" width="0.0267%" height="15" fill="rgb(229,92,13)" fg:x="3186" fg:w="19"/><text x="4.7656%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="4.4993%" y="133" width="0.1151%" height="15" fill="rgb(245,98,39)" fg:x="3205" fg:w="82"/><text x="4.7923%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.09%)</title><rect x="4.6144%" y="101" width="0.0941%" height="15" fill="rgb(234,135,48)" fg:x="3287" fg:w="67"/><text x="4.9074%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (96 instructions, 0.13%)</title><rect x="4.6144%" y="117" width="0.1348%" height="15" fill="rgb(230,98,28)" fg:x="3287" fg:w="96"/><text x="4.9074%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="4.7492%" y="69" width="0.0154%" height="15" fill="rgb(223,121,0)" fg:x="3383" fg:w="11"/><text x="5.0422%" y="79.50"></text></g><g><title>memcpy (51 instructions, 0.07%)</title><rect x="4.7646%" y="53" width="0.0716%" height="15" fill="rgb(234,173,33)" fg:x="3394" fg:w="51"/><text x="5.0576%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (80 instructions, 0.11%)</title><rect x="4.7646%" y="69" width="0.1123%" height="15" fill="rgb(245,47,8)" fg:x="3394" fg:w="80"/><text x="5.0576%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.22%)</title><rect x="4.7492%" y="85" width="0.2246%" height="15" fill="rgb(205,17,20)" fg:x="3383" fg:w="160"/><text x="5.0422%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (230 instructions, 0.32%)</title><rect x="4.7492%" y="101" width="0.3229%" height="15" fill="rgb(232,151,16)" fg:x="3383" fg:w="230"/><text x="5.0422%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (240 instructions, 0.34%)</title><rect x="4.7492%" y="117" width="0.3369%" height="15" fill="rgb(208,30,32)" fg:x="3383" fg:w="240"/><text x="5.0422%" y="127.50"></text></g><g><title>core::fmt::write (478 instructions, 0.67%)</title><rect x="4.6144%" y="133" width="0.6710%" height="15" fill="rgb(254,26,3)" fg:x="3287" fg:w="478"/><text x="4.9074%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (698 instructions, 0.98%)</title><rect x="4.4993%" y="149" width="0.9799%" height="15" fill="rgb(240,177,30)" fg:x="3205" fg:w="698"/><text x="4.7923%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.13%)</title><rect x="5.4792%" y="149" width="0.1334%" height="15" fill="rgb(248,76,44)" fg:x="3903" fg:w="95"/><text x="5.7722%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.08%)</title><rect x="5.6126%" y="149" width="0.0842%" height="15" fill="rgb(241,186,54)" fg:x="3998" fg:w="60"/><text x="5.9055%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="5.6968%" y="133" width="0.1151%" height="15" fill="rgb(249,171,29)" fg:x="4058" fg:w="82"/><text x="5.9898%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.13%)</title><rect x="5.8119%" y="133" width="0.1334%" height="15" fill="rgb(237,151,44)" fg:x="4140" fg:w="95"/><text x="6.1049%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="5.9453%" y="133" width="0.1067%" height="15" fill="rgb(228,174,30)" fg:x="4235" fg:w="76"/><text x="6.2382%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (335 instructions, 0.47%)</title><rect x="5.6968%" y="149" width="0.4703%" height="15" fill="rgb(252,14,37)" fg:x="4058" fg:w="335"/><text x="5.9898%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="6.1671%" y="149" width="0.1165%" height="15" fill="rgb(207,111,40)" fg:x="4393" fg:w="83"/><text x="6.4601%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="6.2836%" y="133" width="0.1151%" height="15" fill="rgb(248,171,54)" fg:x="4476" fg:w="82"/><text x="6.5766%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.13%)</title><rect x="6.3987%" y="133" width="0.1334%" height="15" fill="rgb(211,127,2)" fg:x="4558" fg:w="95"/><text x="6.6917%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="6.5321%" y="133" width="0.1067%" height="15" fill="rgb(236,87,47)" fg:x="4653" fg:w="76"/><text x="6.8251%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="6.7539%" y="133" width="0.1151%" height="15" fill="rgb(223,190,45)" fg:x="4811" fg:w="82"/><text x="7.0469%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.13%)</title><rect x="6.8690%" y="133" width="0.1334%" height="15" fill="rgb(215,5,16)" fg:x="4893" fg:w="95"/><text x="7.1620%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.0024%" y="133" width="0.1067%" height="15" fill="rgb(252,82,33)" fg:x="4988" fg:w="76"/><text x="7.2953%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (665 instructions, 0.93%)</title><rect x="6.2836%" y="149" width="0.9336%" height="15" fill="rgb(247,213,44)" fg:x="4476" fg:w="665"/><text x="6.5766%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,744 instructions, 3.85%)</title><rect x="3.8507%" y="165" width="3.8521%" height="15" fill="rgb(205,196,44)" fg:x="2743" fg:w="2744"/><text x="4.1437%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.7029%" y="165" width="0.1067%" height="15" fill="rgb(237,96,54)" fg:x="5487" fg:w="76"/><text x="7.9959%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="7.8096%" y="165" width="0.0211%" height="15" fill="rgb(230,113,34)" fg:x="5563" fg:w="15"/><text x="8.1026%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="7.8306%" y="165" width="0.0211%" height="15" fill="rgb(221,224,12)" fg:x="5578" fg:w="15"/><text x="8.1236%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="7.8517%" y="165" width="0.0211%" height="15" fill="rgb(219,112,44)" fg:x="5593" fg:w="15"/><text x="8.1447%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="7.8812%" y="149" width="0.1165%" height="15" fill="rgb(210,31,13)" fg:x="5614" fg:w="83"/><text x="8.1741%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.25%)</title><rect x="7.8812%" y="165" width="0.2513%" height="15" fill="rgb(230,25,16)" fg:x="5614" fg:w="179"/><text x="8.1741%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="8.1325%" y="133" width="0.1151%" height="15" fill="rgb(246,108,53)" fg:x="5793" fg:w="82"/><text x="8.4254%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.18%)</title><rect x="8.1325%" y="149" width="0.1825%" height="15" fill="rgb(241,172,50)" fg:x="5793" fg:w="130"/><text x="8.4254%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (215 instructions, 0.30%)</title><rect x="8.1325%" y="165" width="0.3018%" height="15" fill="rgb(235,141,10)" fg:x="5793" fg:w="215"/><text x="8.4254%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="8.4343%" y="149" width="0.1151%" height="15" fill="rgb(220,174,43)" fg:x="6008" fg:w="82"/><text x="8.7273%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="8.6842%" y="149" width="0.1151%" height="15" fill="rgb(215,181,40)" fg:x="6186" fg:w="82"/><text x="8.9771%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (356 instructions, 0.50%)</title><rect x="8.4343%" y="165" width="0.4998%" height="15" fill="rgb(230,97,2)" fg:x="6008" fg:w="356"/><text x="8.7273%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="8.9341%" y="165" width="0.1151%" height="15" fill="rgb(211,25,27)" fg:x="6364" fg:w="82"/><text x="9.2270%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="9.0492%" y="165" width="0.1249%" height="15" fill="rgb(230,87,26)" fg:x="6446" fg:w="89"/><text x="9.3421%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="9.1741%" y="165" width="0.1151%" height="15" fill="rgb(227,160,17)" fg:x="6535" fg:w="82"/><text x="9.4671%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="9.2892%" y="165" width="0.1151%" height="15" fill="rgb(244,85,34)" fg:x="6617" fg:w="82"/><text x="9.5822%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="9.4100%" y="165" width="0.1249%" height="15" fill="rgb(207,70,0)" fg:x="6703" fg:w="89"/><text x="9.7029%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.55%)</title><rect x="9.5349%" y="165" width="0.5503%" height="15" fill="rgb(223,129,7)" fg:x="6792" fg:w="392"/><text x="9.8279%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.55%)</title><rect x="10.0852%" y="165" width="0.5503%" height="15" fill="rgb(246,105,7)" fg:x="7184" fg:w="392"/><text x="10.3782%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.71%)</title><rect x="10.6355%" y="165" width="0.7075%" height="15" fill="rgb(215,154,42)" fg:x="7576" fg:w="504"/><text x="10.9285%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (9,190 instructions, 12.90%)</title><rect x="0.3790%" y="181" width="12.9013%" height="15" fill="rgb(220,215,30)" fg:x="270" fg:w="9190"/><text x="0.6720%" y="191.50">candid::de::IDLD..</text></g><g><title>memcpy (344 instructions, 0.48%)</title><rect x="13.2804%" y="181" width="0.4829%" height="15" fill="rgb(228,81,51)" fg:x="9460" fg:w="344"/><text x="13.5733%" y="191.50"></text></g><g><title>candid::types::internal::find_type (151 instructions, 0.21%)</title><rect x="13.7633%" y="165" width="0.2120%" height="15" fill="rgb(247,71,54)" fg:x="9804" fg:w="151"/><text x="14.0563%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="13.9753%" y="165" width="0.1151%" height="15" fill="rgb(234,176,34)" fg:x="9955" fg:w="82"/><text x="14.2682%" y="175.50"></text></g><g><title>memmove (220 instructions, 0.31%)</title><rect x="14.0904%" y="149" width="0.3088%" height="15" fill="rgb(241,103,54)" fg:x="10037" fg:w="220"/><text x="14.3833%" y="159.50"></text></g><g><title>memmove (220 instructions, 0.31%)</title><rect x="14.3992%" y="149" width="0.3088%" height="15" fill="rgb(228,22,34)" fg:x="10257" fg:w="220"/><text x="14.6922%" y="159.50"></text></g><g><title>candid::types::internal::env_add (710 instructions, 1.00%)</title><rect x="14.0904%" y="165" width="0.9967%" height="15" fill="rgb(241,179,48)" fg:x="10037" fg:w="710"/><text x="14.3833%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="15.0871%" y="165" width="0.1151%" height="15" fill="rgb(235,167,37)" fg:x="10747" fg:w="82"/><text x="15.3801%" y="175.50"></text></g><g><title>memcmp (537 instructions, 0.75%)</title><rect x="15.2022%" y="149" width="0.7539%" height="15" fill="rgb(213,109,30)" fg:x="10829" fg:w="537"/><text x="15.4952%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="15.9561%" y="133" width="0.1249%" height="15" fill="rgb(222,172,16)" fg:x="11366" fg:w="89"/><text x="16.2491%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.19%)</title><rect x="15.9561%" y="149" width="0.1867%" height="15" fill="rgb(233,192,5)" fg:x="11366" fg:w="133"/><text x="16.2491%" y="159.50"></text></g><g><title>candid::types::internal::env_add (920 instructions, 1.29%)</title><rect x="15.2022%" y="165" width="1.2915%" height="15" fill="rgb(247,189,41)" fg:x="10829" fg:w="920"/><text x="15.4952%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="16.4938%" y="149" width="0.0618%" height="15" fill="rgb(218,134,47)" fg:x="11749" fg:w="44"/><text x="16.7867%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="16.5555%" y="149" width="0.0618%" height="15" fill="rgb(216,29,3)" fg:x="11793" fg:w="44"/><text x="16.8485%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="16.6173%" y="149" width="0.0618%" height="15" fill="rgb(246,140,12)" fg:x="11837" fg:w="44"/><text x="16.9103%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="16.6791%" y="149" width="0.0618%" height="15" fill="rgb(230,136,11)" fg:x="11881" fg:w="44"/><text x="16.9720%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="16.7408%" y="149" width="0.0618%" height="15" fill="rgb(247,22,47)" fg:x="11925" fg:w="44"/><text x="17.0338%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="16.8026%" y="149" width="0.0618%" height="15" fill="rgb(218,84,22)" fg:x="11969" fg:w="44"/><text x="17.0956%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="16.8644%" y="149" width="0.0618%" height="15" fill="rgb(216,87,39)" fg:x="12013" fg:w="44"/><text x="17.1573%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="16.9261%" y="149" width="0.0618%" height="15" fill="rgb(221,178,8)" fg:x="12057" fg:w="44"/><text x="17.2191%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (51 instructions, 0.07%)</title><rect x="16.9879%" y="149" width="0.0716%" height="15" fill="rgb(230,42,11)" fg:x="12101" fg:w="51"/><text x="17.2809%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="17.0595%" y="149" width="0.0182%" height="15" fill="rgb(237,229,4)" fg:x="12152" fg:w="13"/><text x="17.3525%" y="159.50"></text></g><g><title>candid::types::internal::env_id (853 instructions, 1.20%)</title><rect x="16.4938%" y="165" width="1.1975%" height="15" fill="rgb(222,31,33)" fg:x="11749" fg:w="853"/><text x="16.7867%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (2,927 instructions, 4.11%)</title><rect x="13.7633%" y="181" width="4.1091%" height="15" fill="rgb(210,17,39)" fg:x="9804" fg:w="2927"/><text x="14.0563%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.07%)</title><rect x="17.8723%" y="165" width="0.0688%" height="15" fill="rgb(244,93,20)" fg:x="12731" fg:w="49"/><text x="18.1653%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.12%)</title><rect x="17.9411%" y="149" width="0.1165%" height="15" fill="rgb(210,40,47)" fg:x="12780" fg:w="83"/><text x="18.2341%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.03%)</title><rect x="18.1194%" y="133" width="0.0323%" height="15" fill="rgb(239,211,47)" fg:x="12907" fg:w="23"/><text x="18.4124%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.19%)</title><rect x="18.1194%" y="149" width="0.1937%" height="15" fill="rgb(251,223,49)" fg:x="12907" fg:w="138"/><text x="18.4124%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (309 instructions, 0.43%)</title><rect x="17.9411%" y="165" width="0.4338%" height="15" fill="rgb(221,149,5)" fg:x="12780" fg:w="309"/><text x="18.2341%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.05%)</title><rect x="18.3749%" y="149" width="0.0491%" height="15" fill="rgb(219,224,51)" fg:x="13089" fg:w="35"/><text x="18.6679%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.05%)</title><rect x="18.4240%" y="149" width="0.0491%" height="15" fill="rgb(223,7,8)" fg:x="13124" fg:w="35"/><text x="18.7170%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="18.4732%" y="149" width="0.0477%" height="15" fill="rgb(241,217,22)" fg:x="13159" fg:w="34"/><text x="18.7661%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="18.5209%" y="149" width="0.0477%" height="15" fill="rgb(248,209,0)" fg:x="13193" fg:w="34"/><text x="18.8139%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="18.5686%" y="149" width="0.1151%" height="15" fill="rgb(217,205,4)" fg:x="13227" fg:w="82"/><text x="18.8616%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="18.6838%" y="133" width="0.1151%" height="15" fill="rgb(228,124,39)" fg:x="13309" fg:w="82"/><text x="18.9767%" y="143.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.13%)</title><rect x="18.7989%" y="117" width="0.1292%" height="15" fill="rgb(250,116,42)" fg:x="13391" fg:w="92"/><text x="19.0918%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (174 instructions, 0.24%)</title><rect x="18.7989%" y="133" width="0.2443%" height="15" fill="rgb(223,202,9)" fg:x="13391" fg:w="174"/><text x="19.0918%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="19.0431%" y="133" width="0.0983%" height="15" fill="rgb(242,222,40)" fg:x="13565" fg:w="70"/><text x="19.3361%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.62%)</title><rect x="19.1414%" y="133" width="0.6219%" height="15" fill="rgb(229,99,46)" fg:x="13635" fg:w="443"/><text x="19.4344%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="19.7633%" y="117" width="0.1151%" height="15" fill="rgb(225,56,46)" fg:x="14078" fg:w="82"/><text x="20.0563%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.09%)</title><rect x="19.8784%" y="85" width="0.0941%" height="15" fill="rgb(227,94,5)" fg:x="14160" fg:w="67"/><text x="20.1714%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (96 instructions, 0.13%)</title><rect x="19.8784%" y="101" width="0.1348%" height="15" fill="rgb(205,112,38)" fg:x="14160" fg:w="96"/><text x="20.1714%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="20.0132%" y="53" width="0.0154%" height="15" fill="rgb(231,133,46)" fg:x="14256" fg:w="11"/><text x="20.3062%" y="63.50"></text></g><g><title>memcpy (51 instructions, 0.07%)</title><rect x="20.0286%" y="37" width="0.0716%" height="15" fill="rgb(217,16,9)" fg:x="14267" fg:w="51"/><text x="20.3216%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (80 instructions, 0.11%)</title><rect x="20.0286%" y="53" width="0.1123%" height="15" fill="rgb(249,173,9)" fg:x="14267" fg:w="80"/><text x="20.3216%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.22%)</title><rect x="20.0132%" y="69" width="0.2246%" height="15" fill="rgb(205,163,53)" fg:x="14256" fg:w="160"/><text x="20.3062%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (230 instructions, 0.32%)</title><rect x="20.0132%" y="85" width="0.3229%" height="15" fill="rgb(217,54,41)" fg:x="14256" fg:w="230"/><text x="20.3062%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (240 instructions, 0.34%)</title><rect x="20.0132%" y="101" width="0.3369%" height="15" fill="rgb(228,216,12)" fg:x="14256" fg:w="240"/><text x="20.3062%" y="111.50"></text></g><g><title>core::fmt::write (478 instructions, 0.67%)</title><rect x="19.8784%" y="117" width="0.6710%" height="15" fill="rgb(244,228,15)" fg:x="14160" fg:w="478"/><text x="20.1714%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (698 instructions, 0.98%)</title><rect x="19.7633%" y="133" width="0.9799%" height="15" fill="rgb(221,176,53)" fg:x="14078" fg:w="698"/><text x="20.0563%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.13%)</title><rect x="20.7432%" y="133" width="0.1334%" height="15" fill="rgb(205,94,34)" fg:x="14776" fg:w="95"/><text x="21.0362%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.08%)</title><rect x="20.8766%" y="133" width="0.0842%" height="15" fill="rgb(213,110,48)" fg:x="14871" fg:w="60"/><text x="21.1695%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="20.9608%" y="117" width="0.0842%" height="15" fill="rgb(236,142,28)" fg:x="14931" fg:w="60"/><text x="21.2538%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 instructions, 0.17%)</title><rect x="20.9608%" y="133" width="0.1699%" height="15" fill="rgb(225,135,29)" fg:x="14931" fg:w="121"/><text x="21.2538%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="21.1307%" y="133" width="0.1151%" height="15" fill="rgb(252,45,31)" fg:x="15052" fg:w="82"/><text x="21.4236%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="21.2458%" y="117" width="0.0842%" height="15" fill="rgb(211,187,50)" fg:x="15134" fg:w="60"/><text x="21.5387%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="21.4156%" y="117" width="0.0842%" height="15" fill="rgb(229,109,7)" fg:x="15255" fg:w="60"/><text x="21.7086%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="21.5855%" y="117" width="0.0842%" height="15" fill="rgb(251,131,51)" fg:x="15376" fg:w="60"/><text x="21.8785%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="21.7554%" y="117" width="0.0842%" height="15" fill="rgb(251,180,35)" fg:x="15497" fg:w="60"/><text x="22.0483%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="21.9252%" y="117" width="0.0842%" height="15" fill="rgb(211,46,32)" fg:x="15618" fg:w="60"/><text x="22.2182%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="22.0951%" y="117" width="0.0842%" height="15" fill="rgb(248,123,17)" fg:x="15739" fg:w="60"/><text x="22.3881%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="22.2650%" y="117" width="0.0842%" height="15" fill="rgb(227,141,18)" fg:x="15860" fg:w="60"/><text x="22.5579%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="22.4348%" y="117" width="0.0842%" height="15" fill="rgb(216,102,9)" fg:x="15981" fg:w="60"/><text x="22.7278%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (968 instructions, 1.36%)</title><rect x="21.2458%" y="133" width="1.3589%" height="15" fill="rgb(253,47,13)" fg:x="15134" fg:w="968"/><text x="21.5387%" y="143.50"></text></g><g><title>__rust_realloc (118 instructions, 0.17%)</title><rect x="22.6047%" y="101" width="0.1657%" height="15" fill="rgb(226,93,23)" fg:x="16102" fg:w="118"/><text x="22.8977%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.23%)</title><rect x="22.6047%" y="117" width="0.2330%" height="15" fill="rgb(247,104,17)" fg:x="16102" fg:w="166"/><text x="22.8977%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (253 instructions, 0.36%)</title><rect x="22.6047%" y="133" width="0.3552%" height="15" fill="rgb(233,203,26)" fg:x="16102" fg:w="253"/><text x="22.8977%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="22.9599%" y="117" width="0.0842%" height="15" fill="rgb(244,98,49)" fg:x="16355" fg:w="60"/><text x="23.2528%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="23.1297%" y="117" width="0.0842%" height="15" fill="rgb(235,134,22)" fg:x="16476" fg:w="60"/><text x="23.4227%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="23.2996%" y="117" width="0.0842%" height="15" fill="rgb(221,70,32)" fg:x="16597" fg:w="60"/><text x="23.5926%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="23.4695%" y="117" width="0.0842%" height="15" fill="rgb(238,15,50)" fg:x="16718" fg:w="60"/><text x="23.7624%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="23.6393%" y="117" width="0.0842%" height="15" fill="rgb(215,221,48)" fg:x="16839" fg:w="60"/><text x="23.9323%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="23.8092%" y="117" width="0.0842%" height="15" fill="rgb(236,73,3)" fg:x="16960" fg:w="60"/><text x="24.1022%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="23.9791%" y="117" width="0.0842%" height="15" fill="rgb(250,107,11)" fg:x="17081" fg:w="60"/><text x="24.2720%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="24.1489%" y="117" width="0.0842%" height="15" fill="rgb(242,39,14)" fg:x="17202" fg:w="60"/><text x="24.4419%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (968 instructions, 1.36%)</title><rect x="22.9599%" y="133" width="1.3589%" height="15" fill="rgb(248,164,37)" fg:x="16355" fg:w="968"/><text x="23.2528%" y="143.50"></text></g><g><title>__rust_realloc (118 instructions, 0.17%)</title><rect x="24.3188%" y="101" width="0.1657%" height="15" fill="rgb(217,60,12)" fg:x="17323" fg:w="118"/><text x="24.6118%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.23%)</title><rect x="24.3188%" y="117" width="0.2330%" height="15" fill="rgb(240,125,29)" fg:x="17323" fg:w="166"/><text x="24.6118%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (253 instructions, 0.36%)</title><rect x="24.3188%" y="133" width="0.3552%" height="15" fill="rgb(208,207,28)" fg:x="17323" fg:w="253"/><text x="24.6118%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="24.6740%" y="117" width="0.0842%" height="15" fill="rgb(209,159,27)" fg:x="17576" fg:w="60"/><text x="24.9669%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="24.8438%" y="117" width="0.0842%" height="15" fill="rgb(251,176,53)" fg:x="17697" fg:w="60"/><text x="25.1368%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="25.0137%" y="117" width="0.0842%" height="15" fill="rgb(211,85,7)" fg:x="17818" fg:w="60"/><text x="25.3067%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="25.1836%" y="117" width="0.0842%" height="15" fill="rgb(216,64,54)" fg:x="17939" fg:w="60"/><text x="25.4765%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="25.3534%" y="117" width="0.0842%" height="15" fill="rgb(217,54,24)" fg:x="18060" fg:w="60"/><text x="25.6464%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="25.5233%" y="117" width="0.0842%" height="15" fill="rgb(208,206,53)" fg:x="18181" fg:w="60"/><text x="25.8163%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="25.6931%" y="117" width="0.0842%" height="15" fill="rgb(251,74,39)" fg:x="18302" fg:w="60"/><text x="25.9861%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="25.8630%" y="117" width="0.0842%" height="15" fill="rgb(226,47,5)" fg:x="18423" fg:w="60"/><text x="26.1560%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="26.0329%" y="117" width="0.0842%" height="15" fill="rgb(234,111,33)" fg:x="18544" fg:w="60"/><text x="26.3258%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="26.2027%" y="117" width="0.0842%" height="15" fill="rgb(251,14,10)" fg:x="18665" fg:w="60"/><text x="26.4957%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="26.3726%" y="117" width="0.0842%" height="15" fill="rgb(232,43,0)" fg:x="18786" fg:w="60"/><text x="26.6656%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="26.5425%" y="117" width="0.0842%" height="15" fill="rgb(222,68,43)" fg:x="18907" fg:w="60"/><text x="26.8354%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,452 instructions, 2.04%)</title><rect x="24.6740%" y="133" width="2.0384%" height="15" fill="rgb(217,24,23)" fg:x="17576" fg:w="1452"/><text x="24.9669%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 instructions, 0.04%)</title><rect x="26.7123%" y="133" width="0.0435%" height="15" fill="rgb(229,209,14)" fg:x="19028" fg:w="31"/><text x="27.0053%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="26.7559%" y="133" width="0.1067%" height="15" fill="rgb(250,149,48)" fg:x="19059" fg:w="76"/><text x="27.0488%" y="143.50"></text></g><g><title>binread::BinRead::read (7,325 instructions, 10.28%)</title><rect x="18.6838%" y="149" width="10.2832%" height="15" fill="rgb(210,120,37)" fg:x="13309" fg:w="7325"/><text x="18.9767%" y="159.50">binread::Bin..</text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.05%)</title><rect x="28.9669%" y="149" width="0.0463%" height="15" fill="rgb(210,21,8)" fg:x="20634" fg:w="33"/><text x="29.2599%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="29.0132%" y="101" width="0.1151%" height="15" fill="rgb(243,145,7)" fg:x="20667" fg:w="82"/><text x="29.3062%" y="111.50"></text></g><g><title>memcpy (136 instructions, 0.19%)</title><rect x="29.1284%" y="101" width="0.1909%" height="15" fill="rgb(238,178,32)" fg:x="20749" fg:w="136"/><text x="29.4213%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="29.3193%" y="101" width="0.1249%" height="15" fill="rgb(222,4,10)" fg:x="20885" fg:w="89"/><text x="29.6122%" y="111.50"></text></g><g><title>__rust_realloc (419 instructions, 0.59%)</title><rect x="29.0132%" y="117" width="0.5882%" height="15" fill="rgb(239,7,37)" fg:x="20667" fg:w="419"/><text x="29.3062%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (467 instructions, 0.66%)</title><rect x="29.0132%" y="133" width="0.6556%" height="15" fill="rgb(215,31,37)" fg:x="20667" fg:w="467"/><text x="29.3062%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (554 instructions, 0.78%)</title><rect x="29.0132%" y="149" width="0.7777%" height="15" fill="rgb(224,83,33)" fg:x="20667" fg:w="554"/><text x="29.3062%" y="159.50"></text></g><g><title>memcpy (305 instructions, 0.43%)</title><rect x="29.7910%" y="149" width="0.4282%" height="15" fill="rgb(239,55,3)" fg:x="21221" fg:w="305"/><text x="30.0839%" y="159.50"></text></g><g><title>memcpy (260 instructions, 0.36%)</title><rect x="30.2191%" y="149" width="0.3650%" height="15" fill="rgb(247,92,11)" fg:x="21526" fg:w="260"/><text x="30.5121%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="30.5841%" y="149" width="0.1249%" height="15" fill="rgb(239,200,7)" fg:x="21786" fg:w="89"/><text x="30.8771%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.08%)</title><rect x="30.7091%" y="149" width="0.0842%" height="15" fill="rgb(227,115,8)" fg:x="21875" fg:w="60"/><text x="31.0021%" y="159.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (52 instructions, 0.07%)</title><rect x="30.7933%" y="149" width="0.0730%" height="15" fill="rgb(215,189,27)" fg:x="21935" fg:w="52"/><text x="31.0863%" y="159.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (9,244 instructions, 12.98%)</title><rect x="18.3749%" y="165" width="12.9771%" height="15" fill="rgb(251,216,39)" fg:x="13089" fg:w="9244"/><text x="18.6679%" y="175.50">&lt;ic_principal::P..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="31.3520%" y="165" width="0.0182%" height="15" fill="rgb(207,29,47)" fg:x="22333" fg:w="13"/><text x="31.6450%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="31.3703%" y="165" width="0.0182%" height="15" fill="rgb(210,71,34)" fg:x="22346" fg:w="13"/><text x="31.6633%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="31.3885%" y="165" width="0.0182%" height="15" fill="rgb(253,217,51)" fg:x="22359" fg:w="13"/><text x="31.6815%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (9,922 instructions, 13.93%)</title><rect x="17.8723%" y="181" width="13.9289%" height="15" fill="rgb(222,117,46)" fg:x="12731" fg:w="9922"/><text x="18.1653%" y="191.50">candid::de::IDLDes..</text></g><g><title>memcmp (537 instructions, 0.75%)</title><rect x="31.8013%" y="149" width="0.7539%" height="15" fill="rgb(226,132,6)" fg:x="22653" fg:w="537"/><text x="32.0942%" y="159.50"></text></g><g><title>candid::types::internal::find_type (762 instructions, 1.07%)</title><rect x="31.8013%" y="165" width="1.0697%" height="15" fill="rgb(254,145,51)" fg:x="22653" fg:w="762"/><text x="32.0942%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (806 instructions, 1.13%)</title><rect x="31.8013%" y="181" width="1.1315%" height="15" fill="rgb(231,199,27)" fg:x="22653" fg:w="806"/><text x="32.0942%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.07%)</title><rect x="32.9328%" y="165" width="0.0688%" height="15" fill="rgb(245,158,14)" fg:x="23459" fg:w="49"/><text x="33.2257%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.12%)</title><rect x="33.0198%" y="149" width="0.1165%" height="15" fill="rgb(240,113,14)" fg:x="23521" fg:w="83"/><text x="33.3128%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (140 instructions, 0.20%)</title><rect x="33.0016%" y="165" width="0.1965%" height="15" fill="rgb(210,20,13)" fg:x="23508" fg:w="140"/><text x="33.2945%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.05%)</title><rect x="33.1981%" y="149" width="0.0491%" height="15" fill="rgb(241,144,13)" fg:x="23648" fg:w="35"/><text x="33.4911%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.05%)</title><rect x="33.2472%" y="149" width="0.0491%" height="15" fill="rgb(235,43,34)" fg:x="23683" fg:w="35"/><text x="33.5402%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="33.2964%" y="149" width="0.0477%" height="15" fill="rgb(208,36,20)" fg:x="23718" fg:w="34"/><text x="33.5893%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="33.3441%" y="149" width="0.0477%" height="15" fill="rgb(239,204,10)" fg:x="23752" fg:w="34"/><text x="33.6371%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="33.3918%" y="149" width="0.1151%" height="15" fill="rgb(217,84,43)" fg:x="23786" fg:w="82"/><text x="33.6848%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="33.5069%" y="133" width="0.1151%" height="15" fill="rgb(241,170,50)" fg:x="23868" fg:w="82"/><text x="33.7999%" y="143.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.13%)</title><rect x="33.6221%" y="117" width="0.1292%" height="15" fill="rgb(226,205,29)" fg:x="23950" fg:w="92"/><text x="33.9150%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (174 instructions, 0.24%)</title><rect x="33.6221%" y="133" width="0.2443%" height="15" fill="rgb(233,113,1)" fg:x="23950" fg:w="174"/><text x="33.9150%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="33.8663%" y="133" width="0.0983%" height="15" fill="rgb(253,98,13)" fg:x="24124" fg:w="70"/><text x="34.1593%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.62%)</title><rect x="33.9646%" y="133" width="0.6219%" height="15" fill="rgb(211,115,12)" fg:x="24194" fg:w="443"/><text x="34.2576%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="34.5865%" y="117" width="0.1151%" height="15" fill="rgb(208,12,16)" fg:x="24637" fg:w="82"/><text x="34.8795%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.09%)</title><rect x="34.7016%" y="85" width="0.0941%" height="15" fill="rgb(237,193,54)" fg:x="24719" fg:w="67"/><text x="34.9946%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (96 instructions, 0.13%)</title><rect x="34.7016%" y="101" width="0.1348%" height="15" fill="rgb(243,22,42)" fg:x="24719" fg:w="96"/><text x="34.9946%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="34.8364%" y="53" width="0.0154%" height="15" fill="rgb(233,151,36)" fg:x="24815" fg:w="11"/><text x="35.1294%" y="63.50"></text></g><g><title>memcpy (51 instructions, 0.07%)</title><rect x="34.8518%" y="37" width="0.0716%" height="15" fill="rgb(237,57,45)" fg:x="24826" fg:w="51"/><text x="35.1448%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (80 instructions, 0.11%)</title><rect x="34.8518%" y="53" width="0.1123%" height="15" fill="rgb(221,88,17)" fg:x="24826" fg:w="80"/><text x="35.1448%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.22%)</title><rect x="34.8364%" y="69" width="0.2246%" height="15" fill="rgb(230,79,15)" fg:x="24815" fg:w="160"/><text x="35.1294%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (230 instructions, 0.32%)</title><rect x="34.8364%" y="85" width="0.3229%" height="15" fill="rgb(213,57,13)" fg:x="24815" fg:w="230"/><text x="35.1294%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (240 instructions, 0.34%)</title><rect x="34.8364%" y="101" width="0.3369%" height="15" fill="rgb(222,116,39)" fg:x="24815" fg:w="240"/><text x="35.1294%" y="111.50"></text></g><g><title>core::fmt::write (478 instructions, 0.67%)</title><rect x="34.7016%" y="117" width="0.6710%" height="15" fill="rgb(245,107,2)" fg:x="24719" fg:w="478"/><text x="34.9946%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (698 instructions, 0.98%)</title><rect x="34.5865%" y="133" width="0.9799%" height="15" fill="rgb(238,1,10)" fg:x="24637" fg:w="698"/><text x="34.8795%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.13%)</title><rect x="35.5664%" y="133" width="0.1334%" height="15" fill="rgb(249,4,48)" fg:x="25335" fg:w="95"/><text x="35.8593%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.08%)</title><rect x="35.6997%" y="133" width="0.0842%" height="15" fill="rgb(223,151,18)" fg:x="25430" fg:w="60"/><text x="35.9927%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="35.7840%" y="117" width="0.0842%" height="15" fill="rgb(227,65,43)" fg:x="25490" fg:w="60"/><text x="36.0769%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 instructions, 0.17%)</title><rect x="35.7840%" y="133" width="0.1699%" height="15" fill="rgb(218,40,45)" fg:x="25490" fg:w="121"/><text x="36.0769%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="35.9538%" y="133" width="0.1151%" height="15" fill="rgb(252,121,31)" fg:x="25611" fg:w="82"/><text x="36.2468%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="36.0690%" y="117" width="0.0842%" height="15" fill="rgb(219,158,43)" fg:x="25693" fg:w="60"/><text x="36.3619%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="36.2388%" y="117" width="0.0842%" height="15" fill="rgb(231,162,42)" fg:x="25814" fg:w="60"/><text x="36.5318%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="36.4087%" y="117" width="0.0842%" height="15" fill="rgb(217,179,25)" fg:x="25935" fg:w="60"/><text x="36.7017%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="36.5786%" y="117" width="0.0842%" height="15" fill="rgb(206,212,31)" fg:x="26056" fg:w="60"/><text x="36.8715%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="36.7484%" y="117" width="0.0842%" height="15" fill="rgb(235,144,12)" fg:x="26177" fg:w="60"/><text x="37.0414%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="36.9183%" y="117" width="0.0842%" height="15" fill="rgb(213,51,10)" fg:x="26298" fg:w="60"/><text x="37.2113%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="37.0881%" y="117" width="0.0842%" height="15" fill="rgb(231,145,14)" fg:x="26419" fg:w="60"/><text x="37.3811%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="37.2580%" y="117" width="0.0842%" height="15" fill="rgb(235,15,28)" fg:x="26540" fg:w="60"/><text x="37.5510%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (968 instructions, 1.36%)</title><rect x="36.0690%" y="133" width="1.3589%" height="15" fill="rgb(237,206,10)" fg:x="25693" fg:w="968"/><text x="36.3619%" y="143.50"></text></g><g><title>__rust_realloc (118 instructions, 0.17%)</title><rect x="37.4279%" y="101" width="0.1657%" height="15" fill="rgb(236,227,27)" fg:x="26661" fg:w="118"/><text x="37.7208%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.23%)</title><rect x="37.4279%" y="117" width="0.2330%" height="15" fill="rgb(246,83,35)" fg:x="26661" fg:w="166"/><text x="37.7208%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (253 instructions, 0.36%)</title><rect x="37.4279%" y="133" width="0.3552%" height="15" fill="rgb(220,136,24)" fg:x="26661" fg:w="253"/><text x="37.7208%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="37.7830%" y="117" width="0.0842%" height="15" fill="rgb(217,3,25)" fg:x="26914" fg:w="60"/><text x="38.0760%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="37.9529%" y="117" width="0.0842%" height="15" fill="rgb(239,24,14)" fg:x="27035" fg:w="60"/><text x="38.2459%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="38.1228%" y="117" width="0.0842%" height="15" fill="rgb(244,16,53)" fg:x="27156" fg:w="60"/><text x="38.4157%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="38.2926%" y="117" width="0.0842%" height="15" fill="rgb(208,175,44)" fg:x="27277" fg:w="60"/><text x="38.5856%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="38.4625%" y="117" width="0.0842%" height="15" fill="rgb(252,18,48)" fg:x="27398" fg:w="60"/><text x="38.7555%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="38.6324%" y="117" width="0.0842%" height="15" fill="rgb(234,199,32)" fg:x="27519" fg:w="60"/><text x="38.9253%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="38.8022%" y="117" width="0.0842%" height="15" fill="rgb(225,77,54)" fg:x="27640" fg:w="60"/><text x="39.0952%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="38.9721%" y="117" width="0.0842%" height="15" fill="rgb(225,42,25)" fg:x="27761" fg:w="60"/><text x="39.2651%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (968 instructions, 1.36%)</title><rect x="37.7830%" y="133" width="1.3589%" height="15" fill="rgb(242,227,46)" fg:x="26914" fg:w="968"/><text x="38.0760%" y="143.50"></text></g><g><title>__rust_realloc (118 instructions, 0.17%)</title><rect x="39.1420%" y="101" width="0.1657%" height="15" fill="rgb(246,197,35)" fg:x="27882" fg:w="118"/><text x="39.4349%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.23%)</title><rect x="39.1420%" y="117" width="0.2330%" height="15" fill="rgb(215,159,26)" fg:x="27882" fg:w="166"/><text x="39.4349%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (253 instructions, 0.36%)</title><rect x="39.1420%" y="133" width="0.3552%" height="15" fill="rgb(212,194,50)" fg:x="27882" fg:w="253"/><text x="39.4349%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="39.4971%" y="117" width="0.0842%" height="15" fill="rgb(246,132,1)" fg:x="28135" fg:w="60"/><text x="39.7901%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="39.6670%" y="117" width="0.0842%" height="15" fill="rgb(217,71,7)" fg:x="28256" fg:w="60"/><text x="39.9600%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="39.8369%" y="117" width="0.0842%" height="15" fill="rgb(252,59,32)" fg:x="28377" fg:w="60"/><text x="40.1298%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="40.0067%" y="117" width="0.0842%" height="15" fill="rgb(253,204,25)" fg:x="28498" fg:w="60"/><text x="40.2997%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="40.1766%" y="117" width="0.0842%" height="15" fill="rgb(232,21,16)" fg:x="28619" fg:w="60"/><text x="40.4696%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="40.3465%" y="117" width="0.0842%" height="15" fill="rgb(248,90,29)" fg:x="28740" fg:w="60"/><text x="40.6394%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="40.5163%" y="117" width="0.0842%" height="15" fill="rgb(249,223,7)" fg:x="28861" fg:w="60"/><text x="40.8093%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="40.6862%" y="117" width="0.0842%" height="15" fill="rgb(231,119,42)" fg:x="28982" fg:w="60"/><text x="40.9792%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="40.8561%" y="117" width="0.0842%" height="15" fill="rgb(215,41,35)" fg:x="29103" fg:w="60"/><text x="41.1490%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="41.0259%" y="117" width="0.0842%" height="15" fill="rgb(220,44,45)" fg:x="29224" fg:w="60"/><text x="41.3189%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="41.1958%" y="117" width="0.0842%" height="15" fill="rgb(253,197,36)" fg:x="29345" fg:w="60"/><text x="41.4888%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.08%)</title><rect x="41.3657%" y="117" width="0.0842%" height="15" fill="rgb(245,225,54)" fg:x="29466" fg:w="60"/><text x="41.6586%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,452 instructions, 2.04%)</title><rect x="39.4971%" y="133" width="2.0384%" height="15" fill="rgb(239,94,37)" fg:x="28135" fg:w="1452"/><text x="39.7901%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 instructions, 0.04%)</title><rect x="41.5355%" y="133" width="0.0435%" height="15" fill="rgb(242,217,10)" fg:x="29587" fg:w="31"/><text x="41.8285%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="41.5790%" y="133" width="0.1067%" height="15" fill="rgb(250,193,7)" fg:x="29618" fg:w="76"/><text x="41.8720%" y="143.50"></text></g><g><title>binread::BinRead::read (7,325 instructions, 10.28%)</title><rect x="33.5069%" y="149" width="10.2832%" height="15" fill="rgb(230,104,19)" fg:x="23868" fg:w="7325"/><text x="33.7999%" y="159.50">binread::Bin..</text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.05%)</title><rect x="43.7901%" y="149" width="0.0463%" height="15" fill="rgb(230,181,4)" fg:x="31193" fg:w="33"/><text x="44.0831%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="43.8364%" y="101" width="0.1165%" height="15" fill="rgb(216,219,49)" fg:x="31226" fg:w="83"/><text x="44.1294%" y="111.50"></text></g><g><title>memcpy (136 instructions, 0.19%)</title><rect x="43.9529%" y="101" width="0.1909%" height="15" fill="rgb(254,144,0)" fg:x="31309" fg:w="136"/><text x="44.2459%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="44.1439%" y="101" width="0.1249%" height="15" fill="rgb(205,209,38)" fg:x="31445" fg:w="89"/><text x="44.4368%" y="111.50"></text></g><g><title>__rust_realloc (420 instructions, 0.59%)</title><rect x="43.8364%" y="117" width="0.5896%" height="15" fill="rgb(240,21,42)" fg:x="31226" fg:w="420"/><text x="44.1294%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (468 instructions, 0.66%)</title><rect x="43.8364%" y="133" width="0.6570%" height="15" fill="rgb(241,132,3)" fg:x="31226" fg:w="468"/><text x="44.1294%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (555 instructions, 0.78%)</title><rect x="43.8364%" y="149" width="0.7791%" height="15" fill="rgb(225,14,2)" fg:x="31226" fg:w="555"/><text x="44.1294%" y="159.50"></text></g><g><title>memcpy (305 instructions, 0.43%)</title><rect x="44.6156%" y="149" width="0.4282%" height="15" fill="rgb(210,141,35)" fg:x="31781" fg:w="305"/><text x="44.9085%" y="159.50"></text></g><g><title>memcpy (260 instructions, 0.36%)</title><rect x="45.0437%" y="149" width="0.3650%" height="15" fill="rgb(251,14,44)" fg:x="32086" fg:w="260"/><text x="45.3367%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.12%)</title><rect x="45.4087%" y="149" width="0.1165%" height="15" fill="rgb(247,48,18)" fg:x="32346" fg:w="83"/><text x="45.7017%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.08%)</title><rect x="45.5252%" y="149" width="0.0842%" height="15" fill="rgb(225,0,40)" fg:x="32429" fg:w="60"/><text x="45.8182%" y="159.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (52 instructions, 0.07%)</title><rect x="45.6095%" y="149" width="0.0730%" height="15" fill="rgb(221,31,33)" fg:x="32489" fg:w="52"/><text x="45.9024%" y="159.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (9,239 instructions, 12.97%)</title><rect x="33.1981%" y="165" width="12.9701%" height="15" fill="rgb(237,42,40)" fg:x="23648" fg:w="9239"/><text x="33.4911%" y="175.50">&lt;ic_principal::P..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="46.1682%" y="165" width="0.0182%" height="15" fill="rgb(233,51,29)" fg:x="32887" fg:w="13"/><text x="46.4612%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="46.1865%" y="165" width="0.0182%" height="15" fill="rgb(226,58,20)" fg:x="32900" fg:w="13"/><text x="46.4794%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="46.2047%" y="165" width="0.0182%" height="15" fill="rgb(208,98,7)" fg:x="32913" fg:w="13"/><text x="46.4977%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (9,748 instructions, 13.68%)</title><rect x="32.9328%" y="181" width="13.6847%" height="15" fill="rgb(228,143,44)" fg:x="23459" fg:w="9748"/><text x="33.2257%" y="191.50">candid::de::IDLDe..</text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="46.6174%" y="149" width="0.1081%" height="15" fill="rgb(246,55,38)" fg:x="33207" fg:w="77"/><text x="46.9104%" y="159.50"></text></g><g><title>candid::types::internal::find_type (224 instructions, 0.31%)</title><rect x="46.6174%" y="165" width="0.3145%" height="15" fill="rgb(247,87,16)" fg:x="33207" fg:w="224"/><text x="46.9104%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (268 instructions, 0.38%)</title><rect x="46.6174%" y="181" width="0.3762%" height="15" fill="rgb(234,129,42)" fg:x="33207" fg:w="268"/><text x="46.9104%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.07%)</title><rect x="46.9937%" y="165" width="0.0688%" height="15" fill="rgb(220,82,16)" fg:x="33475" fg:w="49"/><text x="47.2866%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.12%)</title><rect x="47.0807%" y="149" width="0.1165%" height="15" fill="rgb(211,88,4)" fg:x="33537" fg:w="83"/><text x="47.3737%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (140 instructions, 0.20%)</title><rect x="47.0625%" y="165" width="0.1965%" height="15" fill="rgb(248,151,21)" fg:x="33524" fg:w="140"/><text x="47.3554%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.05%)</title><rect x="47.2590%" y="149" width="0.0491%" height="15" fill="rgb(238,163,6)" fg:x="33664" fg:w="35"/><text x="47.5520%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="47.3081%" y="149" width="0.0477%" height="15" fill="rgb(209,183,11)" fg:x="33699" fg:w="34"/><text x="47.6011%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="47.3559%" y="149" width="0.0477%" height="15" fill="rgb(219,37,20)" fg:x="33733" fg:w="34"/><text x="47.6488%" y="159.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.05%)</title><rect x="47.4036%" y="149" width="0.0463%" height="15" fill="rgb(210,158,4)" fg:x="33767" fg:w="33"/><text x="47.6966%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (250 instructions, 0.35%)</title><rect x="47.2590%" y="165" width="0.3510%" height="15" fill="rgb(221,167,53)" fg:x="33664" fg:w="250"/><text x="47.5520%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="47.6100%" y="165" width="0.0182%" height="15" fill="rgb(237,151,45)" fg:x="33914" fg:w="13"/><text x="47.9029%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="47.6282%" y="165" width="0.0182%" height="15" fill="rgb(231,39,3)" fg:x="33927" fg:w="13"/><text x="47.9212%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="47.6465%" y="165" width="0.0182%" height="15" fill="rgb(212,167,28)" fg:x="33940" fg:w="13"/><text x="47.9394%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (688 instructions, 0.97%)</title><rect x="46.9937%" y="181" width="0.9658%" height="15" fill="rgb(232,178,8)" fg:x="33475" fg:w="688"/><text x="47.2866%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.06%)</title><rect x="47.9595%" y="181" width="0.0604%" height="15" fill="rgb(225,151,20)" fg:x="34163" fg:w="43"/><text x="48.2525%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="48.0297%" y="149" width="0.0379%" height="15" fill="rgb(238,3,37)" fg:x="34213" fg:w="27"/><text x="48.3227%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.20%)</title><rect x="48.0297%" y="165" width="0.1993%" height="15" fill="rgb(251,147,42)" fg:x="34213" fg:w="142"/><text x="48.3227%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="48.2291%" y="133" width="0.0379%" height="15" fill="rgb(208,173,10)" fg:x="34355" fg:w="27"/><text x="48.5220%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="48.2670%" y="133" width="0.0379%" height="15" fill="rgb(246,225,4)" fg:x="34382" fg:w="27"/><text x="48.5599%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.28%)</title><rect x="48.2291%" y="149" width="0.2766%" height="15" fill="rgb(248,102,6)" fg:x="34355" fg:w="197"/><text x="48.5220%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (241 instructions, 0.34%)</title><rect x="48.2291%" y="165" width="0.3383%" height="15" fill="rgb(232,6,21)" fg:x="34355" fg:w="241"/><text x="48.5220%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="48.5674%" y="165" width="0.0182%" height="15" fill="rgb(221,179,22)" fg:x="34596" fg:w="13"/><text x="48.8603%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (463 instructions, 0.65%)</title><rect x="48.0199%" y="181" width="0.6500%" height="15" fill="rgb(252,50,20)" fg:x="34206" fg:w="463"/><text x="48.3128%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="48.6699%" y="165" width="0.0379%" height="15" fill="rgb(222,56,38)" fg:x="34669" fg:w="27"/><text x="48.9628%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.10%)</title><rect x="48.7078%" y="165" width="0.0955%" height="15" fill="rgb(206,193,29)" fg:x="34696" fg:w="68"/><text x="49.0007%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (189 instructions, 0.27%)</title><rect x="48.6699%" y="181" width="0.2653%" height="15" fill="rgb(239,192,45)" fg:x="34669" fg:w="189"/><text x="48.9628%" y="191.50"></text></g><g><title>ic_cdk::api::call::arg_data (36,311 instructions, 50.97%)</title><rect x="0.2639%" y="197" width="50.9750%" height="15" fill="rgb(254,18,36)" fg:x="188" fg:w="36311"/><text x="0.5569%" y="207.50">ic_cdk::api::call::arg_data</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="51.2389%" y="165" width="0.1165%" height="15" fill="rgb(221,127,11)" fg:x="36499" fg:w="83"/><text x="51.5319%" y="175.50"></text></g><g><title>memset (141 instructions, 0.20%)</title><rect x="51.3554%" y="165" width="0.1979%" height="15" fill="rgb(234,146,35)" fg:x="36582" fg:w="141"/><text x="51.6484%" y="175.50"></text></g><g><title>memcpy (188 instructions, 0.26%)</title><rect x="51.5534%" y="165" width="0.2639%" height="15" fill="rgb(254,201,37)" fg:x="36723" fg:w="188"/><text x="51.8463%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.12%)</title><rect x="51.8173%" y="165" width="0.1165%" height="15" fill="rgb(211,202,23)" fg:x="36911" fg:w="83"/><text x="52.1102%" y="175.50"></text></g><g><title>ic_cdk::api::caller (1,654 instructions, 2.32%)</title><rect x="51.2389%" y="181" width="2.3220%" height="15" fill="rgb(237,91,2)" fg:x="36499" fg:w="1654"/><text x="51.5319%" y="191.50">i..</text></g><g><title>memcmp (675 instructions, 0.95%)</title><rect x="53.5608%" y="181" width="0.9476%" height="15" fill="rgb(226,228,36)" fg:x="38153" fg:w="675"/><text x="53.8538%" y="191.50"></text></g><g><title>memcmp (675 instructions, 0.95%)</title><rect x="54.5084%" y="181" width="0.9476%" height="15" fill="rgb(213,63,50)" fg:x="38828" fg:w="675"/><text x="54.8014%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,222 instructions, 4.52%)</title><rect x="51.2389%" y="197" width="4.5232%" height="15" fill="rgb(235,194,19)" fg:x="36499" fg:w="3222"/><text x="51.5319%" y="207.50">std:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="55.7621%" y="165" width="0.0182%" height="15" fill="rgb(207,204,18)" fg:x="39721" fg:w="13"/><text x="56.0550%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.10%)</title><rect x="55.7986%" y="133" width="0.0969%" height="15" fill="rgb(248,8,7)" fg:x="39747" fg:w="69"/><text x="56.0915%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (157 instructions, 0.22%)</title><rect x="55.7986%" y="149" width="0.2204%" height="15" fill="rgb(223,145,47)" fg:x="39747" fg:w="157"/><text x="56.0915%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (214 instructions, 0.30%)</title><rect x="55.7803%" y="165" width="0.3004%" height="15" fill="rgb(228,84,11)" fg:x="39734" fg:w="214"/><text x="56.0733%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="56.0807%" y="165" width="0.0182%" height="15" fill="rgb(218,76,45)" fg:x="39948" fg:w="13"/><text x="56.3737%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="56.0990%" y="165" width="0.0182%" height="15" fill="rgb(223,80,15)" fg:x="39961" fg:w="13"/><text x="56.3920%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="56.1172%" y="165" width="0.0182%" height="15" fill="rgb(219,218,33)" fg:x="39974" fg:w="13"/><text x="56.4102%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="56.1355%" y="165" width="0.1249%" height="15" fill="rgb(208,51,11)" fg:x="39987" fg:w="89"/><text x="56.4285%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (719 instructions, 1.01%)</title><rect x="55.7621%" y="181" width="1.0094%" height="15" fill="rgb(229,165,39)" fg:x="39721" fg:w="719"/><text x="56.0550%" y="191.50"></text></g><g><title>candid::types::internal::find_type (23 instructions, 0.03%)</title><rect x="56.7714%" y="181" width="0.0323%" height="15" fill="rgb(241,100,24)" fg:x="40440" fg:w="23"/><text x="57.0644%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="56.8037%" y="181" width="0.1165%" height="15" fill="rgb(228,14,23)" fg:x="40463" fg:w="83"/><text x="57.0967%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="56.9202%" y="165" width="0.1151%" height="15" fill="rgb(247,116,52)" fg:x="40546" fg:w="82"/><text x="57.2132%" y="175.50"></text></g><g><title>candid::types::internal::env_add (165 instructions, 0.23%)</title><rect x="56.9202%" y="181" width="0.2316%" height="15" fill="rgb(216,149,33)" fg:x="40546" fg:w="165"/><text x="57.2132%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="57.1519%" y="181" width="0.1151%" height="15" fill="rgb(238,142,29)" fg:x="40711" fg:w="82"/><text x="57.4449%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="57.2670%" y="181" width="0.1151%" height="15" fill="rgb(224,83,40)" fg:x="40793" fg:w="82"/><text x="57.5600%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="57.3821%" y="181" width="0.1151%" height="15" fill="rgb(234,165,11)" fg:x="40875" fg:w="82"/><text x="57.6751%" y="191.50"></text></g><g><title>candid::types::internal::find_type (73 instructions, 0.10%)</title><rect x="57.4972%" y="165" width="0.1025%" height="15" fill="rgb(215,96,23)" fg:x="40957" fg:w="73"/><text x="57.7902%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="57.5997%" y="165" width="0.1165%" height="15" fill="rgb(233,179,26)" fg:x="41030" fg:w="83"/><text x="57.8927%" y="175.50"></text></g><g><title>memmove (220 instructions, 0.31%)</title><rect x="57.7162%" y="149" width="0.3088%" height="15" fill="rgb(225,129,33)" fg:x="41113" fg:w="220"/><text x="58.0092%" y="159.50"></text></g><g><title>memmove (92 instructions, 0.13%)</title><rect x="58.0251%" y="149" width="0.1292%" height="15" fill="rgb(237,49,13)" fg:x="41333" fg:w="92"/><text x="58.3180%" y="159.50"></text></g><g><title>candid::types::internal::env_add (504 instructions, 0.71%)</title><rect x="57.7162%" y="165" width="0.7075%" height="15" fill="rgb(211,3,31)" fg:x="41113" fg:w="504"/><text x="58.0092%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="58.4238%" y="165" width="0.1151%" height="15" fill="rgb(216,152,19)" fg:x="41617" fg:w="82"/><text x="58.7167%" y="175.50"></text></g><g><title>memcmp (100 instructions, 0.14%)</title><rect x="58.5389%" y="149" width="0.1404%" height="15" fill="rgb(251,121,35)" fg:x="41699" fg:w="100"/><text x="58.8318%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="58.6793%" y="133" width="0.1249%" height="15" fill="rgb(210,217,47)" fg:x="41799" fg:w="89"/><text x="58.9722%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.19%)</title><rect x="58.6793%" y="149" width="0.1867%" height="15" fill="rgb(244,116,22)" fg:x="41799" fg:w="133"/><text x="58.9722%" y="159.50"></text></g><g><title>candid::types::internal::env_add (405 instructions, 0.57%)</title><rect x="58.5389%" y="165" width="0.5686%" height="15" fill="rgb(228,17,21)" fg:x="41699" fg:w="405"/><text x="58.8318%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.04%)</title><rect x="59.1074%" y="149" width="0.0435%" height="15" fill="rgb(240,149,34)" fg:x="42104" fg:w="31"/><text x="59.4004%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (51 instructions, 0.07%)</title><rect x="59.1510%" y="149" width="0.0716%" height="15" fill="rgb(208,125,47)" fg:x="42135" fg:w="51"/><text x="59.4439%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="59.2226%" y="149" width="0.0182%" height="15" fill="rgb(249,186,39)" fg:x="42186" fg:w="13"/><text x="59.5155%" y="159.50"></text></g><g><title>candid::types::internal::env_id (297 instructions, 0.42%)</title><rect x="59.1074%" y="165" width="0.4169%" height="15" fill="rgb(240,220,33)" fg:x="42104" fg:w="297"/><text x="59.4004%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (1,573 instructions, 2.21%)</title><rect x="57.4972%" y="181" width="2.2082%" height="15" fill="rgb(243,110,23)" fg:x="40957" fg:w="1573"/><text x="57.7902%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="59.7055%" y="181" width="0.1151%" height="15" fill="rgb(219,163,46)" fg:x="42530" fg:w="82"/><text x="59.9984%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="59.8206%" y="181" width="0.1151%" height="15" fill="rgb(216,126,30)" fg:x="42612" fg:w="82"/><text x="60.1136%" y="191.50"></text></g><g><title>candid::types::internal::find_type (112 instructions, 0.16%)</title><rect x="59.9357%" y="165" width="0.1572%" height="15" fill="rgb(208,139,11)" fg:x="42694" fg:w="112"/><text x="60.2287%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="60.0929%" y="165" width="0.1151%" height="15" fill="rgb(213,118,36)" fg:x="42806" fg:w="82"/><text x="60.3859%" y="175.50"></text></g><g><title>memmove (220 instructions, 0.31%)</title><rect x="60.2080%" y="149" width="0.3088%" height="15" fill="rgb(226,43,17)" fg:x="42888" fg:w="220"/><text x="60.5010%" y="159.50"></text></g><g><title>memmove (92 instructions, 0.13%)</title><rect x="60.5169%" y="149" width="0.1292%" height="15" fill="rgb(254,217,4)" fg:x="43108" fg:w="92"/><text x="60.8099%" y="159.50"></text></g><g><title>candid::types::internal::env_add (543 instructions, 0.76%)</title><rect x="60.2080%" y="165" width="0.7623%" height="15" fill="rgb(210,134,47)" fg:x="42888" fg:w="543"/><text x="60.5010%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="60.9703%" y="165" width="0.1151%" height="15" fill="rgb(237,24,49)" fg:x="43431" fg:w="82"/><text x="61.2633%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="61.0855%" y="165" width="0.1151%" height="15" fill="rgb(251,39,46)" fg:x="43513" fg:w="82"/><text x="61.3784%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="61.2006%" y="165" width="0.1151%" height="15" fill="rgb(251,220,3)" fg:x="43595" fg:w="82"/><text x="61.4935%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="61.3157%" y="165" width="0.1151%" height="15" fill="rgb(228,105,12)" fg:x="43677" fg:w="82"/><text x="61.6087%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="61.4308%" y="165" width="0.1151%" height="15" fill="rgb(215,196,1)" fg:x="43759" fg:w="82"/><text x="61.7238%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="61.5459%" y="165" width="0.1151%" height="15" fill="rgb(214,33,39)" fg:x="43841" fg:w="82"/><text x="61.8389%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="61.6610%" y="165" width="0.1151%" height="15" fill="rgb(220,19,52)" fg:x="43923" fg:w="82"/><text x="61.9540%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="61.7761%" y="165" width="0.1151%" height="15" fill="rgb(221,78,38)" fg:x="44005" fg:w="82"/><text x="62.0691%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="61.8913%" y="165" width="0.1151%" height="15" fill="rgb(253,30,16)" fg:x="44087" fg:w="82"/><text x="62.1842%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="62.0064%" y="165" width="0.1151%" height="15" fill="rgb(242,65,0)" fg:x="44169" fg:w="82"/><text x="62.2993%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="62.1215%" y="165" width="0.1151%" height="15" fill="rgb(235,201,12)" fg:x="44251" fg:w="82"/><text x="62.4145%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="62.2366%" y="165" width="0.1151%" height="15" fill="rgb(233,161,9)" fg:x="44333" fg:w="82"/><text x="62.5296%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="62.3517%" y="165" width="0.1151%" height="15" fill="rgb(241,207,41)" fg:x="44415" fg:w="82"/><text x="62.6447%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="62.4668%" y="165" width="0.1151%" height="15" fill="rgb(212,69,46)" fg:x="44497" fg:w="82"/><text x="62.7598%" y="175.50"></text></g><g><title>memcmp (399 instructions, 0.56%)</title><rect x="62.5819%" y="149" width="0.5601%" height="15" fill="rgb(239,69,45)" fg:x="44579" fg:w="399"/><text x="62.8749%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="63.1421%" y="133" width="0.1249%" height="15" fill="rgb(242,117,48)" fg:x="44978" fg:w="89"/><text x="63.4351%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.19%)</title><rect x="63.1421%" y="149" width="0.1867%" height="15" fill="rgb(228,41,36)" fg:x="44978" fg:w="133"/><text x="63.4351%" y="159.50"></text></g><g><title>candid::types::internal::env_add (743 instructions, 1.04%)</title><rect x="62.5819%" y="165" width="1.0431%" height="15" fill="rgb(212,3,32)" fg:x="44579" fg:w="743"/><text x="62.8749%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="63.6250%" y="149" width="0.0618%" height="15" fill="rgb(233,41,49)" fg:x="45322" fg:w="44"/><text x="63.9180%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="63.6868%" y="149" width="0.0618%" height="15" fill="rgb(252,170,49)" fg:x="45366" fg:w="44"/><text x="63.9797%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="63.7485%" y="149" width="0.0618%" height="15" fill="rgb(229,53,26)" fg:x="45410" fg:w="44"/><text x="64.0415%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="63.8721%" y="117" width="0.0267%" height="15" fill="rgb(217,157,12)" fg:x="45498" fg:w="19"/><text x="64.1651%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="63.8721%" y="133" width="0.1769%" height="15" fill="rgb(227,17,9)" fg:x="45498" fg:w="126"/><text x="64.1651%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="64.1571%" y="117" width="0.0267%" height="15" fill="rgb(218,84,12)" fg:x="45701" fg:w="19"/><text x="64.4500%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="64.1571%" y="133" width="0.1769%" height="15" fill="rgb(212,79,24)" fg:x="45701" fg:w="126"/><text x="64.4500%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="64.4420%" y="117" width="0.0267%" height="15" fill="rgb(217,222,37)" fg:x="45904" fg:w="19"/><text x="64.7350%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="64.4420%" y="133" width="0.1769%" height="15" fill="rgb(246,208,8)" fg:x="45904" fg:w="126"/><text x="64.7350%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="64.7270%" y="117" width="0.0267%" height="15" fill="rgb(244,133,10)" fg:x="46107" fg:w="19"/><text x="65.0200%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="64.7270%" y="133" width="0.1769%" height="15" fill="rgb(209,219,41)" fg:x="46107" fg:w="126"/><text x="65.0200%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (856 instructions, 1.20%)</title><rect x="63.8103%" y="149" width="1.2017%" height="15" fill="rgb(253,175,45)" fg:x="45454" fg:w="856"/><text x="64.1033%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.04%)</title><rect x="65.0120%" y="149" width="0.0435%" height="15" fill="rgb(235,100,37)" fg:x="46310" fg:w="31"/><text x="65.3050%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="65.0555%" y="149" width="0.0618%" height="15" fill="rgb(225,87,19)" fg:x="46341" fg:w="44"/><text x="65.3485%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="65.1173%" y="149" width="0.0618%" height="15" fill="rgb(217,152,17)" fg:x="46385" fg:w="44"/><text x="65.4103%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="65.1791%" y="149" width="0.0618%" height="15" fill="rgb(235,72,13)" fg:x="46429" fg:w="44"/><text x="65.4720%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="65.3026%" y="117" width="0.0267%" height="15" fill="rgb(233,140,18)" fg:x="46517" fg:w="19"/><text x="65.5956%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="65.3026%" y="133" width="0.1769%" height="15" fill="rgb(207,212,28)" fg:x="46517" fg:w="126"/><text x="65.5956%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="65.5876%" y="117" width="0.0267%" height="15" fill="rgb(220,130,25)" fg:x="46720" fg:w="19"/><text x="65.8805%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="65.5876%" y="133" width="0.1769%" height="15" fill="rgb(205,55,34)" fg:x="46720" fg:w="126"/><text x="65.8805%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="65.8726%" y="117" width="0.0267%" height="15" fill="rgb(237,54,35)" fg:x="46923" fg:w="19"/><text x="66.1655%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="65.8726%" y="133" width="0.1769%" height="15" fill="rgb(208,67,23)" fg:x="46923" fg:w="126"/><text x="66.1655%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="66.1575%" y="117" width="0.0267%" height="15" fill="rgb(206,207,50)" fg:x="47126" fg:w="19"/><text x="66.4505%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="66.1575%" y="133" width="0.1769%" height="15" fill="rgb(213,211,42)" fg:x="47126" fg:w="126"/><text x="66.4505%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (856 instructions, 1.20%)</title><rect x="65.2408%" y="149" width="1.2017%" height="15" fill="rgb(252,197,50)" fg:x="46473" fg:w="856"/><text x="65.5338%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.04%)</title><rect x="66.4425%" y="149" width="0.0435%" height="15" fill="rgb(251,211,41)" fg:x="47329" fg:w="31"/><text x="66.7355%" y="159.50"></text></g><g><title>memmove (92 instructions, 0.13%)</title><rect x="66.4860%" y="149" width="0.1292%" height="15" fill="rgb(229,211,5)" fg:x="47360" fg:w="92"/><text x="66.7790%" y="159.50"></text></g><g><title>memmove (220 instructions, 0.31%)</title><rect x="66.6152%" y="149" width="0.3088%" height="15" fill="rgb(239,36,31)" fg:x="47452" fg:w="220"/><text x="66.9082%" y="159.50"></text></g><g><title>candid::types::internal::env_id (3,237 instructions, 4.54%)</title><rect x="63.6250%" y="165" width="4.5442%" height="15" fill="rgb(248,67,31)" fg:x="45322" fg:w="3237"/><text x="63.9180%" y="175.50">cand..</text></g><g><title>candid::types::CandidType::ty (6,314 instructions, 8.86%)</title><rect x="59.9357%" y="181" width="8.8639%" height="15" fill="rgb(249,55,44)" fg:x="42694" fg:w="6314"/><text x="60.2287%" y="191.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="68.7996%" y="181" width="0.1151%" height="15" fill="rgb(216,82,12)" fg:x="49008" fg:w="82"/><text x="69.0925%" y="191.50"></text></g><g><title>memcmp (1,043 instructions, 1.46%)</title><rect x="68.9147%" y="165" width="1.4642%" height="15" fill="rgb(242,174,1)" fg:x="49090" fg:w="1043"/><text x="69.2077%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="70.3789%" y="149" width="0.1249%" height="15" fill="rgb(208,120,29)" fg:x="50133" fg:w="89"/><text x="70.6719%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.19%)</title><rect x="70.3789%" y="165" width="0.1867%" height="15" fill="rgb(221,105,43)" fg:x="50133" fg:w="133"/><text x="70.6719%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,426 instructions, 2.00%)</title><rect x="68.9147%" y="181" width="2.0019%" height="15" fill="rgb(234,124,22)" fg:x="49090" fg:w="1426"/><text x="69.2077%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="70.9166%" y="165" width="0.0618%" height="15" fill="rgb(212,23,30)" fg:x="50516" fg:w="44"/><text x="71.2095%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="70.9783%" y="165" width="0.0618%" height="15" fill="rgb(219,122,53)" fg:x="50560" fg:w="44"/><text x="71.2713%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="71.0401%" y="165" width="0.0618%" height="15" fill="rgb(248,84,24)" fg:x="50604" fg:w="44"/><text x="71.3331%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="71.1636%" y="133" width="0.0267%" height="15" fill="rgb(245,115,18)" fg:x="50692" fg:w="19"/><text x="71.4566%" y="143.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="71.1636%" y="149" width="0.1769%" height="15" fill="rgb(227,176,51)" fg:x="50692" fg:w="126"/><text x="71.4566%" y="159.50"></text></g><g><title>memcmp (54 instructions, 0.08%)</title><rect x="71.4486%" y="133" width="0.0758%" height="15" fill="rgb(229,63,42)" fg:x="50895" fg:w="54"/><text x="71.7416%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (31 instructions, 0.04%)</title><rect x="71.5244%" y="133" width="0.0435%" height="15" fill="rgb(247,202,24)" fg:x="50949" fg:w="31"/><text x="71.8174%" y="143.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (215 instructions, 0.30%)</title><rect x="71.4486%" y="149" width="0.3018%" height="15" fill="rgb(244,173,20)" fg:x="50895" fg:w="215"/><text x="71.7416%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (539 instructions, 0.76%)</title><rect x="71.1019%" y="165" width="0.7567%" height="15" fill="rgb(242,81,47)" fg:x="50648" fg:w="539"/><text x="71.3948%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="71.8585%" y="165" width="0.0618%" height="15" fill="rgb(231,185,54)" fg:x="51187" fg:w="44"/><text x="72.1515%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="71.9203%" y="165" width="0.0618%" height="15" fill="rgb(243,55,32)" fg:x="51231" fg:w="44"/><text x="72.2133%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.06%)</title><rect x="71.9821%" y="165" width="0.0618%" height="15" fill="rgb(208,167,19)" fg:x="51275" fg:w="44"/><text x="72.2751%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="72.1056%" y="133" width="0.0267%" height="15" fill="rgb(231,72,35)" fg:x="51363" fg:w="19"/><text x="72.3986%" y="143.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="72.1056%" y="149" width="0.1769%" height="15" fill="rgb(250,173,51)" fg:x="51363" fg:w="126"/><text x="72.3986%" y="159.50"></text></g><g><title>memcmp (54 instructions, 0.08%)</title><rect x="72.3906%" y="133" width="0.0758%" height="15" fill="rgb(209,5,22)" fg:x="51566" fg:w="54"/><text x="72.6836%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (31 instructions, 0.04%)</title><rect x="72.4664%" y="133" width="0.0435%" height="15" fill="rgb(250,174,19)" fg:x="51620" fg:w="31"/><text x="72.7594%" y="143.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (215 instructions, 0.30%)</title><rect x="72.3906%" y="149" width="0.3018%" height="15" fill="rgb(217,3,49)" fg:x="51566" fg:w="215"/><text x="72.6836%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (539 instructions, 0.76%)</title><rect x="72.0439%" y="165" width="0.7567%" height="15" fill="rgb(218,225,5)" fg:x="51319" fg:w="539"/><text x="72.3368%" y="175.50"></text></g><g><title>memmove (156 instructions, 0.22%)</title><rect x="72.8005%" y="165" width="0.2190%" height="15" fill="rgb(236,89,11)" fg:x="51858" fg:w="156"/><text x="73.0935%" y="175.50"></text></g><g><title>memmove (316 instructions, 0.44%)</title><rect x="73.0195%" y="165" width="0.4436%" height="15" fill="rgb(206,33,28)" fg:x="52014" fg:w="316"/><text x="73.3125%" y="175.50"></text></g><g><title>candid::types::internal::env_id (2,503 instructions, 3.51%)</title><rect x="70.9166%" y="181" width="3.5138%" height="15" fill="rgb(241,56,42)" fg:x="50516" fg:w="2503"/><text x="71.2095%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="74.4304%" y="149" width="0.1151%" height="15" fill="rgb(222,44,11)" fg:x="53019" fg:w="82"/><text x="74.7234%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.18%)</title><rect x="74.4304%" y="165" width="0.1825%" height="15" fill="rgb(234,111,20)" fg:x="53019" fg:w="130"/><text x="74.7234%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (215 instructions, 0.30%)</title><rect x="74.4304%" y="181" width="0.3018%" height="15" fill="rgb(237,77,6)" fg:x="53019" fg:w="215"/><text x="74.7234%" y="191.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.05%)</title><rect x="74.7322%" y="165" width="0.0533%" height="15" fill="rgb(235,111,23)" fg:x="53234" fg:w="38"/><text x="75.0252%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="74.7856%" y="165" width="0.1151%" height="15" fill="rgb(251,135,29)" fg:x="53272" fg:w="82"/><text x="75.0785%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="74.9007%" y="133" width="0.1151%" height="15" fill="rgb(217,57,1)" fg:x="53354" fg:w="82"/><text x="75.1936%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.18%)</title><rect x="74.9007%" y="149" width="0.1825%" height="15" fill="rgb(249,119,31)" fg:x="53354" fg:w="130"/><text x="75.1936%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (215 instructions, 0.30%)</title><rect x="74.9007%" y="165" width="0.3018%" height="15" fill="rgb(233,164,33)" fg:x="53354" fg:w="215"/><text x="75.1936%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.04%)</title><rect x="75.2025%" y="149" width="0.0435%" height="15" fill="rgb(250,217,43)" fg:x="53569" fg:w="31"/><text x="75.4955%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.04%)</title><rect x="75.2460%" y="149" width="0.0435%" height="15" fill="rgb(232,154,50)" fg:x="53600" fg:w="31"/><text x="75.5390%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="75.2895%" y="149" width="0.0182%" height="15" fill="rgb(227,190,8)" fg:x="53631" fg:w="13"/><text x="75.5825%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="75.4875%" y="117" width="0.0267%" height="15" fill="rgb(209,217,32)" fg:x="53772" fg:w="19"/><text x="75.7805%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="75.4875%" y="133" width="0.1769%" height="15" fill="rgb(243,203,50)" fg:x="53772" fg:w="126"/><text x="75.7805%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (203 instructions, 0.28%)</title><rect x="75.4875%" y="149" width="0.2850%" height="15" fill="rgb(232,152,27)" fg:x="53772" fg:w="203"/><text x="75.7805%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.05%)</title><rect x="75.7725%" y="149" width="0.0533%" height="15" fill="rgb(240,34,29)" fg:x="53975" fg:w="38"/><text x="76.0654%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="75.8258%" y="117" width="0.0267%" height="15" fill="rgb(215,185,52)" fg:x="54013" fg:w="19"/><text x="76.1188%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="75.8258%" y="133" width="0.1769%" height="15" fill="rgb(240,89,49)" fg:x="54013" fg:w="126"/><text x="76.1188%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (203 instructions, 0.28%)</title><rect x="75.8258%" y="149" width="0.2850%" height="15" fill="rgb(225,12,52)" fg:x="54013" fg:w="203"/><text x="76.1188%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.04%)</title><rect x="76.1108%" y="133" width="0.0435%" height="15" fill="rgb(239,128,45)" fg:x="54216" fg:w="31"/><text x="76.4038%" y="143.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.04%)</title><rect x="76.1543%" y="133" width="0.0435%" height="15" fill="rgb(211,78,47)" fg:x="54247" fg:w="31"/><text x="76.4473%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="76.1978%" y="133" width="0.0182%" height="15" fill="rgb(232,31,21)" fg:x="54278" fg:w="13"/><text x="76.4908%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.04%)</title><rect x="76.3958%" y="133" width="0.0435%" height="15" fill="rgb(222,168,14)" fg:x="54419" fg:w="31"/><text x="76.6887%" y="143.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.04%)</title><rect x="76.4393%" y="133" width="0.0435%" height="15" fill="rgb(209,128,24)" fg:x="54450" fg:w="31"/><text x="76.7323%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="76.4828%" y="133" width="0.0182%" height="15" fill="rgb(249,35,13)" fg:x="54481" fg:w="13"/><text x="76.7758%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.04%)</title><rect x="76.6808%" y="133" width="0.0435%" height="15" fill="rgb(218,7,2)" fg:x="54622" fg:w="31"/><text x="76.9737%" y="143.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.04%)</title><rect x="76.7243%" y="133" width="0.0435%" height="15" fill="rgb(238,107,27)" fg:x="54653" fg:w="31"/><text x="77.0172%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="76.7678%" y="133" width="0.0182%" height="15" fill="rgb(217,88,38)" fg:x="54684" fg:w="13"/><text x="77.0608%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.04%)</title><rect x="76.9657%" y="133" width="0.0435%" height="15" fill="rgb(230,207,0)" fg:x="54825" fg:w="31"/><text x="77.2587%" y="143.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.04%)</title><rect x="77.0093%" y="133" width="0.0435%" height="15" fill="rgb(249,64,54)" fg:x="54856" fg:w="31"/><text x="77.3022%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="77.0528%" y="133" width="0.0182%" height="15" fill="rgb(231,7,11)" fg:x="54887" fg:w="13"/><text x="77.3457%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (812 instructions, 1.14%)</title><rect x="76.1108%" y="149" width="1.1399%" height="15" fill="rgb(205,149,21)" fg:x="54216" fg:w="812"/><text x="76.4038%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="77.2507%" y="101" width="0.1151%" height="15" fill="rgb(215,126,34)" fg:x="55028" fg:w="82"/><text x="77.5437%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.18%)</title><rect x="77.2507%" y="117" width="0.1825%" height="15" fill="rgb(241,132,45)" fg:x="55028" fg:w="130"/><text x="77.5437%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 instructions, 0.30%)</title><rect x="77.2507%" y="133" width="0.2976%" height="15" fill="rgb(252,69,32)" fg:x="55028" fg:w="212"/><text x="77.5437%" y="143.50"></text></g><g><title>leb128::write::signed (271 instructions, 0.38%)</title><rect x="77.2507%" y="149" width="0.3804%" height="15" fill="rgb(232,204,19)" fg:x="55028" fg:w="271"/><text x="77.5437%" y="159.50"></text></g><g><title>leb128::write::unsigned (47 instructions, 0.07%)</title><rect x="77.6312%" y="149" width="0.0660%" height="15" fill="rgb(249,15,47)" fg:x="55299" fg:w="47"/><text x="77.9241%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.09%)</title><rect x="77.6971%" y="149" width="0.0927%" height="15" fill="rgb(209,227,23)" fg:x="55346" fg:w="66"/><text x="77.9901%" y="159.50"></text></g><g><title>__rust_realloc (118 instructions, 0.17%)</title><rect x="77.7898%" y="117" width="0.1657%" height="15" fill="rgb(248,92,24)" fg:x="55412" fg:w="118"/><text x="78.0828%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.23%)</title><rect x="77.7898%" y="133" width="0.2330%" height="15" fill="rgb(247,59,2)" fg:x="55412" fg:w="166"/><text x="78.0828%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (253 instructions, 0.36%)</title><rect x="77.7898%" y="149" width="0.3552%" height="15" fill="rgb(221,30,5)" fg:x="55412" fg:w="253"/><text x="78.0828%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.09%)</title><rect x="78.1450%" y="149" width="0.0927%" height="15" fill="rgb(208,108,53)" fg:x="55665" fg:w="66"/><text x="78.4379%" y="159.50"></text></g><g><title>__rust_realloc (118 instructions, 0.17%)</title><rect x="78.2376%" y="117" width="0.1657%" height="15" fill="rgb(211,183,26)" fg:x="55731" fg:w="118"/><text x="78.5306%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.23%)</title><rect x="78.2376%" y="133" width="0.2330%" height="15" fill="rgb(232,132,4)" fg:x="55731" fg:w="166"/><text x="78.5306%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (253 instructions, 0.36%)</title><rect x="78.2376%" y="149" width="0.3552%" height="15" fill="rgb(253,128,37)" fg:x="55731" fg:w="253"/><text x="78.5306%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.09%)</title><rect x="78.5928%" y="149" width="0.0927%" height="15" fill="rgb(221,58,24)" fg:x="55984" fg:w="66"/><text x="78.8858%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.09%)</title><rect x="78.6854%" y="149" width="0.0927%" height="15" fill="rgb(230,54,45)" fg:x="56050" fg:w="66"/><text x="78.9784%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="78.7781%" y="149" width="0.0182%" height="15" fill="rgb(254,21,18)" fg:x="56116" fg:w="13"/><text x="79.0711%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (4,676 instructions, 6.56%)</title><rect x="75.2025%" y="165" width="6.5644%" height="15" fill="rgb(221,108,0)" fg:x="53569" fg:w="4676"/><text x="75.4955%" y="175.50">candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="81.7669%" y="117" width="0.1151%" height="15" fill="rgb(206,95,1)" fg:x="58245" fg:w="82"/><text x="82.0598%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.18%)</title><rect x="81.7669%" y="133" width="0.1825%" height="15" fill="rgb(237,52,5)" fg:x="58245" fg:w="130"/><text x="82.0598%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 instructions, 0.30%)</title><rect x="81.7669%" y="149" width="0.2976%" height="15" fill="rgb(218,150,34)" fg:x="58245" fg:w="212"/><text x="82.0598%" y="159.50"></text></g><g><title>leb128::write::signed (271 instructions, 0.38%)</title><rect x="81.7669%" y="165" width="0.3804%" height="15" fill="rgb(235,194,28)" fg:x="58245" fg:w="271"/><text x="82.0598%" y="175.50"></text></g><g><title>leb128::write::unsigned (47 instructions, 0.07%)</title><rect x="82.1473%" y="165" width="0.0660%" height="15" fill="rgb(245,92,18)" fg:x="58516" fg:w="47"/><text x="82.4403%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.09%)</title><rect x="82.2133%" y="165" width="0.0927%" height="15" fill="rgb(253,203,53)" fg:x="58563" fg:w="66"/><text x="82.5063%" y="175.50"></text></g><g><title>__rust_realloc (118 instructions, 0.17%)</title><rect x="82.3060%" y="133" width="0.1657%" height="15" fill="rgb(249,185,47)" fg:x="58629" fg:w="118"/><text x="82.5989%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.23%)</title><rect x="82.3060%" y="149" width="0.2330%" height="15" fill="rgb(252,194,52)" fg:x="58629" fg:w="166"/><text x="82.5989%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (253 instructions, 0.36%)</title><rect x="82.3060%" y="165" width="0.3552%" height="15" fill="rgb(210,53,36)" fg:x="58629" fg:w="253"/><text x="82.5989%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="82.6611%" y="117" width="0.0267%" height="15" fill="rgb(237,37,25)" fg:x="58882" fg:w="19"/><text x="82.9541%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (126 instructions, 0.18%)</title><rect x="82.6611%" y="133" width="0.1769%" height="15" fill="rgb(242,116,27)" fg:x="58882" fg:w="126"/><text x="82.9541%" y="143.50"></text></g><g><title>memcmp (261 instructions, 0.37%)</title><rect x="82.9461%" y="117" width="0.3664%" height="15" fill="rgb(213,185,26)" fg:x="59085" fg:w="261"/><text x="83.2391%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.06%)</title><rect x="83.3125%" y="117" width="0.0604%" height="15" fill="rgb(225,204,8)" fg:x="59346" fg:w="43"/><text x="83.6055%" y="127.50"></text></g><g><title>memcmp (330 instructions, 0.46%)</title><rect x="83.3729%" y="117" width="0.4633%" height="15" fill="rgb(254,111,37)" fg:x="59389" fg:w="330"/><text x="83.6658%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.06%)</title><rect x="83.8361%" y="117" width="0.0604%" height="15" fill="rgb(242,35,9)" fg:x="59719" fg:w="43"/><text x="84.1291%" y="127.50"></text></g><g><title>memcmp (284 instructions, 0.40%)</title><rect x="83.8965%" y="117" width="0.3987%" height="15" fill="rgb(232,138,49)" fg:x="59762" fg:w="284"/><text x="84.1895%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.06%)</title><rect x="84.2952%" y="117" width="0.0604%" height="15" fill="rgb(247,56,4)" fg:x="60046" fg:w="43"/><text x="84.5882%" y="127.50"></text></g><g><title>memcmp (123 instructions, 0.17%)</title><rect x="84.3556%" y="117" width="0.1727%" height="15" fill="rgb(226,179,17)" fg:x="60089" fg:w="123"/><text x="84.6485%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.06%)</title><rect x="84.5282%" y="117" width="0.0604%" height="15" fill="rgb(216,163,45)" fg:x="60212" fg:w="43"/><text x="84.8212%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,667 instructions, 2.34%)</title><rect x="82.9461%" y="133" width="2.3402%" height="15" fill="rgb(211,157,3)" fg:x="59085" fg:w="1667"/><text x="83.2391%" y="143.50">&lt;..</text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (1,947 instructions, 2.73%)</title><rect x="82.6611%" y="149" width="2.7333%" height="15" fill="rgb(234,44,20)" fg:x="58882" fg:w="1947"/><text x="82.9541%" y="159.50">&lt;..</text></g><g><title>candid::ser::TypeSerialize::encode (2,138 instructions, 3.00%)</title><rect x="82.6611%" y="165" width="3.0014%" height="15" fill="rgb(254,138,23)" fg:x="58882" fg:w="2138"/><text x="82.9541%" y="175.50">ca..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="85.6625%" y="165" width="0.0182%" height="15" fill="rgb(206,119,39)" fg:x="61020" fg:w="13"/><text x="85.9555%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (8,646 instructions, 12.14%)</title><rect x="74.7322%" y="181" width="12.1376%" height="15" fill="rgb(231,105,52)" fg:x="53234" fg:w="8646"/><text x="75.0252%" y="191.50">candid::ser::Ty..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="86.8698%" y="181" width="0.0182%" height="15" fill="rgb(250,20,5)" fg:x="61880" fg:w="13"/><text x="87.1628%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="86.8881%" y="133" width="0.1151%" height="15" fill="rgb(215,198,30)" fg:x="61893" fg:w="82"/><text x="87.1811%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.18%)</title><rect x="86.8881%" y="149" width="0.1825%" height="15" fill="rgb(246,142,8)" fg:x="61893" fg:w="130"/><text x="87.1811%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 instructions, 0.30%)</title><rect x="86.8881%" y="165" width="0.2976%" height="15" fill="rgb(243,26,38)" fg:x="61893" fg:w="212"/><text x="87.1811%" y="175.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_variant (264 instructions, 0.37%)</title><rect x="86.8881%" y="181" width="0.3706%" height="15" fill="rgb(205,133,28)" fg:x="61893" fg:w="264"/><text x="87.1811%" y="191.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.73%)</title><rect x="87.2587%" y="165" width="0.7272%" height="15" fill="rgb(212,34,0)" fg:x="62157" fg:w="518"/><text x="87.5517%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="87.9859%" y="117" width="0.1151%" height="15" fill="rgb(251,226,22)" fg:x="62675" fg:w="82"/><text x="88.2789%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.18%)</title><rect x="87.9859%" y="133" width="0.1825%" height="15" fill="rgb(252,119,9)" fg:x="62675" fg:w="130"/><text x="88.2789%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 instructions, 0.30%)</title><rect x="87.9859%" y="149" width="0.2976%" height="15" fill="rgb(213,150,50)" fg:x="62675" fg:w="212"/><text x="88.2789%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="88.2835%" y="149" width="0.1151%" height="15" fill="rgb(212,24,39)" fg:x="62887" fg:w="82"/><text x="88.5765%" y="159.50"></text></g><g><title>memcpy (195 instructions, 0.27%)</title><rect x="88.3986%" y="149" width="0.2737%" height="15" fill="rgb(213,46,39)" fg:x="62969" fg:w="195"/><text x="88.6916%" y="159.50"></text></g><g><title>memcpy (257 instructions, 0.36%)</title><rect x="88.6724%" y="149" width="0.3608%" height="15" fill="rgb(239,106,12)" fg:x="63164" fg:w="257"/><text x="88.9654%" y="159.50"></text></g><g><title>__rust_realloc (118 instructions, 0.17%)</title><rect x="89.0332%" y="117" width="0.1657%" height="15" fill="rgb(249,229,21)" fg:x="63421" fg:w="118"/><text x="89.3261%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.23%)</title><rect x="89.0332%" y="133" width="0.2330%" height="15" fill="rgb(212,158,3)" fg:x="63421" fg:w="166"/><text x="89.3261%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (253 instructions, 0.36%)</title><rect x="89.0332%" y="149" width="0.3552%" height="15" fill="rgb(253,26,48)" fg:x="63421" fg:w="253"/><text x="89.3261%" y="159.50"></text></g><g><title>memcpy (351 instructions, 0.49%)</title><rect x="89.3883%" y="149" width="0.4927%" height="15" fill="rgb(238,178,20)" fg:x="63674" fg:w="351"/><text x="89.6813%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="89.8811%" y="149" width="0.1249%" height="15" fill="rgb(208,86,15)" fg:x="64025" fg:w="89"/><text x="90.1741%" y="159.50"></text></g><g><title>__rust_realloc (118 instructions, 0.17%)</title><rect x="90.0060%" y="117" width="0.1657%" height="15" fill="rgb(239,42,53)" fg:x="64114" fg:w="118"/><text x="90.2990%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.23%)</title><rect x="90.0060%" y="133" width="0.2330%" height="15" fill="rgb(245,226,8)" fg:x="64114" fg:w="166"/><text x="90.2990%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (253 instructions, 0.36%)</title><rect x="90.0060%" y="149" width="0.3552%" height="15" fill="rgb(216,176,32)" fg:x="64114" fg:w="253"/><text x="90.2990%" y="159.50"></text></g><g><title>memcmp (54 instructions, 0.08%)</title><rect x="90.3612%" y="101" width="0.0758%" height="15" fill="rgb(231,186,21)" fg:x="64367" fg:w="54"/><text x="90.6542%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.06%)</title><rect x="90.4370%" y="101" width="0.0604%" height="15" fill="rgb(205,95,49)" fg:x="64421" fg:w="43"/><text x="90.7300%" y="111.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="90.4974%" y="101" width="0.1081%" height="15" fill="rgb(217,145,8)" fg:x="64464" fg:w="77"/><text x="90.7904%" y="111.50"></text></g><g><title>memcmp (261 instructions, 0.37%)</title><rect x="90.6055%" y="69" width="0.3664%" height="15" fill="rgb(239,144,48)" fg:x="64541" fg:w="261"/><text x="90.8984%" y="79.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.06%)</title><rect x="90.9719%" y="69" width="0.0604%" height="15" fill="rgb(214,189,23)" fg:x="64802" fg:w="43"/><text x="91.2648%" y="79.50"></text></g><g><title>memcmp (330 instructions, 0.46%)</title><rect x="91.0322%" y="69" width="0.4633%" height="15" fill="rgb(229,157,17)" fg:x="64845" fg:w="330"/><text x="91.3252%" y="79.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.06%)</title><rect x="91.4955%" y="69" width="0.0604%" height="15" fill="rgb(230,5,48)" fg:x="65175" fg:w="43"/><text x="91.7885%" y="79.50"></text></g><g><title>memcmp (284 instructions, 0.40%)</title><rect x="91.5559%" y="69" width="0.3987%" height="15" fill="rgb(224,156,48)" fg:x="65218" fg:w="284"/><text x="91.8488%" y="79.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.06%)</title><rect x="91.9546%" y="69" width="0.0604%" height="15" fill="rgb(223,14,29)" fg:x="65502" fg:w="43"/><text x="92.2475%" y="79.50"></text></g><g><title>memcmp (123 instructions, 0.17%)</title><rect x="92.0149%" y="69" width="0.1727%" height="15" fill="rgb(229,96,36)" fg:x="65545" fg:w="123"/><text x="92.3079%" y="79.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.06%)</title><rect x="92.1876%" y="69" width="0.0604%" height="15" fill="rgb(231,102,53)" fg:x="65668" fg:w="43"/><text x="92.4806%" y="79.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,667 instructions, 2.34%)</title><rect x="90.6055%" y="85" width="2.3402%" height="15" fill="rgb(210,77,38)" fg:x="64541" fg:w="1667"/><text x="90.8984%" y="95.50">&lt;..</text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (1,736 instructions, 2.44%)</title><rect x="90.6055%" y="101" width="2.4371%" height="15" fill="rgb(235,131,6)" fg:x="64541" fg:w="1736"/><text x="90.8984%" y="111.50">&lt;..</text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (2,171 instructions, 3.05%)</title><rect x="90.3612%" y="117" width="3.0477%" height="15" fill="rgb(252,55,38)" fg:x="64367" fg:w="2171"/><text x="90.6542%" y="127.50">&lt;A..</text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (2,248 instructions, 3.16%)</title><rect x="90.3612%" y="133" width="3.1558%" height="15" fill="rgb(246,38,14)" fg:x="64367" fg:w="2248"/><text x="90.6542%" y="143.50">&lt;c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="93.5170%" y="101" width="0.1151%" height="15" fill="rgb(242,27,5)" fg:x="66615" fg:w="82"/><text x="93.8100%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.18%)</title><rect x="93.5170%" y="117" width="0.1825%" height="15" fill="rgb(228,65,35)" fg:x="66615" fg:w="130"/><text x="93.8100%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 instructions, 0.30%)</title><rect x="93.5170%" y="133" width="0.2976%" height="15" fill="rgb(245,93,11)" fg:x="66615" fg:w="212"/><text x="93.8100%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (2,627 instructions, 3.69%)</title><rect x="90.3612%" y="149" width="3.6879%" height="15" fill="rgb(213,1,31)" fg:x="64367" fg:w="2627"/><text x="90.6542%" y="159.50">can..</text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="94.0491%" y="149" width="0.0491%" height="15" fill="rgb(237,205,14)" fg:x="66994" fg:w="35"/><text x="94.3421%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.08%)</title><rect x="94.0982%" y="149" width="0.0842%" height="15" fill="rgb(232,118,45)" fg:x="67029" fg:w="60"/><text x="94.3912%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (4,874 instructions, 6.84%)</title><rect x="87.9859%" y="165" width="6.8423%" height="15" fill="rgb(218,5,6)" fg:x="62675" fg:w="4874"/><text x="88.2789%" y="175.50">candid:..</text></g><g><title>std::io::Write::write_all (554 instructions, 0.78%)</title><rect x="94.8282%" y="165" width="0.7777%" height="15" fill="rgb(251,87,51)" fg:x="67549" fg:w="554"/><text x="95.1212%" y="175.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.72%)</title><rect x="95.6060%" y="165" width="0.7244%" height="15" fill="rgb(207,225,20)" fg:x="68103" fg:w="516"/><text x="95.8989%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (6,559 instructions, 9.21%)</title><rect x="87.2587%" y="181" width="9.2078%" height="15" fill="rgb(222,78,54)" fg:x="62157" fg:w="6559"/><text x="87.5517%" y="191.50">candid::ser..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.5915%" y="165" width="0.0379%" height="15" fill="rgb(232,85,16)" fg:x="68805" fg:w="27"/><text x="96.8844%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.32%)</title><rect x="96.4665%" y="181" width="0.3243%" height="15" fill="rgb(244,25,33)" fg:x="68716" fg:w="231"/><text x="96.7595%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.12%)</title><rect x="96.7908%" y="181" width="0.1165%" height="15" fill="rgb(233,24,36)" fg:x="68947" fg:w="83"/><text x="97.0838%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="96.9073%" y="165" width="0.0182%" height="15" fill="rgb(253,49,54)" fg:x="69030" fg:w="13"/><text x="97.2003%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="96.9256%" y="165" width="0.0182%" height="15" fill="rgb(245,12,22)" fg:x="69043" fg:w="13"/><text x="97.2186%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.03%)</title><rect x="96.9438%" y="149" width="0.0323%" height="15" fill="rgb(253,141,28)" fg:x="69056" fg:w="23"/><text x="97.2368%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.19%)</title><rect x="96.9438%" y="165" width="0.1937%" height="15" fill="rgb(225,207,27)" fg:x="69056" fg:w="138"/><text x="97.2368%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (297 instructions, 0.42%)</title><rect x="96.9073%" y="181" width="0.4169%" height="15" fill="rgb(220,84,2)" fg:x="69030" fg:w="297"/><text x="97.2003%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="97.3341%" y="181" width="0.0182%" height="15" fill="rgb(224,37,37)" fg:x="69334" fg:w="13"/><text x="97.6271%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="97.3524%" y="165" width="0.0379%" height="15" fill="rgb(220,143,18)" fg:x="69347" fg:w="27"/><text x="97.6453%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.20%)</title><rect x="97.3524%" y="181" width="0.1993%" height="15" fill="rgb(210,88,33)" fg:x="69347" fg:w="142"/><text x="97.6453%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="97.6359%" y="165" width="0.0379%" height="15" fill="rgb(219,87,51)" fg:x="69549" fg:w="27"/><text x="97.9289%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (175 instructions, 0.25%)</title><rect x="97.5517%" y="181" width="0.2457%" height="15" fill="rgb(211,7,35)" fg:x="69489" fg:w="175"/><text x="97.8447%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (31,042 instructions, 43.58%)</title><rect x="55.7621%" y="197" width="43.5781%" height="15" fill="rgb(232,77,2)" fg:x="39721" fg:w="31042"/><text x="56.0550%" y="207.50">ic_cdk::api::call::reply</text></g><g><title>dip721_nft::__canister_method_transfer_from::{{closure}} (70,708 instructions, 99.26%)</title><rect x="0.2639%" y="213" width="99.2630%" height="15" fill="rgb(249,94,25)" fg:x="188" fg:w="70708"/><text x="0.5569%" y="223.50">dip721_nft::__canister_method_transfer_from::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="99.5269%" y="213" width="0.0197%" height="15" fill="rgb(215,112,2)" fg:x="70896" fg:w="14"/><text x="99.8199%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="99.5480%" y="213" width="0.1249%" height="15" fill="rgb(226,115,48)" fg:x="70911" fg:w="89"/><text x="99.8409%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="99.6729%" y="213" width="0.1249%" height="15" fill="rgb(249,196,10)" fg:x="71000" fg:w="89"/><text x="99.9659%" y="223.50"></text></g><g><title>all (71,233 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(237,109,14)" fg:x="0" fg:w="71233"/><text x="0.2930%" y="255.50"></text></g><g><title>canister_update transferFromDip721 (71,233 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(217,103,53)" fg:x="0" fg:w="71233"/><text x="0.2930%" y="239.50">canister_update transferFromDip721</text></g></svg></svg>