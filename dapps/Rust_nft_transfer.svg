<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="326" onload="init(evt)" viewBox="0 0 1024 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="326" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">NFT.transferFromDip721</text><text id="details" fill="rgb(0,0,0)" x="10" y="309.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="309.00"> </text><svg id="frames" x="10" width="1004" total_samples="73609"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.11%)</title><rect x="0.0000%" y="245" width="0.1128%" height="15" fill="rgb(207,70,0)" fg:x="0" fg:w="83"/><text x="0.2930%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="0.1128%" y="245" width="0.1114%" height="15" fill="rgb(223,129,7)" fg:x="83" fg:w="82"/><text x="0.4057%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="0.2242%" y="197" width="0.1114%" height="15" fill="rgb(246,105,7)" fg:x="165" fg:w="82"/><text x="0.5171%" y="207.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (1,207 instructions, 1.64%)</title><rect x="0.2242%" y="213" width="1.6397%" height="15" fill="rgb(215,154,42)" fg:x="165" fg:w="1207"/><text x="0.5171%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.07%)</title><rect x="1.8639%" y="181" width="0.0693%" height="15" fill="rgb(220,215,30)" fg:x="1372" fg:w="51"/><text x="2.1569%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.59%)</title><rect x="1.9332%" y="181" width="0.5937%" height="15" fill="rgb(228,81,51)" fg:x="1423" fg:w="437"/><text x="2.2262%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.09%)</title><rect x="2.5269%" y="181" width="0.0869%" height="15" fill="rgb(247,71,54)" fg:x="1860" fg:w="64"/><text x="2.8198%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="2.6138%" y="181" width="0.0829%" height="15" fill="rgb(234,176,34)" fg:x="1924" fg:w="61"/><text x="2.9068%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="2.6967%" y="181" width="0.0829%" height="15" fill="rgb(241,103,54)" fg:x="1985" fg:w="61"/><text x="2.9896%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="2.7796%" y="181" width="0.0829%" height="15" fill="rgb(228,22,34)" fg:x="2046" fg:w="61"/><text x="3.0725%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="2.8624%" y="181" width="0.0829%" height="15" fill="rgb(241,179,48)" fg:x="2107" fg:w="61"/><text x="3.1554%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.07%)</title><rect x="2.9453%" y="181" width="0.0693%" height="15" fill="rgb(235,167,37)" fg:x="2168" fg:w="51"/><text x="3.2383%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.13%)</title><rect x="3.0146%" y="181" width="0.1291%" height="15" fill="rgb(213,109,30)" fg:x="2219" fg:w="95"/><text x="3.3075%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.59%)</title><rect x="3.1436%" y="181" width="0.5937%" height="15" fill="rgb(222,172,16)" fg:x="2314" fg:w="437"/><text x="3.4366%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="3.7373%" y="181" width="0.0258%" height="15" fill="rgb(233,192,5)" fg:x="2751" fg:w="19"/><text x="4.0303%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="3.7631%" y="149" width="0.1114%" height="15" fill="rgb(247,189,41)" fg:x="2770" fg:w="82"/><text x="4.0561%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.09%)</title><rect x="3.8745%" y="117" width="0.0910%" height="15" fill="rgb(218,134,47)" fg:x="2852" fg:w="67"/><text x="4.1675%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.13%)</title><rect x="3.8745%" y="133" width="0.1304%" height="15" fill="rgb(216,29,3)" fg:x="2852" fg:w="96"/><text x="4.1675%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.01%)</title><rect x="4.0049%" y="85" width="0.0149%" height="15" fill="rgb(246,140,12)" fg:x="2948" fg:w="11"/><text x="4.2979%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.07%)</title><rect x="4.0199%" y="69" width="0.0693%" height="15" fill="rgb(230,136,11)" fg:x="2959" fg:w="51"/><text x="4.3129%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.11%)</title><rect x="4.0199%" y="85" width="0.1087%" height="15" fill="rgb(247,22,47)" fg:x="2959" fg:w="80"/><text x="4.3129%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.22%)</title><rect x="4.0049%" y="101" width="0.2174%" height="15" fill="rgb(218,84,22)" fg:x="2948" fg:w="160"/><text x="4.2979%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (231 instructions, 0.31%)</title><rect x="4.0049%" y="117" width="0.3138%" height="15" fill="rgb(216,87,39)" fg:x="2948" fg:w="231"/><text x="4.2979%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (241 instructions, 0.33%)</title><rect x="4.0049%" y="133" width="0.3274%" height="15" fill="rgb(221,178,8)" fg:x="2948" fg:w="241"/><text x="4.2979%" y="143.50"></text></g><g><title>core::fmt::write (470 instructions, 0.64%)</title><rect x="3.8745%" y="149" width="0.6385%" height="15" fill="rgb(230,42,11)" fg:x="2852" fg:w="470"/><text x="4.1675%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (688 instructions, 0.93%)</title><rect x="3.7631%" y="165" width="0.9347%" height="15" fill="rgb(237,229,4)" fg:x="2770" fg:w="688"/><text x="4.0561%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.09%)</title><rect x="4.6978%" y="165" width="0.0869%" height="15" fill="rgb(222,31,33)" fg:x="3458" fg:w="64"/><text x="4.9908%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="4.7847%" y="165" width="0.1209%" height="15" fill="rgb(210,17,39)" fg:x="3522" fg:w="89"/><text x="5.0777%" y="175.50"></text></g><g><title>binread::binary_template::write_vec (952 instructions, 1.29%)</title><rect x="3.7631%" y="181" width="1.2933%" height="15" fill="rgb(244,93,20)" fg:x="2770" fg:w="952"/><text x="4.0561%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 instructions, 0.04%)</title><rect x="5.0564%" y="181" width="0.0367%" height="15" fill="rgb(210,40,47)" fg:x="3722" fg:w="27"/><text x="5.3494%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.06%)</title><rect x="5.0931%" y="181" width="0.0625%" height="15" fill="rgb(239,211,47)" fg:x="3749" fg:w="46"/><text x="5.3861%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.13%)</title><rect x="5.1556%" y="181" width="0.1291%" height="15" fill="rgb(251,223,49)" fg:x="3795" fg:w="95"/><text x="5.4486%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.59%)</title><rect x="5.2847%" y="165" width="0.5937%" height="15" fill="rgb(221,149,5)" fg:x="3890" fg:w="437"/><text x="5.5776%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="5.8784%" y="165" width="0.0258%" height="15" fill="rgb(219,224,51)" fg:x="4327" fg:w="19"/><text x="6.1713%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="5.9042%" y="133" width="0.1114%" height="15" fill="rgb(223,7,8)" fg:x="4346" fg:w="82"/><text x="6.1971%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.09%)</title><rect x="6.0156%" y="101" width="0.0910%" height="15" fill="rgb(241,217,22)" fg:x="4428" fg:w="67"/><text x="6.3085%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.13%)</title><rect x="6.0156%" y="117" width="0.1304%" height="15" fill="rgb(248,209,0)" fg:x="4428" fg:w="96"/><text x="6.3085%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.01%)</title><rect x="6.1460%" y="69" width="0.0149%" height="15" fill="rgb(217,205,4)" fg:x="4524" fg:w="11"/><text x="6.4390%" y="79.50"></text></g><g><title>memcpy (51 instructions, 0.07%)</title><rect x="6.1609%" y="53" width="0.0693%" height="15" fill="rgb(228,124,39)" fg:x="4535" fg:w="51"/><text x="6.4539%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.11%)</title><rect x="6.1609%" y="69" width="0.1087%" height="15" fill="rgb(250,116,42)" fg:x="4535" fg:w="80"/><text x="6.4539%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.22%)</title><rect x="6.1460%" y="85" width="0.2174%" height="15" fill="rgb(223,202,9)" fg:x="4524" fg:w="160"/><text x="6.4390%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (231 instructions, 0.31%)</title><rect x="6.1460%" y="101" width="0.3138%" height="15" fill="rgb(242,222,40)" fg:x="4524" fg:w="231"/><text x="6.4390%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (241 instructions, 0.33%)</title><rect x="6.1460%" y="117" width="0.3274%" height="15" fill="rgb(229,99,46)" fg:x="4524" fg:w="241"/><text x="6.4390%" y="127.50"></text></g><g><title>core::fmt::write (470 instructions, 0.64%)</title><rect x="6.0156%" y="133" width="0.6385%" height="15" fill="rgb(225,56,46)" fg:x="4428" fg:w="470"/><text x="6.3085%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (688 instructions, 0.93%)</title><rect x="5.9042%" y="149" width="0.9347%" height="15" fill="rgb(227,94,5)" fg:x="4346" fg:w="688"/><text x="6.1971%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.09%)</title><rect x="6.8388%" y="149" width="0.0869%" height="15" fill="rgb(205,112,38)" fg:x="5034" fg:w="64"/><text x="7.1318%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="6.9258%" y="149" width="0.1209%" height="15" fill="rgb(231,133,46)" fg:x="5098" fg:w="89"/><text x="7.2188%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (952 instructions, 1.29%)</title><rect x="5.9042%" y="165" width="1.2933%" height="15" fill="rgb(217,16,9)" fg:x="4346" fg:w="952"/><text x="6.1971%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.07%)</title><rect x="7.1975%" y="149" width="0.0693%" height="15" fill="rgb(249,173,9)" fg:x="5298" fg:w="51"/><text x="7.4905%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.16%)</title><rect x="7.2668%" y="149" width="0.1603%" height="15" fill="rgb(205,163,53)" fg:x="5349" fg:w="118"/><text x="7.5597%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.06%)</title><rect x="7.4271%" y="149" width="0.0625%" height="15" fill="rgb(217,54,41)" fg:x="5467" fg:w="46"/><text x="7.7200%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (288 instructions, 0.39%)</title><rect x="7.1975%" y="165" width="0.3913%" height="15" fill="rgb(228,216,12)" fg:x="5298" fg:w="288"/><text x="7.4905%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.11%)</title><rect x="7.5887%" y="165" width="0.1128%" height="15" fill="rgb(244,228,15)" fg:x="5586" fg:w="83"/><text x="7.8817%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.07%)</title><rect x="7.7015%" y="149" width="0.0693%" height="15" fill="rgb(221,176,53)" fg:x="5669" fg:w="51"/><text x="7.9945%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.16%)</title><rect x="7.7708%" y="149" width="0.1603%" height="15" fill="rgb(205,94,34)" fg:x="5720" fg:w="118"/><text x="8.0638%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.06%)</title><rect x="7.9311%" y="149" width="0.0625%" height="15" fill="rgb(213,110,48)" fg:x="5838" fg:w="46"/><text x="8.2241%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.07%)</title><rect x="8.0928%" y="149" width="0.0693%" height="15" fill="rgb(236,142,28)" fg:x="5957" fg:w="51"/><text x="8.3857%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.16%)</title><rect x="8.1620%" y="149" width="0.1603%" height="15" fill="rgb(225,135,29)" fg:x="6008" fg:w="118"/><text x="8.4550%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.06%)</title><rect x="8.3224%" y="149" width="0.0625%" height="15" fill="rgb(252,45,31)" fg:x="6126" fg:w="46"/><text x="8.6153%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (571 instructions, 0.78%)</title><rect x="7.7015%" y="165" width="0.7757%" height="15" fill="rgb(211,187,50)" fg:x="5669" fg:w="571"/><text x="7.9945%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,636 instructions, 3.58%)</title><rect x="5.2847%" y="181" width="3.5811%" height="15" fill="rgb(229,109,7)" fg:x="3890" fg:w="2636"/><text x="5.5776%" y="191.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.06%)</title><rect x="8.8658%" y="181" width="0.0625%" height="15" fill="rgb(251,131,51)" fg:x="6526" fg:w="46"/><text x="9.1587%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.9283%" y="181" width="0.0204%" height="15" fill="rgb(251,180,35)" fg:x="6572" fg:w="15"/><text x="9.2212%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="8.9486%" y="181" width="0.0109%" height="15" fill="rgb(211,46,32)" fg:x="6587" fg:w="8"/><text x="9.2416%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.11%)</title><rect x="8.9595%" y="165" width="0.1128%" height="15" fill="rgb(248,123,17)" fg:x="6595" fg:w="83"/><text x="9.2525%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.24%)</title><rect x="8.9595%" y="181" width="0.2432%" height="15" fill="rgb(227,141,18)" fg:x="6595" fg:w="179"/><text x="9.2525%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="9.2027%" y="149" width="0.1114%" height="15" fill="rgb(216,102,9)" fg:x="6774" fg:w="82"/><text x="9.4956%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.17%)</title><rect x="9.2027%" y="165" width="0.1671%" height="15" fill="rgb(253,47,13)" fg:x="6774" fg:w="123"/><text x="9.4956%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (210 instructions, 0.29%)</title><rect x="9.2027%" y="181" width="0.2853%" height="15" fill="rgb(226,93,23)" fg:x="6774" fg:w="210"/><text x="9.4956%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="9.4880%" y="165" width="0.1114%" height="15" fill="rgb(247,104,17)" fg:x="6984" fg:w="82"/><text x="9.7809%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="9.7298%" y="165" width="0.1114%" height="15" fill="rgb(233,203,26)" fg:x="7162" fg:w="82"/><text x="10.0228%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (356 instructions, 0.48%)</title><rect x="9.4880%" y="181" width="0.4836%" height="15" fill="rgb(244,98,49)" fg:x="6984" fg:w="356"/><text x="9.7809%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="9.9716%" y="181" width="0.1114%" height="15" fill="rgb(235,134,22)" fg:x="7340" fg:w="82"/><text x="10.2646%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="10.0830%" y="181" width="0.1209%" height="15" fill="rgb(221,70,32)" fg:x="7422" fg:w="89"/><text x="10.3760%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="10.2039%" y="181" width="0.1114%" height="15" fill="rgb(238,15,50)" fg:x="7511" fg:w="82"/><text x="10.4969%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="10.3153%" y="181" width="0.1114%" height="15" fill="rgb(215,221,48)" fg:x="7593" fg:w="82"/><text x="10.6083%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="10.4335%" y="181" width="0.1209%" height="15" fill="rgb(236,73,3)" fg:x="7680" fg:w="89"/><text x="10.7265%" y="191.50"></text></g><g><title>memcpy (392 instructions, 0.53%)</title><rect x="10.5544%" y="181" width="0.5325%" height="15" fill="rgb(250,107,11)" fg:x="7769" fg:w="392"/><text x="10.8474%" y="191.50"></text></g><g><title>memcpy (392 instructions, 0.53%)</title><rect x="11.0870%" y="181" width="0.5325%" height="15" fill="rgb(242,39,14)" fg:x="8161" fg:w="392"/><text x="11.3799%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.68%)</title><rect x="11.6195%" y="181" width="0.6847%" height="15" fill="rgb(248,164,37)" fg:x="8553" fg:w="504"/><text x="11.9125%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (9,089 instructions, 12.35%)</title><rect x="1.8639%" y="197" width="12.3477%" height="15" fill="rgb(217,60,12)" fg:x="1372" fg:w="9089"/><text x="2.1569%" y="207.50">candid::de::IDL..</text></g><g><title>memcpy (408 instructions, 0.55%)</title><rect x="14.2116%" y="197" width="0.5543%" height="15" fill="rgb(240,125,29)" fg:x="10461" fg:w="408"/><text x="14.5045%" y="207.50"></text></g><g><title>memcpy (408 instructions, 0.55%)</title><rect x="14.7659%" y="197" width="0.5543%" height="15" fill="rgb(208,207,28)" fg:x="10869" fg:w="408"/><text x="15.0588%" y="207.50"></text></g><g><title>candid::types::internal::find_type (148 instructions, 0.20%)</title><rect x="15.3201%" y="181" width="0.2011%" height="15" fill="rgb(209,159,27)" fg:x="11277" fg:w="148"/><text x="15.6131%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="15.5212%" y="181" width="0.1114%" height="15" fill="rgb(251,176,53)" fg:x="11425" fg:w="82"/><text x="15.8142%" y="191.50"></text></g><g><title>memmove (268 instructions, 0.36%)</title><rect x="15.6326%" y="165" width="0.3641%" height="15" fill="rgb(211,85,7)" fg:x="11507" fg:w="268"/><text x="15.9256%" y="175.50"></text></g><g><title>memmove (140 instructions, 0.19%)</title><rect x="15.9967%" y="165" width="0.1902%" height="15" fill="rgb(216,64,54)" fg:x="11775" fg:w="140"/><text x="16.2897%" y="175.50"></text></g><g><title>candid::types::internal::env_add (673 instructions, 0.91%)</title><rect x="15.6326%" y="181" width="0.9143%" height="15" fill="rgb(217,54,24)" fg:x="11507" fg:w="673"/><text x="15.9256%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="16.5469%" y="181" width="0.1114%" height="15" fill="rgb(208,206,53)" fg:x="12180" fg:w="82"/><text x="16.8399%" y="191.50"></text></g><g><title>memcmp (537 instructions, 0.73%)</title><rect x="16.6583%" y="165" width="0.7295%" height="15" fill="rgb(251,74,39)" fg:x="12262" fg:w="537"/><text x="16.9513%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="17.3878%" y="149" width="0.1209%" height="15" fill="rgb(226,47,5)" fg:x="12799" fg:w="89"/><text x="17.6808%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.22%)</title><rect x="17.3878%" y="165" width="0.2174%" height="15" fill="rgb(234,111,33)" fg:x="12799" fg:w="160"/><text x="17.6808%" y="175.50"></text></g><g><title>candid::types::internal::env_add (917 instructions, 1.25%)</title><rect x="16.6583%" y="181" width="1.2458%" height="15" fill="rgb(251,14,10)" fg:x="12262" fg:w="917"/><text x="16.9513%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="17.9041%" y="165" width="0.0462%" height="15" fill="rgb(232,43,0)" fg:x="13179" fg:w="34"/><text x="18.1970%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="17.9503%" y="165" width="0.0462%" height="15" fill="rgb(222,68,43)" fg:x="13213" fg:w="34"/><text x="18.2432%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="17.9964%" y="165" width="0.0462%" height="15" fill="rgb(217,24,23)" fg:x="13247" fg:w="34"/><text x="18.2894%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="18.0426%" y="165" width="0.0462%" height="15" fill="rgb(229,209,14)" fg:x="13281" fg:w="34"/><text x="18.3356%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="18.0888%" y="165" width="0.0462%" height="15" fill="rgb(250,149,48)" fg:x="13315" fg:w="34"/><text x="18.3818%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="18.1350%" y="165" width="0.0462%" height="15" fill="rgb(210,120,37)" fg:x="13349" fg:w="34"/><text x="18.4280%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="18.1812%" y="165" width="0.0462%" height="15" fill="rgb(210,21,8)" fg:x="13383" fg:w="34"/><text x="18.4742%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="18.2274%" y="165" width="0.0462%" height="15" fill="rgb(243,145,7)" fg:x="13417" fg:w="34"/><text x="18.5204%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (49 instructions, 0.07%)</title><rect x="18.2736%" y="165" width="0.0666%" height="15" fill="rgb(238,178,32)" fg:x="13451" fg:w="49"/><text x="18.5665%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="18.3401%" y="165" width="0.0190%" height="15" fill="rgb(222,4,10)" fg:x="13500" fg:w="14"/><text x="18.6331%" y="175.50"></text></g><g><title>candid::types::internal::env_id (775 instructions, 1.05%)</title><rect x="17.9041%" y="181" width="1.0529%" height="15" fill="rgb(239,7,37)" fg:x="13179" fg:w="775"/><text x="18.1970%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,796 instructions, 3.80%)</title><rect x="15.3201%" y="197" width="3.7984%" height="15" fill="rgb(215,31,37)" fg:x="11277" fg:w="2796"/><text x="15.6131%" y="207.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.07%)</title><rect x="19.1186%" y="181" width="0.0666%" height="15" fill="rgb(224,83,33)" fg:x="14073" fg:w="49"/><text x="19.4116%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.11%)</title><rect x="19.1852%" y="165" width="0.1128%" height="15" fill="rgb(239,55,3)" fg:x="14122" fg:w="83"/><text x="19.4781%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.03%)</title><rect x="19.3944%" y="149" width="0.0312%" height="15" fill="rgb(247,92,11)" fg:x="14276" fg:w="23"/><text x="19.6873%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.19%)</title><rect x="19.3944%" y="165" width="0.1875%" height="15" fill="rgb(239,200,7)" fg:x="14276" fg:w="138"/><text x="19.6873%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (363 instructions, 0.49%)</title><rect x="19.1852%" y="181" width="0.4931%" height="15" fill="rgb(227,115,8)" fg:x="14122" fg:w="363"/><text x="19.4781%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.05%)</title><rect x="19.6783%" y="165" width="0.0503%" height="15" fill="rgb(215,189,27)" fg:x="14485" fg:w="37"/><text x="19.9713%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.05%)</title><rect x="19.7286%" y="165" width="0.0503%" height="15" fill="rgb(251,216,39)" fg:x="14522" fg:w="37"/><text x="20.0215%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="19.7788%" y="165" width="0.0462%" height="15" fill="rgb(207,29,47)" fg:x="14559" fg:w="34"/><text x="20.0718%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="19.8250%" y="165" width="0.0462%" height="15" fill="rgb(210,71,34)" fg:x="14593" fg:w="34"/><text x="20.1180%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="19.8712%" y="165" width="0.1114%" height="15" fill="rgb(253,217,51)" fg:x="14627" fg:w="82"/><text x="20.1642%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.07%)</title><rect x="19.9826%" y="149" width="0.0693%" height="15" fill="rgb(222,117,46)" fg:x="14709" fg:w="51"/><text x="20.2756%" y="159.50"></text></g><g><title>binread::binary_template::write_named (61 instructions, 0.08%)</title><rect x="20.0519%" y="133" width="0.0829%" height="15" fill="rgb(226,132,6)" fg:x="14760" fg:w="61"/><text x="20.3449%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (140 instructions, 0.19%)</title><rect x="20.0519%" y="149" width="0.1902%" height="15" fill="rgb(254,145,51)" fg:x="14760" fg:w="140"/><text x="20.3449%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (94 instructions, 0.13%)</title><rect x="20.2421%" y="149" width="0.1277%" height="15" fill="rgb(231,199,27)" fg:x="14900" fg:w="94"/><text x="20.5351%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.59%)</title><rect x="20.3698%" y="149" width="0.5937%" height="15" fill="rgb(245,158,14)" fg:x="14994" fg:w="437"/><text x="20.6628%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="20.9635%" y="117" width="0.1114%" height="15" fill="rgb(240,113,14)" fg:x="15431" fg:w="82"/><text x="21.2564%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.09%)</title><rect x="21.0749%" y="85" width="0.0910%" height="15" fill="rgb(210,20,13)" fg:x="15513" fg:w="67"/><text x="21.3678%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.13%)</title><rect x="21.0749%" y="101" width="0.1304%" height="15" fill="rgb(241,144,13)" fg:x="15513" fg:w="96"/><text x="21.3678%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.01%)</title><rect x="21.2053%" y="53" width="0.0149%" height="15" fill="rgb(235,43,34)" fg:x="15609" fg:w="11"/><text x="21.4983%" y="63.50"></text></g><g><title>memcpy (51 instructions, 0.07%)</title><rect x="21.2202%" y="37" width="0.0693%" height="15" fill="rgb(208,36,20)" fg:x="15620" fg:w="51"/><text x="21.5132%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.11%)</title><rect x="21.2202%" y="53" width="0.1087%" height="15" fill="rgb(239,204,10)" fg:x="15620" fg:w="80"/><text x="21.5132%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.22%)</title><rect x="21.2053%" y="69" width="0.2174%" height="15" fill="rgb(217,84,43)" fg:x="15609" fg:w="160"/><text x="21.4983%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (231 instructions, 0.31%)</title><rect x="21.2053%" y="85" width="0.3138%" height="15" fill="rgb(241,170,50)" fg:x="15609" fg:w="231"/><text x="21.4983%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (241 instructions, 0.33%)</title><rect x="21.2053%" y="101" width="0.3274%" height="15" fill="rgb(226,205,29)" fg:x="15609" fg:w="241"/><text x="21.4983%" y="111.50"></text></g><g><title>core::fmt::write (470 instructions, 0.64%)</title><rect x="21.0749%" y="117" width="0.6385%" height="15" fill="rgb(233,113,1)" fg:x="15513" fg:w="470"/><text x="21.3678%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (688 instructions, 0.93%)</title><rect x="20.9635%" y="133" width="0.9347%" height="15" fill="rgb(253,98,13)" fg:x="15431" fg:w="688"/><text x="21.2564%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.09%)</title><rect x="21.8981%" y="133" width="0.0869%" height="15" fill="rgb(211,115,12)" fg:x="16119" fg:w="64"/><text x="22.1911%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="21.9851%" y="133" width="0.1209%" height="15" fill="rgb(208,12,16)" fg:x="16183" fg:w="89"/><text x="22.2781%" y="143.50"></text></g><g><title>binread::binary_template::write_vec (952 instructions, 1.29%)</title><rect x="20.9635%" y="149" width="1.2933%" height="15" fill="rgb(237,193,54)" fg:x="15431" fg:w="952"/><text x="21.2564%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="22.2568%" y="133" width="0.0829%" height="15" fill="rgb(243,22,42)" fg:x="16383" fg:w="61"/><text x="22.5498%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 instructions, 0.16%)</title><rect x="22.2568%" y="149" width="0.1644%" height="15" fill="rgb(233,151,36)" fg:x="16383" fg:w="121"/><text x="22.5498%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="22.4212%" y="149" width="0.1114%" height="15" fill="rgb(237,57,45)" fg:x="16504" fg:w="82"/><text x="22.7141%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="22.5326%" y="133" width="0.0829%" height="15" fill="rgb(221,88,17)" fg:x="16586" fg:w="61"/><text x="22.8255%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="22.6970%" y="133" width="0.0829%" height="15" fill="rgb(230,79,15)" fg:x="16707" fg:w="61"/><text x="22.9899%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="22.8613%" y="133" width="0.0829%" height="15" fill="rgb(213,57,13)" fg:x="16828" fg:w="61"/><text x="23.1543%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="23.0257%" y="133" width="0.0829%" height="15" fill="rgb(222,116,39)" fg:x="16949" fg:w="61"/><text x="23.3187%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="23.1901%" y="133" width="0.0829%" height="15" fill="rgb(245,107,2)" fg:x="17070" fg:w="61"/><text x="23.4831%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="23.3545%" y="133" width="0.0829%" height="15" fill="rgb(238,1,10)" fg:x="17191" fg:w="61"/><text x="23.6474%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="23.5189%" y="133" width="0.0829%" height="15" fill="rgb(249,4,48)" fg:x="17312" fg:w="61"/><text x="23.8118%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="23.6832%" y="133" width="0.0829%" height="15" fill="rgb(223,151,18)" fg:x="17433" fg:w="61"/><text x="23.9762%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (968 instructions, 1.32%)</title><rect x="22.5326%" y="149" width="1.3151%" height="15" fill="rgb(227,65,43)" fg:x="16586" fg:w="968"/><text x="22.8255%" y="159.50"></text></g><g><title>__rust_realloc (77 instructions, 0.10%)</title><rect x="23.8476%" y="117" width="0.1046%" height="15" fill="rgb(218,40,45)" fg:x="17554" fg:w="77"/><text x="24.1406%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 instructions, 0.16%)</title><rect x="23.8476%" y="133" width="0.1630%" height="15" fill="rgb(252,121,31)" fg:x="17554" fg:w="120"/><text x="24.1406%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.28%)</title><rect x="23.8476%" y="149" width="0.2799%" height="15" fill="rgb(219,158,43)" fg:x="17554" fg:w="206"/><text x="24.1406%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="24.1275%" y="133" width="0.0829%" height="15" fill="rgb(231,162,42)" fg:x="17760" fg:w="61"/><text x="24.4205%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="24.2919%" y="133" width="0.0829%" height="15" fill="rgb(217,179,25)" fg:x="17881" fg:w="61"/><text x="24.5848%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="24.4562%" y="133" width="0.0829%" height="15" fill="rgb(206,212,31)" fg:x="18002" fg:w="61"/><text x="24.7492%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="24.6206%" y="133" width="0.0829%" height="15" fill="rgb(235,144,12)" fg:x="18123" fg:w="61"/><text x="24.9136%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="24.7850%" y="133" width="0.0829%" height="15" fill="rgb(213,51,10)" fg:x="18244" fg:w="61"/><text x="25.0780%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="24.9494%" y="133" width="0.0829%" height="15" fill="rgb(231,145,14)" fg:x="18365" fg:w="61"/><text x="25.2424%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="25.1138%" y="133" width="0.0829%" height="15" fill="rgb(235,15,28)" fg:x="18486" fg:w="61"/><text x="25.4067%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="25.2782%" y="133" width="0.0829%" height="15" fill="rgb(237,206,10)" fg:x="18607" fg:w="61"/><text x="25.5711%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (968 instructions, 1.32%)</title><rect x="24.1275%" y="149" width="1.3151%" height="15" fill="rgb(236,227,27)" fg:x="17760" fg:w="968"/><text x="24.4205%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="25.4425%" y="101" width="0.1114%" height="15" fill="rgb(246,83,35)" fg:x="18728" fg:w="82"/><text x="25.7355%" y="111.50"></text></g><g><title>memcpy (136 instructions, 0.18%)</title><rect x="25.5539%" y="101" width="0.1848%" height="15" fill="rgb(220,136,24)" fg:x="18810" fg:w="136"/><text x="25.8469%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="25.7387%" y="101" width="0.1209%" height="15" fill="rgb(217,3,25)" fg:x="18946" fg:w="89"/><text x="26.0317%" y="111.50"></text></g><g><title>__rust_realloc (436 instructions, 0.59%)</title><rect x="25.4425%" y="117" width="0.5923%" height="15" fill="rgb(239,24,14)" fg:x="18728" fg:w="436"/><text x="25.7355%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (479 instructions, 0.65%)</title><rect x="25.4425%" y="133" width="0.6507%" height="15" fill="rgb(244,16,53)" fg:x="18728" fg:w="479"/><text x="25.7355%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (565 instructions, 0.77%)</title><rect x="25.4425%" y="149" width="0.7676%" height="15" fill="rgb(208,175,44)" fg:x="18728" fg:w="565"/><text x="25.7355%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="26.2101%" y="133" width="0.0829%" height="15" fill="rgb(252,18,48)" fg:x="19293" fg:w="61"/><text x="26.5031%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="26.3745%" y="133" width="0.0829%" height="15" fill="rgb(234,199,32)" fg:x="19414" fg:w="61"/><text x="26.6675%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="26.5389%" y="133" width="0.0829%" height="15" fill="rgb(225,77,54)" fg:x="19535" fg:w="61"/><text x="26.8318%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="26.7033%" y="133" width="0.0829%" height="15" fill="rgb(225,42,25)" fg:x="19656" fg:w="61"/><text x="26.9962%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="26.8676%" y="133" width="0.0829%" height="15" fill="rgb(242,227,46)" fg:x="19777" fg:w="61"/><text x="27.1606%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="27.0320%" y="133" width="0.0829%" height="15" fill="rgb(246,197,35)" fg:x="19898" fg:w="61"/><text x="27.3250%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="27.1964%" y="133" width="0.0829%" height="15" fill="rgb(215,159,26)" fg:x="20019" fg:w="61"/><text x="27.4894%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="27.3608%" y="133" width="0.0829%" height="15" fill="rgb(212,194,50)" fg:x="20140" fg:w="61"/><text x="27.6538%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="27.5252%" y="133" width="0.0829%" height="15" fill="rgb(246,132,1)" fg:x="20261" fg:w="61"/><text x="27.8181%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="27.6895%" y="133" width="0.0829%" height="15" fill="rgb(217,71,7)" fg:x="20382" fg:w="61"/><text x="27.9825%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="27.8539%" y="133" width="0.0829%" height="15" fill="rgb(252,59,32)" fg:x="20503" fg:w="61"/><text x="28.1469%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="28.0183%" y="133" width="0.0829%" height="15" fill="rgb(253,204,25)" fg:x="20624" fg:w="61"/><text x="28.3113%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,452 instructions, 1.97%)</title><rect x="26.2101%" y="149" width="1.9726%" height="15" fill="rgb(232,21,16)" fg:x="19293" fg:w="1452"/><text x="26.5031%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 instructions, 0.04%)</title><rect x="28.1827%" y="149" width="0.0435%" height="15" fill="rgb(248,90,29)" fg:x="20745" fg:w="32"/><text x="28.4757%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.06%)</title><rect x="28.2262%" y="149" width="0.0625%" height="15" fill="rgb(249,223,7)" fg:x="20777" fg:w="46"/><text x="28.5191%" y="159.50"></text></g><g><title>binread::BinRead::read (7,469 instructions, 10.15%)</title><rect x="19.9826%" y="165" width="10.1469%" height="15" fill="rgb(231,119,42)" fg:x="14709" fg:w="7469"/><text x="20.2756%" y="175.50">binread::Bin..</text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.04%)</title><rect x="30.1295%" y="165" width="0.0421%" height="15" fill="rgb(215,41,35)" fg:x="22178" fg:w="31"/><text x="30.4224%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="30.1716%" y="117" width="0.1114%" height="15" fill="rgb(220,44,45)" fg:x="22209" fg:w="82"/><text x="30.4646%" y="127.50"></text></g><g><title>memcpy (211 instructions, 0.29%)</title><rect x="30.2830%" y="117" width="0.2866%" height="15" fill="rgb(253,197,36)" fg:x="22291" fg:w="211"/><text x="30.5760%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="30.5696%" y="117" width="0.1209%" height="15" fill="rgb(245,225,54)" fg:x="22502" fg:w="89"/><text x="30.8626%" y="127.50"></text></g><g><title>__rust_realloc (511 instructions, 0.69%)</title><rect x="30.1716%" y="133" width="0.6942%" height="15" fill="rgb(239,94,37)" fg:x="22209" fg:w="511"/><text x="30.4646%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (554 instructions, 0.75%)</title><rect x="30.1716%" y="149" width="0.7526%" height="15" fill="rgb(242,217,10)" fg:x="22209" fg:w="554"/><text x="30.4646%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (640 instructions, 0.87%)</title><rect x="30.1716%" y="165" width="0.8695%" height="15" fill="rgb(250,193,7)" fg:x="22209" fg:w="640"/><text x="30.4646%" y="175.50"></text></g><g><title>memcpy (305 instructions, 0.41%)</title><rect x="31.0410%" y="165" width="0.4144%" height="15" fill="rgb(230,104,19)" fg:x="22849" fg:w="305"/><text x="31.3340%" y="175.50"></text></g><g><title>memcpy (260 instructions, 0.35%)</title><rect x="31.4554%" y="165" width="0.3532%" height="15" fill="rgb(230,181,4)" fg:x="23154" fg:w="260"/><text x="31.7484%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.08%)</title><rect x="31.8086%" y="165" width="0.0829%" height="15" fill="rgb(216,219,49)" fg:x="23414" fg:w="61"/><text x="32.1016%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="31.8915%" y="149" width="0.1209%" height="15" fill="rgb(254,144,0)" fg:x="23475" fg:w="89"/><text x="32.1844%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (130 instructions, 0.18%)</title><rect x="31.8915%" y="165" width="0.1766%" height="15" fill="rgb(205,209,38)" fg:x="23475" fg:w="130"/><text x="32.1844%" y="175.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (9,545 instructions, 12.97%)</title><rect x="19.6783%" y="181" width="12.9672%" height="15" fill="rgb(240,21,42)" fg:x="14485" fg:w="9545"/><text x="19.9713%" y="191.50">&lt;ic_principal::P..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="32.6455%" y="181" width="0.0190%" height="15" fill="rgb(241,132,3)" fg:x="24030" fg:w="14"/><text x="32.9384%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="32.6645%" y="181" width="0.0190%" height="15" fill="rgb(225,14,2)" fg:x="24044" fg:w="14"/><text x="32.9575%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="32.6835%" y="181" width="0.0190%" height="15" fill="rgb(210,141,35)" fg:x="24058" fg:w="14"/><text x="32.9765%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (10,255 instructions, 13.93%)</title><rect x="19.1186%" y="197" width="13.9317%" height="15" fill="rgb(251,14,44)" fg:x="14073" fg:w="10255"/><text x="19.4116%" y="207.50">candid::de::IDLDes..</text></g><g><title>memcmp (537 instructions, 0.73%)</title><rect x="33.0503%" y="165" width="0.7295%" height="15" fill="rgb(247,48,18)" fg:x="24328" fg:w="537"/><text x="33.3433%" y="175.50"></text></g><g><title>candid::types::internal::find_type (732 instructions, 0.99%)</title><rect x="33.0503%" y="181" width="0.9944%" height="15" fill="rgb(225,0,40)" fg:x="24328" fg:w="732"/><text x="33.3433%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (776 instructions, 1.05%)</title><rect x="33.0503%" y="197" width="1.0542%" height="15" fill="rgb(221,31,33)" fg:x="24328" fg:w="776"/><text x="33.3433%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.07%)</title><rect x="34.1045%" y="181" width="0.0666%" height="15" fill="rgb(237,42,40)" fg:x="25104" fg:w="49"/><text x="34.3975%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.11%)</title><rect x="34.1901%" y="165" width="0.1128%" height="15" fill="rgb(233,51,29)" fg:x="25167" fg:w="83"/><text x="34.4831%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (168 instructions, 0.23%)</title><rect x="34.1711%" y="181" width="0.2282%" height="15" fill="rgb(226,58,20)" fg:x="25153" fg:w="168"/><text x="34.4641%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.05%)</title><rect x="34.3993%" y="165" width="0.0503%" height="15" fill="rgb(208,98,7)" fg:x="25321" fg:w="37"/><text x="34.6923%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.05%)</title><rect x="34.4496%" y="165" width="0.0503%" height="15" fill="rgb(228,143,44)" fg:x="25358" fg:w="37"/><text x="34.7426%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="34.4999%" y="165" width="0.0462%" height="15" fill="rgb(246,55,38)" fg:x="25395" fg:w="34"/><text x="34.7928%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="34.5460%" y="165" width="0.0462%" height="15" fill="rgb(247,87,16)" fg:x="25429" fg:w="34"/><text x="34.8390%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="34.5922%" y="165" width="0.1114%" height="15" fill="rgb(234,129,42)" fg:x="25463" fg:w="82"/><text x="34.8852%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.07%)</title><rect x="34.7036%" y="149" width="0.0693%" height="15" fill="rgb(220,82,16)" fg:x="25545" fg:w="51"/><text x="34.9966%" y="159.50"></text></g><g><title>binread::binary_template::write_named (61 instructions, 0.08%)</title><rect x="34.7729%" y="133" width="0.0829%" height="15" fill="rgb(211,88,4)" fg:x="25596" fg:w="61"/><text x="35.0659%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (140 instructions, 0.19%)</title><rect x="34.7729%" y="149" width="0.1902%" height="15" fill="rgb(248,151,21)" fg:x="25596" fg:w="140"/><text x="35.0659%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (94 instructions, 0.13%)</title><rect x="34.9631%" y="149" width="0.1277%" height="15" fill="rgb(238,163,6)" fg:x="25736" fg:w="94"/><text x="35.2561%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.59%)</title><rect x="35.0908%" y="149" width="0.5937%" height="15" fill="rgb(209,183,11)" fg:x="25830" fg:w="437"/><text x="35.3838%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="35.6845%" y="117" width="0.1114%" height="15" fill="rgb(219,37,20)" fg:x="26267" fg:w="82"/><text x="35.9775%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.09%)</title><rect x="35.7959%" y="85" width="0.0910%" height="15" fill="rgb(210,158,4)" fg:x="26349" fg:w="67"/><text x="36.0889%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.13%)</title><rect x="35.7959%" y="101" width="0.1304%" height="15" fill="rgb(221,167,53)" fg:x="26349" fg:w="96"/><text x="36.0889%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.01%)</title><rect x="35.9263%" y="53" width="0.0149%" height="15" fill="rgb(237,151,45)" fg:x="26445" fg:w="11"/><text x="36.2193%" y="63.50"></text></g><g><title>memcpy (51 instructions, 0.07%)</title><rect x="35.9413%" y="37" width="0.0693%" height="15" fill="rgb(231,39,3)" fg:x="26456" fg:w="51"/><text x="36.2342%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.11%)</title><rect x="35.9413%" y="53" width="0.1087%" height="15" fill="rgb(212,167,28)" fg:x="26456" fg:w="80"/><text x="36.2342%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.22%)</title><rect x="35.9263%" y="69" width="0.2174%" height="15" fill="rgb(232,178,8)" fg:x="26445" fg:w="160"/><text x="36.2193%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (231 instructions, 0.31%)</title><rect x="35.9263%" y="85" width="0.3138%" height="15" fill="rgb(225,151,20)" fg:x="26445" fg:w="231"/><text x="36.2193%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (241 instructions, 0.33%)</title><rect x="35.9263%" y="101" width="0.3274%" height="15" fill="rgb(238,3,37)" fg:x="26445" fg:w="241"/><text x="36.2193%" y="111.50"></text></g><g><title>core::fmt::write (470 instructions, 0.64%)</title><rect x="35.7959%" y="117" width="0.6385%" height="15" fill="rgb(251,147,42)" fg:x="26349" fg:w="470"/><text x="36.0889%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (688 instructions, 0.93%)</title><rect x="35.6845%" y="133" width="0.9347%" height="15" fill="rgb(208,173,10)" fg:x="26267" fg:w="688"/><text x="35.9775%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.09%)</title><rect x="36.6192%" y="133" width="0.0869%" height="15" fill="rgb(246,225,4)" fg:x="26955" fg:w="64"/><text x="36.9121%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="36.7061%" y="133" width="0.1209%" height="15" fill="rgb(248,102,6)" fg:x="27019" fg:w="89"/><text x="36.9991%" y="143.50"></text></g><g><title>binread::binary_template::write_vec (952 instructions, 1.29%)</title><rect x="35.6845%" y="149" width="1.2933%" height="15" fill="rgb(232,6,21)" fg:x="26267" fg:w="952"/><text x="35.9775%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="36.9778%" y="133" width="0.0829%" height="15" fill="rgb(221,179,22)" fg:x="27219" fg:w="61"/><text x="37.2708%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 instructions, 0.16%)</title><rect x="36.9778%" y="149" width="0.1644%" height="15" fill="rgb(252,50,20)" fg:x="27219" fg:w="121"/><text x="37.2708%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="37.1422%" y="149" width="0.1114%" height="15" fill="rgb(222,56,38)" fg:x="27340" fg:w="82"/><text x="37.4352%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="37.2536%" y="133" width="0.0829%" height="15" fill="rgb(206,193,29)" fg:x="27422" fg:w="61"/><text x="37.5466%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="37.4180%" y="133" width="0.0829%" height="15" fill="rgb(239,192,45)" fg:x="27543" fg:w="61"/><text x="37.7109%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="37.5824%" y="133" width="0.0829%" height="15" fill="rgb(254,18,36)" fg:x="27664" fg:w="61"/><text x="37.8753%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="37.7467%" y="133" width="0.0829%" height="15" fill="rgb(221,127,11)" fg:x="27785" fg:w="61"/><text x="38.0397%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="37.9111%" y="133" width="0.0829%" height="15" fill="rgb(234,146,35)" fg:x="27906" fg:w="61"/><text x="38.2041%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="38.0755%" y="133" width="0.0829%" height="15" fill="rgb(254,201,37)" fg:x="28027" fg:w="61"/><text x="38.3685%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="38.2399%" y="133" width="0.0829%" height="15" fill="rgb(211,202,23)" fg:x="28148" fg:w="61"/><text x="38.5329%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="38.4043%" y="133" width="0.0829%" height="15" fill="rgb(237,91,2)" fg:x="28269" fg:w="61"/><text x="38.6972%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (968 instructions, 1.32%)</title><rect x="37.2536%" y="149" width="1.3151%" height="15" fill="rgb(226,228,36)" fg:x="27422" fg:w="968"/><text x="37.5466%" y="159.50"></text></g><g><title>__rust_realloc (77 instructions, 0.10%)</title><rect x="38.5687%" y="117" width="0.1046%" height="15" fill="rgb(213,63,50)" fg:x="28390" fg:w="77"/><text x="38.8616%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 instructions, 0.16%)</title><rect x="38.5687%" y="133" width="0.1630%" height="15" fill="rgb(235,194,19)" fg:x="28390" fg:w="120"/><text x="38.8616%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.28%)</title><rect x="38.5687%" y="149" width="0.2799%" height="15" fill="rgb(207,204,18)" fg:x="28390" fg:w="206"/><text x="38.8616%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="38.8485%" y="133" width="0.0829%" height="15" fill="rgb(248,8,7)" fg:x="28596" fg:w="61"/><text x="39.1415%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="39.0129%" y="133" width="0.0829%" height="15" fill="rgb(223,145,47)" fg:x="28717" fg:w="61"/><text x="39.3059%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="39.1773%" y="133" width="0.0829%" height="15" fill="rgb(228,84,11)" fg:x="28838" fg:w="61"/><text x="39.4702%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="39.3417%" y="133" width="0.0829%" height="15" fill="rgb(218,76,45)" fg:x="28959" fg:w="61"/><text x="39.6346%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="39.5060%" y="133" width="0.0829%" height="15" fill="rgb(223,80,15)" fg:x="29080" fg:w="61"/><text x="39.7990%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="39.6704%" y="133" width="0.0829%" height="15" fill="rgb(219,218,33)" fg:x="29201" fg:w="61"/><text x="39.9634%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="39.8348%" y="133" width="0.0829%" height="15" fill="rgb(208,51,11)" fg:x="29322" fg:w="61"/><text x="40.1278%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="39.9992%" y="133" width="0.0829%" height="15" fill="rgb(229,165,39)" fg:x="29443" fg:w="61"/><text x="40.2922%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (968 instructions, 1.32%)</title><rect x="38.8485%" y="149" width="1.3151%" height="15" fill="rgb(241,100,24)" fg:x="28596" fg:w="968"/><text x="39.1415%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.11%)</title><rect x="40.1636%" y="101" width="0.1128%" height="15" fill="rgb(228,14,23)" fg:x="29564" fg:w="83"/><text x="40.4565%" y="111.50"></text></g><g><title>memcpy (136 instructions, 0.18%)</title><rect x="40.2763%" y="101" width="0.1848%" height="15" fill="rgb(247,116,52)" fg:x="29647" fg:w="136"/><text x="40.5693%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="40.4611%" y="101" width="0.1209%" height="15" fill="rgb(216,149,33)" fg:x="29783" fg:w="89"/><text x="40.7541%" y="111.50"></text></g><g><title>__rust_realloc (437 instructions, 0.59%)</title><rect x="40.1636%" y="117" width="0.5937%" height="15" fill="rgb(238,142,29)" fg:x="29564" fg:w="437"/><text x="40.4565%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (480 instructions, 0.65%)</title><rect x="40.1636%" y="133" width="0.6521%" height="15" fill="rgb(224,83,40)" fg:x="29564" fg:w="480"/><text x="40.4565%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (566 instructions, 0.77%)</title><rect x="40.1636%" y="149" width="0.7689%" height="15" fill="rgb(234,165,11)" fg:x="29564" fg:w="566"/><text x="40.4565%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="40.9325%" y="133" width="0.0829%" height="15" fill="rgb(215,96,23)" fg:x="30130" fg:w="61"/><text x="41.2255%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="41.0969%" y="133" width="0.0829%" height="15" fill="rgb(233,179,26)" fg:x="30251" fg:w="61"/><text x="41.3898%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="41.2613%" y="133" width="0.0829%" height="15" fill="rgb(225,129,33)" fg:x="30372" fg:w="61"/><text x="41.5542%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="41.4256%" y="133" width="0.0829%" height="15" fill="rgb(237,49,13)" fg:x="30493" fg:w="61"/><text x="41.7186%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="41.5900%" y="133" width="0.0829%" height="15" fill="rgb(211,3,31)" fg:x="30614" fg:w="61"/><text x="41.8830%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="41.7544%" y="133" width="0.0829%" height="15" fill="rgb(216,152,19)" fg:x="30735" fg:w="61"/><text x="42.0474%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="41.9188%" y="133" width="0.0829%" height="15" fill="rgb(251,121,35)" fg:x="30856" fg:w="61"/><text x="42.2118%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="42.0832%" y="133" width="0.0829%" height="15" fill="rgb(210,217,47)" fg:x="30977" fg:w="61"/><text x="42.3761%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="42.2476%" y="133" width="0.0829%" height="15" fill="rgb(244,116,22)" fg:x="31098" fg:w="61"/><text x="42.5405%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="42.4119%" y="133" width="0.0829%" height="15" fill="rgb(228,17,21)" fg:x="31219" fg:w="61"/><text x="42.7049%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="42.5763%" y="133" width="0.0829%" height="15" fill="rgb(240,149,34)" fg:x="31340" fg:w="61"/><text x="42.8693%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.08%)</title><rect x="42.7407%" y="133" width="0.0829%" height="15" fill="rgb(208,125,47)" fg:x="31461" fg:w="61"/><text x="43.0337%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,452 instructions, 1.97%)</title><rect x="40.9325%" y="149" width="1.9726%" height="15" fill="rgb(249,186,39)" fg:x="30130" fg:w="1452"/><text x="41.2255%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 instructions, 0.04%)</title><rect x="42.9051%" y="149" width="0.0435%" height="15" fill="rgb(240,220,33)" fg:x="31582" fg:w="32"/><text x="43.1980%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.06%)</title><rect x="42.9486%" y="149" width="0.0625%" height="15" fill="rgb(243,110,23)" fg:x="31614" fg:w="46"/><text x="43.2415%" y="159.50"></text></g><g><title>binread::BinRead::read (7,470 instructions, 10.15%)</title><rect x="34.7036%" y="165" width="10.1482%" height="15" fill="rgb(219,163,46)" fg:x="25545" fg:w="7470"/><text x="34.9966%" y="175.50">binread::Bin..</text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.04%)</title><rect x="44.8519%" y="165" width="0.0421%" height="15" fill="rgb(216,126,30)" fg:x="33015" fg:w="31"/><text x="45.1448%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="44.8940%" y="117" width="0.1114%" height="15" fill="rgb(208,139,11)" fg:x="33046" fg:w="82"/><text x="45.1869%" y="127.50"></text></g><g><title>memcpy (211 instructions, 0.29%)</title><rect x="45.0054%" y="117" width="0.2866%" height="15" fill="rgb(213,118,36)" fg:x="33128" fg:w="211"/><text x="45.2983%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="45.2920%" y="117" width="0.1209%" height="15" fill="rgb(226,43,17)" fg:x="33339" fg:w="89"/><text x="45.5850%" y="127.50"></text></g><g><title>__rust_realloc (511 instructions, 0.69%)</title><rect x="44.8940%" y="133" width="0.6942%" height="15" fill="rgb(254,217,4)" fg:x="33046" fg:w="511"/><text x="45.1869%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (554 instructions, 0.75%)</title><rect x="44.8940%" y="149" width="0.7526%" height="15" fill="rgb(210,134,47)" fg:x="33046" fg:w="554"/><text x="45.1869%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (640 instructions, 0.87%)</title><rect x="44.8940%" y="165" width="0.8695%" height="15" fill="rgb(237,24,49)" fg:x="33046" fg:w="640"/><text x="45.1869%" y="175.50"></text></g><g><title>memcpy (305 instructions, 0.41%)</title><rect x="45.7634%" y="165" width="0.4144%" height="15" fill="rgb(251,39,46)" fg:x="33686" fg:w="305"/><text x="46.0564%" y="175.50"></text></g><g><title>memcpy (260 instructions, 0.35%)</title><rect x="46.1778%" y="165" width="0.3532%" height="15" fill="rgb(251,220,3)" fg:x="33991" fg:w="260"/><text x="46.4707%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="46.5310%" y="165" width="0.1209%" height="15" fill="rgb(228,105,12)" fg:x="34251" fg:w="89"/><text x="46.8240%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.11%)</title><rect x="46.6519%" y="149" width="0.1128%" height="15" fill="rgb(215,196,1)" fg:x="34340" fg:w="83"/><text x="46.9449%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.17%)</title><rect x="46.6519%" y="165" width="0.1685%" height="15" fill="rgb(214,33,39)" fg:x="34340" fg:w="124"/><text x="46.9449%" y="175.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (9,568 instructions, 13.00%)</title><rect x="34.3993%" y="181" width="12.9984%" height="15" fill="rgb(220,19,52)" fg:x="25321" fg:w="9568"/><text x="34.6923%" y="191.50">&lt;ic_principal::P..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="47.3977%" y="181" width="0.0190%" height="15" fill="rgb(221,78,38)" fg:x="34889" fg:w="14"/><text x="47.6907%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="47.4168%" y="181" width="0.0190%" height="15" fill="rgb(253,30,16)" fg:x="34903" fg:w="14"/><text x="47.7097%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="47.4358%" y="181" width="0.0190%" height="15" fill="rgb(242,65,0)" fg:x="34917" fg:w="14"/><text x="47.7287%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (10,083 instructions, 13.70%)</title><rect x="34.1045%" y="197" width="13.6981%" height="15" fill="rgb(235,201,12)" fg:x="25104" fg:w="10083"/><text x="34.3975%" y="207.50">candid::de::IDLDe..</text></g><g><title>memcmp (77 instructions, 0.10%)</title><rect x="47.8026%" y="165" width="0.1046%" height="15" fill="rgb(233,161,9)" fg:x="35187" fg:w="77"/><text x="48.0955%" y="175.50"></text></g><g><title>candid::types::internal::find_type (231 instructions, 0.31%)</title><rect x="47.8026%" y="181" width="0.3138%" height="15" fill="rgb(241,207,41)" fg:x="35187" fg:w="231"/><text x="48.0955%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (275 instructions, 0.37%)</title><rect x="47.8026%" y="197" width="0.3736%" height="15" fill="rgb(212,69,46)" fg:x="35187" fg:w="275"/><text x="48.0955%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.07%)</title><rect x="48.1762%" y="181" width="0.0666%" height="15" fill="rgb(239,69,45)" fg:x="35462" fg:w="49"/><text x="48.4691%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.11%)</title><rect x="48.2618%" y="165" width="0.1128%" height="15" fill="rgb(242,117,48)" fg:x="35525" fg:w="83"/><text x="48.5547%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (168 instructions, 0.23%)</title><rect x="48.2427%" y="181" width="0.2282%" height="15" fill="rgb(228,41,36)" fg:x="35511" fg:w="168"/><text x="48.5357%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.05%)</title><rect x="48.4710%" y="165" width="0.0503%" height="15" fill="rgb(212,3,32)" fg:x="35679" fg:w="37"/><text x="48.7639%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="48.5212%" y="165" width="0.0462%" height="15" fill="rgb(233,41,49)" fg:x="35716" fg:w="34"/><text x="48.8142%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.05%)</title><rect x="48.5674%" y="165" width="0.0462%" height="15" fill="rgb(252,170,49)" fg:x="35750" fg:w="34"/><text x="48.8604%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.04%)</title><rect x="48.6136%" y="165" width="0.0421%" height="15" fill="rgb(229,53,26)" fg:x="35784" fg:w="31"/><text x="48.9066%" y="175.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (261 instructions, 0.35%)</title><rect x="48.4710%" y="181" width="0.3546%" height="15" fill="rgb(217,157,12)" fg:x="35679" fg:w="261"/><text x="48.7639%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="48.8256%" y="181" width="0.0190%" height="15" fill="rgb(227,17,9)" fg:x="35940" fg:w="14"/><text x="49.1185%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="48.8446%" y="181" width="0.0190%" height="15" fill="rgb(218,84,12)" fg:x="35954" fg:w="14"/><text x="49.1375%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="48.8636%" y="181" width="0.0190%" height="15" fill="rgb(212,79,24)" fg:x="35968" fg:w="14"/><text x="49.1566%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (711 instructions, 0.97%)</title><rect x="48.1762%" y="197" width="0.9659%" height="15" fill="rgb(217,222,37)" fg:x="35462" fg:w="711"/><text x="48.4691%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (37 instructions, 0.05%)</title><rect x="49.1421%" y="197" width="0.0503%" height="15" fill="rgb(246,208,8)" fg:x="36173" fg:w="37"/><text x="49.4351%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="49.1924%" y="181" width="0.0109%" height="15" fill="rgb(244,133,10)" fg:x="36210" fg:w="8"/><text x="49.4853%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="49.2032%" y="165" width="0.0367%" height="15" fill="rgb(209,219,41)" fg:x="36218" fg:w="27"/><text x="49.4962%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.19%)</title><rect x="49.2032%" y="181" width="0.1929%" height="15" fill="rgb(253,175,45)" fg:x="36218" fg:w="142"/><text x="49.4962%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="49.3961%" y="149" width="0.0367%" height="15" fill="rgb(235,100,37)" fg:x="36360" fg:w="27"/><text x="49.6891%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="49.4328%" y="149" width="0.0367%" height="15" fill="rgb(225,87,19)" fg:x="36387" fg:w="27"/><text x="49.7258%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.27%)</title><rect x="49.3961%" y="165" width="0.2676%" height="15" fill="rgb(217,152,17)" fg:x="36360" fg:w="197"/><text x="49.6891%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (268 instructions, 0.36%)</title><rect x="49.3961%" y="181" width="0.3641%" height="15" fill="rgb(235,72,13)" fg:x="36360" fg:w="268"/><text x="49.6891%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="49.7602%" y="181" width="0.0190%" height="15" fill="rgb(233,140,18)" fg:x="36628" fg:w="14"/><text x="50.0532%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (522 instructions, 0.71%)</title><rect x="49.1924%" y="197" width="0.7092%" height="15" fill="rgb(207,212,28)" fg:x="36210" fg:w="522"/><text x="49.4853%" y="207.50"></text></g><g><title>candid::utils::decode_args_with_config_debug (35,758 instructions, 48.58%)</title><rect x="1.8639%" y="213" width="48.5783%" height="15" fill="rgb(220,130,25)" fg:x="1372" fg:w="35758"/><text x="2.1569%" y="223.50">candid::utils::decode_args_with_config_debug</text></g><g><title>memcpy (344 instructions, 0.47%)</title><rect x="50.4422%" y="213" width="0.4673%" height="15" fill="rgb(205,55,34)" fg:x="37130" fg:w="344"/><text x="50.7352%" y="223.50"></text></g><g><title>memcpy (344 instructions, 0.47%)</title><rect x="50.9095%" y="213" width="0.4673%" height="15" fill="rgb(237,54,35)" fg:x="37474" fg:w="344"/><text x="51.2025%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="51.3769%" y="197" width="0.0367%" height="15" fill="rgb(208,67,23)" fg:x="37818" fg:w="27"/><text x="51.6698%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.09%)</title><rect x="51.4135%" y="197" width="0.0910%" height="15" fill="rgb(206,207,50)" fg:x="37845" fg:w="67"/><text x="51.7065%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (187 instructions, 0.25%)</title><rect x="51.3769%" y="213" width="0.2540%" height="15" fill="rgb(213,211,42)" fg:x="37818" fg:w="187"/><text x="51.6698%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data (37,964 instructions, 51.58%)</title><rect x="0.2242%" y="229" width="51.5752%" height="15" fill="rgb(252,197,50)" fg:x="165" fg:w="37964"/><text x="0.5171%" y="239.50">ic_cdk::api::call::arg_data</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.11%)</title><rect x="51.7994%" y="197" width="0.1128%" height="15" fill="rgb(251,211,41)" fg:x="38129" fg:w="83"/><text x="52.0923%" y="207.50"></text></g><g><title>memset (141 instructions, 0.19%)</title><rect x="51.9121%" y="197" width="0.1916%" height="15" fill="rgb(229,211,5)" fg:x="38212" fg:w="141"/><text x="52.2051%" y="207.50"></text></g><g><title>memcpy (188 instructions, 0.26%)</title><rect x="52.1037%" y="197" width="0.2554%" height="15" fill="rgb(239,36,31)" fg:x="38353" fg:w="188"/><text x="52.3967%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.11%)</title><rect x="52.3591%" y="197" width="0.1128%" height="15" fill="rgb(248,67,31)" fg:x="38541" fg:w="83"/><text x="52.6521%" y="207.50"></text></g><g><title>ic_cdk::api::caller (1,684 instructions, 2.29%)</title><rect x="51.7994%" y="213" width="2.2878%" height="15" fill="rgb(249,55,44)" fg:x="38129" fg:w="1684"/><text x="52.0923%" y="223.50">i..</text></g><g><title>memcmp (675 instructions, 0.92%)</title><rect x="54.0871%" y="213" width="0.9170%" height="15" fill="rgb(216,82,12)" fg:x="39813" fg:w="675"/><text x="54.3801%" y="223.50"></text></g><g><title>memcmp (675 instructions, 0.92%)</title><rect x="55.0041%" y="213" width="0.9170%" height="15" fill="rgb(242,174,1)" fg:x="40488" fg:w="675"/><text x="55.2971%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,244 instructions, 4.41%)</title><rect x="51.7994%" y="229" width="4.4071%" height="15" fill="rgb(208,120,29)" fg:x="38129" fg:w="3244"/><text x="52.0923%" y="239.50">std:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.09%)</title><rect x="56.2255%" y="165" width="0.0897%" height="15" fill="rgb(221,105,43)" fg:x="41387" fg:w="66"/><text x="56.5184%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (155 instructions, 0.21%)</title><rect x="56.2255%" y="181" width="0.2106%" height="15" fill="rgb(234,124,22)" fg:x="41387" fg:w="155"/><text x="56.5184%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (240 instructions, 0.33%)</title><rect x="56.2064%" y="197" width="0.3260%" height="15" fill="rgb(212,23,30)" fg:x="41373" fg:w="240"/><text x="56.4994%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="56.5325%" y="197" width="0.0190%" height="15" fill="rgb(219,122,53)" fg:x="41613" fg:w="14"/><text x="56.8255%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="56.5515%" y="197" width="0.0190%" height="15" fill="rgb(248,84,24)" fg:x="41627" fg:w="14"/><text x="56.8445%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="56.5705%" y="197" width="0.0190%" height="15" fill="rgb(245,115,18)" fg:x="41641" fg:w="14"/><text x="56.8635%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="56.5895%" y="197" width="0.0190%" height="15" fill="rgb(227,176,51)" fg:x="41655" fg:w="14"/><text x="56.8825%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="56.6086%" y="197" width="0.1209%" height="15" fill="rgb(229,63,42)" fg:x="41669" fg:w="89"/><text x="56.9015%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (816 instructions, 1.11%)</title><rect x="56.2064%" y="213" width="1.1086%" height="15" fill="rgb(247,202,24)" fg:x="41373" fg:w="816"/><text x="56.4994%" y="223.50"></text></g><g><title>candid::types::internal::find_type (24 instructions, 0.03%)</title><rect x="57.3150%" y="213" width="0.0326%" height="15" fill="rgb(244,173,20)" fg:x="42189" fg:w="24"/><text x="57.6080%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.11%)</title><rect x="57.3476%" y="213" width="0.1128%" height="15" fill="rgb(242,81,47)" fg:x="42213" fg:w="83"/><text x="57.6406%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="57.4604%" y="197" width="0.1114%" height="15" fill="rgb(231,185,54)" fg:x="42296" fg:w="82"/><text x="57.7533%" y="207.50"></text></g><g><title>candid::types::internal::env_add (166 instructions, 0.23%)</title><rect x="57.4604%" y="213" width="0.2255%" height="15" fill="rgb(243,55,32)" fg:x="42296" fg:w="166"/><text x="57.7533%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="57.6859%" y="213" width="0.1114%" height="15" fill="rgb(208,167,19)" fg:x="42462" fg:w="82"/><text x="57.9788%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="57.7973%" y="213" width="0.1114%" height="15" fill="rgb(231,72,35)" fg:x="42544" fg:w="82"/><text x="58.0902%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="57.9087%" y="213" width="0.1114%" height="15" fill="rgb(250,173,51)" fg:x="42626" fg:w="82"/><text x="58.2016%" y="223.50"></text></g><g><title>candid::types::internal::find_type (107 instructions, 0.15%)</title><rect x="58.0201%" y="197" width="0.1454%" height="15" fill="rgb(209,5,22)" fg:x="42708" fg:w="107"/><text x="58.3130%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.11%)</title><rect x="58.1654%" y="197" width="0.1128%" height="15" fill="rgb(250,174,19)" fg:x="42815" fg:w="83"/><text x="58.4584%" y="207.50"></text></g><g><title>memmove (220 instructions, 0.30%)</title><rect x="58.2782%" y="181" width="0.2989%" height="15" fill="rgb(217,3,49)" fg:x="42898" fg:w="220"/><text x="58.5712%" y="191.50"></text></g><g><title>memmove (92 instructions, 0.12%)</title><rect x="58.5771%" y="181" width="0.1250%" height="15" fill="rgb(218,225,5)" fg:x="43118" fg:w="92"/><text x="58.8700%" y="191.50"></text></g><g><title>candid::types::internal::env_add (536 instructions, 0.73%)</title><rect x="58.2782%" y="197" width="0.7282%" height="15" fill="rgb(236,89,11)" fg:x="42898" fg:w="536"/><text x="58.5712%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="59.0064%" y="197" width="0.1114%" height="15" fill="rgb(206,33,28)" fg:x="43434" fg:w="82"/><text x="59.2993%" y="207.50"></text></g><g><title>memcmp (100 instructions, 0.14%)</title><rect x="59.1178%" y="181" width="0.1359%" height="15" fill="rgb(241,56,42)" fg:x="43516" fg:w="100"/><text x="59.4107%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="59.2536%" y="165" width="0.1209%" height="15" fill="rgb(222,44,11)" fg:x="43616" fg:w="89"/><text x="59.5466%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.22%)</title><rect x="59.2536%" y="181" width="0.2174%" height="15" fill="rgb(234,111,20)" fg:x="43616" fg:w="160"/><text x="59.5466%" y="191.50"></text></g><g><title>candid::types::internal::env_add (439 instructions, 0.60%)</title><rect x="59.1178%" y="197" width="0.5964%" height="15" fill="rgb(237,77,6)" fg:x="43516" fg:w="439"/><text x="59.4107%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="59.7142%" y="181" width="0.0462%" height="15" fill="rgb(235,111,23)" fg:x="43955" fg:w="34"/><text x="60.0071%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (49 instructions, 0.07%)</title><rect x="59.7604%" y="181" width="0.0666%" height="15" fill="rgb(251,135,29)" fg:x="43989" fg:w="49"/><text x="60.0533%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="59.8269%" y="181" width="0.0190%" height="15" fill="rgb(217,57,1)" fg:x="44038" fg:w="14"/><text x="60.1199%" y="191.50"></text></g><g><title>candid::types::internal::env_id (302 instructions, 0.41%)</title><rect x="59.7142%" y="197" width="0.4103%" height="15" fill="rgb(249,119,31)" fg:x="43955" fg:w="302"/><text x="60.0071%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (1,668 instructions, 2.27%)</title><rect x="58.0201%" y="213" width="2.2660%" height="15" fill="rgb(233,164,33)" fg:x="42708" fg:w="1668"/><text x="58.3130%" y="223.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="60.2861%" y="213" width="0.1114%" height="15" fill="rgb(250,217,43)" fg:x="44376" fg:w="82"/><text x="60.5791%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="60.3975%" y="213" width="0.1114%" height="15" fill="rgb(232,154,50)" fg:x="44458" fg:w="82"/><text x="60.6905%" y="223.50"></text></g><g><title>candid::types::internal::find_type (148 instructions, 0.20%)</title><rect x="60.5089%" y="197" width="0.2011%" height="15" fill="rgb(227,190,8)" fg:x="44540" fg:w="148"/><text x="60.8019%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="60.7100%" y="197" width="0.1114%" height="15" fill="rgb(209,217,32)" fg:x="44688" fg:w="82"/><text x="61.0029%" y="207.50"></text></g><g><title>memmove (220 instructions, 0.30%)</title><rect x="60.8214%" y="181" width="0.2989%" height="15" fill="rgb(243,203,50)" fg:x="44770" fg:w="220"/><text x="61.1143%" y="191.50"></text></g><g><title>memmove (92 instructions, 0.12%)</title><rect x="61.1202%" y="181" width="0.1250%" height="15" fill="rgb(232,152,27)" fg:x="44990" fg:w="92"/><text x="61.4132%" y="191.50"></text></g><g><title>candid::types::internal::env_add (577 instructions, 0.78%)</title><rect x="60.8214%" y="197" width="0.7839%" height="15" fill="rgb(240,34,29)" fg:x="44770" fg:w="577"/><text x="61.1143%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="61.6052%" y="197" width="0.1114%" height="15" fill="rgb(215,185,52)" fg:x="45347" fg:w="82"/><text x="61.8982%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="61.7166%" y="197" width="0.1114%" height="15" fill="rgb(240,89,49)" fg:x="45429" fg:w="82"/><text x="62.0096%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="61.8280%" y="197" width="0.1114%" height="15" fill="rgb(225,12,52)" fg:x="45511" fg:w="82"/><text x="62.1210%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="61.9394%" y="197" width="0.1114%" height="15" fill="rgb(239,128,45)" fg:x="45593" fg:w="82"/><text x="62.2324%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="62.0508%" y="197" width="0.1114%" height="15" fill="rgb(211,78,47)" fg:x="45675" fg:w="82"/><text x="62.3438%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="62.1622%" y="197" width="0.1114%" height="15" fill="rgb(232,31,21)" fg:x="45757" fg:w="82"/><text x="62.4552%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="62.2736%" y="197" width="0.1114%" height="15" fill="rgb(222,168,14)" fg:x="45839" fg:w="82"/><text x="62.5666%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="62.3850%" y="197" width="0.1114%" height="15" fill="rgb(209,128,24)" fg:x="45921" fg:w="82"/><text x="62.6780%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="62.4964%" y="197" width="0.1114%" height="15" fill="rgb(249,35,13)" fg:x="46003" fg:w="82"/><text x="62.7894%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.11%)</title><rect x="62.6078%" y="197" width="0.1087%" height="15" fill="rgb(218,7,2)" fg:x="46085" fg:w="80"/><text x="62.9008%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (169 instructions, 0.23%)</title><rect x="62.7165%" y="197" width="0.2296%" height="15" fill="rgb(238,107,27)" fg:x="46165" fg:w="169"/><text x="63.0095%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="62.9461%" y="197" width="0.1114%" height="15" fill="rgb(217,88,38)" fg:x="46334" fg:w="82"/><text x="63.2391%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="63.0575%" y="197" width="0.1114%" height="15" fill="rgb(230,207,0)" fg:x="46416" fg:w="82"/><text x="63.3505%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="63.1689%" y="197" width="0.1114%" height="15" fill="rgb(249,64,54)" fg:x="46498" fg:w="82"/><text x="63.4619%" y="207.50"></text></g><g><title>memcmp (399 instructions, 0.54%)</title><rect x="63.2803%" y="181" width="0.5421%" height="15" fill="rgb(231,7,11)" fg:x="46580" fg:w="399"/><text x="63.5733%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="63.8224%" y="165" width="0.1209%" height="15" fill="rgb(205,149,21)" fg:x="46979" fg:w="89"/><text x="64.1153%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.22%)</title><rect x="63.8224%" y="181" width="0.2174%" height="15" fill="rgb(215,126,34)" fg:x="46979" fg:w="160"/><text x="64.1153%" y="191.50"></text></g><g><title>candid::types::internal::env_add (779 instructions, 1.06%)</title><rect x="63.2803%" y="197" width="1.0583%" height="15" fill="rgb(241,132,45)" fg:x="46580" fg:w="779"/><text x="63.5733%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="64.3386%" y="181" width="0.0462%" height="15" fill="rgb(252,69,32)" fg:x="47359" fg:w="34"/><text x="64.6316%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="64.3848%" y="181" width="0.0462%" height="15" fill="rgb(232,204,19)" fg:x="47393" fg:w="34"/><text x="64.6778%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="64.4310%" y="181" width="0.0462%" height="15" fill="rgb(249,15,47)" fg:x="47427" fg:w="34"/><text x="64.7239%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="64.5234%" y="149" width="0.0258%" height="15" fill="rgb(209,227,23)" fg:x="47495" fg:w="19"/><text x="64.8163%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="64.5234%" y="165" width="0.1916%" height="15" fill="rgb(248,92,24)" fg:x="47495" fg:w="141"/><text x="64.8163%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="64.8059%" y="149" width="0.0258%" height="15" fill="rgb(247,59,2)" fg:x="47703" fg:w="19"/><text x="65.0989%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="64.8059%" y="165" width="0.1916%" height="15" fill="rgb(221,30,5)" fg:x="47703" fg:w="141"/><text x="65.0989%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="65.0885%" y="149" width="0.0258%" height="15" fill="rgb(208,108,53)" fg:x="47911" fg:w="19"/><text x="65.3815%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="65.0885%" y="165" width="0.1916%" height="15" fill="rgb(211,183,26)" fg:x="47911" fg:w="141"/><text x="65.3815%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="65.3711%" y="149" width="0.0258%" height="15" fill="rgb(232,132,4)" fg:x="48119" fg:w="19"/><text x="65.6641%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="65.3711%" y="165" width="0.1916%" height="15" fill="rgb(253,128,37)" fg:x="48119" fg:w="141"/><text x="65.6641%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (866 instructions, 1.18%)</title><rect x="64.4772%" y="181" width="1.1765%" height="15" fill="rgb(221,58,24)" fg:x="47461" fg:w="866"/><text x="64.7701%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="65.6537%" y="181" width="0.0462%" height="15" fill="rgb(230,54,45)" fg:x="48327" fg:w="34"/><text x="65.9466%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="65.6998%" y="181" width="0.0462%" height="15" fill="rgb(254,21,18)" fg:x="48361" fg:w="34"/><text x="65.9928%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="65.7460%" y="181" width="0.0462%" height="15" fill="rgb(221,108,0)" fg:x="48395" fg:w="34"/><text x="66.0390%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="65.7922%" y="181" width="0.0462%" height="15" fill="rgb(206,95,1)" fg:x="48429" fg:w="34"/><text x="66.0852%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="65.8846%" y="149" width="0.0258%" height="15" fill="rgb(237,52,5)" fg:x="48497" fg:w="19"/><text x="66.1776%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="65.8846%" y="165" width="0.1916%" height="15" fill="rgb(218,150,34)" fg:x="48497" fg:w="141"/><text x="66.1776%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="66.1672%" y="149" width="0.0258%" height="15" fill="rgb(235,194,28)" fg:x="48705" fg:w="19"/><text x="66.4601%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="66.1672%" y="165" width="0.1916%" height="15" fill="rgb(245,92,18)" fg:x="48705" fg:w="141"/><text x="66.4601%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="66.4498%" y="149" width="0.0258%" height="15" fill="rgb(253,203,53)" fg:x="48913" fg:w="19"/><text x="66.7427%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="66.4498%" y="165" width="0.1916%" height="15" fill="rgb(249,185,47)" fg:x="48913" fg:w="141"/><text x="66.7427%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="66.7323%" y="149" width="0.0258%" height="15" fill="rgb(252,194,52)" fg:x="49121" fg:w="19"/><text x="67.0253%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="66.7323%" y="165" width="0.1916%" height="15" fill="rgb(210,53,36)" fg:x="49121" fg:w="141"/><text x="67.0253%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (866 instructions, 1.18%)</title><rect x="65.8384%" y="181" width="1.1765%" height="15" fill="rgb(237,37,25)" fg:x="48463" fg:w="866"/><text x="66.1314%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="67.0149%" y="181" width="0.0462%" height="15" fill="rgb(242,116,27)" fg:x="49329" fg:w="34"/><text x="67.3079%" y="191.50"></text></g><g><title>memmove (92 instructions, 0.12%)</title><rect x="67.0611%" y="181" width="0.1250%" height="15" fill="rgb(213,185,26)" fg:x="49363" fg:w="92"/><text x="67.3541%" y="191.50"></text></g><g><title>memmove (220 instructions, 0.30%)</title><rect x="67.1861%" y="181" width="0.2989%" height="15" fill="rgb(225,204,8)" fg:x="49455" fg:w="220"/><text x="67.4790%" y="191.50"></text></g><g><title>candid::types::internal::env_id (3,208 instructions, 4.36%)</title><rect x="64.3386%" y="197" width="4.3582%" height="15" fill="rgb(254,111,37)" fg:x="47359" fg:w="3208"/><text x="64.6316%" y="207.50">cand..</text></g><g><title>candid::types::CandidType::ty (6,463 instructions, 8.78%)</title><rect x="60.5089%" y="213" width="8.7802%" height="15" fill="rgb(242,35,9)" fg:x="44540" fg:w="6463"/><text x="60.8019%" y="223.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="69.2891%" y="213" width="0.1114%" height="15" fill="rgb(232,138,49)" fg:x="51003" fg:w="82"/><text x="69.5821%" y="223.50"></text></g><g><title>memcmp (1,043 instructions, 1.42%)</title><rect x="69.4005%" y="197" width="1.4169%" height="15" fill="rgb(247,56,4)" fg:x="51085" fg:w="1043"/><text x="69.6934%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="70.8174%" y="181" width="0.1209%" height="15" fill="rgb(226,179,17)" fg:x="52128" fg:w="89"/><text x="71.1104%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.22%)</title><rect x="70.8174%" y="197" width="0.2174%" height="15" fill="rgb(216,163,45)" fg:x="52128" fg:w="160"/><text x="71.1104%" y="207.50"></text></g><g><title>candid::types::internal::env_add (1,464 instructions, 1.99%)</title><rect x="69.4005%" y="213" width="1.9889%" height="15" fill="rgb(211,157,3)" fg:x="51085" fg:w="1464"/><text x="69.6934%" y="223.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="71.3894%" y="197" width="0.0462%" height="15" fill="rgb(234,44,20)" fg:x="52549" fg:w="34"/><text x="71.6823%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="71.4356%" y="197" width="0.0462%" height="15" fill="rgb(254,138,23)" fg:x="52583" fg:w="34"/><text x="71.7285%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="71.4817%" y="197" width="0.0462%" height="15" fill="rgb(206,119,39)" fg:x="52617" fg:w="34"/><text x="71.7747%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="71.5741%" y="165" width="0.0258%" height="15" fill="rgb(231,105,52)" fg:x="52685" fg:w="19"/><text x="71.8671%" y="175.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="71.5741%" y="181" width="0.1916%" height="15" fill="rgb(250,20,5)" fg:x="52685" fg:w="141"/><text x="71.8671%" y="191.50"></text></g><g><title>memcmp (54 instructions, 0.07%)</title><rect x="71.8567%" y="165" width="0.0734%" height="15" fill="rgb(215,198,30)" fg:x="52893" fg:w="54"/><text x="72.1497%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="71.9301%" y="165" width="0.0462%" height="15" fill="rgb(246,142,8)" fg:x="52947" fg:w="34"/><text x="72.2230%" y="175.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (228 instructions, 0.31%)</title><rect x="71.8567%" y="181" width="0.3097%" height="15" fill="rgb(243,26,38)" fg:x="52893" fg:w="228"/><text x="72.1497%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (537 instructions, 0.73%)</title><rect x="71.5279%" y="197" width="0.7295%" height="15" fill="rgb(205,133,28)" fg:x="52651" fg:w="537"/><text x="71.8209%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="72.2575%" y="197" width="0.0462%" height="15" fill="rgb(212,34,0)" fg:x="53188" fg:w="34"/><text x="72.5504%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="72.3037%" y="197" width="0.0462%" height="15" fill="rgb(251,226,22)" fg:x="53222" fg:w="34"/><text x="72.5966%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="72.3498%" y="197" width="0.0462%" height="15" fill="rgb(252,119,9)" fg:x="53256" fg:w="34"/><text x="72.6428%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="72.4422%" y="165" width="0.0258%" height="15" fill="rgb(213,150,50)" fg:x="53324" fg:w="19"/><text x="72.7352%" y="175.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="72.4422%" y="181" width="0.1916%" height="15" fill="rgb(212,24,39)" fg:x="53324" fg:w="141"/><text x="72.7352%" y="191.50"></text></g><g><title>memcmp (54 instructions, 0.07%)</title><rect x="72.7248%" y="165" width="0.0734%" height="15" fill="rgb(213,46,39)" fg:x="53532" fg:w="54"/><text x="73.0178%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="72.7982%" y="165" width="0.0462%" height="15" fill="rgb(239,106,12)" fg:x="53586" fg:w="34"/><text x="73.0911%" y="175.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (228 instructions, 0.31%)</title><rect x="72.7248%" y="181" width="0.3097%" height="15" fill="rgb(249,229,21)" fg:x="53532" fg:w="228"/><text x="73.0178%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (537 instructions, 0.73%)</title><rect x="72.3960%" y="197" width="0.7295%" height="15" fill="rgb(212,158,3)" fg:x="53290" fg:w="537"/><text x="72.6890%" y="207.50"></text></g><g><title>memmove (156 instructions, 0.21%)</title><rect x="73.1256%" y="197" width="0.2119%" height="15" fill="rgb(253,26,48)" fg:x="53827" fg:w="156"/><text x="73.4185%" y="207.50"></text></g><g><title>memmove (316 instructions, 0.43%)</title><rect x="73.3375%" y="197" width="0.4293%" height="15" fill="rgb(238,178,20)" fg:x="53983" fg:w="316"/><text x="73.6305%" y="207.50"></text></g><g><title>candid::types::internal::env_id (2,444 instructions, 3.32%)</title><rect x="71.3894%" y="213" width="3.3202%" height="15" fill="rgb(208,86,15)" fg:x="52549" fg:w="2444"/><text x="71.6823%" y="223.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="74.7096%" y="181" width="0.1114%" height="15" fill="rgb(239,42,53)" fg:x="54993" fg:w="82"/><text x="75.0026%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.17%)</title><rect x="74.7096%" y="197" width="0.1671%" height="15" fill="rgb(245,226,8)" fg:x="54993" fg:w="123"/><text x="75.0026%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (210 instructions, 0.29%)</title><rect x="74.7096%" y="213" width="0.2853%" height="15" fill="rgb(216,176,32)" fg:x="54993" fg:w="210"/><text x="75.0026%" y="223.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.05%)</title><rect x="74.9949%" y="197" width="0.0516%" height="15" fill="rgb(231,186,21)" fg:x="55203" fg:w="38"/><text x="75.2879%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="75.0465%" y="197" width="0.1114%" height="15" fill="rgb(205,95,49)" fg:x="55241" fg:w="82"/><text x="75.3395%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="75.1579%" y="165" width="0.1114%" height="15" fill="rgb(217,145,8)" fg:x="55323" fg:w="82"/><text x="75.4509%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.17%)</title><rect x="75.1579%" y="181" width="0.1671%" height="15" fill="rgb(239,144,48)" fg:x="55323" fg:w="123"/><text x="75.4509%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (199 instructions, 0.27%)</title><rect x="75.1579%" y="197" width="0.2703%" height="15" fill="rgb(214,189,23)" fg:x="55323" fg:w="199"/><text x="75.4509%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="75.4283%" y="181" width="0.0462%" height="15" fill="rgb(229,157,17)" fg:x="55522" fg:w="34"/><text x="75.7212%" y="191.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.04%)</title><rect x="75.4745%" y="181" width="0.0421%" height="15" fill="rgb(230,5,48)" fg:x="55556" fg:w="31"/><text x="75.7674%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="75.5166%" y="181" width="0.0190%" height="15" fill="rgb(224,156,48)" fg:x="55587" fg:w="14"/><text x="75.8095%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="75.7027%" y="149" width="0.0258%" height="15" fill="rgb(223,14,29)" fg:x="55724" fg:w="19"/><text x="75.9957%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="75.7027%" y="165" width="0.1916%" height="15" fill="rgb(229,96,36)" fg:x="55724" fg:w="141"/><text x="75.9957%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (208 instructions, 0.28%)</title><rect x="75.7027%" y="181" width="0.2826%" height="15" fill="rgb(231,102,53)" fg:x="55724" fg:w="208"/><text x="75.9957%" y="191.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.05%)</title><rect x="75.9853%" y="181" width="0.0516%" height="15" fill="rgb(210,77,38)" fg:x="55932" fg:w="38"/><text x="76.2782%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="76.0369%" y="149" width="0.0258%" height="15" fill="rgb(235,131,6)" fg:x="55970" fg:w="19"/><text x="76.3299%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="76.0369%" y="165" width="0.1916%" height="15" fill="rgb(252,55,38)" fg:x="55970" fg:w="141"/><text x="76.3299%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (208 instructions, 0.28%)</title><rect x="76.0369%" y="181" width="0.2826%" height="15" fill="rgb(246,38,14)" fg:x="55970" fg:w="208"/><text x="76.3299%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="76.3195%" y="165" width="0.0462%" height="15" fill="rgb(242,27,5)" fg:x="56178" fg:w="34"/><text x="76.6124%" y="175.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.04%)</title><rect x="76.3657%" y="165" width="0.0421%" height="15" fill="rgb(228,65,35)" fg:x="56212" fg:w="31"/><text x="76.6586%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="76.4078%" y="165" width="0.0190%" height="15" fill="rgb(245,93,11)" fg:x="56243" fg:w="14"/><text x="76.7007%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="76.5939%" y="165" width="0.0462%" height="15" fill="rgb(213,1,31)" fg:x="56380" fg:w="34"/><text x="76.8869%" y="175.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.04%)</title><rect x="76.6401%" y="165" width="0.0421%" height="15" fill="rgb(237,205,14)" fg:x="56414" fg:w="31"/><text x="76.9331%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="76.6822%" y="165" width="0.0190%" height="15" fill="rgb(232,118,45)" fg:x="56445" fg:w="14"/><text x="76.9752%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="76.8683%" y="165" width="0.0462%" height="15" fill="rgb(218,5,6)" fg:x="56582" fg:w="34"/><text x="77.1613%" y="175.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.04%)</title><rect x="76.9145%" y="165" width="0.0421%" height="15" fill="rgb(251,87,51)" fg:x="56616" fg:w="31"/><text x="77.2075%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="76.9566%" y="165" width="0.0190%" height="15" fill="rgb(207,225,20)" fg:x="56647" fg:w="14"/><text x="77.2496%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.05%)</title><rect x="77.1427%" y="165" width="0.0462%" height="15" fill="rgb(222,78,54)" fg:x="56784" fg:w="34"/><text x="77.4357%" y="175.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.04%)</title><rect x="77.1889%" y="165" width="0.0421%" height="15" fill="rgb(232,85,16)" fg:x="56818" fg:w="31"/><text x="77.4819%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="77.2310%" y="165" width="0.0190%" height="15" fill="rgb(244,25,33)" fg:x="56849" fg:w="14"/><text x="77.5240%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (808 instructions, 1.10%)</title><rect x="76.3195%" y="181" width="1.0977%" height="15" fill="rgb(233,24,36)" fg:x="56178" fg:w="808"/><text x="76.6124%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="77.4172%" y="133" width="0.1114%" height="15" fill="rgb(253,49,54)" fg:x="56986" fg:w="82"/><text x="77.7101%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.17%)</title><rect x="77.4172%" y="149" width="0.1671%" height="15" fill="rgb(245,12,22)" fg:x="56986" fg:w="123"/><text x="77.7101%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.28%)</title><rect x="77.4172%" y="165" width="0.2799%" height="15" fill="rgb(253,141,28)" fg:x="56986" fg:w="206"/><text x="77.7101%" y="175.50"></text></g><g><title>leb128::write::signed (260 instructions, 0.35%)</title><rect x="77.4172%" y="181" width="0.3532%" height="15" fill="rgb(225,207,27)" fg:x="56986" fg:w="260"/><text x="77.7101%" y="191.50"></text></g><g><title>leb128::write::unsigned (47 instructions, 0.06%)</title><rect x="77.7704%" y="181" width="0.0639%" height="15" fill="rgb(220,84,2)" fg:x="57246" fg:w="47"/><text x="78.0634%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.09%)</title><rect x="77.8342%" y="181" width="0.0897%" height="15" fill="rgb(224,37,37)" fg:x="57293" fg:w="66"/><text x="78.1272%" y="191.50"></text></g><g><title>__rust_realloc (133 instructions, 0.18%)</title><rect x="77.9239%" y="149" width="0.1807%" height="15" fill="rgb(220,143,18)" fg:x="57359" fg:w="133"/><text x="78.2169%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 instructions, 0.24%)</title><rect x="77.9239%" y="165" width="0.2391%" height="15" fill="rgb(210,88,33)" fg:x="57359" fg:w="176"/><text x="78.2169%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (262 instructions, 0.36%)</title><rect x="77.9239%" y="181" width="0.3559%" height="15" fill="rgb(219,87,51)" fg:x="57359" fg:w="262"/><text x="78.2169%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.09%)</title><rect x="78.2798%" y="181" width="0.0897%" height="15" fill="rgb(211,7,35)" fg:x="57621" fg:w="66"/><text x="78.5728%" y="191.50"></text></g><g><title>__rust_realloc (133 instructions, 0.18%)</title><rect x="78.3695%" y="149" width="0.1807%" height="15" fill="rgb(232,77,2)" fg:x="57687" fg:w="133"/><text x="78.6625%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 instructions, 0.24%)</title><rect x="78.3695%" y="165" width="0.2391%" height="15" fill="rgb(249,94,25)" fg:x="57687" fg:w="176"/><text x="78.6625%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (262 instructions, 0.36%)</title><rect x="78.3695%" y="181" width="0.3559%" height="15" fill="rgb(215,112,2)" fg:x="57687" fg:w="262"/><text x="78.6625%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.09%)</title><rect x="78.7254%" y="181" width="0.0897%" height="15" fill="rgb(226,115,48)" fg:x="57949" fg:w="66"/><text x="79.0184%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.09%)</title><rect x="78.8151%" y="181" width="0.0897%" height="15" fill="rgb(249,196,10)" fg:x="58015" fg:w="66"/><text x="79.1081%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="78.9048%" y="181" width="0.0190%" height="15" fill="rgb(237,109,14)" fg:x="58081" fg:w="14"/><text x="79.1977%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (4,675 instructions, 6.35%)</title><rect x="75.4283%" y="197" width="6.3511%" height="15" fill="rgb(217,103,53)" fg:x="55522" fg:w="4675"/><text x="75.7212%" y="207.50">candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="81.7794%" y="149" width="0.1114%" height="15" fill="rgb(244,137,9)" fg:x="60197" fg:w="82"/><text x="82.0724%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.17%)</title><rect x="81.7794%" y="165" width="0.1671%" height="15" fill="rgb(227,201,3)" fg:x="60197" fg:w="123"/><text x="82.0724%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.28%)</title><rect x="81.7794%" y="181" width="0.2799%" height="15" fill="rgb(243,94,6)" fg:x="60197" fg:w="206"/><text x="82.0724%" y="191.50"></text></g><g><title>leb128::write::signed (260 instructions, 0.35%)</title><rect x="81.7794%" y="197" width="0.3532%" height="15" fill="rgb(235,118,5)" fg:x="60197" fg:w="260"/><text x="82.0724%" y="207.50"></text></g><g><title>leb128::write::unsigned (47 instructions, 0.06%)</title><rect x="82.1326%" y="197" width="0.0639%" height="15" fill="rgb(247,10,30)" fg:x="60457" fg:w="47"/><text x="82.4256%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::encode (68 instructions, 0.09%)</title><rect x="82.1965%" y="197" width="0.0924%" height="15" fill="rgb(205,26,28)" fg:x="60504" fg:w="68"/><text x="82.4894%" y="207.50"></text></g><g><title>__rust_realloc (133 instructions, 0.18%)</title><rect x="82.2889%" y="165" width="0.1807%" height="15" fill="rgb(206,99,35)" fg:x="60572" fg:w="133"/><text x="82.5818%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 instructions, 0.24%)</title><rect x="82.2889%" y="181" width="0.2391%" height="15" fill="rgb(238,130,40)" fg:x="60572" fg:w="176"/><text x="82.5818%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (262 instructions, 0.36%)</title><rect x="82.2889%" y="197" width="0.3559%" height="15" fill="rgb(224,126,31)" fg:x="60572" fg:w="262"/><text x="82.5818%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="82.6448%" y="149" width="0.0258%" height="15" fill="rgb(254,105,17)" fg:x="60834" fg:w="19"/><text x="82.9378%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.19%)</title><rect x="82.6448%" y="165" width="0.1916%" height="15" fill="rgb(216,87,36)" fg:x="60834" fg:w="141"/><text x="82.9378%" y="175.50"></text></g><g><title>memcmp (261 instructions, 0.35%)</title><rect x="82.9274%" y="149" width="0.3546%" height="15" fill="rgb(240,21,12)" fg:x="61042" fg:w="261"/><text x="83.2203%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.06%)</title><rect x="83.2819%" y="149" width="0.0557%" height="15" fill="rgb(245,192,34)" fg:x="61303" fg:w="41"/><text x="83.5749%" y="159.50"></text></g><g><title>memcmp (330 instructions, 0.45%)</title><rect x="83.3376%" y="149" width="0.4483%" height="15" fill="rgb(226,100,49)" fg:x="61344" fg:w="330"/><text x="83.6306%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.06%)</title><rect x="83.7860%" y="149" width="0.0557%" height="15" fill="rgb(245,188,27)" fg:x="61674" fg:w="41"/><text x="84.0789%" y="159.50"></text></g><g><title>memcmp (284 instructions, 0.39%)</title><rect x="83.8416%" y="149" width="0.3858%" height="15" fill="rgb(212,170,8)" fg:x="61715" fg:w="284"/><text x="84.1346%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.06%)</title><rect x="84.2275%" y="149" width="0.0557%" height="15" fill="rgb(217,113,29)" fg:x="61999" fg:w="41"/><text x="84.5204%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.17%)</title><rect x="84.2832%" y="149" width="0.1671%" height="15" fill="rgb(237,30,3)" fg:x="62040" fg:w="123"/><text x="84.5761%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.06%)</title><rect x="84.4503%" y="149" width="0.0557%" height="15" fill="rgb(227,19,28)" fg:x="62163" fg:w="41"/><text x="84.7432%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,668 instructions, 2.27%)</title><rect x="82.9274%" y="165" width="2.2660%" height="15" fill="rgb(239,172,45)" fg:x="61042" fg:w="1668"/><text x="83.2203%" y="175.50">&lt;..</text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (1,943 instructions, 2.64%)</title><rect x="82.6448%" y="181" width="2.6396%" height="15" fill="rgb(254,55,39)" fg:x="60834" fg:w="1943"/><text x="82.9378%" y="191.50">&lt;..</text></g><g><title>leb128::write::signed (43 instructions, 0.06%)</title><rect x="85.2844%" y="181" width="0.0584%" height="15" fill="rgb(249,208,12)" fg:x="62777" fg:w="43"/><text x="85.5774%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::encode (2,154 instructions, 2.93%)</title><rect x="82.6448%" y="197" width="2.9263%" height="15" fill="rgb(240,52,13)" fg:x="60834" fg:w="2154"/><text x="82.9378%" y="207.50">ca..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="85.5711%" y="197" width="0.0190%" height="15" fill="rgb(252,149,13)" fg:x="62988" fg:w="14"/><text x="85.8640%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (8,633 instructions, 11.73%)</title><rect x="74.9949%" y="213" width="11.7282%" height="15" fill="rgb(232,81,48)" fg:x="55203" fg:w="8633"/><text x="75.2879%" y="223.50">candid::ser::T..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="86.7231%" y="213" width="0.0190%" height="15" fill="rgb(222,144,2)" fg:x="63836" fg:w="14"/><text x="87.0161%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="86.7421%" y="165" width="0.1114%" height="15" fill="rgb(216,81,32)" fg:x="63850" fg:w="82"/><text x="87.0351%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.17%)</title><rect x="86.7421%" y="181" width="0.1671%" height="15" fill="rgb(244,78,51)" fg:x="63850" fg:w="123"/><text x="87.0351%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.28%)</title><rect x="86.7421%" y="197" width="0.2799%" height="15" fill="rgb(217,66,21)" fg:x="63850" fg:w="206"/><text x="87.0351%" y="207.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_variant (260 instructions, 0.35%)</title><rect x="86.7421%" y="213" width="0.3532%" height="15" fill="rgb(247,101,42)" fg:x="63850" fg:w="260"/><text x="87.0351%" y="223.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.70%)</title><rect x="87.0953%" y="197" width="0.7037%" height="15" fill="rgb(227,81,39)" fg:x="64110" fg:w="518"/><text x="87.3883%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="87.7990%" y="149" width="0.1114%" height="15" fill="rgb(220,223,44)" fg:x="64628" fg:w="82"/><text x="88.0920%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.17%)</title><rect x="87.7990%" y="165" width="0.1671%" height="15" fill="rgb(205,218,2)" fg:x="64628" fg:w="123"/><text x="88.0920%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.28%)</title><rect x="87.7990%" y="181" width="0.2799%" height="15" fill="rgb(212,207,28)" fg:x="64628" fg:w="206"/><text x="88.0920%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="88.0789%" y="181" width="0.1114%" height="15" fill="rgb(224,12,41)" fg:x="64834" fg:w="82"/><text x="88.3719%" y="191.50"></text></g><g><title>memcpy (195 instructions, 0.26%)</title><rect x="88.1903%" y="181" width="0.2649%" height="15" fill="rgb(216,118,12)" fg:x="64916" fg:w="195"/><text x="88.4833%" y="191.50"></text></g><g><title>memcpy (257 instructions, 0.35%)</title><rect x="88.4552%" y="181" width="0.3491%" height="15" fill="rgb(252,97,46)" fg:x="65111" fg:w="257"/><text x="88.7482%" y="191.50"></text></g><g><title>__rust_realloc (133 instructions, 0.18%)</title><rect x="88.8044%" y="149" width="0.1807%" height="15" fill="rgb(244,206,19)" fg:x="65368" fg:w="133"/><text x="89.0973%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 instructions, 0.24%)</title><rect x="88.8044%" y="165" width="0.2391%" height="15" fill="rgb(231,84,31)" fg:x="65368" fg:w="176"/><text x="89.0973%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (262 instructions, 0.36%)</title><rect x="88.8044%" y="181" width="0.3559%" height="15" fill="rgb(244,133,0)" fg:x="65368" fg:w="262"/><text x="89.0973%" y="191.50"></text></g><g><title>memcpy (351 instructions, 0.48%)</title><rect x="89.1603%" y="181" width="0.4768%" height="15" fill="rgb(223,15,50)" fg:x="65630" fg:w="351"/><text x="89.4533%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="89.6371%" y="181" width="0.1209%" height="15" fill="rgb(250,118,49)" fg:x="65981" fg:w="89"/><text x="89.9301%" y="191.50"></text></g><g><title>__rust_realloc (133 instructions, 0.18%)</title><rect x="89.7580%" y="149" width="0.1807%" height="15" fill="rgb(248,25,38)" fg:x="66070" fg:w="133"/><text x="90.0510%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 instructions, 0.24%)</title><rect x="89.7580%" y="165" width="0.2391%" height="15" fill="rgb(215,70,14)" fg:x="66070" fg:w="176"/><text x="90.0510%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (262 instructions, 0.36%)</title><rect x="89.7580%" y="181" width="0.3559%" height="15" fill="rgb(215,28,15)" fg:x="66070" fg:w="262"/><text x="90.0510%" y="191.50"></text></g><g><title>memcmp (54 instructions, 0.07%)</title><rect x="90.1140%" y="133" width="0.0734%" height="15" fill="rgb(243,6,28)" fg:x="66332" fg:w="54"/><text x="90.4069%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.06%)</title><rect x="90.1873%" y="133" width="0.0557%" height="15" fill="rgb(222,130,1)" fg:x="66386" fg:w="41"/><text x="90.4803%" y="143.50"></text></g><g><title>memcmp (77 instructions, 0.10%)</title><rect x="90.2430%" y="133" width="0.1046%" height="15" fill="rgb(236,166,44)" fg:x="66427" fg:w="77"/><text x="90.5360%" y="143.50"></text></g><g><title>memcmp (261 instructions, 0.35%)</title><rect x="90.3476%" y="101" width="0.3546%" height="15" fill="rgb(221,108,14)" fg:x="66504" fg:w="261"/><text x="90.6406%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.06%)</title><rect x="90.7022%" y="101" width="0.0557%" height="15" fill="rgb(252,3,45)" fg:x="66765" fg:w="41"/><text x="90.9952%" y="111.50"></text></g><g><title>memcmp (330 instructions, 0.45%)</title><rect x="90.7579%" y="101" width="0.4483%" height="15" fill="rgb(237,68,30)" fg:x="66806" fg:w="330"/><text x="91.0509%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.06%)</title><rect x="91.2062%" y="101" width="0.0557%" height="15" fill="rgb(211,79,22)" fg:x="67136" fg:w="41"/><text x="91.4992%" y="111.50"></text></g><g><title>memcmp (284 instructions, 0.39%)</title><rect x="91.2619%" y="101" width="0.3858%" height="15" fill="rgb(252,185,21)" fg:x="67177" fg:w="284"/><text x="91.5549%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.06%)</title><rect x="91.6478%" y="101" width="0.0557%" height="15" fill="rgb(225,189,26)" fg:x="67461" fg:w="41"/><text x="91.9407%" y="111.50"></text></g><g><title>memcmp (123 instructions, 0.17%)</title><rect x="91.7035%" y="101" width="0.1671%" height="15" fill="rgb(241,30,40)" fg:x="67502" fg:w="123"/><text x="91.9964%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.06%)</title><rect x="91.8706%" y="101" width="0.0557%" height="15" fill="rgb(235,215,44)" fg:x="67625" fg:w="41"/><text x="92.1635%" y="111.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,668 instructions, 2.27%)</title><rect x="90.3476%" y="117" width="2.2660%" height="15" fill="rgb(205,8,29)" fg:x="66504" fg:w="1668"/><text x="90.6406%" y="127.50">&lt;..</text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (1,727 instructions, 2.35%)</title><rect x="90.3476%" y="133" width="2.3462%" height="15" fill="rgb(241,137,42)" fg:x="66504" fg:w="1727"/><text x="90.6406%" y="143.50">&lt;..</text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (2,167 instructions, 2.94%)</title><rect x="90.1140%" y="149" width="2.9439%" height="15" fill="rgb(237,155,2)" fg:x="66332" fg:w="2167"/><text x="90.4069%" y="159.50">&lt;A..</text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (2,234 instructions, 3.03%)</title><rect x="90.1140%" y="165" width="3.0350%" height="15" fill="rgb(245,29,42)" fg:x="66332" fg:w="2234"/><text x="90.4069%" y="175.50">&lt;c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.11%)</title><rect x="93.1489%" y="117" width="0.1114%" height="15" fill="rgb(234,101,35)" fg:x="68566" fg:w="82"/><text x="93.4419%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.17%)</title><rect x="93.1489%" y="133" width="0.1671%" height="15" fill="rgb(228,64,37)" fg:x="68566" fg:w="123"/><text x="93.4419%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.28%)</title><rect x="93.1489%" y="149" width="0.2799%" height="15" fill="rgb(217,214,36)" fg:x="68566" fg:w="206"/><text x="93.4419%" y="159.50"></text></g><g><title>leb128::write::signed (260 instructions, 0.35%)</title><rect x="93.1489%" y="165" width="0.3532%" height="15" fill="rgb(243,70,3)" fg:x="68566" fg:w="260"/><text x="93.4419%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (2,628 instructions, 3.57%)</title><rect x="90.1140%" y="181" width="3.5702%" height="15" fill="rgb(253,158,52)" fg:x="66332" fg:w="2628"/><text x="90.4069%" y="191.50">can..</text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="93.6842%" y="181" width="0.0475%" height="15" fill="rgb(234,111,54)" fg:x="68960" fg:w="35"/><text x="93.9772%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.08%)</title><rect x="93.7317%" y="181" width="0.0829%" height="15" fill="rgb(217,70,32)" fg:x="68995" fg:w="61"/><text x="94.0247%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (4,952 instructions, 6.73%)</title><rect x="87.7990%" y="197" width="6.7274%" height="15" fill="rgb(234,18,33)" fg:x="64628" fg:w="4952"/><text x="88.0920%" y="207.50">candid:..</text></g><g><title>std::io::Write::write_all (554 instructions, 0.75%)</title><rect x="94.5265%" y="197" width="0.7526%" height="15" fill="rgb(234,12,49)" fg:x="69580" fg:w="554"/><text x="94.8195%" y="207.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.70%)</title><rect x="95.2791%" y="197" width="0.7010%" height="15" fill="rgb(236,10,21)" fg:x="70134" fg:w="516"/><text x="95.5721%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (6,617 instructions, 8.99%)</title><rect x="87.0953%" y="213" width="8.9894%" height="15" fill="rgb(248,182,45)" fg:x="64110" fg:w="6617"/><text x="87.3883%" y="223.50">candid::ser..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.2056%" y="197" width="0.0367%" height="15" fill="rgb(217,95,36)" fg:x="70816" fg:w="27"/><text x="96.4986%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.3985%" y="197" width="0.0367%" height="15" fill="rgb(212,110,31)" fg:x="70958" fg:w="27"/><text x="96.6915%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (373 instructions, 0.51%)</title><rect x="96.0847%" y="213" width="0.5067%" height="15" fill="rgb(206,32,53)" fg:x="70727" fg:w="373"/><text x="96.3777%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="96.5914%" y="197" width="0.0190%" height="15" fill="rgb(246,141,37)" fg:x="71100" fg:w="14"/><text x="96.8844%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="96.6105%" y="197" width="0.0190%" height="15" fill="rgb(219,16,7)" fg:x="71114" fg:w="14"/><text x="96.9034%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.6295%" y="181" width="0.0367%" height="15" fill="rgb(230,205,45)" fg:x="71128" fg:w="27"/><text x="96.9225%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.19%)</title><rect x="96.6295%" y="197" width="0.1929%" height="15" fill="rgb(231,43,49)" fg:x="71128" fg:w="142"/><text x="96.9225%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (358 instructions, 0.49%)</title><rect x="96.5914%" y="213" width="0.4864%" height="15" fill="rgb(212,106,34)" fg:x="71100" fg:w="358"/><text x="96.8844%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="97.0778%" y="213" width="0.0109%" height="15" fill="rgb(206,83,17)" fg:x="71458" fg:w="8"/><text x="97.3708%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="97.0887%" y="213" width="0.0190%" height="15" fill="rgb(244,154,49)" fg:x="71466" fg:w="14"/><text x="97.3816%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="97.1077%" y="197" width="0.0367%" height="15" fill="rgb(244,149,49)" fg:x="71480" fg:w="27"/><text x="97.4007%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.19%)</title><rect x="97.1077%" y="213" width="0.1929%" height="15" fill="rgb(227,134,18)" fg:x="71480" fg:w="142"/><text x="97.4007%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="97.3835%" y="197" width="0.0367%" height="15" fill="rgb(237,116,36)" fg:x="71683" fg:w="27"/><text x="97.6764%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (177 instructions, 0.24%)</title><rect x="97.3006%" y="213" width="0.2405%" height="15" fill="rgb(205,129,40)" fg:x="71622" fg:w="177"/><text x="97.5936%" y="223.50"></text></g><g><title>ic_cdk::api::call::reply (31,696 instructions, 43.06%)</title><rect x="56.2064%" y="229" width="43.0600%" height="15" fill="rgb(236,178,4)" fg:x="41373" fg:w="31696"/><text x="56.4994%" y="239.50">ic_cdk::api::call::reply</text></g><g><title>dip721_nft::__canister_method_transfer_from::{{closure}} (73,037 instructions, 99.22%)</title><rect x="0.2242%" y="245" width="99.2229%" height="15" fill="rgb(251,76,53)" fg:x="165" fg:w="73037"/><text x="0.5171%" y="255.50">dip721_nft::__canister_method_transfer_from::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (15 instructions, 0.02%)</title><rect x="99.4471%" y="245" width="0.0204%" height="15" fill="rgb(242,92,40)" fg:x="73202" fg:w="15"/><text x="99.7400%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="99.4688%" y="229" width="0.1209%" height="15" fill="rgb(209,45,30)" fg:x="73218" fg:w="89"/><text x="99.7618%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.12%)</title><rect x="99.5897%" y="229" width="0.1209%" height="15" fill="rgb(218,157,36)" fg:x="73307" fg:w="89"/><text x="99.8827%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (296 instructions, 0.40%)</title><rect x="99.4675%" y="245" width="0.4021%" height="15" fill="rgb(222,186,16)" fg:x="73217" fg:w="296"/><text x="99.7604%" y="255.50"></text></g><g><title>all (73,609 instructions, 100%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(254,72,35)" fg:x="0" fg:w="73609"/><text x="0.2930%" y="287.50"></text></g><g><title>canister_update transferFromDip721 (73,609 instructions, 100.00%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(224,25,35)" fg:x="0" fg:w="73609"/><text x="0.2930%" y="271.50">canister_update transferFromDip721</text></g></svg></svg>