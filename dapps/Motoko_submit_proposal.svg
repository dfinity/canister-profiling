<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="310" onload="init(evt)" viewBox="0 0 1024 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.submit_proposal</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="293.00"> </text><svg id="frames" x="10" width="1004" total_samples="12702"><g><title>trans_state5 (8 instructions, 0.06%)</title><rect x="0.0000%" y="229" width="0.0630%" height="15" fill="rgb(210,75,36)" fg:x="0" fg:w="8"/><text x="0.2930%" y="239.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.26%)</title><rect x="0.0630%" y="229" width="0.2598%" height="15" fill="rgb(229,88,21)" fg:x="8" fg:w="33"/><text x="0.3560%" y="239.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="0.3228%" y="213" width="0.3621%" height="15" fill="rgb(252,204,47)" fg:x="41" fg:w="46"/><text x="0.6158%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.26%)</title><rect x="0.6849%" y="213" width="0.2598%" height="15" fill="rgb(208,77,27)" fg:x="87" fg:w="33"/><text x="0.9779%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="0.9447%" y="213" width="0.4724%" height="15" fill="rgb(221,76,26)" fg:x="120" fg:w="60"/><text x="1.2377%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="1.4171%" y="213" width="0.3621%" height="15" fill="rgb(225,139,18)" fg:x="180" fg:w="46"/><text x="1.7101%" y="223.50"></text></g><g><title>leb128_decode (160 instructions, 1.26%)</title><rect x="1.7792%" y="213" width="1.2596%" height="15" fill="rgb(230,137,11)" fg:x="226" fg:w="160"/><text x="2.0722%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="3.0389%" y="213" width="0.4724%" height="15" fill="rgb(212,28,1)" fg:x="386" fg:w="60"/><text x="3.3319%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="3.5113%" y="213" width="1.5588%" height="15" fill="rgb(248,164,17)" fg:x="446" fg:w="198"/><text x="3.8042%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="5.0701%" y="213" width="0.4724%" height="15" fill="rgb(222,171,42)" fg:x="644" fg:w="60"/><text x="5.3630%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="5.5424%" y="213" width="1.5588%" height="15" fill="rgb(243,84,45)" fg:x="704" fg:w="198"/><text x="5.8354%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="7.1012%" y="213" width="0.4724%" height="15" fill="rgb(252,49,23)" fg:x="902" fg:w="60"/><text x="7.3942%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="7.5736%" y="213" width="0.4724%" height="15" fill="rgb(215,19,7)" fg:x="962" fg:w="60"/><text x="7.8666%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="8.0460%" y="213" width="0.4724%" height="15" fill="rgb(238,81,41)" fg:x="1022" fg:w="60"/><text x="8.3389%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="8.5183%" y="213" width="0.4724%" height="15" fill="rgb(210,199,37)" fg:x="1082" fg:w="60"/><text x="8.8113%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="8.9907%" y="213" width="0.4724%" height="15" fill="rgb(244,192,49)" fg:x="1142" fg:w="60"/><text x="9.2837%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="9.4631%" y="213" width="0.3621%" height="15" fill="rgb(226,211,11)" fg:x="1202" fg:w="46"/><text x="9.7560%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="9.8252%" y="213" width="0.4724%" height="15" fill="rgb(236,162,54)" fg:x="1248" fg:w="60"/><text x="10.1182%" y="223.50"></text></g><g><title>parse_idl_header (1,626 instructions, 12.80%)</title><rect x="0.3228%" y="229" width="12.8011%" height="15" fill="rgb(220,229,9)" fg:x="41" fg:w="1626"/><text x="0.6158%" y="239.50">parse_idl_header</text></g><g><title>memset (3 instructions, 0.02%)</title><rect x="13.1239%" y="213" width="0.0236%" height="15" fill="rgb(250,87,22)" fg:x="1667" fg:w="3"/><text x="13.4169%" y="223.50"></text></g><g><title>idl_sub_buf_init (6 instructions, 0.05%)</title><rect x="13.1239%" y="229" width="0.0472%" height="15" fill="rgb(239,43,17)" fg:x="1667" fg:w="6"/><text x="13.4169%" y="239.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="13.1712%" y="229" width="0.3621%" height="15" fill="rgb(231,177,25)" fg:x="1673" fg:w="46"/><text x="13.4641%" y="239.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="13.5333%" y="229" width="0.4724%" height="15" fill="rgb(219,179,1)" fg:x="1719" fg:w="60"/><text x="13.8263%" y="239.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="14.0057%" y="213" width="0.4724%" height="15" fill="rgb(238,219,53)" fg:x="1779" fg:w="60"/><text x="14.2986%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="14.4780%" y="213" width="0.3621%" height="15" fill="rgb(232,167,36)" fg:x="1839" fg:w="46"/><text x="14.7710%" y="223.50"></text></g><g><title>alloc_size&lt;6&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="14.8402%" y="213" width="0.1181%" height="15" fill="rgb(244,19,51)" fg:x="1885" fg:w="15"/><text x="15.1332%" y="223.50"></text></g><g><title>leb128_decode (160 instructions, 1.26%)</title><rect x="14.9583%" y="197" width="1.2596%" height="15" fill="rgb(224,6,22)" fg:x="1900" fg:w="160"/><text x="15.2512%" y="207.50"></text></g><g><title>find_field (187 instructions, 1.47%)</title><rect x="14.9583%" y="213" width="1.4722%" height="15" fill="rgb(224,145,5)" fg:x="1900" fg:w="187"/><text x="15.2512%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="16.4305%" y="213" width="0.4724%" height="15" fill="rgb(234,130,49)" fg:x="2087" fg:w="60"/><text x="16.7235%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="16.9028%" y="197" width="0.3621%" height="15" fill="rgb(254,6,2)" fg:x="2147" fg:w="46"/><text x="17.1958%" y="207.50"></text></g><g><title>utf8_validate (219 instructions, 1.72%)</title><rect x="17.2650%" y="197" width="1.7241%" height="15" fill="rgb(208,96,46)" fg:x="2193" fg:w="219"/><text x="17.5580%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.26%)</title><rect x="18.9891%" y="181" width="0.2598%" height="15" fill="rgb(239,3,39)" fg:x="2412" fg:w="33"/><text x="19.2821%" y="191.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h9c03ea53d9f7bc09 (40 instructions, 0.31%)</title><rect x="18.9891%" y="197" width="0.3149%" height="15" fill="rgb(233,210,1)" fg:x="2412" fg:w="40"/><text x="19.2821%" y="207.50"></text></g><g><title>memcpy (161 instructions, 1.27%)</title><rect x="19.3040%" y="197" width="1.2675%" height="15" fill="rgb(244,137,37)" fg:x="2452" fg:w="161"/><text x="19.5970%" y="207.50"></text></g><g><title>@deserialize_go&lt;t&gt; (508 instructions, 4.00%)</title><rect x="16.9028%" y="213" width="3.9994%" height="15" fill="rgb(240,136,2)" fg:x="2147" fg:w="508"/><text x="17.1958%" y="223.50">@de..</text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="20.9022%" y="197" width="1.5588%" height="15" fill="rgb(239,18,37)" fg:x="2655" fg:w="198"/><text x="21.1952%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.77%)</title><rect x="20.9022%" y="213" width="1.7714%" height="15" fill="rgb(218,185,22)" fg:x="2655" fg:w="225"/><text x="21.1952%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="22.6736%" y="213" width="0.4724%" height="15" fill="rgb(225,218,4)" fg:x="2880" fg:w="60"/><text x="22.9666%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="23.1460%" y="197" width="0.3621%" height="15" fill="rgb(230,182,32)" fg:x="2940" fg:w="46"/><text x="23.4389%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.26%)</title><rect x="23.5081%" y="197" width="0.2598%" height="15" fill="rgb(242,56,43)" fg:x="2986" fg:w="33"/><text x="23.8011%" y="207.50"></text></g><g><title>memcpy (83 instructions, 0.65%)</title><rect x="23.7679%" y="197" width="0.6534%" height="15" fill="rgb(233,99,24)" fg:x="3019" fg:w="83"/><text x="24.0609%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (237 instructions, 1.87%)</title><rect x="23.1460%" y="213" width="1.8658%" height="15" fill="rgb(234,209,42)" fg:x="2940" fg:w="237"/><text x="23.4389%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="25.0118%" y="197" width="1.5588%" height="15" fill="rgb(227,7,12)" fg:x="3177" fg:w="198"/><text x="25.3048%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.77%)</title><rect x="25.0118%" y="213" width="1.7714%" height="15" fill="rgb(245,203,43)" fg:x="3177" fg:w="225"/><text x="25.3048%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="26.7832%" y="213" width="0.4724%" height="15" fill="rgb(238,205,33)" fg:x="3402" fg:w="60"/><text x="27.0762%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="27.2556%" y="213" width="0.4724%" height="15" fill="rgb(231,56,7)" fg:x="3462" fg:w="60"/><text x="27.5485%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="27.7279%" y="213" width="0.4724%" height="15" fill="rgb(244,186,29)" fg:x="3522" fg:w="60"/><text x="28.0209%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="28.2003%" y="213" width="0.3621%" height="15" fill="rgb(234,111,31)" fg:x="3582" fg:w="46"/><text x="28.4933%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.26%)</title><rect x="28.5624%" y="213" width="0.2598%" height="15" fill="rgb(241,149,10)" fg:x="3628" fg:w="33"/><text x="28.8554%" y="223.50"></text></g><g><title>memcpy (302 instructions, 2.38%)</title><rect x="28.8222%" y="213" width="2.3776%" height="15" fill="rgb(249,206,44)" fg:x="3661" fg:w="302"/><text x="29.1152%" y="223.50">m..</text></g><g><title>skip_fields (4 instructions, 0.03%)</title><rect x="31.1998%" y="213" width="0.0315%" height="15" fill="rgb(251,153,30)" fg:x="3963" fg:w="4"/><text x="31.4928%" y="223.50"></text></g><g><title>@deserialize_go&lt;r(canister_id:P,message:B,method:t)&gt; (2,521 instructions, 19.85%)</title><rect x="14.0057%" y="229" width="19.8473%" height="15" fill="rgb(239,152,38)" fg:x="1779" fg:w="2521"/><text x="14.2986%" y="239.50">@deserialize_go&lt;r(canister..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="33.8529%" y="229" width="0.1181%" height="15" fill="rgb(249,139,47)" fg:x="4300" fg:w="15"/><text x="34.1459%" y="239.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.26%)</title><rect x="33.9710%" y="213" width="0.2598%" height="15" fill="rgb(244,64,35)" fg:x="4315" fg:w="33"/><text x="34.2640%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="34.2308%" y="213" width="0.1181%" height="15" fill="rgb(216,46,15)" fg:x="4348" fg:w="15"/><text x="34.5238%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="34.3489%" y="213" width="0.1260%" height="15" fill="rgb(250,74,19)" fg:x="4363" fg:w="16"/><text x="34.6419%" y="223.50"></text></g><g><title>compute_crc32 (746 instructions, 5.87%)</title><rect x="34.4749%" y="181" width="5.8731%" height="15" fill="rgb(249,42,33)" fg:x="4379" fg:w="746"/><text x="34.7679%" y="191.50">comput..</text></g><g><title>box_i32 (23 instructions, 0.18%)</title><rect x="40.3480%" y="181" width="0.1811%" height="15" fill="rgb(242,149,17)" fg:x="5125" fg:w="23"/><text x="40.6409%" y="191.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="40.5291%" y="181" width="0.1181%" height="15" fill="rgb(244,29,21)" fg:x="5148" fg:w="15"/><text x="40.8220%" y="191.50"></text></g><g><title>box_i32 (23 instructions, 0.18%)</title><rect x="40.6471%" y="181" width="0.1811%" height="15" fill="rgb(220,130,37)" fg:x="5163" fg:w="23"/><text x="40.9401%" y="191.50"></text></g><g><title>account_key (831 instructions, 6.54%)</title><rect x="34.4749%" y="197" width="6.5423%" height="15" fill="rgb(211,67,2)" fg:x="4379" fg:w="831"/><text x="34.7679%" y="207.50">account..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="41.0172%" y="165" width="0.1181%" height="15" fill="rgb(235,68,52)" fg:x="5210" fg:w="15"/><text x="41.3101%" y="175.50"></text></g><g><title>equalKey (26 instructions, 0.20%)</title><rect x="41.0172%" y="181" width="0.2047%" height="15" fill="rgb(246,142,3)" fg:x="5210" fg:w="26"/><text x="41.3101%" y="191.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="41.2219%" y="181" width="0.1181%" height="15" fill="rgb(241,25,7)" fg:x="5236" fg:w="15"/><text x="41.5148%" y="191.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="41.3399%" y="165" width="0.1260%" height="15" fill="rgb(242,119,39)" fg:x="5251" fg:w="16"/><text x="41.6329%" y="175.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="41.4659%" y="165" width="0.1417%" height="15" fill="rgb(241,98,45)" fg:x="5267" fg:w="18"/><text x="41.7589%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="41.6076%" y="149" width="0.1260%" height="15" fill="rgb(254,28,30)" fg:x="5285" fg:w="16"/><text x="41.9006%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="41.7336%" y="149" width="0.1260%" height="15" fill="rgb(241,142,54)" fg:x="5301" fg:w="16"/><text x="42.0266%" y="159.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="41.6076%" y="165" width="0.4487%" height="15" fill="rgb(222,85,15)" fg:x="5285" fg:w="57"/><text x="41.9006%" y="175.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="42.0564%" y="165" width="0.1417%" height="15" fill="rgb(210,85,47)" fg:x="5342" fg:w="18"/><text x="42.3493%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.1981%" y="149" width="0.1260%" height="15" fill="rgb(224,206,25)" fg:x="5360" fg:w="16"/><text x="42.4910%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.3240%" y="149" width="0.1260%" height="15" fill="rgb(243,201,19)" fg:x="5376" fg:w="16"/><text x="42.6170%" y="159.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="42.1981%" y="165" width="0.4487%" height="15" fill="rgb(236,59,4)" fg:x="5360" fg:w="57"/><text x="42.4910%" y="175.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="42.6468%" y="165" width="0.1417%" height="15" fill="rgb(254,179,45)" fg:x="5417" fg:w="18"/><text x="42.9398%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.7885%" y="149" width="0.1260%" height="15" fill="rgb(226,14,10)" fg:x="5435" fg:w="16"/><text x="43.0815%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.9145%" y="149" width="0.1260%" height="15" fill="rgb(244,27,41)" fg:x="5451" fg:w="16"/><text x="43.2075%" y="159.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="42.7885%" y="165" width="0.4487%" height="15" fill="rgb(235,35,32)" fg:x="5435" fg:w="57"/><text x="43.0815%" y="175.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="43.2373%" y="165" width="0.1417%" height="15" fill="rgb(218,68,31)" fg:x="5492" fg:w="18"/><text x="43.5303%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="43.3790%" y="149" width="0.1260%" height="15" fill="rgb(207,120,37)" fg:x="5510" fg:w="16"/><text x="43.6720%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="43.5050%" y="149" width="0.1260%" height="15" fill="rgb(227,98,0)" fg:x="5526" fg:w="16"/><text x="43.7979%" y="159.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="43.3790%" y="165" width="0.4487%" height="15" fill="rgb(207,7,3)" fg:x="5510" fg:w="57"/><text x="43.6720%" y="175.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="43.8277%" y="165" width="0.1417%" height="15" fill="rgb(206,98,19)" fg:x="5567" fg:w="18"/><text x="44.1207%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="43.9695%" y="149" width="0.1260%" height="15" fill="rgb(217,5,26)" fg:x="5585" fg:w="16"/><text x="44.2624%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="44.0954%" y="149" width="0.1260%" height="15" fill="rgb(235,190,38)" fg:x="5601" fg:w="16"/><text x="44.3884%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="44.2214%" y="149" width="0.1260%" height="15" fill="rgb(247,86,24)" fg:x="5617" fg:w="16"/><text x="44.5144%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="44.3473%" y="149" width="0.1260%" height="15" fill="rgb(205,101,16)" fg:x="5633" fg:w="16"/><text x="44.6403%" y="159.50"></text></g><g><title>Blob.compare_eq (679 instructions, 5.35%)</title><rect x="44.4733%" y="133" width="5.3456%" height="15" fill="rgb(246,168,33)" fg:x="5649" fg:w="679"/><text x="44.7663%" y="143.50">Blob...</text></g><g><title>equal.1 (682 instructions, 5.37%)</title><rect x="44.4733%" y="149" width="5.3692%" height="15" fill="rgb(231,114,1)" fg:x="5649" fg:w="682"/><text x="44.7663%" y="159.50">equal..</text></g><g><title>anon-func-192.5 (781 instructions, 6.15%)</title><rect x="43.9695%" y="165" width="6.1486%" height="15" fill="rgb(207,184,53)" fg:x="5585" fg:w="781"/><text x="44.2624%" y="175.50">anon-f..</text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="50.1181%" y="165" width="0.1417%" height="15" fill="rgb(224,95,51)" fg:x="6366" fg:w="18"/><text x="50.4111%" y="175.50"></text></g><g><title>rec.2 (1,313 instructions, 10.34%)</title><rect x="41.3399%" y="181" width="10.3370%" height="15" fill="rgb(212,188,45)" fg:x="5251" fg:w="1313"/><text x="41.6329%" y="191.50">rec.2</text></g><g><title>get.2 (1,376 instructions, 10.83%)</title><rect x="41.0172%" y="197" width="10.8329%" height="15" fill="rgb(223,154,38)" fg:x="5210" fg:w="1376"/><text x="41.3101%" y="207.50">get.2</text></g><g><title>account_get (2,213 instructions, 17.42%)</title><rect x="34.4749%" y="213" width="17.4225%" height="15" fill="rgb(251,22,52)" fg:x="4379" fg:w="2213"/><text x="34.7679%" y="223.50">account_get</text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="51.8973%" y="213" width="0.1417%" height="15" fill="rgb(229,209,22)" fg:x="6592" fg:w="18"/><text x="52.1903%" y="223.50"></text></g><g><title>obj_idx&lt;2&gt; (16 instructions, 0.13%)</title><rect x="52.0390%" y="213" width="0.1260%" height="15" fill="rgb(234,138,34)" fg:x="6610" fg:w="16"/><text x="52.3320%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="52.1650%" y="213" width="0.1260%" height="15" fill="rgb(212,95,11)" fg:x="6626" fg:w="16"/><text x="52.4580%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="52.2910%" y="213" width="0.1260%" height="15" fill="rgb(240,179,47)" fg:x="6642" fg:w="16"/><text x="52.5839%" y="223.50"></text></g><g><title>B_lt (10 instructions, 0.08%)</title><rect x="52.4169%" y="213" width="0.0787%" height="15" fill="rgb(240,163,11)" fg:x="6658" fg:w="10"/><text x="52.7099%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="52.4957%" y="213" width="0.1260%" height="15" fill="rgb(236,37,12)" fg:x="6668" fg:w="16"/><text x="52.7886%" y="223.50"></text></g><g><title>B_sub (30 instructions, 0.24%)</title><rect x="52.6216%" y="213" width="0.2362%" height="15" fill="rgb(232,164,16)" fg:x="6684" fg:w="30"/><text x="52.9146%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="52.8578%" y="213" width="0.1181%" height="15" fill="rgb(244,205,15)" fg:x="6714" fg:w="15"/><text x="53.1508%" y="223.50"></text></g><g><title>compute_crc32 (746 instructions, 5.87%)</title><rect x="52.9759%" y="181" width="5.8731%" height="15" fill="rgb(223,117,47)" fg:x="6729" fg:w="746"/><text x="53.2689%" y="191.50">comput..</text></g><g><title>box_i32 (23 instructions, 0.18%)</title><rect x="58.8490%" y="181" width="0.1811%" height="15" fill="rgb(244,107,35)" fg:x="7475" fg:w="23"/><text x="59.1420%" y="191.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="59.0301%" y="181" width="0.1181%" height="15" fill="rgb(205,140,8)" fg:x="7498" fg:w="15"/><text x="59.3230%" y="191.50"></text></g><g><title>box_i32 (23 instructions, 0.18%)</title><rect x="59.1482%" y="181" width="0.1811%" height="15" fill="rgb(228,84,46)" fg:x="7513" fg:w="23"/><text x="59.4411%" y="191.50"></text></g><g><title>account_key (831 instructions, 6.54%)</title><rect x="52.9759%" y="197" width="6.5423%" height="15" fill="rgb(254,188,9)" fg:x="6729" fg:w="831"/><text x="53.2689%" y="207.50">account..</text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="59.5182%" y="181" width="0.1417%" height="15" fill="rgb(206,112,54)" fg:x="7560" fg:w="18"/><text x="59.8112%" y="191.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="59.6599%" y="181" width="0.1181%" height="15" fill="rgb(216,84,49)" fg:x="7578" fg:w="15"/><text x="59.9529%" y="191.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="59.7780%" y="181" width="0.1181%" height="15" fill="rgb(214,194,35)" fg:x="7593" fg:w="15"/><text x="60.0710%" y="191.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="59.8961%" y="165" width="0.1181%" height="15" fill="rgb(249,28,3)" fg:x="7608" fg:w="15"/><text x="60.1890%" y="175.50"></text></g><g><title>equalKey (26 instructions, 0.20%)</title><rect x="59.8961%" y="181" width="0.2047%" height="15" fill="rgb(222,56,52)" fg:x="7608" fg:w="26"/><text x="60.1890%" y="191.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="60.1008%" y="165" width="0.1260%" height="15" fill="rgb(245,217,50)" fg:x="7634" fg:w="16"/><text x="60.3937%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="60.2267%" y="149" width="0.1181%" height="15" fill="rgb(213,201,24)" fg:x="7650" fg:w="15"/><text x="60.5197%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="60.3448%" y="149" width="0.1181%" height="15" fill="rgb(248,116,28)" fg:x="7665" fg:w="15"/><text x="60.6378%" y="159.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="60.4629%" y="149" width="0.1181%" height="15" fill="rgb(219,72,43)" fg:x="7680" fg:w="15"/><text x="60.7559%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="60.5810%" y="133" width="0.1417%" height="15" fill="rgb(209,138,14)" fg:x="7695" fg:w="18"/><text x="60.8740%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="60.7227%" y="117" width="0.1260%" height="15" fill="rgb(222,18,33)" fg:x="7713" fg:w="16"/><text x="61.0157%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="60.8487%" y="117" width="0.1260%" height="15" fill="rgb(213,199,7)" fg:x="7729" fg:w="16"/><text x="61.1417%" y="127.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="60.7227%" y="133" width="0.4487%" height="15" fill="rgb(250,110,10)" fg:x="7713" fg:w="57"/><text x="61.0157%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="61.1715%" y="117" width="0.1417%" height="15" fill="rgb(248,123,6)" fg:x="7770" fg:w="18"/><text x="61.4644%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="61.3132%" y="101" width="0.1260%" height="15" fill="rgb(206,91,31)" fg:x="7788" fg:w="16"/><text x="61.6061%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="61.4391%" y="101" width="0.1260%" height="15" fill="rgb(211,154,13)" fg:x="7804" fg:w="16"/><text x="61.7321%" y="111.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="61.3132%" y="117" width="0.4487%" height="15" fill="rgb(225,148,7)" fg:x="7788" fg:w="57"/><text x="61.6061%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="61.7619%" y="101" width="0.1417%" height="15" fill="rgb(220,160,43)" fg:x="7845" fg:w="18"/><text x="62.0549%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="61.9036%" y="85" width="0.1260%" height="15" fill="rgb(213,52,39)" fg:x="7863" fg:w="16"/><text x="62.1966%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="62.0296%" y="85" width="0.1260%" height="15" fill="rgb(243,137,7)" fg:x="7879" fg:w="16"/><text x="62.3226%" y="95.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="61.9036%" y="101" width="0.4487%" height="15" fill="rgb(230,79,13)" fg:x="7863" fg:w="57"/><text x="62.1966%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="62.3524%" y="85" width="0.1417%" height="15" fill="rgb(247,105,23)" fg:x="7920" fg:w="18"/><text x="62.6454%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="62.4941%" y="69" width="0.1260%" height="15" fill="rgb(223,179,41)" fg:x="7938" fg:w="16"/><text x="62.7871%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="62.6201%" y="69" width="0.1260%" height="15" fill="rgb(218,9,34)" fg:x="7954" fg:w="16"/><text x="62.9130%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="62.4941%" y="85" width="0.4487%" height="15" fill="rgb(222,106,8)" fg:x="7938" fg:w="57"/><text x="62.7871%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="62.9428%" y="69" width="0.1417%" height="15" fill="rgb(211,220,0)" fg:x="7995" fg:w="18"/><text x="63.2358%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="63.0846%" y="53" width="0.1260%" height="15" fill="rgb(229,52,16)" fg:x="8013" fg:w="16"/><text x="63.3775%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="63.2105%" y="53" width="0.1260%" height="15" fill="rgb(212,155,18)" fg:x="8029" fg:w="16"/><text x="63.5035%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="63.3365%" y="53" width="0.1260%" height="15" fill="rgb(242,21,14)" fg:x="8045" fg:w="16"/><text x="63.6295%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="63.4624%" y="53" width="0.1260%" height="15" fill="rgb(222,19,48)" fg:x="8061" fg:w="16"/><text x="63.7554%" y="63.50"></text></g><g><title>Blob.compare_eq (679 instructions, 5.35%)</title><rect x="63.5884%" y="37" width="5.3456%" height="15" fill="rgb(232,45,27)" fg:x="8077" fg:w="679"/><text x="63.8814%" y="47.50">Blob...</text></g><g><title>equal.1 (682 instructions, 5.37%)</title><rect x="63.5884%" y="53" width="5.3692%" height="15" fill="rgb(249,103,42)" fg:x="8077" fg:w="682"/><text x="63.8814%" y="63.50">equal..</text></g><g><title>anon-func-192.5 (781 instructions, 6.15%)</title><rect x="63.0846%" y="69" width="6.1486%" height="15" fill="rgb(246,81,33)" fg:x="8013" fg:w="781"/><text x="63.3775%" y="79.50">anon-f..</text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="69.2332%" y="69" width="0.1417%" height="15" fill="rgb(252,33,42)" fg:x="8794" fg:w="18"/><text x="69.5262%" y="79.50"></text></g><g><title>del (858 instructions, 6.75%)</title><rect x="62.9428%" y="85" width="6.7548%" height="15" fill="rgb(209,212,41)" fg:x="7995" fg:w="858"/><text x="63.2358%" y="95.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="69.6977%" y="85" width="0.1811%" height="15" fill="rgb(207,154,6)" fg:x="8853" fg:w="23"/><text x="69.9907%" y="95.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="69.8788%" y="85" width="0.1417%" height="15" fill="rgb(223,64,47)" fg:x="8876" fg:w="18"/><text x="70.1717%" y="95.50"></text></g><g><title>del (1,036 instructions, 8.16%)</title><rect x="62.3524%" y="101" width="8.1562%" height="15" fill="rgb(211,161,38)" fg:x="7920" fg:w="1036"/><text x="62.6454%" y="111.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="70.5086%" y="101" width="0.1811%" height="15" fill="rgb(219,138,40)" fg:x="8956" fg:w="23"/><text x="70.8016%" y="111.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="70.6897%" y="101" width="0.1417%" height="15" fill="rgb(241,228,46)" fg:x="8979" fg:w="18"/><text x="70.9826%" y="111.50"></text></g><g><title>del (1,214 instructions, 9.56%)</title><rect x="61.7619%" y="117" width="9.5575%" height="15" fill="rgb(223,209,38)" fg:x="7845" fg:w="1214"/><text x="62.0549%" y="127.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="71.3195%" y="117" width="0.1811%" height="15" fill="rgb(236,164,45)" fg:x="9059" fg:w="23"/><text x="71.6124%" y="127.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="71.5006%" y="117" width="0.1417%" height="15" fill="rgb(231,15,5)" fg:x="9082" fg:w="18"/><text x="71.7935%" y="127.50"></text></g><g><title>del (1,392 instructions, 10.96%)</title><rect x="61.1715%" y="133" width="10.9589%" height="15" fill="rgb(252,35,15)" fg:x="7770" fg:w="1392"/><text x="61.4644%" y="143.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="72.1304%" y="133" width="0.1811%" height="15" fill="rgb(248,181,18)" fg:x="9162" fg:w="23"/><text x="72.4233%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="72.3114%" y="133" width="0.1417%" height="15" fill="rgb(233,39,42)" fg:x="9185" fg:w="18"/><text x="72.6044%" y="143.50"></text></g><g><title>del (1,570 instructions, 12.36%)</title><rect x="60.5810%" y="149" width="12.3603%" height="15" fill="rgb(238,110,33)" fg:x="7695" fg:w="1570"/><text x="60.8740%" y="159.50">del</text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="72.9413%" y="149" width="0.1417%" height="15" fill="rgb(233,195,10)" fg:x="9265" fg:w="18"/><text x="73.2342%" y="159.50"></text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="73.0830%" y="149" width="0.1811%" height="15" fill="rgb(254,105,3)" fg:x="9283" fg:w="23"/><text x="73.3759%" y="159.50"></text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="73.2641%" y="149" width="0.1811%" height="15" fill="rgb(221,225,9)" fg:x="9306" fg:w="23"/><text x="73.5570%" y="159.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="73.4451%" y="149" width="0.1417%" height="15" fill="rgb(224,227,45)" fg:x="9329" fg:w="18"/><text x="73.7381%" y="159.50"></text></g><g><title>replace (1,756 instructions, 13.82%)</title><rect x="60.2267%" y="165" width="13.8246%" height="15" fill="rgb(229,198,43)" fg:x="7650" fg:w="1756"/><text x="60.5197%" y="175.50">replace</text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="74.0513%" y="133" width="0.1417%" height="15" fill="rgb(206,209,35)" fg:x="9406" fg:w="18"/><text x="74.3443%" y="143.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="74.1930%" y="133" width="0.0787%" height="15" fill="rgb(245,195,53)" fg:x="9424" fg:w="10"/><text x="74.4860%" y="143.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="74.2718%" y="133" width="0.1889%" height="15" fill="rgb(240,92,26)" fg:x="9434" fg:w="24"/><text x="74.5647%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="74.4607%" y="133" width="0.1417%" height="15" fill="rgb(207,40,23)" fg:x="9458" fg:w="18"/><text x="74.7537%" y="143.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="74.6024%" y="133" width="0.0787%" height="15" fill="rgb(223,111,35)" fg:x="9476" fg:w="10"/><text x="74.8954%" y="143.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="74.6812%" y="133" width="0.1889%" height="15" fill="rgb(229,147,28)" fg:x="9486" fg:w="24"/><text x="74.9741%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="74.8701%" y="133" width="0.1417%" height="15" fill="rgb(211,29,28)" fg:x="9510" fg:w="18"/><text x="75.1631%" y="143.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="75.0118%" y="133" width="0.0787%" height="15" fill="rgb(228,72,33)" fg:x="9528" fg:w="10"/><text x="75.3048%" y="143.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="75.0905%" y="133" width="0.1889%" height="15" fill="rgb(205,214,31)" fg:x="9538" fg:w="24"/><text x="75.3835%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="75.2795%" y="133" width="0.1417%" height="15" fill="rgb(224,111,15)" fg:x="9562" fg:w="18"/><text x="75.5725%" y="143.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="75.4212%" y="133" width="0.0787%" height="15" fill="rgb(253,21,26)" fg:x="9580" fg:w="10"/><text x="75.7142%" y="143.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="75.4999%" y="133" width="0.1889%" height="15" fill="rgb(245,139,43)" fg:x="9590" fg:w="24"/><text x="75.7929%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="75.6889%" y="133" width="0.1417%" height="15" fill="rgb(252,170,7)" fg:x="9614" fg:w="18"/><text x="75.9818%" y="143.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="75.8306%" y="133" width="0.0787%" height="15" fill="rgb(231,118,14)" fg:x="9632" fg:w="10"/><text x="76.1235%" y="143.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="75.9093%" y="133" width="0.1889%" height="15" fill="rgb(238,83,0)" fg:x="9642" fg:w="24"/><text x="76.2023%" y="143.50"></text></g><g><title>opt_inject (4 instructions, 0.03%)</title><rect x="76.0983%" y="133" width="0.0315%" height="15" fill="rgb(221,39,39)" fg:x="9666" fg:w="4"/><text x="76.3912%" y="143.50"></text></g><g><title>opt_project (4 instructions, 0.03%)</title><rect x="76.1297%" y="133" width="0.0315%" height="15" fill="rgb(222,119,46)" fg:x="9670" fg:w="4"/><text x="76.4227%" y="143.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.12%)</title><rect x="76.1612%" y="133" width="0.1181%" height="15" fill="rgb(222,165,49)" fg:x="9674" fg:w="15"/><text x="76.4542%" y="143.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="76.2793%" y="133" width="0.1181%" height="15" fill="rgb(219,113,52)" fg:x="9689" fg:w="15"/><text x="76.5723%" y="143.50"></text></g><g><title>rec (498 instructions, 3.92%)</title><rect x="74.0513%" y="149" width="3.9206%" height="15" fill="rgb(214,7,15)" fg:x="9406" fg:w="498"/><text x="74.3443%" y="159.50">rec</text></g><g><title>leaf (502 instructions, 3.95%)</title><rect x="74.0513%" y="165" width="3.9521%" height="15" fill="rgb(235,32,4)" fg:x="9406" fg:w="502"/><text x="74.3443%" y="175.50">leaf</text></g><g><title>recursiveReplace (2,327 instructions, 18.32%)</title><rect x="60.1008%" y="181" width="18.3199%" height="15" fill="rgb(238,90,54)" fg:x="7634" fg:w="2327"/><text x="60.3937%" y="191.50">recursiveReplace</text></g><g><title>put.1 (2,467 instructions, 19.42%)</title><rect x="59.5182%" y="197" width="19.4221%" height="15" fill="rgb(213,208,19)" fg:x="7560" fg:w="2467"/><text x="59.8112%" y="207.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="78.9403%" y="197" width="0.1811%" height="15" fill="rgb(233,156,4)" fg:x="10027" fg:w="23"/><text x="79.2333%" y="207.50"></text></g><g><title>account_put (3,334 instructions, 26.25%)</title><rect x="52.9759%" y="213" width="26.2478%" height="15" fill="rgb(207,194,5)" fg:x="6729" fg:w="3334"/><text x="53.2689%" y="223.50">account_put</text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="79.2237%" y="213" width="0.1181%" height="15" fill="rgb(206,111,30)" fg:x="10063" fg:w="15"/><text x="79.5167%" y="223.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="79.3418%" y="197" width="0.1889%" height="15" fill="rgb(243,70,54)" fg:x="10078" fg:w="24"/><text x="79.6348%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.29%)</title><rect x="79.5308%" y="149" width="0.2913%" height="15" fill="rgb(242,28,8)" fg:x="10102" fg:w="37"/><text x="79.8238%" y="159.50"></text></g><g><title>memset (98 instructions, 0.77%)</title><rect x="79.8221%" y="149" width="0.7715%" height="15" fill="rgb(219,106,18)" fg:x="10139" fg:w="98"/><text x="80.1150%" y="159.50"></text></g><g><title>mp_calloc (159 instructions, 1.25%)</title><rect x="79.5308%" y="165" width="1.2518%" height="15" fill="rgb(244,222,10)" fg:x="10102" fg:w="159"/><text x="79.8238%" y="175.50"></text></g><g><title>mp_init (174 instructions, 1.37%)</title><rect x="79.5308%" y="181" width="1.3699%" height="15" fill="rgb(236,179,52)" fg:x="10102" fg:w="174"/><text x="79.8238%" y="191.50"></text></g><g><title>mp_set_u64 (113 instructions, 0.89%)</title><rect x="80.9006%" y="181" width="0.8896%" height="15" fill="rgb(213,23,39)" fg:x="10276" fg:w="113"/><text x="81.1936%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.24%)</title><rect x="81.7903%" y="181" width="0.2362%" height="15" fill="rgb(238,48,10)" fg:x="10389" fg:w="30"/><text x="82.0832%" y="191.50"></text></g><g><title>bigint_of_word64 (355 instructions, 2.79%)</title><rect x="79.5308%" y="197" width="2.7948%" height="15" fill="rgb(251,196,23)" fg:x="10102" fg:w="355"/><text x="79.8238%" y="207.50">bi..</text></g><g><title>alloc_size&lt;11&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="82.3256%" y="197" width="0.1181%" height="15" fill="rgb(250,152,24)" fg:x="10457" fg:w="15"/><text x="82.6186%" y="207.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.4437%" y="165" width="0.0709%" height="15" fill="rgb(209,150,17)" fg:x="10472" fg:w="9"/><text x="82.7367%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.5146%" y="165" width="0.0709%" height="15" fill="rgb(234,202,34)" fg:x="10481" fg:w="9"/><text x="82.8075%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.5854%" y="165" width="0.0709%" height="15" fill="rgb(253,148,53)" fg:x="10490" fg:w="9"/><text x="82.8784%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.6563%" y="165" width="0.0709%" height="15" fill="rgb(218,129,16)" fg:x="10499" fg:w="9"/><text x="82.9492%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.7271%" y="165" width="0.0709%" height="15" fill="rgb(216,85,19)" fg:x="10508" fg:w="9"/><text x="83.0201%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="82.7980%" y="165" width="0.1181%" height="15" fill="rgb(235,228,7)" fg:x="10517" fg:w="15"/><text x="83.0910%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.9161%" y="165" width="0.0709%" height="15" fill="rgb(245,175,0)" fg:x="10532" fg:w="9"/><text x="83.2090%" y="175.50"></text></g><g><title>proposal_key (296 instructions, 2.33%)</title><rect x="82.4437%" y="181" width="2.3303%" height="15" fill="rgb(208,168,36)" fg:x="10472" fg:w="296"/><text x="82.7367%" y="191.50">p..</text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="84.7741%" y="165" width="0.1417%" height="15" fill="rgb(246,171,24)" fg:x="10768" fg:w="18"/><text x="85.0670%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="84.9158%" y="165" width="0.1181%" height="15" fill="rgb(215,142,24)" fg:x="10786" fg:w="15"/><text x="85.2087%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="85.0339%" y="165" width="0.1181%" height="15" fill="rgb(250,187,7)" fg:x="10801" fg:w="15"/><text x="85.3268%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="85.1519%" y="149" width="0.1181%" height="15" fill="rgb(228,66,33)" fg:x="10816" fg:w="15"/><text x="85.4449%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.20%)</title><rect x="85.1519%" y="165" width="0.2047%" height="15" fill="rgb(234,215,21)" fg:x="10816" fg:w="26"/><text x="85.4449%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="85.3566%" y="133" width="0.1181%" height="15" fill="rgb(222,191,20)" fg:x="10842" fg:w="15"/><text x="85.6496%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="85.4747%" y="133" width="0.1181%" height="15" fill="rgb(245,79,54)" fg:x="10857" fg:w="15"/><text x="85.7677%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="85.5928%" y="133" width="0.1181%" height="15" fill="rgb(240,10,37)" fg:x="10872" fg:w="15"/><text x="85.8858%" y="143.50"></text></g><g><title>del (27 instructions, 0.21%)</title><rect x="85.7109%" y="133" width="0.2126%" height="15" fill="rgb(214,192,32)" fg:x="10887" fg:w="27"/><text x="86.0039%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="85.9235%" y="133" width="0.1417%" height="15" fill="rgb(209,36,54)" fg:x="10914" fg:w="18"/><text x="86.2164%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="86.0652%" y="133" width="0.1811%" height="15" fill="rgb(220,10,11)" fg:x="10932" fg:w="23"/><text x="86.3582%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="86.2463%" y="133" width="0.1811%" height="15" fill="rgb(221,106,17)" fg:x="10955" fg:w="23"/><text x="86.5392%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="86.4273%" y="133" width="0.1417%" height="15" fill="rgb(251,142,44)" fg:x="10978" fg:w="18"/><text x="86.7203%" y="143.50"></text></g><g><title>replace (213 instructions, 1.68%)</title><rect x="85.3566%" y="149" width="1.6769%" height="15" fill="rgb(238,13,15)" fg:x="10842" fg:w="213"/><text x="85.6496%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="87.0335%" y="117" width="0.1417%" height="15" fill="rgb(208,107,27)" fg:x="11055" fg:w="18"/><text x="87.3265%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="87.1752%" y="117" width="0.0787%" height="15" fill="rgb(205,136,37)" fg:x="11073" fg:w="10"/><text x="87.4682%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="87.2540%" y="117" width="0.1889%" height="15" fill="rgb(250,205,27)" fg:x="11083" fg:w="24"/><text x="87.5469%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.03%)</title><rect x="87.4429%" y="117" width="0.0315%" height="15" fill="rgb(210,80,43)" fg:x="11107" fg:w="4"/><text x="87.7359%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.03%)</title><rect x="87.4744%" y="117" width="0.0315%" height="15" fill="rgb(247,160,36)" fg:x="11111" fg:w="4"/><text x="87.7674%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.12%)</title><rect x="87.5059%" y="117" width="0.1181%" height="15" fill="rgb(234,13,49)" fg:x="11115" fg:w="15"/><text x="87.7989%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="87.6240%" y="117" width="0.1181%" height="15" fill="rgb(234,122,0)" fg:x="11130" fg:w="15"/><text x="87.9170%" y="127.50"></text></g><g><title>rec (174 instructions, 1.37%)</title><rect x="87.0335%" y="133" width="1.3699%" height="15" fill="rgb(207,146,38)" fg:x="11055" fg:w="174"/><text x="87.3265%" y="143.50"></text></g><g><title>leaf (178 instructions, 1.40%)</title><rect x="87.0335%" y="149" width="1.4014%" height="15" fill="rgb(207,177,25)" fg:x="11055" fg:w="178"/><text x="87.3265%" y="159.50"></text></g><g><title>recursiveReplace (421 instructions, 3.31%)</title><rect x="85.3566%" y="165" width="3.3144%" height="15" fill="rgb(211,178,42)" fg:x="10842" fg:w="421"/><text x="85.6496%" y="175.50">re..</text></g><g><title>put.1 (561 instructions, 4.42%)</title><rect x="84.7741%" y="181" width="4.4166%" height="15" fill="rgb(230,69,54)" fg:x="10768" fg:w="561"/><text x="85.0670%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="89.1907%" y="181" width="0.1811%" height="15" fill="rgb(214,135,41)" fg:x="11329" fg:w="23"/><text x="89.4836%" y="191.50"></text></g><g><title>proposal_put (893 instructions, 7.03%)</title><rect x="82.4437%" y="197" width="7.0304%" height="15" fill="rgb(237,67,25)" fg:x="10472" fg:w="893"/><text x="82.7367%" y="207.50">proposal..</text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.12%)</title><rect x="89.4741%" y="197" width="0.1181%" height="15" fill="rgb(222,189,50)" fg:x="11365" fg:w="15"/><text x="89.7671%" y="207.50"></text></g><g><title>anon-func-71.66 (1,368 instructions, 10.77%)</title><rect x="79.3418%" y="213" width="10.7700%" height="15" fill="rgb(245,148,34)" fg:x="10078" fg:w="1368"/><text x="79.6348%" y="223.50">anon-func-71...</text></g><g><title>@buffer_size&lt;N&gt; (21 instructions, 0.17%)</title><rect x="90.1118%" y="197" width="0.1653%" height="15" fill="rgb(222,29,6)" fg:x="11446" fg:w="21"/><text x="90.4048%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.26%)</title><rect x="90.2771%" y="197" width="0.2598%" height="15" fill="rgb(221,189,43)" fg:x="11467" fg:w="33"/><text x="90.5701%" y="207.50"></text></g><g><title>memcpy (76 instructions, 0.60%)</title><rect x="90.5369%" y="197" width="0.5983%" height="15" fill="rgb(207,36,27)" fg:x="11500" fg:w="76"/><text x="90.8299%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.26%)</title><rect x="91.1353%" y="197" width="0.2598%" height="15" fill="rgb(217,90,24)" fg:x="11576" fg:w="33"/><text x="91.4282%" y="207.50"></text></g><g><title>leb128_encode (9 instructions, 0.07%)</title><rect x="91.3951%" y="197" width="0.0709%" height="15" fill="rgb(224,66,35)" fg:x="11609" fg:w="9"/><text x="91.6880%" y="207.50"></text></g><g><title>leb128_encode (9 instructions, 0.07%)</title><rect x="91.4659%" y="181" width="0.0709%" height="15" fill="rgb(221,13,50)" fg:x="11618" fg:w="9"/><text x="91.7589%" y="191.50"></text></g><g><title>@serialize_go&lt;N&gt; (32 instructions, 0.25%)</title><rect x="91.4659%" y="197" width="0.2519%" height="15" fill="rgb(236,68,49)" fg:x="11618" fg:w="32"/><text x="91.7589%" y="207.50"></text></g><g><title>reply_with_data (44 instructions, 0.35%)</title><rect x="91.7178%" y="197" width="0.3464%" height="15" fill="rgb(229,146,28)" fg:x="11650" fg:w="44"/><text x="92.0108%" y="207.50"></text></g><g><title>$lambda.32 (351 instructions, 2.76%)</title><rect x="90.1118%" y="213" width="2.7633%" height="15" fill="rgb(225,31,38)" fg:x="11446" fg:w="351"/><text x="90.4048%" y="223.50">$..</text></g><g><title>$lambda.5 (7,597 instructions, 59.81%)</title><rect x="33.9710%" y="229" width="59.8095%" height="15" fill="rgb(250,208,3)" fg:x="4315" fg:w="7597"/><text x="34.2640%" y="239.50">$lambda.5</text></g><g><title>schedule_copying_gc (45 instructions, 0.35%)</title><rect x="93.7805%" y="229" width="0.3543%" height="15" fill="rgb(246,54,23)" fg:x="11912" fg:w="45"/><text x="94.0735%" y="239.50"></text></g><g><title>trans_state4 (13 instructions, 0.10%)</title><rect x="94.1348%" y="229" width="0.1023%" height="15" fill="rgb(243,76,11)" fg:x="11957" fg:w="13"/><text x="94.4278%" y="239.50"></text></g><g><title>all (12,702 instructions, 100%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(245,21,50)" fg:x="0" fg:w="12702"/><text x="0.2930%" y="271.50"></text></g><g><title>submit_proposal (12,702 instructions, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(228,9,43)" fg:x="0" fg:w="12702"/><text x="0.2930%" y="255.50">submit_proposal</text></g></svg></svg>