<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.submit_proposal</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="12676"><g><title>trans_state5 (8 instructions, 0.06%)</title><rect x="0.0000%" y="181" width="0.0631%" height="15" fill="rgb(208,77,27)" fg:x="0" fg:w="8"/><text x="0.2930%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.24%)</title><rect x="0.0631%" y="181" width="0.2367%" height="15" fill="rgb(221,76,26)" fg:x="8" fg:w="30"/><text x="0.3561%" y="191.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="0.2998%" y="165" width="0.3629%" height="15" fill="rgb(225,139,18)" fg:x="38" fg:w="46"/><text x="0.5927%" y="175.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.24%)</title><rect x="0.6627%" y="165" width="0.2367%" height="15" fill="rgb(230,137,11)" fg:x="84" fg:w="30"/><text x="0.9556%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="0.8993%" y="165" width="0.4733%" height="15" fill="rgb(212,28,1)" fg:x="114" fg:w="60"/><text x="1.1923%" y="175.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="1.3727%" y="165" width="0.3629%" height="15" fill="rgb(248,164,17)" fg:x="174" fg:w="46"/><text x="1.6656%" y="175.50"></text></g><g><title>leb128_decode (160 instructions, 1.26%)</title><rect x="1.7356%" y="165" width="1.2622%" height="15" fill="rgb(222,171,42)" fg:x="220" fg:w="160"/><text x="2.0285%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="2.9978%" y="165" width="0.4733%" height="15" fill="rgb(243,84,45)" fg:x="380" fg:w="60"/><text x="3.2908%" y="175.50"></text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="3.4711%" y="165" width="1.5620%" height="15" fill="rgb(252,49,23)" fg:x="440" fg:w="198"/><text x="3.7641%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="5.0331%" y="165" width="0.4733%" height="15" fill="rgb(215,19,7)" fg:x="638" fg:w="60"/><text x="5.3261%" y="175.50"></text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="5.5065%" y="165" width="1.5620%" height="15" fill="rgb(238,81,41)" fg:x="698" fg:w="198"/><text x="5.7994%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="7.0685%" y="165" width="0.4733%" height="15" fill="rgb(210,199,37)" fg:x="896" fg:w="60"/><text x="7.3614%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="7.5418%" y="165" width="0.4733%" height="15" fill="rgb(244,192,49)" fg:x="956" fg:w="60"/><text x="7.8348%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="8.0151%" y="165" width="0.4733%" height="15" fill="rgb(226,211,11)" fg:x="1016" fg:w="60"/><text x="8.3081%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="8.4885%" y="165" width="0.4733%" height="15" fill="rgb(236,162,54)" fg:x="1076" fg:w="60"/><text x="8.7815%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="8.9618%" y="165" width="0.4733%" height="15" fill="rgb(220,229,9)" fg:x="1136" fg:w="60"/><text x="9.2548%" y="175.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="9.4352%" y="165" width="0.3629%" height="15" fill="rgb(250,87,22)" fg:x="1196" fg:w="46"/><text x="9.7281%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="9.7980%" y="165" width="0.4733%" height="15" fill="rgb(239,43,17)" fg:x="1242" fg:w="60"/><text x="10.0910%" y="175.50"></text></g><g><title>parse_idl_header (1,623 instructions, 12.80%)</title><rect x="0.2998%" y="181" width="12.8037%" height="15" fill="rgb(231,177,25)" fg:x="38" fg:w="1623"/><text x="0.5927%" y="191.50">parse_idl_header</text></g><g><title>memset (3 instructions, 0.02%)</title><rect x="13.1035%" y="165" width="0.0237%" height="15" fill="rgb(219,179,1)" fg:x="1661" fg:w="3"/><text x="13.3965%" y="175.50"></text></g><g><title>idl_sub_buf_init (6 instructions, 0.05%)</title><rect x="13.1035%" y="181" width="0.0473%" height="15" fill="rgb(238,219,53)" fg:x="1661" fg:w="6"/><text x="13.3965%" y="191.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="13.1508%" y="181" width="0.3629%" height="15" fill="rgb(232,167,36)" fg:x="1667" fg:w="46"/><text x="13.4438%" y="191.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="13.5137%" y="181" width="0.4733%" height="15" fill="rgb(244,19,51)" fg:x="1713" fg:w="60"/><text x="13.8067%" y="191.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="13.9871%" y="165" width="0.4733%" height="15" fill="rgb(224,6,22)" fg:x="1773" fg:w="60"/><text x="14.2800%" y="175.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="14.4604%" y="165" width="0.3629%" height="15" fill="rgb(224,145,5)" fg:x="1833" fg:w="46"/><text x="14.7534%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="14.8233%" y="165" width="0.1736%" height="15" fill="rgb(234,130,49)" fg:x="1879" fg:w="22"/><text x="15.1163%" y="175.50"></text></g><g><title>leb128_decode (160 instructions, 1.26%)</title><rect x="14.9968%" y="149" width="1.2622%" height="15" fill="rgb(254,6,2)" fg:x="1901" fg:w="160"/><text x="15.2898%" y="159.50"></text></g><g><title>find_field (187 instructions, 1.48%)</title><rect x="14.9968%" y="165" width="1.4752%" height="15" fill="rgb(208,96,46)" fg:x="1901" fg:w="187"/><text x="15.2898%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="16.4721%" y="165" width="0.4733%" height="15" fill="rgb(239,3,39)" fg:x="2088" fg:w="60"/><text x="16.7650%" y="175.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="16.9454%" y="149" width="0.3629%" height="15" fill="rgb(233,210,1)" fg:x="2148" fg:w="46"/><text x="17.2384%" y="159.50"></text></g><g><title>utf8_validate (217 instructions, 1.71%)</title><rect x="17.3083%" y="149" width="1.7119%" height="15" fill="rgb(244,137,37)" fg:x="2194" fg:w="217"/><text x="17.6013%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.24%)</title><rect x="19.0202%" y="133" width="0.2367%" height="15" fill="rgb(240,136,2)" fg:x="2411" fg:w="30"/><text x="19.3132%" y="143.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h65a8860ad2532130 (37 instructions, 0.29%)</title><rect x="19.0202%" y="149" width="0.2919%" height="15" fill="rgb(239,18,37)" fg:x="2411" fg:w="37"/><text x="19.3132%" y="159.50"></text></g><g><title>memcpy (161 instructions, 1.27%)</title><rect x="19.3121%" y="149" width="1.2701%" height="15" fill="rgb(218,185,22)" fg:x="2448" fg:w="161"/><text x="19.6051%" y="159.50"></text></g><g><title>@deserialize_go&lt;t&gt; (503 instructions, 3.97%)</title><rect x="16.9454%" y="165" width="3.9681%" height="15" fill="rgb(225,218,4)" fg:x="2148" fg:w="503"/><text x="17.2384%" y="175.50">@de..</text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="20.9135%" y="149" width="1.5620%" height="15" fill="rgb(230,182,32)" fg:x="2651" fg:w="198"/><text x="21.2065%" y="159.50"></text></g><g><title>find_field (225 instructions, 1.78%)</title><rect x="20.9135%" y="165" width="1.7750%" height="15" fill="rgb(242,56,43)" fg:x="2651" fg:w="225"/><text x="21.2065%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="22.6885%" y="165" width="0.4733%" height="15" fill="rgb(233,99,24)" fg:x="2876" fg:w="60"/><text x="22.9815%" y="175.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="23.1619%" y="149" width="0.3629%" height="15" fill="rgb(234,209,42)" fg:x="2936" fg:w="46"/><text x="23.4548%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.24%)</title><rect x="23.5248%" y="149" width="0.2367%" height="15" fill="rgb(227,7,12)" fg:x="2982" fg:w="30"/><text x="23.8177%" y="159.50"></text></g><g><title>memcpy (83 instructions, 0.65%)</title><rect x="23.7614%" y="149" width="0.6548%" height="15" fill="rgb(245,203,43)" fg:x="3012" fg:w="83"/><text x="24.0544%" y="159.50"></text></g><g><title>@deserialize_go&lt;P&gt; (234 instructions, 1.85%)</title><rect x="23.1619%" y="165" width="1.8460%" height="15" fill="rgb(238,205,33)" fg:x="2936" fg:w="234"/><text x="23.4548%" y="175.50"></text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="25.0079%" y="149" width="1.5620%" height="15" fill="rgb(231,56,7)" fg:x="3170" fg:w="198"/><text x="25.3009%" y="159.50"></text></g><g><title>find_field (225 instructions, 1.78%)</title><rect x="25.0079%" y="165" width="1.7750%" height="15" fill="rgb(244,186,29)" fg:x="3170" fg:w="225"/><text x="25.3009%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="26.7829%" y="165" width="0.4733%" height="15" fill="rgb(234,111,31)" fg:x="3395" fg:w="60"/><text x="27.0759%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="27.2562%" y="165" width="0.4733%" height="15" fill="rgb(241,149,10)" fg:x="3455" fg:w="60"/><text x="27.5492%" y="175.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="27.7296%" y="165" width="0.4733%" height="15" fill="rgb(249,206,44)" fg:x="3515" fg:w="60"/><text x="28.0225%" y="175.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="28.2029%" y="165" width="0.3629%" height="15" fill="rgb(251,153,30)" fg:x="3575" fg:w="46"/><text x="28.4959%" y="175.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.24%)</title><rect x="28.5658%" y="165" width="0.2367%" height="15" fill="rgb(239,152,38)" fg:x="3621" fg:w="30"/><text x="28.8588%" y="175.50"></text></g><g><title>memcpy (302 instructions, 2.38%)</title><rect x="28.8025%" y="165" width="2.3825%" height="15" fill="rgb(249,139,47)" fg:x="3651" fg:w="302"/><text x="29.0954%" y="175.50">m..</text></g><g><title>skip_fields (4 instructions, 0.03%)</title><rect x="31.1849%" y="165" width="0.0316%" height="15" fill="rgb(244,64,35)" fg:x="3953" fg:w="4"/><text x="31.4779%" y="175.50"></text></g><g><title>@deserialize_go&lt;r(canister_id:P,message:B,method:t)&gt; (2,521 instructions, 19.89%)</title><rect x="13.9871%" y="181" width="19.8880%" height="15" fill="rgb(216,46,15)" fg:x="1773" fg:w="2521"/><text x="14.2800%" y="191.50">@deserialize_go&lt;r(canister..</text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="33.8750%" y="181" width="0.1736%" height="15" fill="rgb(250,74,19)" fg:x="4294" fg:w="22"/><text x="34.1680%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.24%)</title><rect x="34.0486%" y="165" width="0.2367%" height="15" fill="rgb(249,42,33)" fg:x="4316" fg:w="30"/><text x="34.3416%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="34.2853%" y="165" width="0.1736%" height="15" fill="rgb(242,149,17)" fg:x="4346" fg:w="22"/><text x="34.5782%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="34.4588%" y="165" width="0.1262%" height="15" fill="rgb(244,29,21)" fg:x="4368" fg:w="16"/><text x="34.7518%" y="175.50"></text></g><g><title>compute_crc32 (746 instructions, 5.89%)</title><rect x="34.5850%" y="133" width="5.8851%" height="15" fill="rgb(220,130,37)" fg:x="4384" fg:w="746"/><text x="34.8780%" y="143.50">comput..</text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="40.4702%" y="133" width="0.0710%" height="15" fill="rgb(211,67,2)" fg:x="5130" fg:w="9"/><text x="40.7631%" y="143.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="40.5412%" y="133" width="0.1736%" height="15" fill="rgb(235,68,52)" fg:x="5139" fg:w="22"/><text x="40.8341%" y="143.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="40.7147%" y="133" width="0.0710%" height="15" fill="rgb(246,142,3)" fg:x="5161" fg:w="9"/><text x="41.0077%" y="143.50"></text></g><g><title>account_key (815 instructions, 6.43%)</title><rect x="34.5850%" y="149" width="6.4295%" height="15" fill="rgb(241,25,7)" fg:x="4384" fg:w="815"/><text x="34.8780%" y="159.50">account..</text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="41.0145%" y="117" width="0.1736%" height="15" fill="rgb(242,119,39)" fg:x="5199" fg:w="22"/><text x="41.3075%" y="127.50"></text></g><g><title>equalKey (37 instructions, 0.29%)</title><rect x="41.0145%" y="133" width="0.2919%" height="15" fill="rgb(241,98,45)" fg:x="5199" fg:w="37"/><text x="41.3075%" y="143.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="41.3064%" y="133" width="0.1736%" height="15" fill="rgb(254,28,30)" fg:x="5236" fg:w="22"/><text x="41.5994%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="41.4800%" y="117" width="0.1262%" height="15" fill="rgb(241,142,54)" fg:x="5258" fg:w="16"/><text x="41.7729%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="41.6062%" y="117" width="0.1736%" height="15" fill="rgb(222,85,15)" fg:x="5274" fg:w="22"/><text x="41.8992%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="41.7797%" y="117" width="0.1736%" height="15" fill="rgb(210,85,47)" fg:x="5296" fg:w="22"/><text x="42.0727%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="41.9533%" y="101" width="0.1104%" height="15" fill="rgb(224,206,25)" fg:x="5318" fg:w="14"/><text x="42.2463%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.0637%" y="85" width="0.1262%" height="15" fill="rgb(243,201,19)" fg:x="5332" fg:w="16"/><text x="42.3567%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.1900%" y="85" width="0.1262%" height="15" fill="rgb(236,59,4)" fg:x="5348" fg:w="16"/><text x="42.4829%" y="95.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="42.0637%" y="101" width="0.4497%" height="15" fill="rgb(254,179,45)" fg:x="5332" fg:w="57"/><text x="42.3567%" y="111.50"></text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="42.5134%" y="85" width="0.1104%" height="15" fill="rgb(226,14,10)" fg:x="5389" fg:w="14"/><text x="42.8064%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.6239%" y="69" width="0.1262%" height="15" fill="rgb(244,27,41)" fg:x="5403" fg:w="16"/><text x="42.9168%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.7501%" y="69" width="0.1262%" height="15" fill="rgb(235,35,32)" fg:x="5419" fg:w="16"/><text x="43.0430%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="42.8763%" y="69" width="0.1262%" height="15" fill="rgb(218,68,31)" fg:x="5435" fg:w="16"/><text x="43.1693%" y="79.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="43.0025%" y="69" width="0.1262%" height="15" fill="rgb(207,120,37)" fg:x="5451" fg:w="16"/><text x="43.2955%" y="79.50"></text></g><g><title>Blob.compare_eq (679 instructions, 5.36%)</title><rect x="43.1287%" y="53" width="5.3566%" height="15" fill="rgb(227,98,0)" fg:x="5467" fg:w="679"/><text x="43.4217%" y="63.50">Blob...</text></g><g><title>equal.1 (682 instructions, 5.38%)</title><rect x="43.1287%" y="69" width="5.3802%" height="15" fill="rgb(207,7,3)" fg:x="5467" fg:w="682"/><text x="43.4217%" y="79.50">equal..</text></g><g><title>anon-func-192.5 (783 instructions, 6.18%)</title><rect x="42.6239%" y="85" width="6.1770%" height="15" fill="rgb(206,98,19)" fg:x="5403" fg:w="783"/><text x="42.9168%" y="95.50">anon-f..</text></g><g><title>opt_inject (14 instructions, 0.11%)</title><rect x="48.8009%" y="85" width="0.1104%" height="15" fill="rgb(217,5,26)" fg:x="6186" fg:w="14"/><text x="49.0939%" y="95.50"></text></g><g><title>rec.5 (855 instructions, 6.75%)</title><rect x="42.5134%" y="101" width="6.7450%" height="15" fill="rgb(235,190,38)" fg:x="5389" fg:w="855"/><text x="42.8064%" y="111.50">rec.5</text></g><g><title>rec.5 (975 instructions, 7.69%)</title><rect x="41.9533%" y="117" width="7.6917%" height="15" fill="rgb(247,86,24)" fg:x="5318" fg:w="975"/><text x="42.2463%" y="127.50">rec.5</text></g><g><title>rec.4 (1,102 instructions, 8.69%)</title><rect x="41.4800%" y="133" width="8.6936%" height="15" fill="rgb(205,101,16)" fg:x="5258" fg:w="1102"/><text x="41.7729%" y="143.50">rec.4</text></g><g><title>get.2 (1,187 instructions, 9.36%)</title><rect x="41.0145%" y="149" width="9.3642%" height="15" fill="rgb(246,168,33)" fg:x="5199" fg:w="1187"/><text x="41.3075%" y="159.50">get.2</text></g><g><title>account_get (2,008 instructions, 15.84%)</title><rect x="34.5850%" y="165" width="15.8410%" height="15" fill="rgb(231,114,1)" fg:x="4384" fg:w="2008"/><text x="34.8780%" y="175.50">account_get</text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="50.4260%" y="165" width="0.1104%" height="15" fill="rgb(207,184,53)" fg:x="6392" fg:w="14"/><text x="50.7190%" y="175.50"></text></g><g><title>obj_idx&lt;2&gt; (16 instructions, 0.13%)</title><rect x="50.5364%" y="165" width="0.1262%" height="15" fill="rgb(224,95,51)" fg:x="6406" fg:w="16"/><text x="50.8294%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="50.6627%" y="165" width="0.1262%" height="15" fill="rgb(212,188,45)" fg:x="6422" fg:w="16"/><text x="50.9556%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="50.7889%" y="165" width="0.1262%" height="15" fill="rgb(223,154,38)" fg:x="6438" fg:w="16"/><text x="51.0819%" y="175.50"></text></g><g><title>B_lt (10 instructions, 0.08%)</title><rect x="50.9151%" y="165" width="0.0789%" height="15" fill="rgb(251,22,52)" fg:x="6454" fg:w="10"/><text x="51.2081%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="50.9940%" y="165" width="0.1262%" height="15" fill="rgb(229,209,22)" fg:x="6464" fg:w="16"/><text x="51.2870%" y="175.50"></text></g><g><title>B_sub (30 instructions, 0.24%)</title><rect x="51.1202%" y="165" width="0.2367%" height="15" fill="rgb(234,138,34)" fg:x="6480" fg:w="30"/><text x="51.4132%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="51.3569%" y="165" width="0.1736%" height="15" fill="rgb(212,95,11)" fg:x="6510" fg:w="22"/><text x="51.6499%" y="175.50"></text></g><g><title>compute_crc32 (746 instructions, 5.89%)</title><rect x="51.5305%" y="133" width="5.8851%" height="15" fill="rgb(240,179,47)" fg:x="6532" fg:w="746"/><text x="51.8234%" y="143.50">comput..</text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="57.4156%" y="133" width="0.0710%" height="15" fill="rgb(240,163,11)" fg:x="7278" fg:w="9"/><text x="57.7086%" y="143.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="57.4866%" y="133" width="0.1736%" height="15" fill="rgb(236,37,12)" fg:x="7287" fg:w="22"/><text x="57.7796%" y="143.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="57.6601%" y="133" width="0.0710%" height="15" fill="rgb(232,164,16)" fg:x="7309" fg:w="9"/><text x="57.9531%" y="143.50"></text></g><g><title>account_key (815 instructions, 6.43%)</title><rect x="51.5305%" y="149" width="6.4295%" height="15" fill="rgb(244,205,15)" fg:x="6532" fg:w="815"/><text x="51.8234%" y="159.50">account..</text></g><g><title>opt_inject (14 instructions, 0.11%)</title><rect x="57.9599%" y="133" width="0.1104%" height="15" fill="rgb(223,117,47)" fg:x="7347" fg:w="14"/><text x="58.2529%" y="143.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="58.0704%" y="133" width="0.1736%" height="15" fill="rgb(244,107,35)" fg:x="7361" fg:w="22"/><text x="58.3633%" y="143.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="58.2439%" y="117" width="0.1736%" height="15" fill="rgb(205,140,8)" fg:x="7383" fg:w="22"/><text x="58.5369%" y="127.50"></text></g><g><title>equalKey (37 instructions, 0.29%)</title><rect x="58.2439%" y="133" width="0.2919%" height="15" fill="rgb(228,84,46)" fg:x="7383" fg:w="37"/><text x="58.5369%" y="143.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="58.5358%" y="133" width="0.1736%" height="15" fill="rgb(254,188,9)" fg:x="7420" fg:w="22"/><text x="58.8288%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="58.7094%" y="117" width="0.1262%" height="15" fill="rgb(206,112,54)" fg:x="7442" fg:w="16"/><text x="59.0023%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="58.8356%" y="101" width="0.1736%" height="15" fill="rgb(216,84,49)" fg:x="7458" fg:w="22"/><text x="59.1286%" y="111.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="59.0092%" y="101" width="0.1736%" height="15" fill="rgb(214,194,35)" fg:x="7480" fg:w="22"/><text x="59.3021%" y="111.50"></text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="59.1827%" y="85" width="0.1104%" height="15" fill="rgb(249,28,3)" fg:x="7502" fg:w="14"/><text x="59.4757%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="59.2932%" y="69" width="0.1262%" height="15" fill="rgb(222,56,52)" fg:x="7516" fg:w="16"/><text x="59.5861%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="59.4194%" y="69" width="0.1262%" height="15" fill="rgb(245,217,50)" fg:x="7532" fg:w="16"/><text x="59.7123%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="59.2932%" y="85" width="0.4497%" height="15" fill="rgb(213,201,24)" fg:x="7516" fg:w="57"/><text x="59.5861%" y="95.50"></text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="59.7428%" y="69" width="0.1104%" height="15" fill="rgb(248,116,28)" fg:x="7573" fg:w="14"/><text x="60.0358%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="59.8533%" y="53" width="0.1262%" height="15" fill="rgb(219,72,43)" fg:x="7587" fg:w="16"/><text x="60.1462%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="59.9795%" y="53" width="0.1262%" height="15" fill="rgb(209,138,14)" fg:x="7603" fg:w="16"/><text x="60.2725%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="60.1057%" y="53" width="0.1262%" height="15" fill="rgb(222,18,33)" fg:x="7619" fg:w="16"/><text x="60.3987%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="60.2319%" y="53" width="0.1262%" height="15" fill="rgb(213,199,7)" fg:x="7635" fg:w="16"/><text x="60.5249%" y="63.50"></text></g><g><title>Blob.compare_eq (679 instructions, 5.36%)</title><rect x="60.3582%" y="37" width="5.3566%" height="15" fill="rgb(250,110,10)" fg:x="7651" fg:w="679"/><text x="60.6511%" y="47.50">Blob...</text></g><g><title>equal.1 (682 instructions, 5.38%)</title><rect x="60.3582%" y="53" width="5.3802%" height="15" fill="rgb(248,123,6)" fg:x="7651" fg:w="682"/><text x="60.6511%" y="63.50">equal..</text></g><g><title>anon-func-192.5 (783 instructions, 6.18%)</title><rect x="59.8533%" y="69" width="6.1770%" height="15" fill="rgb(206,91,31)" fg:x="7587" fg:w="783"/><text x="60.1462%" y="79.50">anon-f..</text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="66.0303%" y="69" width="0.1104%" height="15" fill="rgb(211,154,13)" fg:x="8370" fg:w="14"/><text x="66.3233%" y="79.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="66.1407%" y="53" width="0.1736%" height="15" fill="rgb(225,148,7)" fg:x="8384" fg:w="22"/><text x="66.4337%" y="63.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="66.4326%" y="53" width="0.1736%" height="15" fill="rgb(220,160,43)" fg:x="8421" fg:w="22"/><text x="66.7256%" y="63.50"></text></g><g><title>to_2_tuple (74 instructions, 0.58%)</title><rect x="66.1407%" y="69" width="0.5838%" height="15" fill="rgb(213,52,39)" fg:x="8384" fg:w="74"/><text x="66.4337%" y="79.50"></text></g><g><title>opt_inject (14 instructions, 0.11%)</title><rect x="66.7245%" y="69" width="0.1104%" height="15" fill="rgb(243,137,7)" fg:x="8458" fg:w="14"/><text x="67.0175%" y="79.50"></text></g><g><title>opt_inject (14 instructions, 0.11%)</title><rect x="66.8350%" y="69" width="0.1104%" height="15" fill="rgb(230,79,13)" fg:x="8472" fg:w="14"/><text x="67.1279%" y="79.50"></text></g><g><title>rec.1 (981 instructions, 7.74%)</title><rect x="59.7428%" y="85" width="7.7390%" height="15" fill="rgb(247,105,23)" fg:x="7573" fg:w="981"/><text x="60.0358%" y="95.50">rec.1</text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="67.4819%" y="69" width="0.1736%" height="15" fill="rgb(223,179,41)" fg:x="8554" fg:w="22"/><text x="67.7748%" y="79.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="67.7737%" y="69" width="0.1736%" height="15" fill="rgb(218,9,34)" fg:x="8591" fg:w="22"/><text x="68.0667%" y="79.50"></text></g><g><title>to_2_tuple (74 instructions, 0.58%)</title><rect x="67.4819%" y="85" width="0.5838%" height="15" fill="rgb(222,106,8)" fg:x="8554" fg:w="74"/><text x="67.7748%" y="95.50"></text></g><g><title>opt_inject (14 instructions, 0.11%)</title><rect x="68.0656%" y="85" width="0.1104%" height="15" fill="rgb(211,220,0)" fg:x="8628" fg:w="14"/><text x="68.3586%" y="95.50"></text></g><g><title>rec.1 (1,205 instructions, 9.51%)</title><rect x="59.1827%" y="101" width="9.5062%" height="15" fill="rgb(229,52,16)" fg:x="7502" fg:w="1205"/><text x="59.4757%" y="111.50">rec.1</text></g><g><title>replace.1 (1,290 instructions, 10.18%)</title><rect x="58.8356%" y="117" width="10.1767%" height="15" fill="rgb(212,155,18)" fg:x="7458" fg:w="1290"/><text x="59.1286%" y="127.50">replace.1</text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="69.0123%" y="85" width="0.1104%" height="15" fill="rgb(242,21,14)" fg:x="8748" fg:w="14"/><text x="69.3053%" y="95.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="69.1228%" y="85" width="0.0789%" height="15" fill="rgb(222,19,48)" fg:x="8762" fg:w="10"/><text x="69.4157%" y="95.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="69.2016%" y="85" width="0.1893%" height="15" fill="rgb(232,45,27)" fg:x="8772" fg:w="24"/><text x="69.4946%" y="95.50"></text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="69.3910%" y="85" width="0.1104%" height="15" fill="rgb(249,103,42)" fg:x="8796" fg:w="14"/><text x="69.6839%" y="95.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="69.5014%" y="85" width="0.0789%" height="15" fill="rgb(246,81,33)" fg:x="8810" fg:w="10"/><text x="69.7944%" y="95.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="69.5803%" y="85" width="0.1893%" height="15" fill="rgb(252,33,42)" fg:x="8820" fg:w="24"/><text x="69.8733%" y="95.50"></text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="69.7696%" y="85" width="0.1104%" height="15" fill="rgb(209,212,41)" fg:x="8844" fg:w="14"/><text x="70.0626%" y="95.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="69.8801%" y="85" width="0.0789%" height="15" fill="rgb(207,154,6)" fg:x="8858" fg:w="10"/><text x="70.1731%" y="95.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="69.9590%" y="85" width="0.1893%" height="15" fill="rgb(223,64,47)" fg:x="8868" fg:w="24"/><text x="70.2519%" y="95.50"></text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="70.1483%" y="85" width="0.1104%" height="15" fill="rgb(211,161,38)" fg:x="8892" fg:w="14"/><text x="70.4413%" y="95.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="70.2588%" y="85" width="0.0789%" height="15" fill="rgb(219,138,40)" fg:x="8906" fg:w="10"/><text x="70.5517%" y="95.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="70.3376%" y="85" width="0.1893%" height="15" fill="rgb(241,228,46)" fg:x="8916" fg:w="24"/><text x="70.6306%" y="95.50"></text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="70.5270%" y="85" width="0.1104%" height="15" fill="rgb(223,209,38)" fg:x="8940" fg:w="14"/><text x="70.8199%" y="95.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="70.6374%" y="85" width="0.0789%" height="15" fill="rgb(236,164,45)" fg:x="8954" fg:w="10"/><text x="70.9304%" y="95.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="70.7163%" y="85" width="0.1893%" height="15" fill="rgb(231,15,5)" fg:x="8964" fg:w="24"/><text x="71.0093%" y="95.50"></text></g><g><title>opt_inject (4 instructions, 0.03%)</title><rect x="70.9056%" y="85" width="0.0316%" height="15" fill="rgb(252,35,15)" fg:x="8988" fg:w="4"/><text x="71.1986%" y="95.50"></text></g><g><title>opt_project (4 instructions, 0.03%)</title><rect x="70.9372%" y="85" width="0.0316%" height="15" fill="rgb(248,181,18)" fg:x="8992" fg:w="4"/><text x="71.2302%" y="95.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="70.9688%" y="85" width="0.1736%" height="15" fill="rgb(233,39,42)" fg:x="8996" fg:w="22"/><text x="71.2617%" y="95.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="71.1423%" y="85" width="0.1736%" height="15" fill="rgb(238,110,33)" fg:x="9018" fg:w="22"/><text x="71.4353%" y="95.50"></text></g><g><title>rec (500 instructions, 3.94%)</title><rect x="69.0123%" y="101" width="3.9445%" height="15" fill="rgb(233,195,10)" fg:x="8748" fg:w="500"/><text x="69.3053%" y="111.50">rec</text></g><g><title>leaf (504 instructions, 3.98%)</title><rect x="69.0123%" y="117" width="3.9760%" height="15" fill="rgb(254,105,3)" fg:x="8748" fg:w="504"/><text x="69.3053%" y="127.50">leaf</text></g><g><title>rec.2 (1,861 instructions, 14.68%)</title><rect x="58.7094%" y="133" width="14.6813%" height="15" fill="rgb(221,225,9)" fg:x="7442" fg:w="1861"/><text x="59.0023%" y="143.50">rec.2</text></g><g><title>put.1 (2,004 instructions, 15.81%)</title><rect x="57.9599%" y="149" width="15.8094%" height="15" fill="rgb(224,227,45)" fg:x="7347" fg:w="2004"/><text x="58.2529%" y="159.50">put.1</text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="73.7693%" y="133" width="0.1736%" height="15" fill="rgb(229,198,43)" fg:x="9351" fg:w="22"/><text x="74.0623%" y="143.50"></text></g><g><title>to_2_tuple (37 instructions, 0.29%)</title><rect x="73.7693%" y="149" width="0.2919%" height="15" fill="rgb(206,209,35)" fg:x="9351" fg:w="37"/><text x="74.0623%" y="159.50"></text></g><g><title>account_put (2,869 instructions, 22.63%)</title><rect x="51.5305%" y="165" width="22.6333%" height="15" fill="rgb(245,195,53)" fg:x="6532" fg:w="2869"/><text x="51.8234%" y="175.50">account_put</text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="74.1638%" y="165" width="0.1736%" height="15" fill="rgb(240,92,26)" fg:x="9401" fg:w="22"/><text x="74.4567%" y="175.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="74.3373%" y="149" width="0.1893%" height="15" fill="rgb(207,40,23)" fg:x="9423" fg:w="24"/><text x="74.6303%" y="159.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h6355501f33786335 (34 instructions, 0.27%)</title><rect x="74.5267%" y="101" width="0.2682%" height="15" fill="rgb(223,111,35)" fg:x="9447" fg:w="34"/><text x="74.8196%" y="111.50"></text></g><g><title>memset (233 instructions, 1.84%)</title><rect x="74.7949%" y="101" width="1.8381%" height="15" fill="rgb(229,147,28)" fg:x="9481" fg:w="233"/><text x="75.0879%" y="111.50"></text></g><g><title>mp_calloc (291 instructions, 2.30%)</title><rect x="74.5267%" y="117" width="2.2957%" height="15" fill="rgb(211,29,28)" fg:x="9447" fg:w="291"/><text x="74.8196%" y="127.50">m..</text></g><g><title>mp_init (306 instructions, 2.41%)</title><rect x="74.5267%" y="133" width="2.4140%" height="15" fill="rgb(228,72,33)" fg:x="9447" fg:w="306"/><text x="74.8196%" y="143.50">m..</text></g><g><title>mp_set_u64 (505 instructions, 3.98%)</title><rect x="76.9407%" y="133" width="3.9839%" height="15" fill="rgb(205,214,31)" fg:x="9753" fg:w="505"/><text x="77.2336%" y="143.50">mp_..</text></g><g><title>motoko_rts::bigint::persist_bigint::hfac9333f501b1524 (30 instructions, 0.24%)</title><rect x="80.9246%" y="133" width="0.2367%" height="15" fill="rgb(224,111,15)" fg:x="10258" fg:w="30"/><text x="81.2176%" y="143.50"></text></g><g><title>bigint_of_word64 (879 instructions, 6.93%)</title><rect x="74.5267%" y="149" width="6.9344%" height="15" fill="rgb(253,21,26)" fg:x="9447" fg:w="879"/><text x="74.8196%" y="159.50">bigint_o..</text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="81.4610%" y="149" width="0.1736%" height="15" fill="rgb(245,139,43)" fg:x="10326" fg:w="22"/><text x="81.7540%" y="159.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="81.6346%" y="117" width="0.1736%" height="15" fill="rgb(252,170,7)" fg:x="10348" fg:w="22"/><text x="81.9276%" y="127.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="81.8081%" y="117" width="0.0710%" height="15" fill="rgb(231,118,14)" fg:x="10370" fg:w="9"/><text x="82.1011%" y="127.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="81.8791%" y="117" width="0.0710%" height="15" fill="rgb(238,83,0)" fg:x="10379" fg:w="9"/><text x="82.1721%" y="127.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="81.9501%" y="117" width="0.0710%" height="15" fill="rgb(221,39,39)" fg:x="10388" fg:w="9"/><text x="82.2431%" y="127.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.0211%" y="117" width="0.0710%" height="15" fill="rgb(222,119,46)" fg:x="10397" fg:w="9"/><text x="82.3141%" y="127.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.0921%" y="117" width="0.0710%" height="15" fill="rgb(222,165,49)" fg:x="10406" fg:w="9"/><text x="82.3851%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="82.1631%" y="117" width="0.1736%" height="15" fill="rgb(219,113,52)" fg:x="10415" fg:w="22"/><text x="82.4561%" y="127.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.3367%" y="117" width="0.0710%" height="15" fill="rgb(214,7,15)" fg:x="10437" fg:w="9"/><text x="82.6297%" y="127.50"></text></g><g><title>proposal_key (319 instructions, 2.52%)</title><rect x="81.6346%" y="133" width="2.5166%" height="15" fill="rgb(235,32,4)" fg:x="10348" fg:w="319"/><text x="81.9276%" y="143.50">p..</text></g><g><title>opt_inject (14 instructions, 0.11%)</title><rect x="84.1512%" y="117" width="0.1104%" height="15" fill="rgb(238,90,54)" fg:x="10667" fg:w="14"/><text x="84.4441%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="84.2616%" y="117" width="0.1736%" height="15" fill="rgb(213,208,19)" fg:x="10681" fg:w="22"/><text x="84.5546%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="84.4352%" y="101" width="0.1736%" height="15" fill="rgb(233,156,4)" fg:x="10703" fg:w="22"/><text x="84.7281%" y="111.50"></text></g><g><title>equalKey (37 instructions, 0.29%)</title><rect x="84.4352%" y="117" width="0.2919%" height="15" fill="rgb(207,194,5)" fg:x="10703" fg:w="37"/><text x="84.7281%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="84.7270%" y="117" width="0.1736%" height="15" fill="rgb(206,111,30)" fg:x="10740" fg:w="22"/><text x="85.0200%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="84.9006%" y="85" width="0.1736%" height="15" fill="rgb(243,70,54)" fg:x="10762" fg:w="22"/><text x="85.1936%" y="95.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="85.0742%" y="85" width="0.1736%" height="15" fill="rgb(242,28,8)" fg:x="10784" fg:w="22"/><text x="85.3671%" y="95.50"></text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="85.2477%" y="69" width="0.1104%" height="15" fill="rgb(219,106,18)" fg:x="10806" fg:w="14"/><text x="85.5407%" y="79.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="85.3582%" y="53" width="0.1736%" height="15" fill="rgb(244,222,10)" fg:x="10820" fg:w="22"/><text x="85.6511%" y="63.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="85.6500%" y="53" width="0.1736%" height="15" fill="rgb(236,179,52)" fg:x="10857" fg:w="22"/><text x="85.9430%" y="63.50"></text></g><g><title>to_2_tuple (74 instructions, 0.58%)</title><rect x="85.3582%" y="69" width="0.5838%" height="15" fill="rgb(213,23,39)" fg:x="10820" fg:w="74"/><text x="85.6511%" y="79.50"></text></g><g><title>opt_inject (14 instructions, 0.11%)</title><rect x="85.9419%" y="69" width="0.1104%" height="15" fill="rgb(238,48,10)" fg:x="10894" fg:w="14"/><text x="86.2349%" y="79.50"></text></g><g><title>rec.1 (141 instructions, 1.11%)</title><rect x="85.2477%" y="85" width="1.1123%" height="15" fill="rgb(251,196,23)" fg:x="10806" fg:w="141"/><text x="85.5407%" y="95.50"></text></g><g><title>replace.1 (226 instructions, 1.78%)</title><rect x="84.9006%" y="101" width="1.7829%" height="15" fill="rgb(250,152,24)" fg:x="10762" fg:w="226"/><text x="85.1936%" y="111.50"></text></g><g><title>opt_project (14 instructions, 0.11%)</title><rect x="86.6835%" y="69" width="0.1104%" height="15" fill="rgb(209,150,17)" fg:x="10988" fg:w="14"/><text x="86.9765%" y="79.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="86.7939%" y="69" width="0.0789%" height="15" fill="rgb(234,202,34)" fg:x="11002" fg:w="10"/><text x="87.0869%" y="79.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="86.8728%" y="69" width="0.1893%" height="15" fill="rgb(253,148,53)" fg:x="11012" fg:w="24"/><text x="87.1658%" y="79.50"></text></g><g><title>opt_inject (4 instructions, 0.03%)</title><rect x="87.0622%" y="69" width="0.0316%" height="15" fill="rgb(218,129,16)" fg:x="11036" fg:w="4"/><text x="87.3551%" y="79.50"></text></g><g><title>opt_project (4 instructions, 0.03%)</title><rect x="87.0937%" y="69" width="0.0316%" height="15" fill="rgb(216,85,19)" fg:x="11040" fg:w="4"/><text x="87.3867%" y="79.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="87.1253%" y="69" width="0.1736%" height="15" fill="rgb(235,228,7)" fg:x="11044" fg:w="22"/><text x="87.4182%" y="79.50"></text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="87.2988%" y="69" width="0.1736%" height="15" fill="rgb(245,175,0)" fg:x="11066" fg:w="22"/><text x="87.5918%" y="79.50"></text></g><g><title>rec (192 instructions, 1.51%)</title><rect x="86.6835%" y="85" width="1.5147%" height="15" fill="rgb(208,168,36)" fg:x="10988" fg:w="192"/><text x="86.9765%" y="95.50"></text></g><g><title>leaf (196 instructions, 1.55%)</title><rect x="86.6835%" y="101" width="1.5462%" height="15" fill="rgb(246,171,24)" fg:x="10988" fg:w="196"/><text x="86.9765%" y="111.50"></text></g><g><title>rec.2 (451 instructions, 3.56%)</title><rect x="84.9006%" y="117" width="3.5579%" height="15" fill="rgb(215,142,24)" fg:x="10762" fg:w="451"/><text x="85.1936%" y="127.50">rec..</text></g><g><title>put.1 (594 instructions, 4.69%)</title><rect x="84.1512%" y="133" width="4.6860%" height="15" fill="rgb(250,187,7)" fg:x="10667" fg:w="594"/><text x="84.4441%" y="143.50">put.1</text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="88.8372%" y="117" width="0.1736%" height="15" fill="rgb(228,66,33)" fg:x="11261" fg:w="22"/><text x="89.1301%" y="127.50"></text></g><g><title>to_2_tuple (37 instructions, 0.29%)</title><rect x="88.8372%" y="133" width="0.2919%" height="15" fill="rgb(234,215,21)" fg:x="11261" fg:w="37"/><text x="89.1301%" y="143.50"></text></g><g><title>proposal_put (963 instructions, 7.60%)</title><rect x="81.6346%" y="149" width="7.5970%" height="15" fill="rgb(222,191,20)" fg:x="10348" fg:w="963"/><text x="81.9276%" y="159.50">proposal..</text></g><g><title>alloc_words (22 instructions, 0.17%)</title><rect x="89.2316%" y="149" width="0.1736%" height="15" fill="rgb(245,79,54)" fg:x="11311" fg:w="22"/><text x="89.5246%" y="159.50"></text></g><g><title>anon-func-71.66 (1,984 instructions, 15.65%)</title><rect x="74.3373%" y="165" width="15.6516%" height="15" fill="rgb(240,10,37)" fg:x="9423" fg:w="1984"/><text x="74.6303%" y="175.50">anon-func-71.66</text></g><g><title>@buffer_size&lt;N&gt; (21 instructions, 0.17%)</title><rect x="89.9890%" y="149" width="0.1657%" height="15" fill="rgb(214,192,32)" fg:x="11407" fg:w="21"/><text x="90.2819%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.24%)</title><rect x="90.1546%" y="149" width="0.2367%" height="15" fill="rgb(209,36,54)" fg:x="11428" fg:w="30"/><text x="90.4476%" y="159.50"></text></g><g><title>memcpy (76 instructions, 0.60%)</title><rect x="90.3913%" y="149" width="0.5996%" height="15" fill="rgb(220,10,11)" fg:x="11458" fg:w="76"/><text x="90.6843%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.24%)</title><rect x="90.9908%" y="149" width="0.2367%" height="15" fill="rgb(221,106,17)" fg:x="11534" fg:w="30"/><text x="91.2838%" y="159.50"></text></g><g><title>leb128_encode (9 instructions, 0.07%)</title><rect x="91.2275%" y="149" width="0.0710%" height="15" fill="rgb(251,142,44)" fg:x="11564" fg:w="9"/><text x="91.5205%" y="159.50"></text></g><g><title>leb128_encode (9 instructions, 0.07%)</title><rect x="91.2985%" y="133" width="0.0710%" height="15" fill="rgb(238,13,15)" fg:x="11573" fg:w="9"/><text x="91.5915%" y="143.50"></text></g><g><title>@serialize_go&lt;N&gt; (32 instructions, 0.25%)</title><rect x="91.2985%" y="149" width="0.2524%" height="15" fill="rgb(208,107,27)" fg:x="11573" fg:w="32"/><text x="91.5915%" y="159.50"></text></g><g><title>reply_with_data (44 instructions, 0.35%)</title><rect x="91.5510%" y="149" width="0.3471%" height="15" fill="rgb(205,136,37)" fg:x="11605" fg:w="44"/><text x="91.8439%" y="159.50"></text></g><g><title>$lambda.32 (345 instructions, 2.72%)</title><rect x="89.9890%" y="165" width="2.7217%" height="15" fill="rgb(250,205,27)" fg:x="11407" fg:w="345"/><text x="90.2819%" y="175.50">$..</text></g><g><title>$lambda.5 (7,568 instructions, 59.70%)</title><rect x="34.0486%" y="181" width="59.7034%" height="15" fill="rgb(210,80,43)" fg:x="4316" fg:w="7568"/><text x="34.3416%" y="191.50">$lambda.5</text></g><g><title>schedule_copying_gc (43 instructions, 0.34%)</title><rect x="93.7520%" y="181" width="0.3392%" height="15" fill="rgb(247,160,36)" fg:x="11884" fg:w="43"/><text x="94.0449%" y="191.50"></text></g><g><title>trans_state4 (13 instructions, 0.10%)</title><rect x="94.0912%" y="181" width="0.1026%" height="15" fill="rgb(234,13,49)" fg:x="11927" fg:w="13"/><text x="94.3842%" y="191.50"></text></g><g><title>all (12,676 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(234,122,0)" fg:x="0" fg:w="12676"/><text x="0.2930%" y="223.50"></text></g><g><title>submit_proposal (12,676 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(207,146,38)" fg:x="0" fg:w="12676"/><text x="0.2930%" y="207.50">submit_proposal</text></g></svg></svg>