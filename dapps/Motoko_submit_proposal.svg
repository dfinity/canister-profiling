<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="326" onload="init(evt)" viewBox="0 0 1024 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="326" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.submit_proposal</text><text id="details" fill="rgb(0,0,0)" x="10" y="309.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="309.00"> </text><svg id="frames" x="10" width="1004" total_samples="14206"><g><title>trans_state5 (9 instructions, 0.06%)</title><rect x="0.0000%" y="245" width="0.0634%" height="15" fill="rgb(224,95,51)" fg:x="0" fg:w="9"/><text x="0.2930%" y="255.50"></text></g><g><title>@reset_cycles (3 instructions, 0.02%)</title><rect x="0.0634%" y="245" width="0.0211%" height="15" fill="rgb(212,188,45)" fg:x="9" fg:w="3"/><text x="0.3563%" y="255.50"></text></g><g><title>@reset_refund (3 instructions, 0.02%)</title><rect x="0.0845%" y="245" width="0.0211%" height="15" fill="rgb(223,154,38)" fg:x="12" fg:w="3"/><text x="0.3774%" y="255.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.24%)</title><rect x="0.1056%" y="229" width="0.2393%" height="15" fill="rgb(251,22,52)" fg:x="15" fg:w="34"/><text x="0.3986%" y="239.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="0.1056%" y="245" width="0.2534%" height="15" fill="rgb(229,209,22)" fg:x="15" fg:w="36"/><text x="0.3986%" y="255.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="0.3590%" y="213" width="0.3590%" height="15" fill="rgb(234,138,34)" fg:x="51" fg:w="51"/><text x="0.6520%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.24%)</title><rect x="0.7180%" y="213" width="0.2393%" height="15" fill="rgb(212,95,11)" fg:x="102" fg:w="34"/><text x="1.0110%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="0.9573%" y="213" width="0.4787%" height="15" fill="rgb(240,179,47)" fg:x="136" fg:w="68"/><text x="1.2503%" y="223.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="1.4360%" y="197" width="0.3590%" height="15" fill="rgb(240,163,11)" fg:x="204" fg:w="51"/><text x="1.7290%" y="207.50"></text></g><g><title>leb128_decode (168 instructions, 1.18%)</title><rect x="1.7950%" y="197" width="1.1826%" height="15" fill="rgb(236,37,12)" fg:x="255" fg:w="168"/><text x="2.0880%" y="207.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="2.9776%" y="197" width="0.4787%" height="15" fill="rgb(232,164,16)" fg:x="423" fg:w="68"/><text x="3.2706%" y="207.50"></text></g><g><title>leb128_decode (213 instructions, 1.50%)</title><rect x="3.4563%" y="197" width="1.4994%" height="15" fill="rgb(244,205,15)" fg:x="491" fg:w="213"/><text x="3.7493%" y="207.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="4.9557%" y="197" width="0.4787%" height="15" fill="rgb(223,117,47)" fg:x="704" fg:w="68"/><text x="5.2486%" y="207.50"></text></g><g><title>leb128_decode (213 instructions, 1.50%)</title><rect x="5.4343%" y="197" width="1.4994%" height="15" fill="rgb(244,107,35)" fg:x="772" fg:w="213"/><text x="5.7273%" y="207.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="6.9337%" y="197" width="0.4787%" height="15" fill="rgb(205,140,8)" fg:x="985" fg:w="68"/><text x="7.2267%" y="207.50"></text></g><g><title>motoko_rts::idl::parse_fields::h505d0c8155046473 (972 instructions, 6.84%)</title><rect x="1.4360%" y="213" width="6.8422%" height="15" fill="rgb(228,84,46)" fg:x="204" fg:w="972"/><text x="1.7290%" y="223.50">motoko_..</text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="8.2782%" y="213" width="0.4787%" height="15" fill="rgb(254,188,9)" fg:x="1176" fg:w="68"/><text x="8.5712%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="8.7569%" y="213" width="0.4787%" height="15" fill="rgb(206,112,54)" fg:x="1244" fg:w="68"/><text x="9.0498%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="9.2355%" y="213" width="0.4787%" height="15" fill="rgb(216,84,49)" fg:x="1312" fg:w="68"/><text x="9.5285%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="9.7142%" y="213" width="0.4787%" height="15" fill="rgb(214,194,35)" fg:x="1380" fg:w="68"/><text x="10.0072%" y="223.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="10.1929%" y="213" width="0.3590%" height="15" fill="rgb(249,28,3)" fg:x="1448" fg:w="51"/><text x="10.4858%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="10.5519%" y="213" width="0.4787%" height="15" fill="rgb(222,56,52)" fg:x="1499" fg:w="68"/><text x="10.8448%" y="223.50"></text></g><g><title>parse_idl_header (1,742 instructions, 12.26%)</title><rect x="0.3590%" y="229" width="12.2624%" height="15" fill="rgb(245,217,50)" fg:x="51" fg:w="1742"/><text x="0.6520%" y="239.50">parse_idl_header</text></g><g><title>idl_sub_buf_words (9 instructions, 0.06%)</title><rect x="12.6214%" y="229" width="0.0634%" height="15" fill="rgb(213,201,24)" fg:x="1793" fg:w="9"/><text x="12.9144%" y="239.50"></text></g><g><title>memset (4 instructions, 0.03%)</title><rect x="12.6848%" y="213" width="0.0282%" height="15" fill="rgb(248,116,28)" fg:x="1802" fg:w="4"/><text x="12.9777%" y="223.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.13%)</title><rect x="12.6848%" y="229" width="0.1337%" height="15" fill="rgb(219,72,43)" fg:x="1802" fg:w="19"/><text x="12.9777%" y="239.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="12.8185%" y="229" width="0.3590%" height="15" fill="rgb(209,138,14)" fg:x="1821" fg:w="51"/><text x="13.1115%" y="239.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="13.1775%" y="229" width="0.4787%" height="15" fill="rgb(222,18,33)" fg:x="1872" fg:w="68"/><text x="13.4705%" y="239.50"></text></g><g><title>set_local %i0 (3 instructions, 0.02%)</title><rect x="13.6562%" y="229" width="0.0211%" height="15" fill="rgb(213,199,7)" fg:x="1940" fg:w="3"/><text x="13.9492%" y="239.50"></text></g><g><title>set_local %i1 (3 instructions, 0.02%)</title><rect x="13.6773%" y="229" width="0.0211%" height="15" fill="rgb(250,110,10)" fg:x="1943" fg:w="3"/><text x="13.9703%" y="239.50"></text></g><g><title>set_local %i2 (3 instructions, 0.02%)</title><rect x="13.6984%" y="229" width="0.0211%" height="15" fill="rgb(248,123,6)" fg:x="1946" fg:w="3"/><text x="13.9914%" y="239.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="13.7196%" y="213" width="0.4787%" height="15" fill="rgb(206,91,31)" fg:x="1949" fg:w="68"/><text x="14.0125%" y="223.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="14.1982%" y="213" width="0.3590%" height="15" fill="rgb(211,154,13)" fg:x="2017" fg:w="51"/><text x="14.4912%" y="223.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="14.5572%" y="213" width="0.1830%" height="15" fill="rgb(225,148,7)" fg:x="2068" fg:w="26"/><text x="14.8502%" y="223.50"></text></g><g><title>leb128_decode (168 instructions, 1.18%)</title><rect x="14.7403%" y="197" width="1.1826%" height="15" fill="rgb(220,160,43)" fg:x="2094" fg:w="168"/><text x="15.0332%" y="207.50"></text></g><g><title>find_field (197 instructions, 1.39%)</title><rect x="14.7403%" y="213" width="1.3867%" height="15" fill="rgb(213,52,39)" fg:x="2094" fg:w="197"/><text x="15.0332%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="16.1270%" y="213" width="0.4787%" height="15" fill="rgb(243,137,7)" fg:x="2291" fg:w="68"/><text x="16.4200%" y="223.50"></text></g><g><title>set_local %i0 (3 instructions, 0.02%)</title><rect x="16.6057%" y="213" width="0.0211%" height="15" fill="rgb(230,79,13)" fg:x="2359" fg:w="3"/><text x="16.8986%" y="223.50"></text></g><g><title>set_local %i1 (3 instructions, 0.02%)</title><rect x="16.6268%" y="213" width="0.0211%" height="15" fill="rgb(247,105,23)" fg:x="2362" fg:w="3"/><text x="16.9197%" y="223.50"></text></g><g><title>set_local %i2 (3 instructions, 0.02%)</title><rect x="16.6479%" y="213" width="0.0211%" height="15" fill="rgb(223,179,41)" fg:x="2365" fg:w="3"/><text x="16.9409%" y="223.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="16.6690%" y="197" width="0.3590%" height="15" fill="rgb(218,9,34)" fg:x="2368" fg:w="51"/><text x="16.9620%" y="207.50"></text></g><g><title>core::str::converts::from_utf8::hd4401e4091fc2e3b (215 instructions, 1.51%)</title><rect x="17.0280%" y="181" width="1.5134%" height="15" fill="rgb(222,106,8)" fg:x="2419" fg:w="215"/><text x="17.3210%" y="191.50"></text></g><g><title>utf8_validate (232 instructions, 1.63%)</title><rect x="17.0280%" y="197" width="1.6331%" height="15" fill="rgb(211,220,0)" fg:x="2419" fg:w="232"/><text x="17.3210%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.24%)</title><rect x="18.6611%" y="165" width="0.2393%" height="15" fill="rgb(229,52,16)" fg:x="2651" fg:w="34"/><text x="18.9541%" y="175.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::hb405b8650fbedba0 (41 instructions, 0.29%)</title><rect x="18.6611%" y="181" width="0.2886%" height="15" fill="rgb(212,155,18)" fg:x="2651" fg:w="41"/><text x="18.9541%" y="191.50"></text></g><g><title>memcpy (168 instructions, 1.18%)</title><rect x="18.9497%" y="181" width="1.1826%" height="15" fill="rgb(242,21,14)" fg:x="2692" fg:w="168"/><text x="19.2427%" y="191.50"></text></g><g><title>text_of_ptr_size (219 instructions, 1.54%)</title><rect x="18.6611%" y="197" width="1.5416%" height="15" fill="rgb(222,19,48)" fg:x="2651" fg:w="219"/><text x="18.9541%" y="207.50"></text></g><g><title>@deserialize_go&lt;t&gt; (539 instructions, 3.79%)</title><rect x="16.6690%" y="213" width="3.7942%" height="15" fill="rgb(232,45,27)" fg:x="2368" fg:w="539"/><text x="16.9620%" y="223.50">@de..</text></g><g><title>leb128_decode (213 instructions, 1.50%)</title><rect x="20.4632%" y="197" width="1.4994%" height="15" fill="rgb(249,103,42)" fg:x="2907" fg:w="213"/><text x="20.7562%" y="207.50"></text></g><g><title>find_field (242 instructions, 1.70%)</title><rect x="20.4632%" y="213" width="1.7035%" height="15" fill="rgb(246,81,33)" fg:x="2907" fg:w="242"/><text x="20.7562%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="22.1667%" y="213" width="0.4787%" height="15" fill="rgb(252,33,42)" fg:x="3149" fg:w="68"/><text x="22.4597%" y="223.50"></text></g><g><title>set_local %i0 (3 instructions, 0.02%)</title><rect x="22.6454%" y="213" width="0.0211%" height="15" fill="rgb(209,212,41)" fg:x="3217" fg:w="3"/><text x="22.9383%" y="223.50"></text></g><g><title>set_local %i1 (3 instructions, 0.02%)</title><rect x="22.6665%" y="213" width="0.0211%" height="15" fill="rgb(207,154,6)" fg:x="3220" fg:w="3"/><text x="22.9594%" y="223.50"></text></g><g><title>set_local %i2 (3 instructions, 0.02%)</title><rect x="22.6876%" y="213" width="0.0211%" height="15" fill="rgb(223,64,47)" fg:x="3223" fg:w="3"/><text x="22.9806%" y="223.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="22.7087%" y="197" width="0.3590%" height="15" fill="rgb(211,161,38)" fg:x="3226" fg:w="51"/><text x="23.0017%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.24%)</title><rect x="23.0677%" y="181" width="0.2393%" height="15" fill="rgb(219,138,40)" fg:x="3277" fg:w="34"/><text x="23.3607%" y="191.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="23.0677%" y="197" width="0.2534%" height="15" fill="rgb(241,228,46)" fg:x="3277" fg:w="36"/><text x="23.3607%" y="207.50"></text></g><g><title>memcpy (86 instructions, 0.61%)</title><rect x="23.3211%" y="197" width="0.6054%" height="15" fill="rgb(223,209,38)" fg:x="3313" fg:w="86"/><text x="23.6141%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (246 instructions, 1.73%)</title><rect x="22.7087%" y="213" width="1.7317%" height="15" fill="rgb(236,164,45)" fg:x="3226" fg:w="246"/><text x="23.0017%" y="223.50"></text></g><g><title>leb128_decode (213 instructions, 1.50%)</title><rect x="24.4404%" y="197" width="1.4994%" height="15" fill="rgb(231,15,5)" fg:x="3472" fg:w="213"/><text x="24.7333%" y="207.50"></text></g><g><title>find_field (242 instructions, 1.70%)</title><rect x="24.4404%" y="213" width="1.7035%" height="15" fill="rgb(252,35,15)" fg:x="3472" fg:w="242"/><text x="24.7333%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="26.1439%" y="213" width="0.4787%" height="15" fill="rgb(248,181,18)" fg:x="3714" fg:w="68"/><text x="26.4369%" y="223.50"></text></g><g><title>set_local %i0 (3 instructions, 0.02%)</title><rect x="26.6226%" y="213" width="0.0211%" height="15" fill="rgb(233,39,42)" fg:x="3782" fg:w="3"/><text x="26.9155%" y="223.50"></text></g><g><title>set_local %i1 (3 instructions, 0.02%)</title><rect x="26.6437%" y="213" width="0.0211%" height="15" fill="rgb(238,110,33)" fg:x="3785" fg:w="3"/><text x="26.9366%" y="223.50"></text></g><g><title>set_local %i2 (3 instructions, 0.02%)</title><rect x="26.6648%" y="213" width="0.0211%" height="15" fill="rgb(233,195,10)" fg:x="3788" fg:w="3"/><text x="26.9578%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="26.6859%" y="197" width="0.4787%" height="15" fill="rgb(254,105,3)" fg:x="3791" fg:w="68"/><text x="26.9789%" y="207.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="27.1646%" y="197" width="0.4787%" height="15" fill="rgb(221,225,9)" fg:x="3859" fg:w="68"/><text x="27.4575%" y="207.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="27.6432%" y="197" width="0.3590%" height="15" fill="rgb(224,227,45)" fg:x="3927" fg:w="51"/><text x="27.9362%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.24%)</title><rect x="28.0023%" y="181" width="0.2393%" height="15" fill="rgb(229,198,43)" fg:x="3978" fg:w="34"/><text x="28.2952%" y="191.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="28.0023%" y="197" width="0.2534%" height="15" fill="rgb(206,209,35)" fg:x="3978" fg:w="36"/><text x="28.2952%" y="207.50"></text></g><g><title>memcpy (307 instructions, 2.16%)</title><rect x="28.2557%" y="197" width="2.1611%" height="15" fill="rgb(245,195,53)" fg:x="4014" fg:w="307"/><text x="28.5486%" y="207.50">m..</text></g><g><title>@deserialize_go&lt;B&gt; (608 instructions, 4.28%)</title><rect x="26.6859%" y="213" width="4.2799%" height="15" fill="rgb(240,92,26)" fg:x="3791" fg:w="608"/><text x="26.9789%" y="223.50">@des..</text></g><g><title>skip_fields (5 instructions, 0.04%)</title><rect x="30.9658%" y="213" width="0.0352%" height="15" fill="rgb(207,40,23)" fg:x="4399" fg:w="5"/><text x="31.2588%" y="223.50"></text></g><g><title>@deserialize_go&lt;r(canister_id:P,message:B,method:t)&gt; (2,682 instructions, 18.88%)</title><rect x="13.7196%" y="229" width="18.8793%" height="15" fill="rgb(223,111,35)" fg:x="1949" fg:w="2682"/><text x="14.0125%" y="239.50">@deserialize_go&lt;r(caniste..</text></g><g><title>@deserialize&lt;r(canister_id:P,message:B,method:t)&gt; (4,784 instructions, 33.68%)</title><rect x="0.3590%" y="245" width="33.6759%" height="15" fill="rgb(229,147,28)" fg:x="51" fg:w="4784"/><text x="0.6520%" y="255.50">@deserialize&lt;r(canister_id:P,message:B,method:..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="34.0349%" y="245" width="0.1830%" height="15" fill="rgb(211,29,28)" fg:x="4835" fg:w="26"/><text x="34.3279%" y="255.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.24%)</title><rect x="34.2179%" y="213" width="0.2393%" height="15" fill="rgb(228,72,33)" fg:x="4861" fg:w="34"/><text x="34.5109%" y="223.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="34.2179%" y="229" width="0.2534%" height="15" fill="rgb(205,214,31)" fg:x="4861" fg:w="36"/><text x="34.5109%" y="239.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="34.4714%" y="229" width="0.1830%" height="15" fill="rgb(224,111,15)" fg:x="4897" fg:w="26"/><text x="34.7643%" y="239.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="34.6544%" y="229" width="0.1126%" height="15" fill="rgb(253,21,26)" fg:x="4923" fg:w="16"/><text x="34.9473%" y="239.50"></text></g><g><title>compute_crc32 (804 instructions, 5.66%)</title><rect x="34.7670%" y="165" width="5.6596%" height="15" fill="rgb(245,139,43)" fg:x="4939" fg:w="804"/><text x="35.0600%" y="175.50">comput..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="40.4266%" y="149" width="0.1830%" height="15" fill="rgb(252,170,7)" fg:x="5743" fg:w="26"/><text x="40.7195%" y="159.50"></text></g><g><title>box_i32 (41 instructions, 0.29%)</title><rect x="40.4266%" y="165" width="0.2886%" height="15" fill="rgb(231,118,14)" fg:x="5743" fg:w="41"/><text x="40.7195%" y="175.50"></text></g><g><title>hash (848 instructions, 5.97%)</title><rect x="34.7670%" y="181" width="5.9693%" height="15" fill="rgb(238,83,0)" fg:x="4939" fg:w="848"/><text x="35.0600%" y="191.50">hash</text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="40.7363%" y="181" width="0.0352%" height="15" fill="rgb(221,39,39)" fg:x="5787" fg:w="5"/><text x="41.0293%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="40.7715%" y="181" width="0.1830%" height="15" fill="rgb(222,119,46)" fg:x="5792" fg:w="26"/><text x="41.0645%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="40.9545%" y="165" width="0.1830%" height="15" fill="rgb(222,165,49)" fg:x="5818" fg:w="26"/><text x="41.2475%" y="175.50"></text></g><g><title>box_i32 (41 instructions, 0.29%)</title><rect x="40.9545%" y="181" width="0.2886%" height="15" fill="rgb(219,113,52)" fg:x="5818" fg:w="41"/><text x="41.2475%" y="191.50"></text></g><g><title>account_key (946 instructions, 6.66%)</title><rect x="34.7670%" y="197" width="6.6592%" height="15" fill="rgb(214,7,15)" fg:x="4939" fg:w="946"/><text x="35.0600%" y="207.50">account..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="41.4262%" y="149" width="0.1830%" height="15" fill="rgb(235,32,4)" fg:x="5885" fg:w="26"/><text x="41.7191%" y="159.50"></text></g><g><title>equalKey (41 instructions, 0.29%)</title><rect x="41.4262%" y="165" width="0.2886%" height="15" fill="rgb(238,90,54)" fg:x="5885" fg:w="41"/><text x="41.7191%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="41.7148%" y="165" width="0.1830%" height="15" fill="rgb(213,208,19)" fg:x="5926" fg:w="26"/><text x="42.0077%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="41.8978%" y="149" width="0.1126%" height="15" fill="rgb(233,156,4)" fg:x="5952" fg:w="16"/><text x="42.1908%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="42.0104%" y="133" width="0.1830%" height="15" fill="rgb(207,194,5)" fg:x="5968" fg:w="26"/><text x="42.3034%" y="143.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="42.1934%" y="133" width="0.1830%" height="15" fill="rgb(206,111,30)" fg:x="5994" fg:w="26"/><text x="42.4864%" y="143.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="42.3765%" y="117" width="0.0985%" height="15" fill="rgb(243,70,54)" fg:x="6020" fg:w="14"/><text x="42.6694%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="42.4750%" y="101" width="0.1126%" height="15" fill="rgb(242,28,8)" fg:x="6034" fg:w="16"/><text x="42.7680%" y="111.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="42.5876%" y="101" width="0.0352%" height="15" fill="rgb(219,106,18)" fg:x="6050" fg:w="5"/><text x="42.8806%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="42.6228%" y="101" width="0.1126%" height="15" fill="rgb(244,222,10)" fg:x="6055" fg:w="16"/><text x="42.9158%" y="111.50"></text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="42.7355%" y="101" width="0.0422%" height="15" fill="rgb(236,179,52)" fg:x="6071" fg:w="6"/><text x="43.0284%" y="111.50"></text></g><g><title>anon-func-192.5 (59 instructions, 0.42%)</title><rect x="42.4750%" y="117" width="0.4153%" height="15" fill="rgb(213,23,39)" fg:x="6034" fg:w="59"/><text x="42.7680%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="42.8903%" y="101" width="0.0985%" height="15" fill="rgb(238,48,10)" fg:x="6093" fg:w="14"/><text x="43.1833%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="42.9889%" y="85" width="0.1126%" height="15" fill="rgb(251,196,23)" fg:x="6107" fg:w="16"/><text x="43.2818%" y="95.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="43.1015%" y="85" width="0.0352%" height="15" fill="rgb(250,152,24)" fg:x="6123" fg:w="5"/><text x="43.3945%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="43.1367%" y="85" width="0.1126%" height="15" fill="rgb(209,150,17)" fg:x="6128" fg:w="16"/><text x="43.4297%" y="95.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="43.2493%" y="85" width="0.0352%" height="15" fill="rgb(234,202,34)" fg:x="6144" fg:w="5"/><text x="43.5423%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="43.2845%" y="85" width="0.1126%" height="15" fill="rgb(253,148,53)" fg:x="6149" fg:w="16"/><text x="43.5775%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="43.3972%" y="85" width="0.1126%" height="15" fill="rgb(218,129,16)" fg:x="6165" fg:w="16"/><text x="43.6901%" y="95.50"></text></g><g><title>Blob.compare_eq (803 instructions, 5.65%)</title><rect x="43.5098%" y="69" width="5.6525%" height="15" fill="rgb(216,85,19)" fg:x="6181" fg:w="803"/><text x="43.8028%" y="79.50">Blob.c..</text></g><g><title>equal (806 instructions, 5.67%)</title><rect x="43.5098%" y="85" width="5.6737%" height="15" fill="rgb(235,228,7)" fg:x="6181" fg:w="806"/><text x="43.8028%" y="95.50">equal</text></g><g><title>anon-func-192.5 (908 instructions, 6.39%)</title><rect x="42.9889%" y="101" width="6.3917%" height="15" fill="rgb(245,175,0)" fg:x="6107" fg:w="908"/><text x="43.2818%" y="111.50">anon-fu..</text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="49.3805%" y="101" width="0.0985%" height="15" fill="rgb(208,168,36)" fg:x="7015" fg:w="14"/><text x="49.6735%" y="111.50"></text></g><g><title>rec (988 instructions, 6.95%)</title><rect x="42.8903%" y="117" width="6.9548%" height="15" fill="rgb(246,171,24)" fg:x="6093" fg:w="988"/><text x="43.1833%" y="127.50">rec</text></g><g><title>rec (1,117 instructions, 7.86%)</title><rect x="42.3765%" y="133" width="7.8629%" height="15" fill="rgb(215,142,24)" fg:x="6020" fg:w="1117"/><text x="42.6694%" y="143.50">rec</text></g><g><title>find (1,209 instructions, 8.51%)</title><rect x="42.0104%" y="149" width="8.5105%" height="15" fill="rgb(250,187,7)" fg:x="5968" fg:w="1209"/><text x="42.3034%" y="159.50">find</text></g><g><title>rec (1,273 instructions, 8.96%)</title><rect x="41.8978%" y="165" width="8.9610%" height="15" fill="rgb(228,66,33)" fg:x="5952" fg:w="1273"/><text x="42.1908%" y="175.50">rec</text></g><g><title>find (1,369 instructions, 9.64%)</title><rect x="41.4262%" y="181" width="9.6368%" height="15" fill="rgb(234,215,21)" fg:x="5885" fg:w="1369"/><text x="41.7191%" y="191.50">find</text></g><g><title>get (1,374 instructions, 9.67%)</title><rect x="41.4262%" y="197" width="9.6720%" height="15" fill="rgb(222,191,20)" fg:x="5885" fg:w="1374"/><text x="41.7191%" y="207.50">get</text></g><g><title>account_get (2,328 instructions, 16.39%)</title><rect x="34.7670%" y="213" width="16.3874%" height="15" fill="rgb(245,79,54)" fg:x="4939" fg:w="2328"/><text x="35.0600%" y="223.50">account_get</text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="51.1544%" y="213" width="0.0985%" height="15" fill="rgb(240,10,37)" fg:x="7267" fg:w="14"/><text x="51.4474%" y="223.50"></text></g><g><title>obj_idx&lt;2&gt; (16 instructions, 0.11%)</title><rect x="51.2530%" y="213" width="0.1126%" height="15" fill="rgb(214,192,32)" fg:x="7281" fg:w="16"/><text x="51.5460%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="51.3656%" y="213" width="0.1126%" height="15" fill="rgb(209,36,54)" fg:x="7297" fg:w="16"/><text x="51.6586%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="51.4782%" y="213" width="0.1126%" height="15" fill="rgb(220,10,11)" fg:x="7313" fg:w="16"/><text x="51.7712%" y="223.50"></text></g><g><title>B_lt (10 instructions, 0.07%)</title><rect x="51.5909%" y="213" width="0.0704%" height="15" fill="rgb(221,106,17)" fg:x="7329" fg:w="10"/><text x="51.8838%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="51.6613%" y="213" width="0.1126%" height="15" fill="rgb(251,142,44)" fg:x="7339" fg:w="16"/><text x="51.9542%" y="223.50"></text></g><g><title>nat_sub (7 instructions, 0.05%)</title><rect x="51.7739%" y="197" width="0.0493%" height="15" fill="rgb(238,13,15)" fg:x="7355" fg:w="7"/><text x="52.0669%" y="207.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="51.8232%" y="197" width="0.0563%" height="15" fill="rgb(208,107,27)" fg:x="7362" fg:w="8"/><text x="52.1161%" y="207.50"></text></g><g><title>B_sub (32 instructions, 0.23%)</title><rect x="51.7739%" y="213" width="0.2253%" height="15" fill="rgb(205,136,37)" fg:x="7355" fg:w="32"/><text x="52.0669%" y="223.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="51.9992%" y="213" width="0.1830%" height="15" fill="rgb(250,205,27)" fg:x="7387" fg:w="26"/><text x="52.2921%" y="223.50"></text></g><g><title>compute_crc32 (804 instructions, 5.66%)</title><rect x="52.1822%" y="165" width="5.6596%" height="15" fill="rgb(210,80,43)" fg:x="7413" fg:w="804"/><text x="52.4751%" y="175.50">comput..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="57.8418%" y="149" width="0.1830%" height="15" fill="rgb(247,160,36)" fg:x="8217" fg:w="26"/><text x="58.1347%" y="159.50"></text></g><g><title>box_i32 (41 instructions, 0.29%)</title><rect x="57.8418%" y="165" width="0.2886%" height="15" fill="rgb(234,13,49)" fg:x="8217" fg:w="41"/><text x="58.1347%" y="175.50"></text></g><g><title>hash (848 instructions, 5.97%)</title><rect x="52.1822%" y="181" width="5.9693%" height="15" fill="rgb(234,122,0)" fg:x="7413" fg:w="848"/><text x="52.4751%" y="191.50">hash</text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="58.1515%" y="181" width="0.0352%" height="15" fill="rgb(207,146,38)" fg:x="8261" fg:w="5"/><text x="58.4445%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="58.1867%" y="181" width="0.1830%" height="15" fill="rgb(207,177,25)" fg:x="8266" fg:w="26"/><text x="58.4797%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="58.3697%" y="165" width="0.1830%" height="15" fill="rgb(211,178,42)" fg:x="8292" fg:w="26"/><text x="58.6627%" y="175.50"></text></g><g><title>box_i32 (41 instructions, 0.29%)</title><rect x="58.3697%" y="181" width="0.2886%" height="15" fill="rgb(230,69,54)" fg:x="8292" fg:w="41"/><text x="58.6627%" y="191.50"></text></g><g><title>account_key (946 instructions, 6.66%)</title><rect x="52.1822%" y="197" width="6.6592%" height="15" fill="rgb(214,135,41)" fg:x="7413" fg:w="946"/><text x="52.4751%" y="207.50">account..</text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="58.8413%" y="181" width="0.0985%" height="15" fill="rgb(237,67,25)" fg:x="8359" fg:w="14"/><text x="59.1343%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="58.9399%" y="165" width="0.1830%" height="15" fill="rgb(222,189,50)" fg:x="8373" fg:w="26"/><text x="59.2329%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="59.1229%" y="149" width="0.1830%" height="15" fill="rgb(245,148,34)" fg:x="8399" fg:w="26"/><text x="59.4159%" y="159.50"></text></g><g><title>equalKey (41 instructions, 0.29%)</title><rect x="59.1229%" y="165" width="0.2886%" height="15" fill="rgb(222,29,6)" fg:x="8399" fg:w="41"/><text x="59.4159%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="59.4115%" y="165" width="0.1830%" height="15" fill="rgb(221,189,43)" fg:x="8440" fg:w="26"/><text x="59.7045%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="59.5945%" y="149" width="0.1126%" height="15" fill="rgb(207,36,27)" fg:x="8466" fg:w="16"/><text x="59.8875%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="59.7072%" y="133" width="0.1830%" height="15" fill="rgb(217,90,24)" fg:x="8482" fg:w="26"/><text x="60.0001%" y="143.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="59.8902%" y="133" width="0.1830%" height="15" fill="rgb(224,66,35)" fg:x="8508" fg:w="26"/><text x="60.1832%" y="143.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="60.0732%" y="117" width="0.0985%" height="15" fill="rgb(221,13,50)" fg:x="8534" fg:w="14"/><text x="60.3662%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="60.1718%" y="101" width="0.1126%" height="15" fill="rgb(236,68,49)" fg:x="8548" fg:w="16"/><text x="60.4647%" y="111.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="60.2844%" y="101" width="0.0352%" height="15" fill="rgb(229,146,28)" fg:x="8564" fg:w="5"/><text x="60.5774%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="60.3196%" y="101" width="0.1126%" height="15" fill="rgb(225,31,38)" fg:x="8569" fg:w="16"/><text x="60.6126%" y="111.50"></text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="60.4322%" y="101" width="0.0422%" height="15" fill="rgb(250,208,3)" fg:x="8585" fg:w="6"/><text x="60.7252%" y="111.50"></text></g><g><title>anon-func-192.5 (59 instructions, 0.42%)</title><rect x="60.1718%" y="117" width="0.4153%" height="15" fill="rgb(246,54,23)" fg:x="8548" fg:w="59"/><text x="60.4647%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="60.5871%" y="101" width="0.0985%" height="15" fill="rgb(243,76,11)" fg:x="8607" fg:w="14"/><text x="60.8800%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="60.6856%" y="85" width="0.1126%" height="15" fill="rgb(245,21,50)" fg:x="8621" fg:w="16"/><text x="60.9786%" y="95.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="60.7983%" y="85" width="0.0352%" height="15" fill="rgb(228,9,43)" fg:x="8637" fg:w="5"/><text x="61.0912%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="60.8335%" y="85" width="0.1126%" height="15" fill="rgb(208,100,47)" fg:x="8642" fg:w="16"/><text x="61.1264%" y="95.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="60.9461%" y="85" width="0.0352%" height="15" fill="rgb(232,26,8)" fg:x="8658" fg:w="5"/><text x="61.2390%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="60.9813%" y="85" width="0.1126%" height="15" fill="rgb(216,166,38)" fg:x="8663" fg:w="16"/><text x="61.2742%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="61.0939%" y="85" width="0.1126%" height="15" fill="rgb(251,202,51)" fg:x="8679" fg:w="16"/><text x="61.3869%" y="95.50"></text></g><g><title>Blob.compare_eq (803 instructions, 5.65%)</title><rect x="61.2065%" y="69" width="5.6525%" height="15" fill="rgb(254,216,34)" fg:x="8695" fg:w="803"/><text x="61.4995%" y="79.50">Blob.c..</text></g><g><title>equal (806 instructions, 5.67%)</title><rect x="61.2065%" y="85" width="5.6737%" height="15" fill="rgb(251,32,27)" fg:x="8695" fg:w="806"/><text x="61.4995%" y="95.50">equal</text></g><g><title>anon-func-192.5 (908 instructions, 6.39%)</title><rect x="60.6856%" y="101" width="6.3917%" height="15" fill="rgb(208,127,28)" fg:x="8621" fg:w="908"/><text x="60.9786%" y="111.50">anon-fu..</text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="67.0773%" y="101" width="0.0985%" height="15" fill="rgb(224,137,22)" fg:x="9529" fg:w="14"/><text x="67.3703%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="67.1758%" y="85" width="0.1830%" height="15" fill="rgb(254,70,32)" fg:x="9543" fg:w="26"/><text x="67.4688%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="67.4645%" y="85" width="0.1830%" height="15" fill="rgb(229,75,37)" fg:x="9584" fg:w="26"/><text x="67.7574%" y="95.50"></text></g><g><title>to_2_tuple (82 instructions, 0.58%)</title><rect x="67.1758%" y="101" width="0.5772%" height="15" fill="rgb(252,64,23)" fg:x="9543" fg:w="82"/><text x="67.4688%" y="111.50"></text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="67.7531%" y="101" width="0.0985%" height="15" fill="rgb(232,162,48)" fg:x="9625" fg:w="14"/><text x="68.0460%" y="111.50"></text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="67.8516%" y="101" width="0.0985%" height="15" fill="rgb(246,160,12)" fg:x="9639" fg:w="14"/><text x="68.1446%" y="111.50"></text></g><g><title>rec (1,126 instructions, 7.93%)</title><rect x="60.5871%" y="117" width="7.9262%" height="15" fill="rgb(247,166,0)" fg:x="8607" fg:w="1126"/><text x="60.8800%" y="127.50">rec</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="68.5133%" y="101" width="0.1830%" height="15" fill="rgb(249,219,21)" fg:x="9733" fg:w="26"/><text x="68.8063%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="68.8019%" y="101" width="0.1830%" height="15" fill="rgb(205,209,3)" fg:x="9774" fg:w="26"/><text x="69.0949%" y="111.50"></text></g><g><title>to_2_tuple (82 instructions, 0.58%)</title><rect x="68.5133%" y="117" width="0.5772%" height="15" fill="rgb(243,44,1)" fg:x="9733" fg:w="82"/><text x="68.8063%" y="127.50"></text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="69.0905%" y="117" width="0.0985%" height="15" fill="rgb(206,159,16)" fg:x="9815" fg:w="14"/><text x="69.3835%" y="127.50"></text></g><g><title>rec (1,365 instructions, 9.61%)</title><rect x="60.0732%" y="133" width="9.6086%" height="15" fill="rgb(244,77,30)" fg:x="8534" fg:w="1365"/><text x="60.3662%" y="143.50">rec</text></g><g><title>replace (1,459 instructions, 10.27%)</title><rect x="59.7072%" y="149" width="10.2703%" height="15" fill="rgb(218,69,12)" fg:x="8482" fg:w="1459"/><text x="60.0001%" y="159.50">replace</text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="69.9775%" y="69" width="0.0985%" height="15" fill="rgb(212,87,7)" fg:x="9941" fg:w="14"/><text x="70.2704%" y="79.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="70.0760%" y="69" width="0.0704%" height="15" fill="rgb(245,114,25)" fg:x="9955" fg:w="10"/><text x="70.3690%" y="79.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="70.1464%" y="53" width="0.0563%" height="15" fill="rgb(210,61,42)" fg:x="9965" fg:w="8"/><text x="70.4394%" y="63.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="70.1464%" y="69" width="0.1760%" height="15" fill="rgb(211,52,33)" fg:x="9965" fg:w="25"/><text x="70.4394%" y="79.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="70.3224%" y="69" width="0.0985%" height="15" fill="rgb(234,58,33)" fg:x="9990" fg:w="14"/><text x="70.6154%" y="79.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="70.4209%" y="69" width="0.0704%" height="15" fill="rgb(220,115,36)" fg:x="10004" fg:w="10"/><text x="70.7139%" y="79.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="70.4913%" y="53" width="0.0563%" height="15" fill="rgb(243,153,54)" fg:x="10014" fg:w="8"/><text x="70.7843%" y="63.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="70.4913%" y="69" width="0.1760%" height="15" fill="rgb(251,47,18)" fg:x="10014" fg:w="25"/><text x="70.7843%" y="79.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="70.6673%" y="69" width="0.0985%" height="15" fill="rgb(242,102,42)" fg:x="10039" fg:w="14"/><text x="70.9603%" y="79.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="70.7659%" y="69" width="0.0704%" height="15" fill="rgb(234,31,38)" fg:x="10053" fg:w="10"/><text x="71.0588%" y="79.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="70.8363%" y="53" width="0.0563%" height="15" fill="rgb(221,117,51)" fg:x="10063" fg:w="8"/><text x="71.1292%" y="63.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="70.8363%" y="69" width="0.1760%" height="15" fill="rgb(212,20,18)" fg:x="10063" fg:w="25"/><text x="71.1292%" y="79.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="71.0122%" y="69" width="0.0985%" height="15" fill="rgb(245,133,36)" fg:x="10088" fg:w="14"/><text x="71.3052%" y="79.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="71.1108%" y="69" width="0.0704%" height="15" fill="rgb(212,6,19)" fg:x="10102" fg:w="10"/><text x="71.4038%" y="79.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="71.1812%" y="53" width="0.0563%" height="15" fill="rgb(218,1,36)" fg:x="10112" fg:w="8"/><text x="71.4742%" y="63.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="71.1812%" y="69" width="0.1760%" height="15" fill="rgb(246,84,54)" fg:x="10112" fg:w="25"/><text x="71.4742%" y="79.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="71.3572%" y="69" width="0.0985%" height="15" fill="rgb(242,110,6)" fg:x="10137" fg:w="14"/><text x="71.6501%" y="79.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="71.4557%" y="69" width="0.0704%" height="15" fill="rgb(214,47,5)" fg:x="10151" fg:w="10"/><text x="71.7487%" y="79.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="71.5261%" y="53" width="0.0563%" height="15" fill="rgb(218,159,25)" fg:x="10161" fg:w="8"/><text x="71.8191%" y="63.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="71.5261%" y="69" width="0.1760%" height="15" fill="rgb(215,211,28)" fg:x="10161" fg:w="25"/><text x="71.8191%" y="79.50"></text></g><g><title>opt_inject (4 instructions, 0.03%)</title><rect x="71.7021%" y="69" width="0.0282%" height="15" fill="rgb(238,59,32)" fg:x="10186" fg:w="4"/><text x="71.9951%" y="79.50"></text></g><g><title>rec (499 instructions, 3.51%)</title><rect x="69.9775%" y="85" width="3.5126%" height="15" fill="rgb(226,82,3)" fg:x="9941" fg:w="499"/><text x="70.2704%" y="95.50">rec</text></g><g><title>lenClamp (504 instructions, 3.55%)</title><rect x="69.9775%" y="101" width="3.5478%" height="15" fill="rgb(240,164,32)" fg:x="9941" fg:w="504"/><text x="70.2704%" y="111.50">len..</text></g><g><title>opt_project (4 instructions, 0.03%)</title><rect x="73.5253%" y="101" width="0.0282%" height="15" fill="rgb(232,46,7)" fg:x="10445" fg:w="4"/><text x="73.8182%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="73.5534%" y="101" width="0.1830%" height="15" fill="rgb(229,129,53)" fg:x="10449" fg:w="26"/><text x="73.8464%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="73.7364%" y="101" width="0.1830%" height="15" fill="rgb(234,188,29)" fg:x="10475" fg:w="26"/><text x="74.0294%" y="111.50"></text></g><g><title>rec (624 instructions, 4.39%)</title><rect x="69.9775%" y="117" width="4.3925%" height="15" fill="rgb(246,141,4)" fg:x="9941" fg:w="624"/><text x="70.2704%" y="127.50">rec</text></g><g><title>fromList (629 instructions, 4.43%)</title><rect x="69.9775%" y="133" width="4.4277%" height="15" fill="rgb(229,23,39)" fg:x="9941" fg:w="629"/><text x="70.2704%" y="143.50">from..</text></g><g><title>leaf (634 instructions, 4.46%)</title><rect x="69.9775%" y="149" width="4.4629%" height="15" fill="rgb(206,12,3)" fg:x="9941" fg:w="634"/><text x="70.2704%" y="159.50">leaf</text></g><g><title>rec (2,174 instructions, 15.30%)</title><rect x="59.5945%" y="165" width="15.3034%" height="15" fill="rgb(252,226,20)" fg:x="8466" fg:w="2174"/><text x="59.8875%" y="175.50">rec</text></g><g><title>replace (2,322 instructions, 16.35%)</title><rect x="58.9399%" y="181" width="16.3452%" height="15" fill="rgb(216,123,35)" fg:x="8373" fg:w="2322"/><text x="59.2329%" y="191.50">replace</text></g><g><title>put (2,343 instructions, 16.49%)</title><rect x="58.8413%" y="197" width="16.4930%" height="15" fill="rgb(212,68,40)" fg:x="8359" fg:w="2343"/><text x="59.1343%" y="207.50">put</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="75.3344%" y="181" width="0.1830%" height="15" fill="rgb(254,125,32)" fg:x="10702" fg:w="26"/><text x="75.6273%" y="191.50"></text></g><g><title>to_2_tuple (41 instructions, 0.29%)</title><rect x="75.3344%" y="197" width="0.2886%" height="15" fill="rgb(253,97,22)" fg:x="10702" fg:w="41"/><text x="75.6273%" y="207.50"></text></g><g><title>account_put (3,345 instructions, 23.55%)</title><rect x="52.1822%" y="213" width="23.5464%" height="15" fill="rgb(241,101,14)" fg:x="7413" fg:w="3345"/><text x="52.4751%" y="223.50">account_put</text></g><g><title>deduct_proposal_submission_deposit (5,886 instructions, 41.43%)</title><rect x="34.7670%" y="229" width="41.4332%" height="15" fill="rgb(238,103,29)" fg:x="4939" fg:w="5886"/><text x="35.0600%" y="239.50">deduct_proposal_submission_deposit</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="76.2002%" y="229" width="0.1830%" height="15" fill="rgb(233,195,47)" fg:x="10825" fg:w="26"/><text x="76.4932%" y="239.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="76.3832%" y="181" width="0.0563%" height="15" fill="rgb(246,218,30)" fg:x="10851" fg:w="8"/><text x="76.6762%" y="191.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="76.3832%" y="197" width="0.1760%" height="15" fill="rgb(219,145,47)" fg:x="10851" fg:w="25"/><text x="76.6762%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.27%)</title><rect x="76.5592%" y="133" width="0.2675%" height="15" fill="rgb(243,12,26)" fg:x="10876" fg:w="38"/><text x="76.8522%" y="143.50"></text></g><g><title>memset (244 instructions, 1.72%)</title><rect x="76.8267%" y="133" width="1.7176%" height="15" fill="rgb(214,87,16)" fg:x="10914" fg:w="244"/><text x="77.1197%" y="143.50"></text></g><g><title>mp_calloc (308 instructions, 2.17%)</title><rect x="76.5592%" y="149" width="2.1681%" height="15" fill="rgb(208,99,42)" fg:x="10876" fg:w="308"/><text x="76.8522%" y="159.50">m..</text></g><g><title>mp_init (323 instructions, 2.27%)</title><rect x="76.5592%" y="165" width="2.2737%" height="15" fill="rgb(253,99,2)" fg:x="10876" fg:w="323"/><text x="76.8522%" y="175.50">m..</text></g><g><title>mp_set_u64 (514 instructions, 3.62%)</title><rect x="78.8329%" y="165" width="3.6182%" height="15" fill="rgb(220,168,23)" fg:x="11199" fg:w="514"/><text x="79.1259%" y="175.50">mp_..</text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.22%)</title><rect x="82.4511%" y="165" width="0.2182%" height="15" fill="rgb(242,38,24)" fg:x="11713" fg:w="31"/><text x="82.7440%" y="175.50"></text></g><g><title>bigint_of_word64 (911 instructions, 6.41%)</title><rect x="76.5592%" y="181" width="6.4128%" height="15" fill="rgb(225,182,9)" fg:x="10876" fg:w="911"/><text x="76.8522%" y="191.50">bigint_..</text></g><g><title>anon-func-17.33 (919 instructions, 6.47%)</title><rect x="76.5592%" y="197" width="6.4691%" height="15" fill="rgb(243,178,37)" fg:x="10876" fg:w="919"/><text x="76.8522%" y="207.50">anon-fu..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="83.0353%" y="197" width="0.1830%" height="15" fill="rgb(232,139,19)" fg:x="11796" fg:w="26"/><text x="83.3283%" y="207.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="83.2184%" y="149" width="0.1830%" height="15" fill="rgb(225,201,24)" fg:x="11822" fg:w="26"/><text x="83.5113%" y="159.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="83.4014%" y="149" width="0.0634%" height="15" fill="rgb(221,47,46)" fg:x="11848" fg:w="9"/><text x="83.6943%" y="159.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="83.4647%" y="149" width="0.0634%" height="15" fill="rgb(249,23,13)" fg:x="11857" fg:w="9"/><text x="83.7577%" y="159.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="83.5281%" y="149" width="0.0634%" height="15" fill="rgb(219,9,5)" fg:x="11866" fg:w="9"/><text x="83.8211%" y="159.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="83.5914%" y="149" width="0.0634%" height="15" fill="rgb(254,171,16)" fg:x="11875" fg:w="9"/><text x="83.8844%" y="159.50"></text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="83.6548%" y="133" width="0.0422%" height="15" fill="rgb(230,171,20)" fg:x="11884" fg:w="6"/><text x="83.9478%" y="143.50"></text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="83.6970%" y="133" width="0.0422%" height="15" fill="rgb(210,71,41)" fg:x="11890" fg:w="6"/><text x="83.9900%" y="143.50"></text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="83.7393%" y="133" width="0.0422%" height="15" fill="rgb(206,173,20)" fg:x="11896" fg:w="6"/><text x="84.0322%" y="143.50"></text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="83.7815%" y="133" width="0.0422%" height="15" fill="rgb(233,88,34)" fg:x="11902" fg:w="6"/><text x="84.0745%" y="143.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="83.8237%" y="133" width="0.0634%" height="15" fill="rgb(223,209,46)" fg:x="11908" fg:w="9"/><text x="84.1167%" y="143.50"></text></g><g><title>hashNat8 (185 instructions, 1.30%)</title><rect x="83.6548%" y="149" width="1.3023%" height="15" fill="rgb(250,43,18)" fg:x="11884" fg:w="185"/><text x="83.9478%" y="159.50"></text></g><g><title>hash (296 instructions, 2.08%)</title><rect x="83.2184%" y="165" width="2.0836%" height="15" fill="rgb(208,13,10)" fg:x="11822" fg:w="296"/><text x="83.5113%" y="175.50">h..</text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="85.3020%" y="165" width="0.0422%" height="15" fill="rgb(212,200,36)" fg:x="12118" fg:w="6"/><text x="85.5950%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="85.3442%" y="165" width="0.1830%" height="15" fill="rgb(225,90,30)" fg:x="12124" fg:w="26"/><text x="85.6372%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="85.5272%" y="165" width="0.0634%" height="15" fill="rgb(236,182,39)" fg:x="12150" fg:w="9"/><text x="85.8202%" y="175.50"></text></g><g><title>proposal_key (363 instructions, 2.56%)</title><rect x="83.2184%" y="181" width="2.5553%" height="15" fill="rgb(212,144,35)" fg:x="11822" fg:w="363"/><text x="83.5113%" y="191.50">p..</text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="85.7736%" y="165" width="0.0985%" height="15" fill="rgb(228,63,44)" fg:x="12185" fg:w="14"/><text x="86.0666%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="85.8722%" y="149" width="0.1830%" height="15" fill="rgb(228,109,6)" fg:x="12199" fg:w="26"/><text x="86.1651%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="86.0552%" y="133" width="0.1830%" height="15" fill="rgb(238,117,24)" fg:x="12225" fg:w="26"/><text x="86.3482%" y="143.50"></text></g><g><title>equalKey (41 instructions, 0.29%)</title><rect x="86.0552%" y="149" width="0.2886%" height="15" fill="rgb(242,26,26)" fg:x="12225" fg:w="41"/><text x="86.3482%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="86.3438%" y="149" width="0.1830%" height="15" fill="rgb(221,92,48)" fg:x="12266" fg:w="26"/><text x="86.6368%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="86.5268%" y="117" width="0.1830%" height="15" fill="rgb(209,209,32)" fg:x="12292" fg:w="26"/><text x="86.8198%" y="127.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="86.7098%" y="117" width="0.1830%" height="15" fill="rgb(221,70,22)" fg:x="12318" fg:w="26"/><text x="87.0028%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="86.8929%" y="101" width="0.0985%" height="15" fill="rgb(248,145,5)" fg:x="12344" fg:w="14"/><text x="87.1858%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="86.9914%" y="85" width="0.1830%" height="15" fill="rgb(226,116,26)" fg:x="12358" fg:w="26"/><text x="87.2844%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="87.2800%" y="85" width="0.1830%" height="15" fill="rgb(244,5,17)" fg:x="12399" fg:w="26"/><text x="87.5730%" y="95.50"></text></g><g><title>to_2_tuple (82 instructions, 0.58%)</title><rect x="86.9914%" y="101" width="0.5772%" height="15" fill="rgb(252,159,33)" fg:x="12358" fg:w="82"/><text x="87.2844%" y="111.50"></text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="87.5686%" y="101" width="0.0985%" height="15" fill="rgb(206,71,0)" fg:x="12440" fg:w="14"/><text x="87.8616%" y="111.50"></text></g><g><title>rec (159 instructions, 1.12%)</title><rect x="86.8929%" y="117" width="1.1192%" height="15" fill="rgb(233,118,54)" fg:x="12344" fg:w="159"/><text x="87.1858%" y="127.50"></text></g><g><title>replace (253 instructions, 1.78%)</title><rect x="86.5268%" y="133" width="1.7809%" height="15" fill="rgb(234,83,48)" fg:x="12292" fg:w="253"/><text x="86.8198%" y="143.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="88.3078%" y="53" width="0.0985%" height="15" fill="rgb(228,3,54)" fg:x="12545" fg:w="14"/><text x="88.6007%" y="63.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="88.4063%" y="53" width="0.0704%" height="15" fill="rgb(226,155,13)" fg:x="12559" fg:w="10"/><text x="88.6993%" y="63.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="88.4767%" y="37" width="0.0563%" height="15" fill="rgb(241,28,37)" fg:x="12569" fg:w="8"/><text x="88.7697%" y="47.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="88.4767%" y="53" width="0.1760%" height="15" fill="rgb(233,93,10)" fg:x="12569" fg:w="25"/><text x="88.7697%" y="63.50"></text></g><g><title>opt_inject (4 instructions, 0.03%)</title><rect x="88.6527%" y="53" width="0.0282%" height="15" fill="rgb(225,113,19)" fg:x="12594" fg:w="4"/><text x="88.9457%" y="63.50"></text></g><g><title>rec (123 instructions, 0.87%)</title><rect x="88.3078%" y="69" width="0.8658%" height="15" fill="rgb(241,2,18)" fg:x="12545" fg:w="123"/><text x="88.6007%" y="79.50"></text></g><g><title>lenClamp (128 instructions, 0.90%)</title><rect x="88.3078%" y="85" width="0.9010%" height="15" fill="rgb(228,207,21)" fg:x="12545" fg:w="128"/><text x="88.6007%" y="95.50"></text></g><g><title>opt_project (4 instructions, 0.03%)</title><rect x="89.2088%" y="85" width="0.0282%" height="15" fill="rgb(213,211,35)" fg:x="12673" fg:w="4"/><text x="89.5018%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="89.2369%" y="85" width="0.1830%" height="15" fill="rgb(209,83,10)" fg:x="12677" fg:w="26"/><text x="89.5299%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="89.4200%" y="85" width="0.1830%" height="15" fill="rgb(209,164,1)" fg:x="12703" fg:w="26"/><text x="89.7129%" y="95.50"></text></g><g><title>rec (248 instructions, 1.75%)</title><rect x="88.3078%" y="101" width="1.7457%" height="15" fill="rgb(213,184,43)" fg:x="12545" fg:w="248"/><text x="88.6007%" y="111.50"></text></g><g><title>fromList (253 instructions, 1.78%)</title><rect x="88.3078%" y="117" width="1.7809%" height="15" fill="rgb(231,61,34)" fg:x="12545" fg:w="253"/><text x="88.6007%" y="127.50"></text></g><g><title>leaf (258 instructions, 1.82%)</title><rect x="88.3078%" y="133" width="1.8161%" height="15" fill="rgb(235,75,3)" fg:x="12545" fg:w="258"/><text x="88.6007%" y="143.50"></text></g><g><title>rec (553 instructions, 3.89%)</title><rect x="86.5268%" y="149" width="3.8927%" height="15" fill="rgb(220,106,47)" fg:x="12292" fg:w="553"/><text x="86.8198%" y="159.50">rec</text></g><g><title>replace (701 instructions, 4.93%)</title><rect x="85.8722%" y="165" width="4.9345%" height="15" fill="rgb(210,196,33)" fg:x="12199" fg:w="701"/><text x="86.1651%" y="175.50">repla..</text></g><g><title>put (722 instructions, 5.08%)</title><rect x="85.7736%" y="181" width="5.0824%" height="15" fill="rgb(229,154,42)" fg:x="12185" fg:w="722"/><text x="86.0666%" y="191.50">put</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="90.8560%" y="165" width="0.1830%" height="15" fill="rgb(228,114,26)" fg:x="12907" fg:w="26"/><text x="91.1489%" y="175.50"></text></g><g><title>to_2_tuple (41 instructions, 0.29%)</title><rect x="90.8560%" y="181" width="0.2886%" height="15" fill="rgb(208,144,1)" fg:x="12907" fg:w="41"/><text x="91.1489%" y="191.50"></text></g><g><title>proposal_put (1,141 instructions, 8.03%)</title><rect x="83.2184%" y="197" width="8.0318%" height="15" fill="rgb(239,112,37)" fg:x="11822" fg:w="1141"/><text x="83.5113%" y="207.50">proposal_..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="91.2502%" y="197" width="0.1830%" height="15" fill="rgb(210,96,50)" fg:x="12963" fg:w="26"/><text x="91.5431%" y="207.50"></text></g><g><title>anon-func-71.66 (2,218 instructions, 15.61%)</title><rect x="76.3832%" y="213" width="15.6131%" height="15" fill="rgb(222,178,2)" fg:x="10851" fg:w="2218"/><text x="76.6762%" y="223.50">anon-func-71.66</text></g><g><title>chain (2,248 instructions, 15.82%)</title><rect x="76.3832%" y="229" width="15.8243%" height="15" fill="rgb(226,74,18)" fg:x="10851" fg:w="2248"/><text x="76.6762%" y="239.50">chain</text></g><g><title>@buffer_size&lt;N&gt; (27 instructions, 0.19%)</title><rect x="92.2075%" y="181" width="0.1901%" height="15" fill="rgb(225,67,54)" fg:x="13099" fg:w="27"/><text x="92.5005%" y="191.50"></text></g><g><title>@buffer_size&lt;v(err:t,ok:N)&gt; (69 instructions, 0.49%)</title><rect x="92.2075%" y="197" width="0.4857%" height="15" fill="rgb(251,92,32)" fg:x="13099" fg:w="69"/><text x="92.5005%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.24%)</title><rect x="92.6932%" y="181" width="0.2393%" height="15" fill="rgb(228,149,22)" fg:x="13168" fg:w="34"/><text x="92.9862%" y="191.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="92.6932%" y="197" width="0.2534%" height="15" fill="rgb(243,54,13)" fg:x="13168" fg:w="36"/><text x="92.9862%" y="207.50"></text></g><g><title>memcpy (78 instructions, 0.55%)</title><rect x="92.9466%" y="197" width="0.5491%" height="15" fill="rgb(243,180,28)" fg:x="13204" fg:w="78"/><text x="93.2396%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.24%)</title><rect x="93.4957%" y="181" width="0.2393%" height="15" fill="rgb(208,167,24)" fg:x="13282" fg:w="34"/><text x="93.7887%" y="191.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="93.4957%" y="197" width="0.2534%" height="15" fill="rgb(245,73,45)" fg:x="13282" fg:w="36"/><text x="93.7887%" y="207.50"></text></g><g><title>leb128_encode (12 instructions, 0.08%)</title><rect x="93.7491%" y="181" width="0.0845%" height="15" fill="rgb(237,203,48)" fg:x="13318" fg:w="12"/><text x="94.0421%" y="191.50"></text></g><g><title>leb128_encode (12 instructions, 0.08%)</title><rect x="93.8336%" y="165" width="0.0845%" height="15" fill="rgb(211,197,16)" fg:x="13330" fg:w="12"/><text x="94.1266%" y="175.50"></text></g><g><title>@serialize_go&lt;N&gt; (35 instructions, 0.25%)</title><rect x="93.8336%" y="181" width="0.2464%" height="15" fill="rgb(243,99,51)" fg:x="13330" fg:w="35"/><text x="94.1266%" y="191.50"></text></g><g><title>@serialize_go&lt;v(err:t,ok:N)&gt; (75 instructions, 0.53%)</title><rect x="93.7491%" y="197" width="0.5279%" height="15" fill="rgb(215,123,29)" fg:x="13318" fg:w="75"/><text x="94.0421%" y="207.50"></text></g><g><title>@serialize&lt;v(err:t,ok:N)&gt; (357 instructions, 2.51%)</title><rect x="92.2075%" y="213" width="2.5130%" height="15" fill="rgb(239,186,37)" fg:x="13099" fg:w="357"/><text x="92.5005%" y="223.50">@..</text></g><g><title>reply_with_data (44 instructions, 0.31%)</title><rect x="94.7205%" y="213" width="0.3097%" height="15" fill="rgb(252,136,39)" fg:x="13456" fg:w="44"/><text x="95.0135%" y="223.50"></text></g><g><title>$lambda (406 instructions, 2.86%)</title><rect x="92.2075%" y="229" width="2.8579%" height="15" fill="rgb(223,213,32)" fg:x="13099" fg:w="406"/><text x="92.5005%" y="239.50">$l..</text></g><g><title>$lambda (8,708 instructions, 61.30%)</title><rect x="34.2179%" y="245" width="61.2980%" height="15" fill="rgb(233,115,5)" fg:x="4861" fg:w="8708"/><text x="34.5109%" y="255.50">$lambda</text></g><g><title>schedule_copying_gc (50 instructions, 0.35%)</title><rect x="95.5160%" y="245" width="0.3520%" height="15" fill="rgb(207,226,44)" fg:x="13569" fg:w="50"/><text x="95.8089%" y="255.50"></text></g><g><title>trans_state4 (14 instructions, 0.10%)</title><rect x="95.8679%" y="245" width="0.0985%" height="15" fill="rgb(208,126,0)" fg:x="13619" fg:w="14"/><text x="96.1609%" y="255.50"></text></g><g><title>all (14,206 instructions, 100%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(244,66,21)" fg:x="0" fg:w="14206"/><text x="0.2930%" y="287.50"></text></g><g><title>submit_proposal (14,206 instructions, 100.00%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(222,97,12)" fg:x="0" fg:w="14206"/><text x="0.2930%" y="271.50">submit_proposal</text></g></svg></svg>