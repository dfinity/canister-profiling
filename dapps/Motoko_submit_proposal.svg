<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="326" onload="init(evt)" viewBox="0 0 1024 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="326" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.submit_proposal</text><text id="details" fill="rgb(0,0,0)" x="10" y="309.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="309.00"> </text><svg id="frames" x="10" width="1004" total_samples="14198"><g><title>trans_state5 (9 instructions, 0.06%)</title><rect x="0.0000%" y="245" width="0.0634%" height="15" fill="rgb(224,95,51)" fg:x="0" fg:w="9"/><text x="0.2930%" y="255.50"></text></g><g><title>@reset_cycles (3 instructions, 0.02%)</title><rect x="0.0634%" y="245" width="0.0211%" height="15" fill="rgb(212,188,45)" fg:x="9" fg:w="3"/><text x="0.3564%" y="255.50"></text></g><g><title>@reset_refund (3 instructions, 0.02%)</title><rect x="0.0845%" y="245" width="0.0211%" height="15" fill="rgb(223,154,38)" fg:x="12" fg:w="3"/><text x="0.3775%" y="255.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.24%)</title><rect x="0.1056%" y="229" width="0.2395%" height="15" fill="rgb(251,22,52)" fg:x="15" fg:w="34"/><text x="0.3986%" y="239.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="0.1056%" y="245" width="0.2536%" height="15" fill="rgb(229,209,22)" fg:x="15" fg:w="36"/><text x="0.3986%" y="255.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="0.3592%" y="213" width="0.3592%" height="15" fill="rgb(234,138,34)" fg:x="51" fg:w="51"/><text x="0.6522%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.24%)</title><rect x="0.7184%" y="213" width="0.2395%" height="15" fill="rgb(212,95,11)" fg:x="102" fg:w="34"/><text x="1.0114%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="0.9579%" y="213" width="0.4789%" height="15" fill="rgb(240,179,47)" fg:x="136" fg:w="68"/><text x="1.2509%" y="223.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="1.4368%" y="197" width="0.3592%" height="15" fill="rgb(240,163,11)" fg:x="204" fg:w="51"/><text x="1.7298%" y="207.50"></text></g><g><title>leb128_decode (168 instructions, 1.18%)</title><rect x="1.7960%" y="197" width="1.1833%" height="15" fill="rgb(236,37,12)" fg:x="255" fg:w="168"/><text x="2.0890%" y="207.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="2.9793%" y="197" width="0.4789%" height="15" fill="rgb(232,164,16)" fg:x="423" fg:w="68"/><text x="3.2723%" y="207.50"></text></g><g><title>leb128_decode (213 instructions, 1.50%)</title><rect x="3.4582%" y="197" width="1.5002%" height="15" fill="rgb(244,205,15)" fg:x="491" fg:w="213"/><text x="3.7512%" y="207.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="4.9584%" y="197" width="0.4789%" height="15" fill="rgb(223,117,47)" fg:x="704" fg:w="68"/><text x="5.2514%" y="207.50"></text></g><g><title>leb128_decode (213 instructions, 1.50%)</title><rect x="5.4374%" y="197" width="1.5002%" height="15" fill="rgb(244,107,35)" fg:x="772" fg:w="213"/><text x="5.7304%" y="207.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="6.9376%" y="197" width="0.4789%" height="15" fill="rgb(205,140,8)" fg:x="985" fg:w="68"/><text x="7.2306%" y="207.50"></text></g><g><title>motoko_rts::idl::parse_fields::h81c9d86bd5bcf94b (972 instructions, 6.85%)</title><rect x="1.4368%" y="213" width="6.8460%" height="15" fill="rgb(228,84,46)" fg:x="204" fg:w="972"/><text x="1.7298%" y="223.50">motoko_..</text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="8.2829%" y="213" width="0.4789%" height="15" fill="rgb(254,188,9)" fg:x="1176" fg:w="68"/><text x="8.5758%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="8.7618%" y="213" width="0.4789%" height="15" fill="rgb(206,112,54)" fg:x="1244" fg:w="68"/><text x="9.0548%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="9.2407%" y="213" width="0.4789%" height="15" fill="rgb(216,84,49)" fg:x="1312" fg:w="68"/><text x="9.5337%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="9.7197%" y="213" width="0.4789%" height="15" fill="rgb(214,194,35)" fg:x="1380" fg:w="68"/><text x="10.0126%" y="223.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="10.1986%" y="213" width="0.3592%" height="15" fill="rgb(249,28,3)" fg:x="1448" fg:w="51"/><text x="10.4916%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="10.5578%" y="213" width="0.4789%" height="15" fill="rgb(222,56,52)" fg:x="1499" fg:w="68"/><text x="10.8508%" y="223.50"></text></g><g><title>parse_idl_header (1,742 instructions, 12.27%)</title><rect x="0.3592%" y="229" width="12.2693%" height="15" fill="rgb(245,217,50)" fg:x="51" fg:w="1742"/><text x="0.6522%" y="239.50">parse_idl_header</text></g><g><title>idl_sub_buf_words (9 instructions, 0.06%)</title><rect x="12.6285%" y="229" width="0.0634%" height="15" fill="rgb(213,201,24)" fg:x="1793" fg:w="9"/><text x="12.9215%" y="239.50"></text></g><g><title>memset (4 instructions, 0.03%)</title><rect x="12.6919%" y="213" width="0.0282%" height="15" fill="rgb(248,116,28)" fg:x="1802" fg:w="4"/><text x="12.9849%" y="223.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.13%)</title><rect x="12.6919%" y="229" width="0.1338%" height="15" fill="rgb(219,72,43)" fg:x="1802" fg:w="19"/><text x="12.9849%" y="239.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="12.8258%" y="229" width="0.3592%" height="15" fill="rgb(209,138,14)" fg:x="1821" fg:w="51"/><text x="13.1187%" y="239.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="13.1850%" y="229" width="0.4789%" height="15" fill="rgb(222,18,33)" fg:x="1872" fg:w="68"/><text x="13.4779%" y="239.50"></text></g><g><title>set_local %i0 (3 instructions, 0.02%)</title><rect x="13.6639%" y="229" width="0.0211%" height="15" fill="rgb(213,199,7)" fg:x="1940" fg:w="3"/><text x="13.9569%" y="239.50"></text></g><g><title>set_local %i1 (3 instructions, 0.02%)</title><rect x="13.6850%" y="229" width="0.0211%" height="15" fill="rgb(250,110,10)" fg:x="1943" fg:w="3"/><text x="13.9780%" y="239.50"></text></g><g><title>set_local %i2 (3 instructions, 0.02%)</title><rect x="13.7062%" y="229" width="0.0211%" height="15" fill="rgb(248,123,6)" fg:x="1946" fg:w="3"/><text x="13.9991%" y="239.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="13.7273%" y="213" width="0.4789%" height="15" fill="rgb(206,91,31)" fg:x="1949" fg:w="68"/><text x="14.0203%" y="223.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="14.2062%" y="213" width="0.3592%" height="15" fill="rgb(211,154,13)" fg:x="2017" fg:w="51"/><text x="14.4992%" y="223.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="14.5654%" y="213" width="0.1831%" height="15" fill="rgb(225,148,7)" fg:x="2068" fg:w="26"/><text x="14.8584%" y="223.50"></text></g><g><title>leb128_decode (168 instructions, 1.18%)</title><rect x="14.7486%" y="197" width="1.1833%" height="15" fill="rgb(220,160,43)" fg:x="2094" fg:w="168"/><text x="15.0415%" y="207.50"></text></g><g><title>find_field (197 instructions, 1.39%)</title><rect x="14.7486%" y="213" width="1.3875%" height="15" fill="rgb(213,52,39)" fg:x="2094" fg:w="197"/><text x="15.0415%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="16.1361%" y="213" width="0.4789%" height="15" fill="rgb(243,137,7)" fg:x="2291" fg:w="68"/><text x="16.4290%" y="223.50"></text></g><g><title>set_local %i0 (3 instructions, 0.02%)</title><rect x="16.6150%" y="213" width="0.0211%" height="15" fill="rgb(230,79,13)" fg:x="2359" fg:w="3"/><text x="16.9080%" y="223.50"></text></g><g><title>set_local %i1 (3 instructions, 0.02%)</title><rect x="16.6361%" y="213" width="0.0211%" height="15" fill="rgb(247,105,23)" fg:x="2362" fg:w="3"/><text x="16.9291%" y="223.50"></text></g><g><title>set_local %i2 (3 instructions, 0.02%)</title><rect x="16.6573%" y="213" width="0.0211%" height="15" fill="rgb(223,179,41)" fg:x="2365" fg:w="3"/><text x="16.9502%" y="223.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="16.6784%" y="197" width="0.3592%" height="15" fill="rgb(218,9,34)" fg:x="2368" fg:w="51"/><text x="16.9714%" y="207.50"></text></g><g><title>core::str::converts::from_utf8::h828634ce6cdca907 (215 instructions, 1.51%)</title><rect x="17.0376%" y="181" width="1.5143%" height="15" fill="rgb(222,106,8)" fg:x="2419" fg:w="215"/><text x="17.3306%" y="191.50"></text></g><g><title>utf8_validate (232 instructions, 1.63%)</title><rect x="17.0376%" y="197" width="1.6340%" height="15" fill="rgb(211,220,0)" fg:x="2419" fg:w="232"/><text x="17.3306%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.24%)</title><rect x="18.6716%" y="165" width="0.2395%" height="15" fill="rgb(229,52,16)" fg:x="2651" fg:w="34"/><text x="18.9646%" y="175.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h65a8860ad2532130 (41 instructions, 0.29%)</title><rect x="18.6716%" y="181" width="0.2888%" height="15" fill="rgb(212,155,18)" fg:x="2651" fg:w="41"/><text x="18.9646%" y="191.50"></text></g><g><title>memcpy (168 instructions, 1.18%)</title><rect x="18.9604%" y="181" width="1.1833%" height="15" fill="rgb(242,21,14)" fg:x="2692" fg:w="168"/><text x="19.2534%" y="191.50"></text></g><g><title>text_of_ptr_size (219 instructions, 1.54%)</title><rect x="18.6716%" y="197" width="1.5425%" height="15" fill="rgb(222,19,48)" fg:x="2651" fg:w="219"/><text x="18.9646%" y="207.50"></text></g><g><title>@deserialize_go&lt;t&gt; (539 instructions, 3.80%)</title><rect x="16.6784%" y="213" width="3.7963%" height="15" fill="rgb(232,45,27)" fg:x="2368" fg:w="539"/><text x="16.9714%" y="223.50">@de..</text></g><g><title>leb128_decode (213 instructions, 1.50%)</title><rect x="20.4747%" y="197" width="1.5002%" height="15" fill="rgb(249,103,42)" fg:x="2907" fg:w="213"/><text x="20.7677%" y="207.50"></text></g><g><title>find_field (242 instructions, 1.70%)</title><rect x="20.4747%" y="213" width="1.7045%" height="15" fill="rgb(246,81,33)" fg:x="2907" fg:w="242"/><text x="20.7677%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="22.1792%" y="213" width="0.4789%" height="15" fill="rgb(252,33,42)" fg:x="3149" fg:w="68"/><text x="22.4721%" y="223.50"></text></g><g><title>set_local %i0 (3 instructions, 0.02%)</title><rect x="22.6581%" y="213" width="0.0211%" height="15" fill="rgb(209,212,41)" fg:x="3217" fg:w="3"/><text x="22.9511%" y="223.50"></text></g><g><title>set_local %i1 (3 instructions, 0.02%)</title><rect x="22.6793%" y="213" width="0.0211%" height="15" fill="rgb(207,154,6)" fg:x="3220" fg:w="3"/><text x="22.9722%" y="223.50"></text></g><g><title>set_local %i2 (3 instructions, 0.02%)</title><rect x="22.7004%" y="213" width="0.0211%" height="15" fill="rgb(223,64,47)" fg:x="3223" fg:w="3"/><text x="22.9933%" y="223.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="22.7215%" y="197" width="0.3592%" height="15" fill="rgb(211,161,38)" fg:x="3226" fg:w="51"/><text x="23.0145%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.24%)</title><rect x="23.0807%" y="181" width="0.2395%" height="15" fill="rgb(219,138,40)" fg:x="3277" fg:w="34"/><text x="23.3737%" y="191.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="23.0807%" y="197" width="0.2536%" height="15" fill="rgb(241,228,46)" fg:x="3277" fg:w="36"/><text x="23.3737%" y="207.50"></text></g><g><title>memcpy (86 instructions, 0.61%)</title><rect x="23.3343%" y="197" width="0.6057%" height="15" fill="rgb(223,209,38)" fg:x="3313" fg:w="86"/><text x="23.6272%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (246 instructions, 1.73%)</title><rect x="22.7215%" y="213" width="1.7326%" height="15" fill="rgb(236,164,45)" fg:x="3226" fg:w="246"/><text x="23.0145%" y="223.50"></text></g><g><title>leb128_decode (213 instructions, 1.50%)</title><rect x="24.4541%" y="197" width="1.5002%" height="15" fill="rgb(231,15,5)" fg:x="3472" fg:w="213"/><text x="24.7471%" y="207.50"></text></g><g><title>find_field (242 instructions, 1.70%)</title><rect x="24.4541%" y="213" width="1.7045%" height="15" fill="rgb(252,35,15)" fg:x="3472" fg:w="242"/><text x="24.7471%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="26.1586%" y="213" width="0.4789%" height="15" fill="rgb(248,181,18)" fg:x="3714" fg:w="68"/><text x="26.4516%" y="223.50"></text></g><g><title>set_local %i0 (3 instructions, 0.02%)</title><rect x="26.6376%" y="213" width="0.0211%" height="15" fill="rgb(233,39,42)" fg:x="3782" fg:w="3"/><text x="26.9305%" y="223.50"></text></g><g><title>set_local %i1 (3 instructions, 0.02%)</title><rect x="26.6587%" y="213" width="0.0211%" height="15" fill="rgb(238,110,33)" fg:x="3785" fg:w="3"/><text x="26.9517%" y="223.50"></text></g><g><title>set_local %i2 (3 instructions, 0.02%)</title><rect x="26.6798%" y="213" width="0.0211%" height="15" fill="rgb(233,195,10)" fg:x="3788" fg:w="3"/><text x="26.9728%" y="223.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="26.7009%" y="197" width="0.4789%" height="15" fill="rgb(254,105,3)" fg:x="3791" fg:w="68"/><text x="26.9939%" y="207.50"></text></g><g><title>sleb128_decode (68 instructions, 0.48%)</title><rect x="27.1799%" y="197" width="0.4789%" height="15" fill="rgb(221,225,9)" fg:x="3859" fg:w="68"/><text x="27.4729%" y="207.50"></text></g><g><title>leb128_decode (51 instructions, 0.36%)</title><rect x="27.6588%" y="197" width="0.3592%" height="15" fill="rgb(224,227,45)" fg:x="3927" fg:w="51"/><text x="27.9518%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.24%)</title><rect x="28.0180%" y="181" width="0.2395%" height="15" fill="rgb(229,198,43)" fg:x="3978" fg:w="34"/><text x="28.3110%" y="191.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="28.0180%" y="197" width="0.2536%" height="15" fill="rgb(206,209,35)" fg:x="3978" fg:w="36"/><text x="28.3110%" y="207.50"></text></g><g><title>memcpy (307 instructions, 2.16%)</title><rect x="28.2716%" y="197" width="2.1623%" height="15" fill="rgb(245,195,53)" fg:x="4014" fg:w="307"/><text x="28.5646%" y="207.50">m..</text></g><g><title>@deserialize_go&lt;B&gt; (608 instructions, 4.28%)</title><rect x="26.7009%" y="213" width="4.2823%" height="15" fill="rgb(240,92,26)" fg:x="3791" fg:w="608"/><text x="26.9939%" y="223.50">@des..</text></g><g><title>skip_fields (5 instructions, 0.04%)</title><rect x="30.9832%" y="213" width="0.0352%" height="15" fill="rgb(207,40,23)" fg:x="4399" fg:w="5"/><text x="31.2762%" y="223.50"></text></g><g><title>@deserialize_go&lt;r(canister_id:P,message:B,method:t)&gt; (2,682 instructions, 18.89%)</title><rect x="13.7273%" y="229" width="18.8900%" height="15" fill="rgb(223,111,35)" fg:x="1949" fg:w="2682"/><text x="14.0203%" y="239.50">@deserialize_go&lt;r(caniste..</text></g><g><title>@deserialize&lt;r(canister_id:P,message:B,method:t)&gt; (4,784 instructions, 33.69%)</title><rect x="0.3592%" y="245" width="33.6949%" height="15" fill="rgb(229,147,28)" fg:x="51" fg:w="4784"/><text x="0.6522%" y="255.50">@deserialize&lt;r(canister_id:P,message:B,method:..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="34.0541%" y="245" width="0.1831%" height="15" fill="rgb(211,29,28)" fg:x="4835" fg:w="26"/><text x="34.3471%" y="255.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.24%)</title><rect x="34.2372%" y="213" width="0.2395%" height="15" fill="rgb(228,72,33)" fg:x="4861" fg:w="34"/><text x="34.5302%" y="223.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="34.2372%" y="229" width="0.2536%" height="15" fill="rgb(205,214,31)" fg:x="4861" fg:w="36"/><text x="34.5302%" y="239.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="34.4908%" y="229" width="0.1831%" height="15" fill="rgb(224,111,15)" fg:x="4897" fg:w="26"/><text x="34.7837%" y="239.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="34.6739%" y="229" width="0.1127%" height="15" fill="rgb(253,21,26)" fg:x="4923" fg:w="16"/><text x="34.9669%" y="239.50"></text></g><g><title>compute_crc32 (804 instructions, 5.66%)</title><rect x="34.7866%" y="165" width="5.6628%" height="15" fill="rgb(245,139,43)" fg:x="4939" fg:w="804"/><text x="35.0796%" y="175.50">comput..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="40.4494%" y="149" width="0.1831%" height="15" fill="rgb(252,170,7)" fg:x="5743" fg:w="26"/><text x="40.7423%" y="159.50"></text></g><g><title>box_i32 (41 instructions, 0.29%)</title><rect x="40.4494%" y="165" width="0.2888%" height="15" fill="rgb(231,118,14)" fg:x="5743" fg:w="41"/><text x="40.7423%" y="175.50"></text></g><g><title>hash (848 instructions, 5.97%)</title><rect x="34.7866%" y="181" width="5.9727%" height="15" fill="rgb(238,83,0)" fg:x="4939" fg:w="848"/><text x="35.0796%" y="191.50">hash</text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="40.7593%" y="181" width="0.0352%" height="15" fill="rgb(221,39,39)" fg:x="5787" fg:w="5"/><text x="41.0522%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="40.7945%" y="181" width="0.1831%" height="15" fill="rgb(222,119,46)" fg:x="5792" fg:w="26"/><text x="41.0874%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="40.9776%" y="165" width="0.1831%" height="15" fill="rgb(222,165,49)" fg:x="5818" fg:w="26"/><text x="41.2706%" y="175.50"></text></g><g><title>box_i32 (41 instructions, 0.29%)</title><rect x="40.9776%" y="181" width="0.2888%" height="15" fill="rgb(219,113,52)" fg:x="5818" fg:w="41"/><text x="41.2706%" y="191.50"></text></g><g><title>account_key (946 instructions, 6.66%)</title><rect x="34.7866%" y="197" width="6.6629%" height="15" fill="rgb(214,7,15)" fg:x="4939" fg:w="946"/><text x="35.0796%" y="207.50">account..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="41.4495%" y="149" width="0.1831%" height="15" fill="rgb(235,32,4)" fg:x="5885" fg:w="26"/><text x="41.7425%" y="159.50"></text></g><g><title>equalKey (41 instructions, 0.29%)</title><rect x="41.4495%" y="165" width="0.2888%" height="15" fill="rgb(238,90,54)" fg:x="5885" fg:w="41"/><text x="41.7425%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="41.7383%" y="165" width="0.1831%" height="15" fill="rgb(213,208,19)" fg:x="5926" fg:w="26"/><text x="42.0312%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="41.9214%" y="149" width="0.1127%" height="15" fill="rgb(233,156,4)" fg:x="5952" fg:w="16"/><text x="42.2144%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="42.0341%" y="133" width="0.1831%" height="15" fill="rgb(207,194,5)" fg:x="5968" fg:w="26"/><text x="42.3271%" y="143.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="42.2172%" y="133" width="0.1831%" height="15" fill="rgb(206,111,30)" fg:x="5994" fg:w="26"/><text x="42.5102%" y="143.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="42.4003%" y="117" width="0.0986%" height="15" fill="rgb(243,70,54)" fg:x="6020" fg:w="14"/><text x="42.6933%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="42.4989%" y="101" width="0.1127%" height="15" fill="rgb(242,28,8)" fg:x="6034" fg:w="16"/><text x="42.7919%" y="111.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="42.6116%" y="101" width="0.0352%" height="15" fill="rgb(219,106,18)" fg:x="6050" fg:w="5"/><text x="42.9046%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="42.6469%" y="101" width="0.1127%" height="15" fill="rgb(244,222,10)" fg:x="6055" fg:w="16"/><text x="42.9398%" y="111.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="42.7595%" y="101" width="0.0352%" height="15" fill="rgb(236,179,52)" fg:x="6071" fg:w="5"/><text x="43.0525%" y="111.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.41%)</title><rect x="42.4989%" y="117" width="0.4085%" height="15" fill="rgb(213,23,39)" fg:x="6034" fg:w="58"/><text x="42.7919%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="42.9075%" y="101" width="0.0986%" height="15" fill="rgb(238,48,10)" fg:x="6092" fg:w="14"/><text x="43.2004%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="43.0061%" y="85" width="0.1127%" height="15" fill="rgb(251,196,23)" fg:x="6106" fg:w="16"/><text x="43.2990%" y="95.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="43.1187%" y="85" width="0.0352%" height="15" fill="rgb(250,152,24)" fg:x="6122" fg:w="5"/><text x="43.4117%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="43.1540%" y="85" width="0.1127%" height="15" fill="rgb(209,150,17)" fg:x="6127" fg:w="16"/><text x="43.4469%" y="95.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="43.2667%" y="85" width="0.0352%" height="15" fill="rgb(234,202,34)" fg:x="6143" fg:w="5"/><text x="43.5596%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="43.3019%" y="85" width="0.1127%" height="15" fill="rgb(253,148,53)" fg:x="6148" fg:w="16"/><text x="43.5948%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="43.4146%" y="85" width="0.1127%" height="15" fill="rgb(218,129,16)" fg:x="6164" fg:w="16"/><text x="43.7075%" y="95.50"></text></g><g><title>Blob.compare_eq (803 instructions, 5.66%)</title><rect x="43.5273%" y="69" width="5.6557%" height="15" fill="rgb(216,85,19)" fg:x="6180" fg:w="803"/><text x="43.8202%" y="79.50">Blob.c..</text></g><g><title>equal (806 instructions, 5.68%)</title><rect x="43.5273%" y="85" width="5.6769%" height="15" fill="rgb(235,228,7)" fg:x="6180" fg:w="806"/><text x="43.8202%" y="95.50">equal</text></g><g><title>anon-func-192.5 (908 instructions, 6.40%)</title><rect x="43.0061%" y="101" width="6.3953%" height="15" fill="rgb(245,175,0)" fg:x="6106" fg:w="908"/><text x="43.2990%" y="111.50">anon-fu..</text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="49.4013%" y="101" width="0.0986%" height="15" fill="rgb(208,168,36)" fg:x="7014" fg:w="14"/><text x="49.6943%" y="111.50"></text></g><g><title>rec (988 instructions, 6.96%)</title><rect x="42.9075%" y="117" width="6.9587%" height="15" fill="rgb(246,171,24)" fg:x="6092" fg:w="988"/><text x="43.2004%" y="127.50">rec</text></g><g><title>rec (1,116 instructions, 7.86%)</title><rect x="42.4003%" y="133" width="7.8603%" height="15" fill="rgb(215,142,24)" fg:x="6020" fg:w="1116"/><text x="42.6933%" y="143.50">rec</text></g><g><title>find (1,208 instructions, 8.51%)</title><rect x="42.0341%" y="149" width="8.5082%" height="15" fill="rgb(250,187,7)" fg:x="5968" fg:w="1208"/><text x="42.3271%" y="159.50">find</text></g><g><title>rec (1,271 instructions, 8.95%)</title><rect x="41.9214%" y="165" width="8.9520%" height="15" fill="rgb(228,66,33)" fg:x="5952" fg:w="1271"/><text x="42.2144%" y="175.50">rec</text></g><g><title>find (1,367 instructions, 9.63%)</title><rect x="41.4495%" y="181" width="9.6281%" height="15" fill="rgb(234,215,21)" fg:x="5885" fg:w="1367"/><text x="41.7425%" y="191.50">find</text></g><g><title>get (1,372 instructions, 9.66%)</title><rect x="41.4495%" y="197" width="9.6633%" height="15" fill="rgb(222,191,20)" fg:x="5885" fg:w="1372"/><text x="41.7425%" y="207.50">get</text></g><g><title>account_get (2,326 instructions, 16.38%)</title><rect x="34.7866%" y="213" width="16.3826%" height="15" fill="rgb(245,79,54)" fg:x="4939" fg:w="2326"/><text x="35.0796%" y="223.50">account_get</text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="51.1692%" y="213" width="0.0986%" height="15" fill="rgb(240,10,37)" fg:x="7265" fg:w="14"/><text x="51.4621%" y="223.50"></text></g><g><title>obj_idx&lt;2&gt; (16 instructions, 0.11%)</title><rect x="51.2678%" y="213" width="0.1127%" height="15" fill="rgb(214,192,32)" fg:x="7279" fg:w="16"/><text x="51.5608%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="51.3805%" y="213" width="0.1127%" height="15" fill="rgb(209,36,54)" fg:x="7295" fg:w="16"/><text x="51.6734%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="51.4932%" y="213" width="0.1127%" height="15" fill="rgb(220,10,11)" fg:x="7311" fg:w="16"/><text x="51.7861%" y="223.50"></text></g><g><title>B_lt (10 instructions, 0.07%)</title><rect x="51.6059%" y="213" width="0.0704%" height="15" fill="rgb(221,106,17)" fg:x="7327" fg:w="10"/><text x="51.8988%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="51.6763%" y="213" width="0.1127%" height="15" fill="rgb(251,142,44)" fg:x="7337" fg:w="16"/><text x="51.9693%" y="223.50"></text></g><g><title>nat_sub (7 instructions, 0.05%)</title><rect x="51.7890%" y="197" width="0.0493%" height="15" fill="rgb(238,13,15)" fg:x="7353" fg:w="7"/><text x="52.0820%" y="207.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="51.8383%" y="197" width="0.0563%" height="15" fill="rgb(208,107,27)" fg:x="7360" fg:w="8"/><text x="52.1313%" y="207.50"></text></g><g><title>B_sub (32 instructions, 0.23%)</title><rect x="51.7890%" y="213" width="0.2254%" height="15" fill="rgb(205,136,37)" fg:x="7353" fg:w="32"/><text x="52.0820%" y="223.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="52.0144%" y="213" width="0.1831%" height="15" fill="rgb(250,205,27)" fg:x="7385" fg:w="26"/><text x="52.3073%" y="223.50"></text></g><g><title>compute_crc32 (804 instructions, 5.66%)</title><rect x="52.1975%" y="165" width="5.6628%" height="15" fill="rgb(210,80,43)" fg:x="7411" fg:w="804"/><text x="52.4905%" y="175.50">comput..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="57.8603%" y="149" width="0.1831%" height="15" fill="rgb(247,160,36)" fg:x="8215" fg:w="26"/><text x="58.1532%" y="159.50"></text></g><g><title>box_i32 (41 instructions, 0.29%)</title><rect x="57.8603%" y="165" width="0.2888%" height="15" fill="rgb(234,13,49)" fg:x="8215" fg:w="41"/><text x="58.1532%" y="175.50"></text></g><g><title>hash (848 instructions, 5.97%)</title><rect x="52.1975%" y="181" width="5.9727%" height="15" fill="rgb(234,122,0)" fg:x="7411" fg:w="848"/><text x="52.4905%" y="191.50">hash</text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="58.1702%" y="181" width="0.0352%" height="15" fill="rgb(207,146,38)" fg:x="8259" fg:w="5"/><text x="58.4631%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="58.2054%" y="181" width="0.1831%" height="15" fill="rgb(207,177,25)" fg:x="8264" fg:w="26"/><text x="58.4983%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="58.3885%" y="165" width="0.1831%" height="15" fill="rgb(211,178,42)" fg:x="8290" fg:w="26"/><text x="58.6815%" y="175.50"></text></g><g><title>box_i32 (41 instructions, 0.29%)</title><rect x="58.3885%" y="181" width="0.2888%" height="15" fill="rgb(230,69,54)" fg:x="8290" fg:w="41"/><text x="58.6815%" y="191.50"></text></g><g><title>account_key (946 instructions, 6.66%)</title><rect x="52.1975%" y="197" width="6.6629%" height="15" fill="rgb(214,135,41)" fg:x="7411" fg:w="946"/><text x="52.4905%" y="207.50">account..</text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="58.8604%" y="181" width="0.0986%" height="15" fill="rgb(237,67,25)" fg:x="8357" fg:w="14"/><text x="59.1534%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="58.9590%" y="165" width="0.1831%" height="15" fill="rgb(222,189,50)" fg:x="8371" fg:w="26"/><text x="59.2520%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="59.1421%" y="149" width="0.1831%" height="15" fill="rgb(245,148,34)" fg:x="8397" fg:w="26"/><text x="59.4351%" y="159.50"></text></g><g><title>equalKey (41 instructions, 0.29%)</title><rect x="59.1421%" y="165" width="0.2888%" height="15" fill="rgb(222,29,6)" fg:x="8397" fg:w="41"/><text x="59.4351%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="59.4309%" y="165" width="0.1831%" height="15" fill="rgb(221,189,43)" fg:x="8438" fg:w="26"/><text x="59.7239%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="59.6140%" y="149" width="0.1127%" height="15" fill="rgb(207,36,27)" fg:x="8464" fg:w="16"/><text x="59.9070%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="59.7267%" y="133" width="0.1831%" height="15" fill="rgb(217,90,24)" fg:x="8480" fg:w="26"/><text x="60.0197%" y="143.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="59.9098%" y="133" width="0.1831%" height="15" fill="rgb(224,66,35)" fg:x="8506" fg:w="26"/><text x="60.2028%" y="143.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="60.0930%" y="117" width="0.0986%" height="15" fill="rgb(221,13,50)" fg:x="8532" fg:w="14"/><text x="60.3859%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="60.1916%" y="101" width="0.1127%" height="15" fill="rgb(236,68,49)" fg:x="8546" fg:w="16"/><text x="60.4845%" y="111.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="60.3043%" y="101" width="0.0352%" height="15" fill="rgb(229,146,28)" fg:x="8562" fg:w="5"/><text x="60.5972%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="60.3395%" y="101" width="0.1127%" height="15" fill="rgb(225,31,38)" fg:x="8567" fg:w="16"/><text x="60.6325%" y="111.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="60.4522%" y="101" width="0.0352%" height="15" fill="rgb(250,208,3)" fg:x="8583" fg:w="5"/><text x="60.7451%" y="111.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.41%)</title><rect x="60.1916%" y="117" width="0.4085%" height="15" fill="rgb(246,54,23)" fg:x="8546" fg:w="58"/><text x="60.4845%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="60.6001%" y="101" width="0.0986%" height="15" fill="rgb(243,76,11)" fg:x="8604" fg:w="14"/><text x="60.8931%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="60.6987%" y="85" width="0.1127%" height="15" fill="rgb(245,21,50)" fg:x="8618" fg:w="16"/><text x="60.9917%" y="95.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="60.8114%" y="85" width="0.0352%" height="15" fill="rgb(228,9,43)" fg:x="8634" fg:w="5"/><text x="61.1044%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.11%)</title><rect x="60.8466%" y="85" width="0.1127%" height="15" fill="rgb(208,100,47)" fg:x="8639" fg:w="16"/><text x="61.1396%" y="95.50"></text></g><g><title>unbox_i32 (5 instructions, 0.04%)</title><rect x="60.9593%" y="85" width="0.0352%" height="15" fill="rgb(232,26,8)" fg:x="8655" fg:w="5"/><text x="61.2523%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="60.9945%" y="85" width="0.1127%" height="15" fill="rgb(216,166,38)" fg:x="8660" fg:w="16"/><text x="61.2875%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.11%)</title><rect x="61.1072%" y="85" width="0.1127%" height="15" fill="rgb(251,202,51)" fg:x="8676" fg:w="16"/><text x="61.4002%" y="95.50"></text></g><g><title>Blob.compare_eq (803 instructions, 5.66%)</title><rect x="61.2199%" y="69" width="5.6557%" height="15" fill="rgb(254,216,34)" fg:x="8692" fg:w="803"/><text x="61.5129%" y="79.50">Blob.c..</text></g><g><title>equal (806 instructions, 5.68%)</title><rect x="61.2199%" y="85" width="5.6769%" height="15" fill="rgb(251,32,27)" fg:x="8692" fg:w="806"/><text x="61.5129%" y="95.50">equal</text></g><g><title>anon-func-192.5 (908 instructions, 6.40%)</title><rect x="60.6987%" y="101" width="6.3953%" height="15" fill="rgb(208,127,28)" fg:x="8618" fg:w="908"/><text x="60.9917%" y="111.50">anon-fu..</text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="67.0940%" y="101" width="0.0986%" height="15" fill="rgb(224,137,22)" fg:x="9526" fg:w="14"/><text x="67.3869%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="67.1926%" y="85" width="0.1831%" height="15" fill="rgb(254,70,32)" fg:x="9540" fg:w="26"/><text x="67.4855%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="67.4813%" y="85" width="0.1831%" height="15" fill="rgb(229,75,37)" fg:x="9581" fg:w="26"/><text x="67.7743%" y="95.50"></text></g><g><title>to_2_tuple (82 instructions, 0.58%)</title><rect x="67.1926%" y="101" width="0.5775%" height="15" fill="rgb(252,64,23)" fg:x="9540" fg:w="82"/><text x="67.4855%" y="111.50"></text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="67.7701%" y="101" width="0.0986%" height="15" fill="rgb(232,162,48)" fg:x="9622" fg:w="14"/><text x="68.0631%" y="111.50"></text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="67.8687%" y="101" width="0.0986%" height="15" fill="rgb(246,160,12)" fg:x="9636" fg:w="14"/><text x="68.1617%" y="111.50"></text></g><g><title>rec (1,126 instructions, 7.93%)</title><rect x="60.6001%" y="117" width="7.9307%" height="15" fill="rgb(247,166,0)" fg:x="8604" fg:w="1126"/><text x="60.8931%" y="127.50">rec</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="68.5308%" y="101" width="0.1831%" height="15" fill="rgb(249,219,21)" fg:x="9730" fg:w="26"/><text x="68.8237%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="68.8196%" y="101" width="0.1831%" height="15" fill="rgb(205,209,3)" fg:x="9771" fg:w="26"/><text x="69.1125%" y="111.50"></text></g><g><title>to_2_tuple (82 instructions, 0.58%)</title><rect x="68.5308%" y="117" width="0.5775%" height="15" fill="rgb(243,44,1)" fg:x="9730" fg:w="82"/><text x="68.8237%" y="127.50"></text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="69.1083%" y="117" width="0.0986%" height="15" fill="rgb(206,159,16)" fg:x="9812" fg:w="14"/><text x="69.4013%" y="127.50"></text></g><g><title>rec (1,364 instructions, 9.61%)</title><rect x="60.0930%" y="133" width="9.6070%" height="15" fill="rgb(244,77,30)" fg:x="8532" fg:w="1364"/><text x="60.3859%" y="143.50">rec</text></g><g><title>replace (1,458 instructions, 10.27%)</title><rect x="59.7267%" y="149" width="10.2691%" height="15" fill="rgb(218,69,12)" fg:x="8480" fg:w="1458"/><text x="60.0197%" y="159.50">replace</text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="69.9958%" y="69" width="0.0986%" height="15" fill="rgb(212,87,7)" fg:x="9938" fg:w="14"/><text x="70.2887%" y="79.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="70.0944%" y="69" width="0.0704%" height="15" fill="rgb(245,114,25)" fg:x="9952" fg:w="10"/><text x="70.3873%" y="79.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="70.1648%" y="53" width="0.0563%" height="15" fill="rgb(210,61,42)" fg:x="9962" fg:w="8"/><text x="70.4578%" y="63.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="70.1648%" y="69" width="0.1761%" height="15" fill="rgb(211,52,33)" fg:x="9962" fg:w="25"/><text x="70.4578%" y="79.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="70.3409%" y="69" width="0.0986%" height="15" fill="rgb(234,58,33)" fg:x="9987" fg:w="14"/><text x="70.6339%" y="79.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="70.4395%" y="69" width="0.0704%" height="15" fill="rgb(220,115,36)" fg:x="10001" fg:w="10"/><text x="70.7325%" y="79.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="70.5099%" y="53" width="0.0563%" height="15" fill="rgb(243,153,54)" fg:x="10011" fg:w="8"/><text x="70.8029%" y="63.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="70.5099%" y="69" width="0.1761%" height="15" fill="rgb(251,47,18)" fg:x="10011" fg:w="25"/><text x="70.8029%" y="79.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="70.6860%" y="69" width="0.0986%" height="15" fill="rgb(242,102,42)" fg:x="10036" fg:w="14"/><text x="70.9790%" y="79.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="70.7846%" y="69" width="0.0704%" height="15" fill="rgb(234,31,38)" fg:x="10050" fg:w="10"/><text x="71.0776%" y="79.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="70.8551%" y="53" width="0.0563%" height="15" fill="rgb(221,117,51)" fg:x="10060" fg:w="8"/><text x="71.1480%" y="63.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="70.8551%" y="69" width="0.1761%" height="15" fill="rgb(212,20,18)" fg:x="10060" fg:w="25"/><text x="71.1480%" y="79.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="71.0311%" y="69" width="0.0986%" height="15" fill="rgb(245,133,36)" fg:x="10085" fg:w="14"/><text x="71.3241%" y="79.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="71.1297%" y="69" width="0.0704%" height="15" fill="rgb(212,6,19)" fg:x="10099" fg:w="10"/><text x="71.4227%" y="79.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="71.2002%" y="53" width="0.0563%" height="15" fill="rgb(218,1,36)" fg:x="10109" fg:w="8"/><text x="71.4931%" y="63.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="71.2002%" y="69" width="0.1761%" height="15" fill="rgb(246,84,54)" fg:x="10109" fg:w="25"/><text x="71.4931%" y="79.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="71.3763%" y="69" width="0.0986%" height="15" fill="rgb(242,110,6)" fg:x="10134" fg:w="14"/><text x="71.6692%" y="79.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="71.4749%" y="69" width="0.0704%" height="15" fill="rgb(214,47,5)" fg:x="10148" fg:w="10"/><text x="71.7678%" y="79.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="71.5453%" y="53" width="0.0563%" height="15" fill="rgb(218,159,25)" fg:x="10158" fg:w="8"/><text x="71.8383%" y="63.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="71.5453%" y="69" width="0.1761%" height="15" fill="rgb(215,211,28)" fg:x="10158" fg:w="25"/><text x="71.8383%" y="79.50"></text></g><g><title>opt_inject (4 instructions, 0.03%)</title><rect x="71.7214%" y="69" width="0.0282%" height="15" fill="rgb(238,59,32)" fg:x="10183" fg:w="4"/><text x="72.0143%" y="79.50"></text></g><g><title>rec (499 instructions, 3.51%)</title><rect x="69.9958%" y="85" width="3.5146%" height="15" fill="rgb(226,82,3)" fg:x="9938" fg:w="499"/><text x="70.2887%" y="95.50">rec</text></g><g><title>lenClamp (504 instructions, 3.55%)</title><rect x="69.9958%" y="101" width="3.5498%" height="15" fill="rgb(240,164,32)" fg:x="9938" fg:w="504"/><text x="70.2887%" y="111.50">len..</text></g><g><title>opt_project (4 instructions, 0.03%)</title><rect x="73.5456%" y="101" width="0.0282%" height="15" fill="rgb(232,46,7)" fg:x="10442" fg:w="4"/><text x="73.8385%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="73.5737%" y="101" width="0.1831%" height="15" fill="rgb(229,129,53)" fg:x="10446" fg:w="26"/><text x="73.8667%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="73.7569%" y="101" width="0.1831%" height="15" fill="rgb(234,188,29)" fg:x="10472" fg:w="26"/><text x="74.0498%" y="111.50"></text></g><g><title>rec (624 instructions, 4.39%)</title><rect x="69.9958%" y="117" width="4.3950%" height="15" fill="rgb(246,141,4)" fg:x="9938" fg:w="624"/><text x="70.2887%" y="127.50">rec</text></g><g><title>fromList (629 instructions, 4.43%)</title><rect x="69.9958%" y="133" width="4.4302%" height="15" fill="rgb(229,23,39)" fg:x="9938" fg:w="629"/><text x="70.2887%" y="143.50">from..</text></g><g><title>leaf (634 instructions, 4.47%)</title><rect x="69.9958%" y="149" width="4.4654%" height="15" fill="rgb(206,12,3)" fg:x="9938" fg:w="634"/><text x="70.2887%" y="159.50">leaf</text></g><g><title>rec (2,172 instructions, 15.30%)</title><rect x="59.6140%" y="165" width="15.2979%" height="15" fill="rgb(252,226,20)" fg:x="8464" fg:w="2172"/><text x="59.9070%" y="175.50">rec</text></g><g><title>replace (2,320 instructions, 16.34%)</title><rect x="58.9590%" y="181" width="16.3403%" height="15" fill="rgb(216,123,35)" fg:x="8371" fg:w="2320"/><text x="59.2520%" y="191.50">replace</text></g><g><title>put (2,341 instructions, 16.49%)</title><rect x="58.8604%" y="197" width="16.4882%" height="15" fill="rgb(212,68,40)" fg:x="8357" fg:w="2341"/><text x="59.1534%" y="207.50">put</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="75.3486%" y="181" width="0.1831%" height="15" fill="rgb(254,125,32)" fg:x="10698" fg:w="26"/><text x="75.6416%" y="191.50"></text></g><g><title>to_2_tuple (41 instructions, 0.29%)</title><rect x="75.3486%" y="197" width="0.2888%" height="15" fill="rgb(253,97,22)" fg:x="10698" fg:w="41"/><text x="75.6416%" y="207.50"></text></g><g><title>account_put (3,343 instructions, 23.55%)</title><rect x="52.1975%" y="213" width="23.5456%" height="15" fill="rgb(241,101,14)" fg:x="7411" fg:w="3343"/><text x="52.4905%" y="223.50">account_put</text></g><g><title>deduct_proposal_submission_deposit (5,882 instructions, 41.43%)</title><rect x="34.7866%" y="229" width="41.4284%" height="15" fill="rgb(238,103,29)" fg:x="4939" fg:w="5882"/><text x="35.0796%" y="239.50">deduct_proposal_submission_deposit</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="76.2150%" y="229" width="0.1831%" height="15" fill="rgb(233,195,47)" fg:x="10821" fg:w="26"/><text x="76.5079%" y="239.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="76.3981%" y="181" width="0.0563%" height="15" fill="rgb(246,218,30)" fg:x="10847" fg:w="8"/><text x="76.6911%" y="191.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="76.3981%" y="197" width="0.1761%" height="15" fill="rgb(219,145,47)" fg:x="10847" fg:w="25"/><text x="76.6911%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h6355501f33786335 (38 instructions, 0.27%)</title><rect x="76.5742%" y="133" width="0.2676%" height="15" fill="rgb(243,12,26)" fg:x="10872" fg:w="38"/><text x="76.8671%" y="143.50"></text></g><g><title>memset (244 instructions, 1.72%)</title><rect x="76.8418%" y="133" width="1.7186%" height="15" fill="rgb(214,87,16)" fg:x="10910" fg:w="244"/><text x="77.1348%" y="143.50"></text></g><g><title>mp_calloc (308 instructions, 2.17%)</title><rect x="76.5742%" y="149" width="2.1693%" height="15" fill="rgb(208,99,42)" fg:x="10872" fg:w="308"/><text x="76.8671%" y="159.50">m..</text></g><g><title>mp_init (323 instructions, 2.27%)</title><rect x="76.5742%" y="165" width="2.2750%" height="15" fill="rgb(253,99,2)" fg:x="10872" fg:w="323"/><text x="76.8671%" y="175.50">m..</text></g><g><title>mp_set_u64 (514 instructions, 3.62%)</title><rect x="78.8491%" y="165" width="3.6202%" height="15" fill="rgb(220,168,23)" fg:x="11195" fg:w="514"/><text x="79.1421%" y="175.50">mp_..</text></g><g><title>motoko_rts::bigint::persist_bigint::hfac9333f501b1524 (31 instructions, 0.22%)</title><rect x="82.4694%" y="165" width="0.2183%" height="15" fill="rgb(242,38,24)" fg:x="11709" fg:w="31"/><text x="82.7623%" y="175.50"></text></g><g><title>bigint_of_word64 (911 instructions, 6.42%)</title><rect x="76.5742%" y="181" width="6.4164%" height="15" fill="rgb(225,182,9)" fg:x="10872" fg:w="911"/><text x="76.8671%" y="191.50">bigint_..</text></g><g><title>anon-func-17.33 (919 instructions, 6.47%)</title><rect x="76.5742%" y="197" width="6.4727%" height="15" fill="rgb(243,178,37)" fg:x="10872" fg:w="919"/><text x="76.8671%" y="207.50">anon-fu..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="83.0540%" y="197" width="0.1831%" height="15" fill="rgb(232,139,19)" fg:x="11792" fg:w="26"/><text x="83.3469%" y="207.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="83.2371%" y="149" width="0.1831%" height="15" fill="rgb(225,201,24)" fg:x="11818" fg:w="26"/><text x="83.5300%" y="159.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="83.4202%" y="149" width="0.0634%" height="15" fill="rgb(221,47,46)" fg:x="11844" fg:w="9"/><text x="83.7132%" y="159.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="83.4836%" y="149" width="0.0634%" height="15" fill="rgb(249,23,13)" fg:x="11853" fg:w="9"/><text x="83.7766%" y="159.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="83.5470%" y="149" width="0.0634%" height="15" fill="rgb(219,9,5)" fg:x="11862" fg:w="9"/><text x="83.8399%" y="159.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="83.6104%" y="149" width="0.0634%" height="15" fill="rgb(254,171,16)" fg:x="11871" fg:w="9"/><text x="83.9033%" y="159.50"></text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="83.6738%" y="133" width="0.0423%" height="15" fill="rgb(230,171,20)" fg:x="11880" fg:w="6"/><text x="83.9667%" y="143.50"></text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="83.7160%" y="133" width="0.0423%" height="15" fill="rgb(210,71,41)" fg:x="11886" fg:w="6"/><text x="84.0090%" y="143.50"></text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="83.7583%" y="133" width="0.0423%" height="15" fill="rgb(206,173,20)" fg:x="11892" fg:w="6"/><text x="84.0512%" y="143.50"></text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="83.8005%" y="133" width="0.0423%" height="15" fill="rgb(233,88,34)" fg:x="11898" fg:w="6"/><text x="84.0935%" y="143.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="83.8428%" y="133" width="0.0634%" height="15" fill="rgb(223,209,46)" fg:x="11904" fg:w="9"/><text x="84.1358%" y="143.50"></text></g><g><title>hashNat8 (185 instructions, 1.30%)</title><rect x="83.6738%" y="149" width="1.3030%" height="15" fill="rgb(250,43,18)" fg:x="11880" fg:w="185"/><text x="83.9667%" y="159.50"></text></g><g><title>hash (296 instructions, 2.08%)</title><rect x="83.2371%" y="165" width="2.0848%" height="15" fill="rgb(208,13,10)" fg:x="11818" fg:w="296"/><text x="83.5300%" y="175.50">h..</text></g><g><title>unbox_i32 (6 instructions, 0.04%)</title><rect x="85.3219%" y="165" width="0.0423%" height="15" fill="rgb(212,200,36)" fg:x="12114" fg:w="6"/><text x="85.6148%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="85.3641%" y="165" width="0.1831%" height="15" fill="rgb(225,90,30)" fg:x="12120" fg:w="26"/><text x="85.6571%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="85.5473%" y="165" width="0.0634%" height="15" fill="rgb(236,182,39)" fg:x="12146" fg:w="9"/><text x="85.8402%" y="175.50"></text></g><g><title>proposal_key (363 instructions, 2.56%)</title><rect x="83.2371%" y="181" width="2.5567%" height="15" fill="rgb(212,144,35)" fg:x="11818" fg:w="363"/><text x="83.5300%" y="191.50">p..</text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="85.7938%" y="165" width="0.0986%" height="15" fill="rgb(228,63,44)" fg:x="12181" fg:w="14"/><text x="86.0867%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="85.8924%" y="149" width="0.1831%" height="15" fill="rgb(228,109,6)" fg:x="12195" fg:w="26"/><text x="86.1853%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="86.0755%" y="133" width="0.1831%" height="15" fill="rgb(238,117,24)" fg:x="12221" fg:w="26"/><text x="86.3685%" y="143.50"></text></g><g><title>equalKey (41 instructions, 0.29%)</title><rect x="86.0755%" y="149" width="0.2888%" height="15" fill="rgb(242,26,26)" fg:x="12221" fg:w="41"/><text x="86.3685%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="86.3643%" y="149" width="0.1831%" height="15" fill="rgb(221,92,48)" fg:x="12262" fg:w="26"/><text x="86.6572%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="86.5474%" y="117" width="0.1831%" height="15" fill="rgb(209,209,32)" fg:x="12288" fg:w="26"/><text x="86.8404%" y="127.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="86.7305%" y="117" width="0.1831%" height="15" fill="rgb(221,70,22)" fg:x="12314" fg:w="26"/><text x="87.0235%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="86.9136%" y="101" width="0.0986%" height="15" fill="rgb(248,145,5)" fg:x="12340" fg:w="14"/><text x="87.2066%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="87.0123%" y="85" width="0.1831%" height="15" fill="rgb(226,116,26)" fg:x="12354" fg:w="26"/><text x="87.3052%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="87.3010%" y="85" width="0.1831%" height="15" fill="rgb(244,5,17)" fg:x="12395" fg:w="26"/><text x="87.5940%" y="95.50"></text></g><g><title>to_2_tuple (82 instructions, 0.58%)</title><rect x="87.0123%" y="101" width="0.5775%" height="15" fill="rgb(252,159,33)" fg:x="12354" fg:w="82"/><text x="87.3052%" y="111.50"></text></g><g><title>opt_inject (14 instructions, 0.10%)</title><rect x="87.5898%" y="101" width="0.0986%" height="15" fill="rgb(206,71,0)" fg:x="12436" fg:w="14"/><text x="87.8828%" y="111.50"></text></g><g><title>rec (159 instructions, 1.12%)</title><rect x="86.9136%" y="117" width="1.1199%" height="15" fill="rgb(233,118,54)" fg:x="12340" fg:w="159"/><text x="87.2066%" y="127.50"></text></g><g><title>replace (253 instructions, 1.78%)</title><rect x="86.5474%" y="133" width="1.7819%" height="15" fill="rgb(234,83,48)" fg:x="12288" fg:w="253"/><text x="86.8404%" y="143.50"></text></g><g><title>opt_project (14 instructions, 0.10%)</title><rect x="88.3293%" y="53" width="0.0986%" height="15" fill="rgb(228,3,54)" fg:x="12541" fg:w="14"/><text x="88.6223%" y="63.50"></text></g><g><title>B_ge (10 instructions, 0.07%)</title><rect x="88.4279%" y="53" width="0.0704%" height="15" fill="rgb(226,155,13)" fg:x="12555" fg:w="10"/><text x="88.7209%" y="63.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.06%)</title><rect x="88.4984%" y="37" width="0.0563%" height="15" fill="rgb(241,28,37)" fg:x="12565" fg:w="8"/><text x="88.7913%" y="47.50"></text></g><g><title>B_add (25 instructions, 0.18%)</title><rect x="88.4984%" y="53" width="0.1761%" height="15" fill="rgb(233,93,10)" fg:x="12565" fg:w="25"/><text x="88.7913%" y="63.50"></text></g><g><title>opt_inject (4 instructions, 0.03%)</title><rect x="88.6745%" y="53" width="0.0282%" height="15" fill="rgb(225,113,19)" fg:x="12590" fg:w="4"/><text x="88.9674%" y="63.50"></text></g><g><title>rec (123 instructions, 0.87%)</title><rect x="88.3293%" y="69" width="0.8663%" height="15" fill="rgb(241,2,18)" fg:x="12541" fg:w="123"/><text x="88.6223%" y="79.50"></text></g><g><title>lenClamp (128 instructions, 0.90%)</title><rect x="88.3293%" y="85" width="0.9015%" height="15" fill="rgb(228,207,21)" fg:x="12541" fg:w="128"/><text x="88.6223%" y="95.50"></text></g><g><title>opt_project (4 instructions, 0.03%)</title><rect x="89.2309%" y="85" width="0.0282%" height="15" fill="rgb(213,211,35)" fg:x="12669" fg:w="4"/><text x="89.5238%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="89.2591%" y="85" width="0.1831%" height="15" fill="rgb(209,83,10)" fg:x="12673" fg:w="26"/><text x="89.5520%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="89.4422%" y="85" width="0.1831%" height="15" fill="rgb(209,164,1)" fg:x="12699" fg:w="26"/><text x="89.7351%" y="95.50"></text></g><g><title>rec (248 instructions, 1.75%)</title><rect x="88.3293%" y="101" width="1.7467%" height="15" fill="rgb(213,184,43)" fg:x="12541" fg:w="248"/><text x="88.6223%" y="111.50"></text></g><g><title>fromList (253 instructions, 1.78%)</title><rect x="88.3293%" y="117" width="1.7819%" height="15" fill="rgb(231,61,34)" fg:x="12541" fg:w="253"/><text x="88.6223%" y="127.50"></text></g><g><title>leaf (258 instructions, 1.82%)</title><rect x="88.3293%" y="133" width="1.8172%" height="15" fill="rgb(235,75,3)" fg:x="12541" fg:w="258"/><text x="88.6223%" y="143.50"></text></g><g><title>rec (549 instructions, 3.87%)</title><rect x="86.5474%" y="149" width="3.8667%" height="15" fill="rgb(220,106,47)" fg:x="12288" fg:w="549"/><text x="86.8404%" y="159.50">rec</text></g><g><title>replace (697 instructions, 4.91%)</title><rect x="85.8924%" y="165" width="4.9091%" height="15" fill="rgb(210,196,33)" fg:x="12195" fg:w="697"/><text x="86.1853%" y="175.50">repla..</text></g><g><title>put (718 instructions, 5.06%)</title><rect x="85.7938%" y="181" width="5.0571%" height="15" fill="rgb(229,154,42)" fg:x="12181" fg:w="718"/><text x="86.0867%" y="191.50">put</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="90.8508%" y="165" width="0.1831%" height="15" fill="rgb(228,114,26)" fg:x="12899" fg:w="26"/><text x="91.1438%" y="175.50"></text></g><g><title>to_2_tuple (41 instructions, 0.29%)</title><rect x="90.8508%" y="181" width="0.2888%" height="15" fill="rgb(208,144,1)" fg:x="12899" fg:w="41"/><text x="91.1438%" y="191.50"></text></g><g><title>proposal_put (1,137 instructions, 8.01%)</title><rect x="83.2371%" y="197" width="8.0082%" height="15" fill="rgb(239,112,37)" fg:x="11818" fg:w="1137"/><text x="83.5300%" y="207.50">proposal_..</text></g><g><title>alloc_words (26 instructions, 0.18%)</title><rect x="91.2452%" y="197" width="0.1831%" height="15" fill="rgb(210,96,50)" fg:x="12955" fg:w="26"/><text x="91.5382%" y="207.50"></text></g><g><title>anon-func-71.66 (2,214 instructions, 15.59%)</title><rect x="76.3981%" y="213" width="15.5937%" height="15" fill="rgb(222,178,2)" fg:x="10847" fg:w="2214"/><text x="76.6911%" y="223.50">anon-func-71.66</text></g><g><title>chain (2,244 instructions, 15.81%)</title><rect x="76.3981%" y="229" width="15.8050%" height="15" fill="rgb(226,74,18)" fg:x="10847" fg:w="2244"/><text x="76.6911%" y="239.50">chain</text></g><g><title>@buffer_size&lt;N&gt; (27 instructions, 0.19%)</title><rect x="92.2031%" y="181" width="0.1902%" height="15" fill="rgb(225,67,54)" fg:x="13091" fg:w="27"/><text x="92.4961%" y="191.50"></text></g><g><title>@buffer_size&lt;v(err:t,ok:N)&gt; (69 instructions, 0.49%)</title><rect x="92.2031%" y="197" width="0.4860%" height="15" fill="rgb(251,92,32)" fg:x="13091" fg:w="69"/><text x="92.4961%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.24%)</title><rect x="92.6891%" y="181" width="0.2395%" height="15" fill="rgb(228,149,22)" fg:x="13160" fg:w="34"/><text x="92.9821%" y="191.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="92.6891%" y="197" width="0.2536%" height="15" fill="rgb(243,54,13)" fg:x="13160" fg:w="36"/><text x="92.9821%" y="207.50"></text></g><g><title>memcpy (78 instructions, 0.55%)</title><rect x="92.9427%" y="197" width="0.5494%" height="15" fill="rgb(243,180,28)" fg:x="13196" fg:w="78"/><text x="93.2356%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.24%)</title><rect x="93.4920%" y="181" width="0.2395%" height="15" fill="rgb(208,167,24)" fg:x="13274" fg:w="34"/><text x="93.7850%" y="191.50"></text></g><g><title>alloc_blob (36 instructions, 0.25%)</title><rect x="93.4920%" y="197" width="0.2536%" height="15" fill="rgb(245,73,45)" fg:x="13274" fg:w="36"/><text x="93.7850%" y="207.50"></text></g><g><title>leb128_encode (12 instructions, 0.08%)</title><rect x="93.7456%" y="181" width="0.0845%" height="15" fill="rgb(237,203,48)" fg:x="13310" fg:w="12"/><text x="94.0386%" y="191.50"></text></g><g><title>leb128_encode (12 instructions, 0.08%)</title><rect x="93.8301%" y="165" width="0.0845%" height="15" fill="rgb(211,197,16)" fg:x="13322" fg:w="12"/><text x="94.1231%" y="175.50"></text></g><g><title>@serialize_go&lt;N&gt; (35 instructions, 0.25%)</title><rect x="93.8301%" y="181" width="0.2465%" height="15" fill="rgb(243,99,51)" fg:x="13322" fg:w="35"/><text x="94.1231%" y="191.50"></text></g><g><title>@serialize_go&lt;v(err:t,ok:N)&gt; (75 instructions, 0.53%)</title><rect x="93.7456%" y="197" width="0.5282%" height="15" fill="rgb(215,123,29)" fg:x="13310" fg:w="75"/><text x="94.0386%" y="207.50"></text></g><g><title>@serialize&lt;v(err:t,ok:N)&gt; (357 instructions, 2.51%)</title><rect x="92.2031%" y="213" width="2.5144%" height="15" fill="rgb(239,186,37)" fg:x="13091" fg:w="357"/><text x="92.4961%" y="223.50">@..</text></g><g><title>reply_with_data (44 instructions, 0.31%)</title><rect x="94.7176%" y="213" width="0.3099%" height="15" fill="rgb(252,136,39)" fg:x="13448" fg:w="44"/><text x="95.0105%" y="223.50"></text></g><g><title>$lambda (406 instructions, 2.86%)</title><rect x="92.2031%" y="229" width="2.8596%" height="15" fill="rgb(223,213,32)" fg:x="13091" fg:w="406"/><text x="92.4961%" y="239.50">$l..</text></g><g><title>$lambda (8,700 instructions, 61.28%)</title><rect x="34.2372%" y="245" width="61.2762%" height="15" fill="rgb(233,115,5)" fg:x="4861" fg:w="8700"/><text x="34.5302%" y="255.50">$lambda</text></g><g><title>schedule_copying_gc (50 instructions, 0.35%)</title><rect x="95.5135%" y="245" width="0.3522%" height="15" fill="rgb(207,226,44)" fg:x="13561" fg:w="50"/><text x="95.8064%" y="255.50"></text></g><g><title>trans_state4 (14 instructions, 0.10%)</title><rect x="95.8656%" y="245" width="0.0986%" height="15" fill="rgb(208,126,0)" fg:x="13611" fg:w="14"/><text x="96.1586%" y="255.50"></text></g><g><title>all (14,198 instructions, 100%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(244,66,21)" fg:x="0" fg:w="14198"/><text x="0.2930%" y="287.50"></text></g><g><title>submit_proposal (14,198 instructions, 100.00%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(222,97,12)" fg:x="0" fg:w="14198"/><text x="0.2930%" y="271.50">submit_proposal</text></g></svg></svg>