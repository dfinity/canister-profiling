<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="310" onload="init(evt)" viewBox="0 0 1024 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.submit_proposal</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="293.00"> </text><svg id="frames" x="10" width="1004" total_samples="12714"><g><title>trans_state5 (8 instructions, 0.06%)</title><rect x="0.0000%" y="229" width="0.0629%" height="15" fill="rgb(221,76,26)" fg:x="0" fg:w="8"/><text x="0.2930%" y="239.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.26%)</title><rect x="0.0629%" y="229" width="0.2596%" height="15" fill="rgb(225,139,18)" fg:x="8" fg:w="33"/><text x="0.3559%" y="239.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="0.3225%" y="213" width="0.3618%" height="15" fill="rgb(230,137,11)" fg:x="41" fg:w="46"/><text x="0.6154%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.26%)</title><rect x="0.6843%" y="213" width="0.2596%" height="15" fill="rgb(212,28,1)" fg:x="87" fg:w="33"/><text x="0.9773%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="0.9438%" y="213" width="0.4719%" height="15" fill="rgb(248,164,17)" fg:x="120" fg:w="60"/><text x="1.2368%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="1.4158%" y="213" width="0.3618%" height="15" fill="rgb(222,171,42)" fg:x="180" fg:w="46"/><text x="1.7087%" y="223.50"></text></g><g><title>leb128_decode (160 instructions, 1.26%)</title><rect x="1.7776%" y="213" width="1.2585%" height="15" fill="rgb(243,84,45)" fg:x="226" fg:w="160"/><text x="2.0705%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="3.0360%" y="213" width="0.4719%" height="15" fill="rgb(252,49,23)" fg:x="386" fg:w="60"/><text x="3.3290%" y="223.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.07%)</title><rect x="3.5079%" y="213" width="0.0708%" height="15" fill="rgb(215,19,7)" fg:x="446" fg:w="9"/><text x="3.8009%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="3.5787%" y="213" width="1.5573%" height="15" fill="rgb(238,81,41)" fg:x="455" fg:w="198"/><text x="3.8717%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="5.1361%" y="213" width="0.4719%" height="15" fill="rgb(210,199,37)" fg:x="653" fg:w="60"/><text x="5.4290%" y="223.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (17 instructions, 0.13%)</title><rect x="5.6080%" y="213" width="0.1337%" height="15" fill="rgb(244,192,49)" fg:x="713" fg:w="17"/><text x="5.9010%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="5.7417%" y="213" width="1.5573%" height="15" fill="rgb(226,211,11)" fg:x="730" fg:w="198"/><text x="6.0347%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="7.2990%" y="213" width="0.4719%" height="15" fill="rgb(236,162,54)" fg:x="928" fg:w="60"/><text x="7.5920%" y="223.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.07%)</title><rect x="7.7710%" y="213" width="0.0708%" height="15" fill="rgb(220,229,9)" fg:x="988" fg:w="9"/><text x="8.0639%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="7.8417%" y="213" width="0.4719%" height="15" fill="rgb(250,87,22)" fg:x="997" fg:w="60"/><text x="8.1347%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="8.3137%" y="213" width="0.4719%" height="15" fill="rgb(239,43,17)" fg:x="1057" fg:w="60"/><text x="8.6066%" y="223.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.07%)</title><rect x="8.7856%" y="213" width="0.0708%" height="15" fill="rgb(231,177,25)" fg:x="1117" fg:w="9"/><text x="9.0786%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="8.8564%" y="213" width="0.4719%" height="15" fill="rgb(219,179,1)" fg:x="1126" fg:w="60"/><text x="9.1493%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="9.3283%" y="213" width="0.4719%" height="15" fill="rgb(238,219,53)" fg:x="1186" fg:w="60"/><text x="9.6213%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="9.8002%" y="213" width="0.3618%" height="15" fill="rgb(232,167,36)" fg:x="1246" fg:w="46"/><text x="10.0932%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="10.1620%" y="213" width="0.4719%" height="15" fill="rgb(244,19,51)" fg:x="1292" fg:w="60"/><text x="10.4550%" y="223.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.07%)</title><rect x="10.6339%" y="213" width="0.0708%" height="15" fill="rgb(224,6,22)" fg:x="1352" fg:w="9"/><text x="10.9269%" y="223.50"></text></g><g><title>parse_idl_header (1,638 instructions, 12.88%)</title><rect x="0.3225%" y="229" width="12.8834%" height="15" fill="rgb(224,145,5)" fg:x="41" fg:w="1638"/><text x="0.6154%" y="239.50">parse_idl_header</text></g><g><title>memset (4 instructions, 0.03%)</title><rect x="13.2059%" y="213" width="0.0315%" height="15" fill="rgb(234,130,49)" fg:x="1679" fg:w="4"/><text x="13.4989%" y="223.50"></text></g><g><title>idl_sub_buf_init (8 instructions, 0.06%)</title><rect x="13.2059%" y="229" width="0.0629%" height="15" fill="rgb(254,6,2)" fg:x="1679" fg:w="8"/><text x="13.4989%" y="239.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="13.2688%" y="229" width="0.3618%" height="15" fill="rgb(208,96,46)" fg:x="1687" fg:w="46"/><text x="13.5618%" y="239.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="13.6306%" y="229" width="0.4719%" height="15" fill="rgb(239,3,39)" fg:x="1733" fg:w="60"/><text x="13.9236%" y="239.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="14.1026%" y="213" width="0.4719%" height="15" fill="rgb(233,210,1)" fg:x="1793" fg:w="60"/><text x="14.3955%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="14.5745%" y="213" width="0.3618%" height="15" fill="rgb(244,137,37)" fg:x="1853" fg:w="46"/><text x="14.8675%" y="223.50"></text></g><g><title>alloc_size&lt;6&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="14.9363%" y="213" width="0.1180%" height="15" fill="rgb(240,136,2)" fg:x="1899" fg:w="15"/><text x="15.2293%" y="223.50"></text></g><g><title>leb128_decode (160 instructions, 1.26%)</title><rect x="15.0543%" y="197" width="1.2585%" height="15" fill="rgb(239,18,37)" fg:x="1914" fg:w="160"/><text x="15.3472%" y="207.50"></text></g><g><title>find_field (187 instructions, 1.47%)</title><rect x="15.0543%" y="213" width="1.4708%" height="15" fill="rgb(218,185,22)" fg:x="1914" fg:w="187"/><text x="15.3472%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="16.5251%" y="213" width="0.4719%" height="15" fill="rgb(225,218,4)" fg:x="2101" fg:w="60"/><text x="16.8181%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="16.9970%" y="197" width="0.3618%" height="15" fill="rgb(230,182,32)" fg:x="2161" fg:w="46"/><text x="17.2900%" y="207.50"></text></g><g><title>utf8_validate (219 instructions, 1.72%)</title><rect x="17.3588%" y="197" width="1.7225%" height="15" fill="rgb(242,56,43)" fg:x="2207" fg:w="219"/><text x="17.6518%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.26%)</title><rect x="19.0813%" y="181" width="0.2596%" height="15" fill="rgb(233,99,24)" fg:x="2426" fg:w="33"/><text x="19.3743%" y="191.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h608260036a03e2ed (40 instructions, 0.31%)</title><rect x="19.0813%" y="197" width="0.3146%" height="15" fill="rgb(234,209,42)" fg:x="2426" fg:w="40"/><text x="19.3743%" y="207.50"></text></g><g><title>memcpy (161 instructions, 1.27%)</title><rect x="19.3959%" y="197" width="1.2663%" height="15" fill="rgb(227,7,12)" fg:x="2466" fg:w="161"/><text x="19.6889%" y="207.50"></text></g><g><title>@deserialize_go&lt;t&gt; (508 instructions, 4.00%)</title><rect x="16.9970%" y="213" width="3.9956%" height="15" fill="rgb(245,203,43)" fg:x="2161" fg:w="508"/><text x="17.2900%" y="223.50">@de..</text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="20.9926%" y="197" width="1.5573%" height="15" fill="rgb(238,205,33)" fg:x="2669" fg:w="198"/><text x="21.2856%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.77%)</title><rect x="20.9926%" y="213" width="1.7697%" height="15" fill="rgb(231,56,7)" fg:x="2669" fg:w="225"/><text x="21.2856%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="22.7623%" y="213" width="0.4719%" height="15" fill="rgb(244,186,29)" fg:x="2894" fg:w="60"/><text x="23.0553%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="23.2342%" y="197" width="0.3618%" height="15" fill="rgb(234,111,31)" fg:x="2954" fg:w="46"/><text x="23.5272%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.26%)</title><rect x="23.5960%" y="197" width="0.2596%" height="15" fill="rgb(241,149,10)" fg:x="3000" fg:w="33"/><text x="23.8890%" y="207.50"></text></g><g><title>memcpy (83 instructions, 0.65%)</title><rect x="23.8556%" y="197" width="0.6528%" height="15" fill="rgb(249,206,44)" fg:x="3033" fg:w="83"/><text x="24.1486%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (237 instructions, 1.86%)</title><rect x="23.2342%" y="213" width="1.8641%" height="15" fill="rgb(251,153,30)" fg:x="2954" fg:w="237"/><text x="23.5272%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.56%)</title><rect x="25.0983%" y="197" width="1.5573%" height="15" fill="rgb(239,152,38)" fg:x="3191" fg:w="198"/><text x="25.3913%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.77%)</title><rect x="25.0983%" y="213" width="1.7697%" height="15" fill="rgb(249,139,47)" fg:x="3191" fg:w="225"/><text x="25.3913%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="26.8680%" y="213" width="0.4719%" height="15" fill="rgb(244,64,35)" fg:x="3416" fg:w="60"/><text x="27.1610%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="27.3399%" y="213" width="0.4719%" height="15" fill="rgb(216,46,15)" fg:x="3476" fg:w="60"/><text x="27.6329%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.47%)</title><rect x="27.8119%" y="213" width="0.4719%" height="15" fill="rgb(250,74,19)" fg:x="3536" fg:w="60"/><text x="28.1048%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.36%)</title><rect x="28.2838%" y="213" width="0.3618%" height="15" fill="rgb(249,42,33)" fg:x="3596" fg:w="46"/><text x="28.5768%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.26%)</title><rect x="28.6456%" y="213" width="0.2596%" height="15" fill="rgb(242,149,17)" fg:x="3642" fg:w="33"/><text x="28.9386%" y="223.50"></text></g><g><title>memcpy (302 instructions, 2.38%)</title><rect x="28.9051%" y="213" width="2.3753%" height="15" fill="rgb(244,29,21)" fg:x="3675" fg:w="302"/><text x="29.1981%" y="223.50">m..</text></g><g><title>skip_fields (4 instructions, 0.03%)</title><rect x="31.2805%" y="213" width="0.0315%" height="15" fill="rgb(220,130,37)" fg:x="3977" fg:w="4"/><text x="31.5734%" y="223.50"></text></g><g><title>@deserialize_go&lt;r(canister_id:P,message:B,method:t)&gt; (2,521 instructions, 19.83%)</title><rect x="14.1026%" y="229" width="19.8285%" height="15" fill="rgb(211,67,2)" fg:x="1793" fg:w="2521"/><text x="14.3955%" y="239.50">@deserialize_go&lt;r(canister..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="33.9311%" y="229" width="0.1180%" height="15" fill="rgb(235,68,52)" fg:x="4314" fg:w="15"/><text x="34.2241%" y="239.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.26%)</title><rect x="34.0491%" y="213" width="0.2596%" height="15" fill="rgb(246,142,3)" fg:x="4329" fg:w="33"/><text x="34.3420%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="34.3086%" y="213" width="0.1180%" height="15" fill="rgb(241,25,7)" fg:x="4362" fg:w="15"/><text x="34.6016%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="34.4266%" y="213" width="0.1258%" height="15" fill="rgb(242,119,39)" fg:x="4377" fg:w="16"/><text x="34.7196%" y="223.50"></text></g><g><title>compute_crc32 (746 instructions, 5.87%)</title><rect x="34.5525%" y="181" width="5.8675%" height="15" fill="rgb(241,98,45)" fg:x="4393" fg:w="746"/><text x="34.8454%" y="191.50">comput..</text></g><g><title>box_i32 (23 instructions, 0.18%)</title><rect x="40.4200%" y="181" width="0.1809%" height="15" fill="rgb(254,28,30)" fg:x="5139" fg:w="23"/><text x="40.7130%" y="191.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="40.6009%" y="181" width="0.1180%" height="15" fill="rgb(241,142,54)" fg:x="5162" fg:w="15"/><text x="40.8939%" y="191.50"></text></g><g><title>box_i32 (23 instructions, 0.18%)</title><rect x="40.7189%" y="181" width="0.1809%" height="15" fill="rgb(222,85,15)" fg:x="5177" fg:w="23"/><text x="41.0119%" y="191.50"></text></g><g><title>account_key (831 instructions, 6.54%)</title><rect x="34.5525%" y="197" width="6.5361%" height="15" fill="rgb(210,85,47)" fg:x="4393" fg:w="831"/><text x="34.8454%" y="207.50">account..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="41.0886%" y="165" width="0.1180%" height="15" fill="rgb(224,206,25)" fg:x="5224" fg:w="15"/><text x="41.3815%" y="175.50"></text></g><g><title>equalKey (26 instructions, 0.20%)</title><rect x="41.0886%" y="181" width="0.2045%" height="15" fill="rgb(243,201,19)" fg:x="5224" fg:w="26"/><text x="41.3815%" y="191.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="41.2931%" y="181" width="0.1180%" height="15" fill="rgb(236,59,4)" fg:x="5250" fg:w="15"/><text x="41.5860%" y="191.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="41.4110%" y="165" width="0.1258%" height="15" fill="rgb(254,179,45)" fg:x="5265" fg:w="16"/><text x="41.7040%" y="175.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="41.5369%" y="165" width="0.1416%" height="15" fill="rgb(226,14,10)" fg:x="5281" fg:w="18"/><text x="41.8299%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="41.6785%" y="149" width="0.1258%" height="15" fill="rgb(244,27,41)" fg:x="5299" fg:w="16"/><text x="41.9714%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="41.8043%" y="149" width="0.1258%" height="15" fill="rgb(235,35,32)" fg:x="5315" fg:w="16"/><text x="42.0973%" y="159.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.44%)</title><rect x="41.6785%" y="165" width="0.4405%" height="15" fill="rgb(218,68,31)" fg:x="5299" fg:w="56"/><text x="41.9714%" y="175.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="42.1189%" y="165" width="0.1416%" height="15" fill="rgb(207,120,37)" fg:x="5355" fg:w="18"/><text x="42.4119%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.2605%" y="149" width="0.1258%" height="15" fill="rgb(227,98,0)" fg:x="5373" fg:w="16"/><text x="42.5535%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.3863%" y="149" width="0.1258%" height="15" fill="rgb(207,7,3)" fg:x="5389" fg:w="16"/><text x="42.6793%" y="159.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.44%)</title><rect x="42.2605%" y="165" width="0.4405%" height="15" fill="rgb(206,98,19)" fg:x="5373" fg:w="56"/><text x="42.5535%" y="175.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="42.7010%" y="165" width="0.1416%" height="15" fill="rgb(217,5,26)" fg:x="5429" fg:w="18"/><text x="42.9939%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.8425%" y="149" width="0.1258%" height="15" fill="rgb(235,190,38)" fg:x="5447" fg:w="16"/><text x="43.1355%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="42.9684%" y="149" width="0.1258%" height="15" fill="rgb(247,86,24)" fg:x="5463" fg:w="16"/><text x="43.2614%" y="159.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="42.8425%" y="165" width="0.4483%" height="15" fill="rgb(205,101,16)" fg:x="5447" fg:w="57"/><text x="43.1355%" y="175.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="43.2909%" y="165" width="0.1416%" height="15" fill="rgb(246,168,33)" fg:x="5504" fg:w="18"/><text x="43.5838%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="43.4324%" y="149" width="0.1258%" height="15" fill="rgb(231,114,1)" fg:x="5522" fg:w="16"/><text x="43.7254%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="43.5583%" y="149" width="0.1258%" height="15" fill="rgb(207,184,53)" fg:x="5538" fg:w="16"/><text x="43.8513%" y="159.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="43.4324%" y="165" width="0.4483%" height="15" fill="rgb(224,95,51)" fg:x="5522" fg:w="57"/><text x="43.7254%" y="175.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="43.8808%" y="165" width="0.1416%" height="15" fill="rgb(212,188,45)" fg:x="5579" fg:w="18"/><text x="44.1737%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="44.0223%" y="149" width="0.1258%" height="15" fill="rgb(223,154,38)" fg:x="5597" fg:w="16"/><text x="44.3153%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="44.1482%" y="149" width="0.1258%" height="15" fill="rgb(251,22,52)" fg:x="5613" fg:w="16"/><text x="44.4412%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="44.2740%" y="149" width="0.1258%" height="15" fill="rgb(229,209,22)" fg:x="5629" fg:w="16"/><text x="44.5670%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="44.3999%" y="149" width="0.1258%" height="15" fill="rgb(234,138,34)" fg:x="5645" fg:w="16"/><text x="44.6928%" y="159.50"></text></g><g><title>Blob.compare_eq (679 instructions, 5.34%)</title><rect x="44.5257%" y="133" width="5.3406%" height="15" fill="rgb(212,95,11)" fg:x="5661" fg:w="679"/><text x="44.8187%" y="143.50">Blob...</text></g><g><title>equal.1 (682 instructions, 5.36%)</title><rect x="44.5257%" y="149" width="5.3642%" height="15" fill="rgb(240,179,47)" fg:x="5661" fg:w="682"/><text x="44.8187%" y="159.50">equal..</text></g><g><title>anon-func-192.5 (781 instructions, 6.14%)</title><rect x="44.0223%" y="165" width="6.1428%" height="15" fill="rgb(240,163,11)" fg:x="5597" fg:w="781"/><text x="44.3153%" y="175.50">anon-f..</text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="50.1652%" y="165" width="0.1416%" height="15" fill="rgb(236,37,12)" fg:x="6378" fg:w="18"/><text x="50.4581%" y="175.50"></text></g><g><title>rec.2 (1,311 instructions, 10.31%)</title><rect x="41.4110%" y="181" width="10.3115%" height="15" fill="rgb(232,164,16)" fg:x="5265" fg:w="1311"/><text x="41.7040%" y="191.50">rec.2</text></g><g><title>get.2 (1,374 instructions, 10.81%)</title><rect x="41.0886%" y="197" width="10.8070%" height="15" fill="rgb(244,205,15)" fg:x="5224" fg:w="1374"/><text x="41.3815%" y="207.50">get.2</text></g><g><title>account_get (2,211 instructions, 17.39%)</title><rect x="34.5525%" y="213" width="17.3903%" height="15" fill="rgb(223,117,47)" fg:x="4393" fg:w="2211"/><text x="34.8454%" y="223.50">account_get</text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="51.9427%" y="213" width="0.1416%" height="15" fill="rgb(244,107,35)" fg:x="6604" fg:w="18"/><text x="52.2357%" y="223.50"></text></g><g><title>obj_idx&lt;2&gt; (16 instructions, 0.13%)</title><rect x="52.0843%" y="213" width="0.1258%" height="15" fill="rgb(205,140,8)" fg:x="6622" fg:w="16"/><text x="52.3773%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="52.2102%" y="213" width="0.1258%" height="15" fill="rgb(228,84,46)" fg:x="6638" fg:w="16"/><text x="52.5031%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="52.3360%" y="213" width="0.1258%" height="15" fill="rgb(254,188,9)" fg:x="6654" fg:w="16"/><text x="52.6290%" y="223.50"></text></g><g><title>B_lt (10 instructions, 0.08%)</title><rect x="52.4619%" y="213" width="0.0787%" height="15" fill="rgb(206,112,54)" fg:x="6670" fg:w="10"/><text x="52.7548%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="52.5405%" y="213" width="0.1258%" height="15" fill="rgb(216,84,49)" fg:x="6680" fg:w="16"/><text x="52.8335%" y="223.50"></text></g><g><title>B_sub (30 instructions, 0.24%)</title><rect x="52.6664%" y="213" width="0.2360%" height="15" fill="rgb(214,194,35)" fg:x="6696" fg:w="30"/><text x="52.9593%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="52.9023%" y="213" width="0.1180%" height="15" fill="rgb(249,28,3)" fg:x="6726" fg:w="15"/><text x="53.1953%" y="223.50"></text></g><g><title>compute_crc32 (746 instructions, 5.87%)</title><rect x="53.0203%" y="181" width="5.8675%" height="15" fill="rgb(222,56,52)" fg:x="6741" fg:w="746"/><text x="53.3133%" y="191.50">comput..</text></g><g><title>box_i32 (23 instructions, 0.18%)</title><rect x="58.8878%" y="181" width="0.1809%" height="15" fill="rgb(245,217,50)" fg:x="7487" fg:w="23"/><text x="59.1808%" y="191.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="59.0687%" y="181" width="0.1180%" height="15" fill="rgb(213,201,24)" fg:x="7510" fg:w="15"/><text x="59.3617%" y="191.50"></text></g><g><title>box_i32 (23 instructions, 0.18%)</title><rect x="59.1867%" y="181" width="0.1809%" height="15" fill="rgb(248,116,28)" fg:x="7525" fg:w="23"/><text x="59.4797%" y="191.50"></text></g><g><title>account_key (831 instructions, 6.54%)</title><rect x="53.0203%" y="197" width="6.5361%" height="15" fill="rgb(219,72,43)" fg:x="6741" fg:w="831"/><text x="53.3133%" y="207.50">account..</text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="59.5564%" y="181" width="0.1416%" height="15" fill="rgb(209,138,14)" fg:x="7572" fg:w="18"/><text x="59.8494%" y="191.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="59.6980%" y="181" width="0.1180%" height="15" fill="rgb(222,18,33)" fg:x="7590" fg:w="15"/><text x="59.9909%" y="191.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="59.8160%" y="181" width="0.1180%" height="15" fill="rgb(213,199,7)" fg:x="7605" fg:w="15"/><text x="60.1089%" y="191.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="59.9339%" y="165" width="0.1180%" height="15" fill="rgb(250,110,10)" fg:x="7620" fg:w="15"/><text x="60.2269%" y="175.50"></text></g><g><title>equalKey (26 instructions, 0.20%)</title><rect x="59.9339%" y="181" width="0.2045%" height="15" fill="rgb(248,123,6)" fg:x="7620" fg:w="26"/><text x="60.2269%" y="191.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="60.1384%" y="165" width="0.1258%" height="15" fill="rgb(206,91,31)" fg:x="7646" fg:w="16"/><text x="60.4314%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="60.2643%" y="149" width="0.1180%" height="15" fill="rgb(211,154,13)" fg:x="7662" fg:w="15"/><text x="60.5572%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="60.3823%" y="149" width="0.1180%" height="15" fill="rgb(225,148,7)" fg:x="7677" fg:w="15"/><text x="60.6752%" y="159.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="60.5002%" y="149" width="0.1180%" height="15" fill="rgb(220,160,43)" fg:x="7692" fg:w="15"/><text x="60.7932%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="60.6182%" y="133" width="0.1416%" height="15" fill="rgb(213,52,39)" fg:x="7707" fg:w="18"/><text x="60.9112%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="60.7598%" y="117" width="0.1258%" height="15" fill="rgb(243,137,7)" fg:x="7725" fg:w="16"/><text x="61.0528%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="60.8856%" y="117" width="0.1258%" height="15" fill="rgb(230,79,13)" fg:x="7741" fg:w="16"/><text x="61.1786%" y="127.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.44%)</title><rect x="60.7598%" y="133" width="0.4405%" height="15" fill="rgb(247,105,23)" fg:x="7725" fg:w="56"/><text x="61.0528%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="61.2003%" y="117" width="0.1416%" height="15" fill="rgb(223,179,41)" fg:x="7781" fg:w="18"/><text x="61.4932%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="61.3418%" y="101" width="0.1258%" height="15" fill="rgb(218,9,34)" fg:x="7799" fg:w="16"/><text x="61.6348%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="61.4677%" y="101" width="0.1258%" height="15" fill="rgb(222,106,8)" fg:x="7815" fg:w="16"/><text x="61.7606%" y="111.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.44%)</title><rect x="61.3418%" y="117" width="0.4405%" height="15" fill="rgb(211,220,0)" fg:x="7799" fg:w="56"/><text x="61.6348%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="61.7823%" y="101" width="0.1416%" height="15" fill="rgb(229,52,16)" fg:x="7855" fg:w="18"/><text x="62.0753%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="61.9239%" y="85" width="0.1258%" height="15" fill="rgb(212,155,18)" fg:x="7873" fg:w="16"/><text x="62.2168%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="62.0497%" y="85" width="0.1258%" height="15" fill="rgb(242,21,14)" fg:x="7889" fg:w="16"/><text x="62.3427%" y="95.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="61.9239%" y="101" width="0.4483%" height="15" fill="rgb(222,19,48)" fg:x="7873" fg:w="57"/><text x="62.2168%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="62.3722%" y="85" width="0.1416%" height="15" fill="rgb(232,45,27)" fg:x="7930" fg:w="18"/><text x="62.6652%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="62.5138%" y="69" width="0.1258%" height="15" fill="rgb(249,103,42)" fg:x="7948" fg:w="16"/><text x="62.8067%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="62.6396%" y="69" width="0.1258%" height="15" fill="rgb(246,81,33)" fg:x="7964" fg:w="16"/><text x="62.9326%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.45%)</title><rect x="62.5138%" y="85" width="0.4483%" height="15" fill="rgb(252,33,42)" fg:x="7948" fg:w="57"/><text x="62.8067%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="62.9621%" y="69" width="0.1416%" height="15" fill="rgb(209,212,41)" fg:x="8005" fg:w="18"/><text x="63.2551%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="63.1037%" y="53" width="0.1258%" height="15" fill="rgb(207,154,6)" fg:x="8023" fg:w="16"/><text x="63.3966%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.13%)</title><rect x="63.2295%" y="53" width="0.1258%" height="15" fill="rgb(223,64,47)" fg:x="8039" fg:w="16"/><text x="63.5225%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="63.3554%" y="53" width="0.1258%" height="15" fill="rgb(211,161,38)" fg:x="8055" fg:w="16"/><text x="63.6483%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.13%)</title><rect x="63.4812%" y="53" width="0.1258%" height="15" fill="rgb(219,138,40)" fg:x="8071" fg:w="16"/><text x="63.7742%" y="63.50"></text></g><g><title>Blob.compare_eq (679 instructions, 5.34%)</title><rect x="63.6070%" y="37" width="5.3406%" height="15" fill="rgb(241,228,46)" fg:x="8087" fg:w="679"/><text x="63.9000%" y="47.50">Blob...</text></g><g><title>equal.1 (682 instructions, 5.36%)</title><rect x="63.6070%" y="53" width="5.3642%" height="15" fill="rgb(223,209,38)" fg:x="8087" fg:w="682"/><text x="63.9000%" y="63.50">equal..</text></g><g><title>anon-func-192.5 (781 instructions, 6.14%)</title><rect x="63.1037%" y="69" width="6.1428%" height="15" fill="rgb(236,164,45)" fg:x="8023" fg:w="781"/><text x="63.3966%" y="79.50">anon-f..</text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="69.2465%" y="69" width="0.1416%" height="15" fill="rgb(231,15,5)" fg:x="8804" fg:w="18"/><text x="69.5395%" y="79.50"></text></g><g><title>del (858 instructions, 6.75%)</title><rect x="62.9621%" y="85" width="6.7485%" height="15" fill="rgb(252,35,15)" fg:x="8005" fg:w="858"/><text x="63.2551%" y="95.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="69.7106%" y="85" width="0.1809%" height="15" fill="rgb(248,181,18)" fg:x="8863" fg:w="23"/><text x="70.0035%" y="95.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="69.8915%" y="85" width="0.1416%" height="15" fill="rgb(233,39,42)" fg:x="8886" fg:w="18"/><text x="70.1844%" y="95.50"></text></g><g><title>del (1,036 instructions, 8.15%)</title><rect x="62.3722%" y="101" width="8.1485%" height="15" fill="rgb(238,110,33)" fg:x="7930" fg:w="1036"/><text x="62.6652%" y="111.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="70.5207%" y="101" width="0.1809%" height="15" fill="rgb(233,195,10)" fg:x="8966" fg:w="23"/><text x="70.8137%" y="111.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="70.7016%" y="101" width="0.1416%" height="15" fill="rgb(254,105,3)" fg:x="8989" fg:w="18"/><text x="70.9946%" y="111.50"></text></g><g><title>del (1,214 instructions, 9.55%)</title><rect x="61.7823%" y="117" width="9.5485%" height="15" fill="rgb(221,225,9)" fg:x="7855" fg:w="1214"/><text x="62.0753%" y="127.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="71.3308%" y="117" width="0.1809%" height="15" fill="rgb(224,227,45)" fg:x="9069" fg:w="23"/><text x="71.6238%" y="127.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="71.5117%" y="117" width="0.1416%" height="15" fill="rgb(229,198,43)" fg:x="9092" fg:w="18"/><text x="71.8047%" y="127.50"></text></g><g><title>del (1,391 instructions, 10.94%)</title><rect x="61.2003%" y="133" width="10.9407%" height="15" fill="rgb(206,209,35)" fg:x="7781" fg:w="1391"/><text x="61.4932%" y="143.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="72.1409%" y="133" width="0.1809%" height="15" fill="rgb(245,195,53)" fg:x="9172" fg:w="23"/><text x="72.4339%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="72.3218%" y="133" width="0.1416%" height="15" fill="rgb(240,92,26)" fg:x="9195" fg:w="18"/><text x="72.6148%" y="143.50"></text></g><g><title>del (1,568 instructions, 12.33%)</title><rect x="60.6182%" y="149" width="12.3329%" height="15" fill="rgb(207,40,23)" fg:x="7707" fg:w="1568"/><text x="60.9112%" y="159.50">del</text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="72.9511%" y="149" width="0.1416%" height="15" fill="rgb(223,111,35)" fg:x="9275" fg:w="18"/><text x="73.2440%" y="159.50"></text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="73.0927%" y="149" width="0.1809%" height="15" fill="rgb(229,147,28)" fg:x="9293" fg:w="23"/><text x="73.3856%" y="159.50"></text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="73.2736%" y="149" width="0.1809%" height="15" fill="rgb(211,29,28)" fg:x="9316" fg:w="23"/><text x="73.5665%" y="159.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="73.4545%" y="149" width="0.1416%" height="15" fill="rgb(228,72,33)" fg:x="9339" fg:w="18"/><text x="73.7474%" y="159.50"></text></g><g><title>replace (1,754 instructions, 13.80%)</title><rect x="60.2643%" y="165" width="13.7958%" height="15" fill="rgb(205,214,31)" fg:x="7662" fg:w="1754"/><text x="60.5572%" y="175.50">replace</text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="74.0601%" y="133" width="0.1416%" height="15" fill="rgb(224,111,15)" fg:x="9416" fg:w="18"/><text x="74.3531%" y="143.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="74.2017%" y="133" width="0.0787%" height="15" fill="rgb(253,21,26)" fg:x="9434" fg:w="10"/><text x="74.4946%" y="143.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="74.2803%" y="133" width="0.1888%" height="15" fill="rgb(245,139,43)" fg:x="9444" fg:w="24"/><text x="74.5733%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="74.4691%" y="133" width="0.1416%" height="15" fill="rgb(252,170,7)" fg:x="9468" fg:w="18"/><text x="74.7621%" y="143.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="74.6107%" y="133" width="0.0787%" height="15" fill="rgb(231,118,14)" fg:x="9486" fg:w="10"/><text x="74.9036%" y="143.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="74.6893%" y="133" width="0.1888%" height="15" fill="rgb(238,83,0)" fg:x="9496" fg:w="24"/><text x="74.9823%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="74.8781%" y="133" width="0.1416%" height="15" fill="rgb(221,39,39)" fg:x="9520" fg:w="18"/><text x="75.1711%" y="143.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="75.0197%" y="133" width="0.0787%" height="15" fill="rgb(222,119,46)" fg:x="9538" fg:w="10"/><text x="75.3126%" y="143.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="75.0983%" y="133" width="0.1888%" height="15" fill="rgb(222,165,49)" fg:x="9548" fg:w="24"/><text x="75.3913%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="75.2871%" y="133" width="0.1416%" height="15" fill="rgb(219,113,52)" fg:x="9572" fg:w="18"/><text x="75.5801%" y="143.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="75.4287%" y="133" width="0.0787%" height="15" fill="rgb(214,7,15)" fg:x="9590" fg:w="10"/><text x="75.7216%" y="143.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="75.5073%" y="133" width="0.1888%" height="15" fill="rgb(235,32,4)" fg:x="9600" fg:w="24"/><text x="75.8003%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="75.6961%" y="133" width="0.1416%" height="15" fill="rgb(238,90,54)" fg:x="9624" fg:w="18"/><text x="75.9891%" y="143.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="75.8377%" y="133" width="0.0787%" height="15" fill="rgb(213,208,19)" fg:x="9642" fg:w="10"/><text x="76.1306%" y="143.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="75.9163%" y="133" width="0.1888%" height="15" fill="rgb(233,156,4)" fg:x="9652" fg:w="24"/><text x="76.2093%" y="143.50"></text></g><g><title>opt_inject (4 instructions, 0.03%)</title><rect x="76.1051%" y="133" width="0.0315%" height="15" fill="rgb(207,194,5)" fg:x="9676" fg:w="4"/><text x="76.3980%" y="143.50"></text></g><g><title>opt_project (4 instructions, 0.03%)</title><rect x="76.1365%" y="133" width="0.0315%" height="15" fill="rgb(206,111,30)" fg:x="9680" fg:w="4"/><text x="76.4295%" y="143.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.12%)</title><rect x="76.1680%" y="133" width="0.1180%" height="15" fill="rgb(243,70,54)" fg:x="9684" fg:w="15"/><text x="76.4610%" y="143.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="76.2860%" y="133" width="0.1180%" height="15" fill="rgb(242,28,8)" fg:x="9699" fg:w="15"/><text x="76.5790%" y="143.50"></text></g><g><title>rec (498 instructions, 3.92%)</title><rect x="74.0601%" y="149" width="3.9169%" height="15" fill="rgb(219,106,18)" fg:x="9416" fg:w="498"/><text x="74.3531%" y="159.50">rec</text></g><g><title>leaf (502 instructions, 3.95%)</title><rect x="74.0601%" y="165" width="3.9484%" height="15" fill="rgb(244,222,10)" fg:x="9416" fg:w="502"/><text x="74.3531%" y="175.50">leaf</text></g><g><title>recursiveReplace (2,325 instructions, 18.29%)</title><rect x="60.1384%" y="181" width="18.2869%" height="15" fill="rgb(236,179,52)" fg:x="7646" fg:w="2325"/><text x="60.4314%" y="191.50">recursiveReplace</text></g><g><title>put.1 (2,465 instructions, 19.39%)</title><rect x="59.5564%" y="197" width="19.3881%" height="15" fill="rgb(213,23,39)" fg:x="7572" fg:w="2465"/><text x="59.8494%" y="207.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="78.9445%" y="197" width="0.1809%" height="15" fill="rgb(238,48,10)" fg:x="10037" fg:w="23"/><text x="79.2374%" y="207.50"></text></g><g><title>account_put (3,332 instructions, 26.21%)</title><rect x="53.0203%" y="213" width="26.2073%" height="15" fill="rgb(251,196,23)" fg:x="6741" fg:w="3332"/><text x="53.3133%" y="223.50">account_put</text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="79.2276%" y="213" width="0.1180%" height="15" fill="rgb(250,152,24)" fg:x="10073" fg:w="15"/><text x="79.5206%" y="223.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="79.3456%" y="197" width="0.1888%" height="15" fill="rgb(209,150,17)" fg:x="10088" fg:w="24"/><text x="79.6386%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.29%)</title><rect x="79.5344%" y="149" width="0.2910%" height="15" fill="rgb(234,202,34)" fg:x="10112" fg:w="37"/><text x="79.8273%" y="159.50"></text></g><g><title>memset (99 instructions, 0.78%)</title><rect x="79.8254%" y="149" width="0.7787%" height="15" fill="rgb(253,148,53)" fg:x="10149" fg:w="99"/><text x="80.1184%" y="159.50"></text></g><g><title>mp_calloc (161 instructions, 1.27%)</title><rect x="79.5344%" y="165" width="1.2663%" height="15" fill="rgb(218,129,16)" fg:x="10112" fg:w="161"/><text x="79.8273%" y="175.50"></text></g><g><title>mp_init (176 instructions, 1.38%)</title><rect x="79.5344%" y="181" width="1.3843%" height="15" fill="rgb(216,85,19)" fg:x="10112" fg:w="176"/><text x="79.8273%" y="191.50"></text></g><g><title>mp_set_u64 (113 instructions, 0.89%)</title><rect x="80.9187%" y="181" width="0.8888%" height="15" fill="rgb(235,228,7)" fg:x="10288" fg:w="113"/><text x="81.2116%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.24%)</title><rect x="81.8075%" y="181" width="0.2360%" height="15" fill="rgb(245,175,0)" fg:x="10401" fg:w="30"/><text x="82.1004%" y="191.50"></text></g><g><title>bigint_of_word64 (357 instructions, 2.81%)</title><rect x="79.5344%" y="197" width="2.8079%" height="15" fill="rgb(208,168,36)" fg:x="10112" fg:w="357"/><text x="79.8273%" y="207.50">bi..</text></g><g><title>alloc_size&lt;11&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="82.3423%" y="197" width="0.1180%" height="15" fill="rgb(246,171,24)" fg:x="10469" fg:w="15"/><text x="82.6353%" y="207.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.4603%" y="165" width="0.0708%" height="15" fill="rgb(215,142,24)" fg:x="10484" fg:w="9"/><text x="82.7532%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.5311%" y="165" width="0.0708%" height="15" fill="rgb(250,187,7)" fg:x="10493" fg:w="9"/><text x="82.8240%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.6019%" y="165" width="0.0708%" height="15" fill="rgb(228,66,33)" fg:x="10502" fg:w="9"/><text x="82.8948%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.6726%" y="165" width="0.0708%" height="15" fill="rgb(234,215,21)" fg:x="10511" fg:w="9"/><text x="82.9656%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.7434%" y="165" width="0.0708%" height="15" fill="rgb(222,191,20)" fg:x="10520" fg:w="9"/><text x="83.0364%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="82.8142%" y="165" width="0.1180%" height="15" fill="rgb(245,79,54)" fg:x="10529" fg:w="15"/><text x="83.1072%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.07%)</title><rect x="82.9322%" y="165" width="0.0708%" height="15" fill="rgb(240,10,37)" fg:x="10544" fg:w="9"/><text x="83.2252%" y="175.50"></text></g><g><title>proposal_key (296 instructions, 2.33%)</title><rect x="82.4603%" y="181" width="2.3281%" height="15" fill="rgb(214,192,32)" fg:x="10484" fg:w="296"/><text x="82.7532%" y="191.50">p..</text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="84.7884%" y="165" width="0.1416%" height="15" fill="rgb(209,36,54)" fg:x="10780" fg:w="18"/><text x="85.0814%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="84.9300%" y="165" width="0.1180%" height="15" fill="rgb(220,10,11)" fg:x="10798" fg:w="15"/><text x="85.2230%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="85.0480%" y="165" width="0.1180%" height="15" fill="rgb(221,106,17)" fg:x="10813" fg:w="15"/><text x="85.3409%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="85.1660%" y="149" width="0.1180%" height="15" fill="rgb(251,142,44)" fg:x="10828" fg:w="15"/><text x="85.4589%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.20%)</title><rect x="85.1660%" y="165" width="0.2045%" height="15" fill="rgb(238,13,15)" fg:x="10828" fg:w="26"/><text x="85.4589%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="85.3705%" y="133" width="0.1180%" height="15" fill="rgb(208,107,27)" fg:x="10854" fg:w="15"/><text x="85.6634%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.12%)</title><rect x="85.4884%" y="133" width="0.1180%" height="15" fill="rgb(205,136,37)" fg:x="10869" fg:w="15"/><text x="85.7814%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.12%)</title><rect x="85.6064%" y="133" width="0.1180%" height="15" fill="rgb(250,205,27)" fg:x="10884" fg:w="15"/><text x="85.8994%" y="143.50"></text></g><g><title>del (27 instructions, 0.21%)</title><rect x="85.7244%" y="133" width="0.2124%" height="15" fill="rgb(210,80,43)" fg:x="10899" fg:w="27"/><text x="86.0174%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="85.9368%" y="133" width="0.1416%" height="15" fill="rgb(247,160,36)" fg:x="10926" fg:w="18"/><text x="86.2297%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="86.0783%" y="133" width="0.1809%" height="15" fill="rgb(234,13,49)" fg:x="10944" fg:w="23"/><text x="86.3713%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="86.2592%" y="133" width="0.1809%" height="15" fill="rgb(234,122,0)" fg:x="10967" fg:w="23"/><text x="86.5522%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.14%)</title><rect x="86.4401%" y="133" width="0.1416%" height="15" fill="rgb(207,146,38)" fg:x="10990" fg:w="18"/><text x="86.7331%" y="143.50"></text></g><g><title>replace (213 instructions, 1.68%)</title><rect x="85.3705%" y="149" width="1.6753%" height="15" fill="rgb(207,177,25)" fg:x="10854" fg:w="213"/><text x="85.6634%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.14%)</title><rect x="87.0458%" y="117" width="0.1416%" height="15" fill="rgb(211,178,42)" fg:x="11067" fg:w="18"/><text x="87.3387%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.08%)</title><rect x="87.1874%" y="117" width="0.0787%" height="15" fill="rgb(230,69,54)" fg:x="11085" fg:w="10"/><text x="87.4803%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.19%)</title><rect x="87.2660%" y="117" width="0.1888%" height="15" fill="rgb(214,135,41)" fg:x="11095" fg:w="24"/><text x="87.5590%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.03%)</title><rect x="87.4548%" y="117" width="0.0315%" height="15" fill="rgb(237,67,25)" fg:x="11119" fg:w="4"/><text x="87.7477%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.03%)</title><rect x="87.4862%" y="117" width="0.0315%" height="15" fill="rgb(222,189,50)" fg:x="11123" fg:w="4"/><text x="87.7792%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.12%)</title><rect x="87.5177%" y="117" width="0.1180%" height="15" fill="rgb(245,148,34)" fg:x="11127" fg:w="15"/><text x="87.8107%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.12%)</title><rect x="87.6357%" y="117" width="0.1180%" height="15" fill="rgb(222,29,6)" fg:x="11142" fg:w="15"/><text x="87.9286%" y="127.50"></text></g><g><title>rec (174 instructions, 1.37%)</title><rect x="87.0458%" y="133" width="1.3686%" height="15" fill="rgb(221,189,43)" fg:x="11067" fg:w="174"/><text x="87.3387%" y="143.50"></text></g><g><title>leaf (178 instructions, 1.40%)</title><rect x="87.0458%" y="149" width="1.4000%" height="15" fill="rgb(207,36,27)" fg:x="11067" fg:w="178"/><text x="87.3387%" y="159.50"></text></g><g><title>recursiveReplace (421 instructions, 3.31%)</title><rect x="85.3705%" y="165" width="3.3113%" height="15" fill="rgb(217,90,24)" fg:x="10854" fg:w="421"/><text x="85.6634%" y="175.50">re..</text></g><g><title>put.1 (561 instructions, 4.41%)</title><rect x="84.7884%" y="181" width="4.4125%" height="15" fill="rgb(224,66,35)" fg:x="10780" fg:w="561"/><text x="85.0814%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.18%)</title><rect x="89.2009%" y="181" width="0.1809%" height="15" fill="rgb(221,13,50)" fg:x="11341" fg:w="23"/><text x="89.4938%" y="191.50"></text></g><g><title>proposal_put (893 instructions, 7.02%)</title><rect x="82.4603%" y="197" width="7.0238%" height="15" fill="rgb(236,68,49)" fg:x="10484" fg:w="893"/><text x="82.7532%" y="207.50">proposal..</text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.12%)</title><rect x="89.4840%" y="197" width="0.1180%" height="15" fill="rgb(229,146,28)" fg:x="11377" fg:w="15"/><text x="89.7770%" y="207.50"></text></g><g><title>anon-func-71.66 (1,370 instructions, 10.78%)</title><rect x="79.3456%" y="213" width="10.7755%" height="15" fill="rgb(225,31,38)" fg:x="10088" fg:w="1370"/><text x="79.6386%" y="223.50">anon-func-71...</text></g><g><title>@buffer_size&lt;N&gt; (21 instructions, 0.17%)</title><rect x="90.1211%" y="197" width="0.1652%" height="15" fill="rgb(250,208,3)" fg:x="11458" fg:w="21"/><text x="90.4141%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.26%)</title><rect x="90.2863%" y="197" width="0.2596%" height="15" fill="rgb(246,54,23)" fg:x="11479" fg:w="33"/><text x="90.5793%" y="207.50"></text></g><g><title>memcpy (76 instructions, 0.60%)</title><rect x="90.5459%" y="197" width="0.5978%" height="15" fill="rgb(243,76,11)" fg:x="11512" fg:w="76"/><text x="90.8388%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.26%)</title><rect x="91.1436%" y="197" width="0.2596%" height="15" fill="rgb(245,21,50)" fg:x="11588" fg:w="33"/><text x="91.4366%" y="207.50"></text></g><g><title>leb128_encode (9 instructions, 0.07%)</title><rect x="91.4032%" y="197" width="0.0708%" height="15" fill="rgb(228,9,43)" fg:x="11621" fg:w="9"/><text x="91.6961%" y="207.50"></text></g><g><title>leb128_encode (9 instructions, 0.07%)</title><rect x="91.4740%" y="181" width="0.0708%" height="15" fill="rgb(208,100,47)" fg:x="11630" fg:w="9"/><text x="91.7669%" y="191.50"></text></g><g><title>@serialize_go&lt;N&gt; (32 instructions, 0.25%)</title><rect x="91.4740%" y="197" width="0.2517%" height="15" fill="rgb(232,26,8)" fg:x="11630" fg:w="32"/><text x="91.7669%" y="207.50"></text></g><g><title>reply_with_data (44 instructions, 0.35%)</title><rect x="91.7257%" y="197" width="0.3461%" height="15" fill="rgb(216,166,38)" fg:x="11662" fg:w="44"/><text x="92.0186%" y="207.50"></text></g><g><title>$lambda.32 (351 instructions, 2.76%)</title><rect x="90.1211%" y="213" width="2.7607%" height="15" fill="rgb(251,202,51)" fg:x="11458" fg:w="351"/><text x="90.4141%" y="223.50">$..</text></g><g><title>$lambda.5 (7,595 instructions, 59.74%)</title><rect x="34.0491%" y="229" width="59.7373%" height="15" fill="rgb(254,216,34)" fg:x="4329" fg:w="7595"/><text x="34.3420%" y="239.50">$lambda.5</text></g><g><title>schedule_copying_gc (45 instructions, 0.35%)</title><rect x="93.7864%" y="229" width="0.3539%" height="15" fill="rgb(251,32,27)" fg:x="11924" fg:w="45"/><text x="94.0793%" y="239.50"></text></g><g><title>trans_state4 (13 instructions, 0.10%)</title><rect x="94.1403%" y="229" width="0.1022%" height="15" fill="rgb(208,127,28)" fg:x="11969" fg:w="13"/><text x="94.4333%" y="239.50"></text></g><g><title>all (12,714 instructions, 100%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(224,137,22)" fg:x="0" fg:w="12714"/><text x="0.2930%" y="271.50"></text></g><g><title>submit_proposal (12,714 instructions, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(254,70,32)" fg:x="0" fg:w="12714"/><text x="0.2930%" y="255.50">submit_proposal</text></g></svg></svg>