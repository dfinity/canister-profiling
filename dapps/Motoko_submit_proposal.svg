<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="310" onload="init(evt)" viewBox="0 0 1024 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.submit_proposal</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="293.00"> </text><svg id="frames" x="10" width="1004" total_samples="19077"><g><title>trans_state5 (10 instructions, 0.05%)</title><rect x="0.0000%" y="229" width="0.0524%" height="15" fill="rgb(221,76,26)" fg:x="0" fg:w="10"/><text x="0.2930%" y="239.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.29%)</title><rect x="0.0524%" y="229" width="0.2935%" height="15" fill="rgb(225,139,18)" fg:x="10" fg:w="56"/><text x="0.3454%" y="239.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="0.3460%" y="213" width="0.2621%" height="15" fill="rgb(230,137,11)" fg:x="66" fg:w="50"/><text x="0.6389%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.29%)</title><rect x="0.6081%" y="213" width="0.2935%" height="15" fill="rgb(212,28,1)" fg:x="116" fg:w="56"/><text x="0.9010%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="0.9016%" y="213" width="0.3355%" height="15" fill="rgb(248,164,17)" fg:x="172" fg:w="64"/><text x="1.1946%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="1.2371%" y="213" width="0.2621%" height="15" fill="rgb(222,171,42)" fg:x="236" fg:w="50"/><text x="1.5301%" y="223.50"></text></g><g><title>leb128_decode (173 instructions, 0.91%)</title><rect x="1.4992%" y="213" width="0.9069%" height="15" fill="rgb(243,84,45)" fg:x="286" fg:w="173"/><text x="1.7922%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="2.4060%" y="213" width="0.3355%" height="15" fill="rgb(252,49,23)" fg:x="459" fg:w="64"/><text x="2.6990%" y="223.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (12 instructions, 0.06%)</title><rect x="2.7415%" y="213" width="0.0629%" height="15" fill="rgb(215,19,7)" fg:x="523" fg:w="12"/><text x="3.0345%" y="223.50"></text></g><g><title>leb128_decode (214 instructions, 1.12%)</title><rect x="2.8044%" y="213" width="1.1218%" height="15" fill="rgb(238,81,41)" fg:x="535" fg:w="214"/><text x="3.0974%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="3.9262%" y="213" width="0.3355%" height="15" fill="rgb(210,199,37)" fg:x="749" fg:w="64"/><text x="4.2192%" y="223.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (22 instructions, 0.12%)</title><rect x="4.2617%" y="213" width="0.1153%" height="15" fill="rgb(244,192,49)" fg:x="813" fg:w="22"/><text x="4.5546%" y="223.50"></text></g><g><title>leb128_decode (214 instructions, 1.12%)</title><rect x="4.3770%" y="213" width="1.1218%" height="15" fill="rgb(226,211,11)" fg:x="835" fg:w="214"/><text x="4.6700%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="5.4988%" y="213" width="0.3355%" height="15" fill="rgb(236,162,54)" fg:x="1049" fg:w="64"/><text x="5.7917%" y="223.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (12 instructions, 0.06%)</title><rect x="5.8343%" y="213" width="0.0629%" height="15" fill="rgb(220,229,9)" fg:x="1113" fg:w="12"/><text x="6.1272%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="5.8972%" y="213" width="0.3355%" height="15" fill="rgb(250,87,22)" fg:x="1125" fg:w="64"/><text x="6.1901%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="6.2326%" y="213" width="0.3355%" height="15" fill="rgb(239,43,17)" fg:x="1189" fg:w="64"/><text x="6.5256%" y="223.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (12 instructions, 0.06%)</title><rect x="6.5681%" y="213" width="0.0629%" height="15" fill="rgb(231,177,25)" fg:x="1253" fg:w="12"/><text x="6.8611%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="6.6310%" y="213" width="0.3355%" height="15" fill="rgb(219,179,1)" fg:x="1265" fg:w="64"/><text x="6.9240%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="6.9665%" y="213" width="0.3355%" height="15" fill="rgb(238,219,53)" fg:x="1329" fg:w="64"/><text x="7.2595%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="7.3020%" y="213" width="0.2621%" height="15" fill="rgb(232,167,36)" fg:x="1393" fg:w="50"/><text x="7.5950%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="7.5641%" y="213" width="0.3355%" height="15" fill="rgb(244,19,51)" fg:x="1443" fg:w="64"/><text x="7.8571%" y="223.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (12 instructions, 0.06%)</title><rect x="7.8996%" y="213" width="0.0629%" height="15" fill="rgb(224,6,22)" fg:x="1507" fg:w="12"/><text x="8.1925%" y="223.50"></text></g><g><title>parse_idl_header (1,893 instructions, 9.92%)</title><rect x="0.3460%" y="229" width="9.9229%" height="15" fill="rgb(224,145,5)" fg:x="66" fg:w="1893"/><text x="0.6389%" y="239.50">parse_idl_he..</text></g><g><title>memset (6 instructions, 0.03%)</title><rect x="10.2689%" y="213" width="0.0315%" height="15" fill="rgb(234,130,49)" fg:x="1959" fg:w="6"/><text x="10.5619%" y="223.50"></text></g><g><title>idl_sub_buf_init (15 instructions, 0.08%)</title><rect x="10.2689%" y="229" width="0.0786%" height="15" fill="rgb(254,6,2)" fg:x="1959" fg:w="15"/><text x="10.5619%" y="239.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="10.3475%" y="229" width="0.2621%" height="15" fill="rgb(208,96,46)" fg:x="1974" fg:w="50"/><text x="10.6405%" y="239.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="10.6096%" y="229" width="0.3355%" height="15" fill="rgb(239,3,39)" fg:x="2024" fg:w="64"/><text x="10.9026%" y="239.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="10.9451%" y="213" width="0.3355%" height="15" fill="rgb(233,210,1)" fg:x="2088" fg:w="64"/><text x="11.2381%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="11.2806%" y="213" width="0.2621%" height="15" fill="rgb(244,137,37)" fg:x="2152" fg:w="50"/><text x="11.5736%" y="223.50"></text></g><g><title>alloc_size&lt;6&gt;_tag&lt;1&gt; (20 instructions, 0.10%)</title><rect x="11.5427%" y="213" width="0.1048%" height="15" fill="rgb(240,136,2)" fg:x="2202" fg:w="20"/><text x="11.8357%" y="223.50"></text></g><g><title>leb128_decode (173 instructions, 0.91%)</title><rect x="11.6475%" y="197" width="0.9069%" height="15" fill="rgb(239,18,37)" fg:x="2222" fg:w="173"/><text x="11.9405%" y="207.50"></text></g><g><title>find_field (209 instructions, 1.10%)</title><rect x="11.6475%" y="213" width="1.0956%" height="15" fill="rgb(218,185,22)" fg:x="2222" fg:w="209"/><text x="11.9405%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="12.7431%" y="213" width="0.3355%" height="15" fill="rgb(225,218,4)" fg:x="2431" fg:w="64"/><text x="13.0361%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="13.0786%" y="197" width="0.2621%" height="15" fill="rgb(230,182,32)" fg:x="2495" fg:w="50"/><text x="13.3715%" y="207.50"></text></g><g><title>utf8_validate (248 instructions, 1.30%)</title><rect x="13.3407%" y="197" width="1.3000%" height="15" fill="rgb(242,56,43)" fg:x="2545" fg:w="248"/><text x="13.6336%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.29%)</title><rect x="14.6407%" y="181" width="0.2935%" height="15" fill="rgb(233,99,24)" fg:x="2793" fg:w="56"/><text x="14.9336%" y="191.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::had1640504c1be483 (69 instructions, 0.36%)</title><rect x="14.6407%" y="197" width="0.3617%" height="15" fill="rgb(234,209,42)" fg:x="2793" fg:w="69"/><text x="14.9336%" y="207.50"></text></g><g><title>memcpy (176 instructions, 0.92%)</title><rect x="15.0024%" y="197" width="0.9226%" height="15" fill="rgb(227,7,12)" fg:x="2862" fg:w="176"/><text x="15.2953%" y="207.50"></text></g><g><title>@deserialize_go&lt;t&gt; (612 instructions, 3.21%)</title><rect x="13.0786%" y="213" width="3.2081%" height="15" fill="rgb(245,203,43)" fg:x="2495" fg:w="612"/><text x="13.3715%" y="223.50">@d..</text></g><g><title>leb128_decode (214 instructions, 1.12%)</title><rect x="16.2866%" y="197" width="1.1218%" height="15" fill="rgb(238,205,33)" fg:x="3107" fg:w="214"/><text x="16.5796%" y="207.50"></text></g><g><title>find_field (250 instructions, 1.31%)</title><rect x="16.2866%" y="213" width="1.3105%" height="15" fill="rgb(231,56,7)" fg:x="3107" fg:w="250"/><text x="16.5796%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="17.5971%" y="213" width="0.3355%" height="15" fill="rgb(244,186,29)" fg:x="3357" fg:w="64"/><text x="17.8901%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="17.9326%" y="197" width="0.2621%" height="15" fill="rgb(234,111,31)" fg:x="3421" fg:w="50"/><text x="18.2256%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.29%)</title><rect x="18.1947%" y="197" width="0.2935%" height="15" fill="rgb(241,149,10)" fg:x="3471" fg:w="56"/><text x="18.4877%" y="207.50"></text></g><g><title>memcpy (94 instructions, 0.49%)</title><rect x="18.4882%" y="197" width="0.4927%" height="15" fill="rgb(249,206,44)" fg:x="3527" fg:w="94"/><text x="18.7812%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (307 instructions, 1.61%)</title><rect x="17.9326%" y="213" width="1.6093%" height="15" fill="rgb(251,153,30)" fg:x="3421" fg:w="307"/><text x="18.2256%" y="223.50"></text></g><g><title>leb128_decode (214 instructions, 1.12%)</title><rect x="19.5419%" y="197" width="1.1218%" height="15" fill="rgb(239,152,38)" fg:x="3728" fg:w="214"/><text x="19.8348%" y="207.50"></text></g><g><title>find_field (250 instructions, 1.31%)</title><rect x="19.5419%" y="213" width="1.3105%" height="15" fill="rgb(249,139,47)" fg:x="3728" fg:w="250"/><text x="19.8348%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="20.8523%" y="213" width="0.3355%" height="15" fill="rgb(244,64,35)" fg:x="3978" fg:w="64"/><text x="21.1453%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="21.1878%" y="213" width="0.3355%" height="15" fill="rgb(216,46,15)" fg:x="4042" fg:w="64"/><text x="21.4808%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.34%)</title><rect x="21.5233%" y="213" width="0.3355%" height="15" fill="rgb(250,74,19)" fg:x="4106" fg:w="64"/><text x="21.8163%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="21.8588%" y="213" width="0.2621%" height="15" fill="rgb(249,42,33)" fg:x="4170" fg:w="50"/><text x="22.1518%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.29%)</title><rect x="22.1209%" y="213" width="0.2935%" height="15" fill="rgb(242,149,17)" fg:x="4220" fg:w="56"/><text x="22.4138%" y="223.50"></text></g><g><title>memcpy (319 instructions, 1.67%)</title><rect x="22.4144%" y="213" width="1.6722%" height="15" fill="rgb(244,29,21)" fg:x="4276" fg:w="319"/><text x="22.7074%" y="223.50"></text></g><g><title>skip_fields (6 instructions, 0.03%)</title><rect x="24.0866%" y="213" width="0.0315%" height="15" fill="rgb(220,130,37)" fg:x="4595" fg:w="6"/><text x="24.3796%" y="223.50"></text></g><g><title>@deserialize_go&lt;r(canister_id:P,message:B,method:t)&gt; (3,024 instructions, 15.85%)</title><rect x="10.9451%" y="229" width="15.8515%" height="15" fill="rgb(211,67,2)" fg:x="2088" fg:w="3024"/><text x="11.2381%" y="239.50">@deserialize_go&lt;r(ca..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (20 instructions, 0.10%)</title><rect x="26.7967%" y="229" width="0.1048%" height="15" fill="rgb(235,68,52)" fg:x="5112" fg:w="20"/><text x="27.0896%" y="239.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.29%)</title><rect x="26.9015%" y="213" width="0.2935%" height="15" fill="rgb(246,142,3)" fg:x="5132" fg:w="56"/><text x="27.1945%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (20 instructions, 0.10%)</title><rect x="27.1951%" y="213" width="0.1048%" height="15" fill="rgb(241,25,7)" fg:x="5188" fg:w="20"/><text x="27.4880%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="27.2999%" y="213" width="0.0891%" height="15" fill="rgb(242,119,39)" fg:x="5208" fg:w="17"/><text x="27.5929%" y="223.50"></text></g><g><title>compute_crc32 (778 instructions, 4.08%)</title><rect x="27.3890%" y="181" width="4.0782%" height="15" fill="rgb(241,98,45)" fg:x="5225" fg:w="778"/><text x="27.6820%" y="191.50">com..</text></g><g><title>box_i32 (11 instructions, 0.06%)</title><rect x="31.4672%" y="181" width="0.0577%" height="15" fill="rgb(254,28,30)" fg:x="6003" fg:w="11"/><text x="31.7602%" y="191.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.10%)</title><rect x="31.5249%" y="181" width="0.1048%" height="15" fill="rgb(241,142,54)" fg:x="6014" fg:w="20"/><text x="31.8178%" y="191.50"></text></g><g><title>box_i32 (11 instructions, 0.06%)</title><rect x="31.6297%" y="181" width="0.0577%" height="15" fill="rgb(222,85,15)" fg:x="6034" fg:w="11"/><text x="31.9227%" y="191.50"></text></g><g><title>account_key (863 instructions, 4.52%)</title><rect x="27.3890%" y="197" width="4.5238%" height="15" fill="rgb(210,85,47)" fg:x="5225" fg:w="863"/><text x="27.6820%" y="207.50">acco..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (20 instructions, 0.10%)</title><rect x="31.9128%" y="165" width="0.1048%" height="15" fill="rgb(224,206,25)" fg:x="6088" fg:w="20"/><text x="32.2057%" y="175.50"></text></g><g><title>equalKey (36 instructions, 0.19%)</title><rect x="31.9128%" y="181" width="0.1887%" height="15" fill="rgb(243,201,19)" fg:x="6088" fg:w="36"/><text x="32.2057%" y="191.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (20 instructions, 0.10%)</title><rect x="32.1015%" y="181" width="0.1048%" height="15" fill="rgb(236,59,4)" fg:x="6124" fg:w="20"/><text x="32.3945%" y="191.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="32.2063%" y="165" width="0.0891%" height="15" fill="rgb(254,179,45)" fg:x="6144" fg:w="17"/><text x="32.4993%" y="175.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="32.2954%" y="165" width="0.1206%" height="15" fill="rgb(226,14,10)" fg:x="6161" fg:w="23"/><text x="32.5884%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="32.4160%" y="149" width="0.0891%" height="15" fill="rgb(244,27,41)" fg:x="6184" fg:w="17"/><text x="32.7090%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="32.5051%" y="149" width="0.0891%" height="15" fill="rgb(235,35,32)" fg:x="6201" fg:w="17"/><text x="32.7981%" y="159.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.38%)</title><rect x="32.4160%" y="165" width="0.3774%" height="15" fill="rgb(218,68,31)" fg:x="6184" fg:w="72"/><text x="32.7090%" y="175.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="32.7934%" y="165" width="0.1206%" height="15" fill="rgb(207,120,37)" fg:x="6256" fg:w="23"/><text x="33.0864%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="32.9140%" y="149" width="0.0891%" height="15" fill="rgb(227,98,0)" fg:x="6279" fg:w="17"/><text x="33.2069%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="33.0031%" y="149" width="0.0891%" height="15" fill="rgb(207,7,3)" fg:x="6296" fg:w="17"/><text x="33.2961%" y="159.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.38%)</title><rect x="32.9140%" y="165" width="0.3774%" height="15" fill="rgb(206,98,19)" fg:x="6279" fg:w="72"/><text x="33.2069%" y="175.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="33.2914%" y="165" width="0.1206%" height="15" fill="rgb(217,5,26)" fg:x="6351" fg:w="23"/><text x="33.5844%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="33.4120%" y="149" width="0.0891%" height="15" fill="rgb(235,190,38)" fg:x="6374" fg:w="17"/><text x="33.7049%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="33.5011%" y="149" width="0.0891%" height="15" fill="rgb(247,86,24)" fg:x="6391" fg:w="17"/><text x="33.7940%" y="159.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.38%)</title><rect x="33.4120%" y="165" width="0.3774%" height="15" fill="rgb(205,101,16)" fg:x="6374" fg:w="72"/><text x="33.7049%" y="175.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="33.7894%" y="165" width="0.1206%" height="15" fill="rgb(246,168,33)" fg:x="6446" fg:w="23"/><text x="34.0823%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="33.9099%" y="149" width="0.0891%" height="15" fill="rgb(231,114,1)" fg:x="6469" fg:w="17"/><text x="34.2029%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="33.9991%" y="149" width="0.0891%" height="15" fill="rgb(207,184,53)" fg:x="6486" fg:w="17"/><text x="34.2920%" y="159.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.38%)</title><rect x="33.9099%" y="165" width="0.3774%" height="15" fill="rgb(224,95,51)" fg:x="6469" fg:w="72"/><text x="34.2029%" y="175.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="34.2874%" y="165" width="0.1206%" height="15" fill="rgb(212,188,45)" fg:x="6541" fg:w="23"/><text x="34.5803%" y="175.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="34.4079%" y="149" width="0.0891%" height="15" fill="rgb(223,154,38)" fg:x="6564" fg:w="17"/><text x="34.7009%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="34.4970%" y="149" width="0.0891%" height="15" fill="rgb(251,22,52)" fg:x="6581" fg:w="17"/><text x="34.7900%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="34.5862%" y="149" width="0.0891%" height="15" fill="rgb(229,209,22)" fg:x="6598" fg:w="17"/><text x="34.8791%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="34.6753%" y="149" width="0.0891%" height="15" fill="rgb(234,138,34)" fg:x="6615" fg:w="17"/><text x="34.9682%" y="159.50"></text></g><g><title>Blob.compare_eq (769 instructions, 4.03%)</title><rect x="34.7644%" y="133" width="4.0310%" height="15" fill="rgb(212,95,11)" fg:x="6632" fg:w="769"/><text x="35.0573%" y="143.50">Blo..</text></g><g><title>equal.1 (777 instructions, 4.07%)</title><rect x="34.7644%" y="149" width="4.0730%" height="15" fill="rgb(240,179,47)" fg:x="6632" fg:w="777"/><text x="35.0573%" y="159.50">equ..</text></g><g><title>anon-func-192.5 (911 instructions, 4.78%)</title><rect x="34.4079%" y="165" width="4.7754%" height="15" fill="rgb(240,163,11)" fg:x="6564" fg:w="911"/><text x="34.7009%" y="175.50">anon..</text></g><g><title>opt_inject (23 instructions, 0.12%)</title><rect x="39.1833%" y="165" width="0.1206%" height="15" fill="rgb(236,37,12)" fg:x="7475" fg:w="23"/><text x="39.4763%" y="175.50"></text></g><g><title>rec.2 (1,619 instructions, 8.49%)</title><rect x="32.2063%" y="181" width="8.4867%" height="15" fill="rgb(232,164,16)" fg:x="6144" fg:w="1619"/><text x="32.4993%" y="191.50">rec.2</text></g><g><title>get.2 (1,715 instructions, 8.99%)</title><rect x="31.9128%" y="197" width="8.9899%" height="15" fill="rgb(244,205,15)" fg:x="6088" fg:w="1715"/><text x="32.2057%" y="207.50">get.2</text></g><g><title>account_get (2,593 instructions, 13.59%)</title><rect x="27.3890%" y="213" width="13.5923%" height="15" fill="rgb(223,117,47)" fg:x="5225" fg:w="2593"/><text x="27.6820%" y="223.50">account_get</text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="40.9813%" y="213" width="0.1206%" height="15" fill="rgb(244,107,35)" fg:x="7818" fg:w="23"/><text x="41.2743%" y="223.50"></text></g><g><title>obj_idx&lt;2&gt; (17 instructions, 0.09%)</title><rect x="41.1019%" y="213" width="0.0891%" height="15" fill="rgb(205,140,8)" fg:x="7841" fg:w="17"/><text x="41.3948%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="41.1910%" y="213" width="0.0891%" height="15" fill="rgb(228,84,46)" fg:x="7858" fg:w="17"/><text x="41.4839%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="41.2801%" y="213" width="0.0891%" height="15" fill="rgb(254,188,9)" fg:x="7875" fg:w="17"/><text x="41.5730%" y="223.50"></text></g><g><title>B_lt (12 instructions, 0.06%)</title><rect x="41.3692%" y="213" width="0.0629%" height="15" fill="rgb(206,112,54)" fg:x="7892" fg:w="12"/><text x="41.6622%" y="223.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="41.4321%" y="213" width="0.0891%" height="15" fill="rgb(216,84,49)" fg:x="7904" fg:w="17"/><text x="41.7251%" y="223.50"></text></g><g><title>B_sub (34 instructions, 0.18%)</title><rect x="41.5212%" y="213" width="0.1782%" height="15" fill="rgb(214,194,35)" fg:x="7921" fg:w="34"/><text x="41.8142%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (20 instructions, 0.10%)</title><rect x="41.6994%" y="213" width="0.1048%" height="15" fill="rgb(249,28,3)" fg:x="7955" fg:w="20"/><text x="41.9924%" y="223.50"></text></g><g><title>compute_crc32 (778 instructions, 4.08%)</title><rect x="41.8043%" y="181" width="4.0782%" height="15" fill="rgb(222,56,52)" fg:x="7975" fg:w="778"/><text x="42.0972%" y="191.50">com..</text></g><g><title>box_i32 (11 instructions, 0.06%)</title><rect x="45.8825%" y="181" width="0.0577%" height="15" fill="rgb(245,217,50)" fg:x="8753" fg:w="11"/><text x="46.1754%" y="191.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.10%)</title><rect x="45.9401%" y="181" width="0.1048%" height="15" fill="rgb(213,201,24)" fg:x="8764" fg:w="20"/><text x="46.2331%" y="191.50"></text></g><g><title>box_i32 (11 instructions, 0.06%)</title><rect x="46.0450%" y="181" width="0.0577%" height="15" fill="rgb(248,116,28)" fg:x="8784" fg:w="11"/><text x="46.3379%" y="191.50"></text></g><g><title>account_key (863 instructions, 4.52%)</title><rect x="41.8043%" y="197" width="4.5238%" height="15" fill="rgb(219,72,43)" fg:x="7975" fg:w="863"/><text x="42.0972%" y="207.50">acco..</text></g><g><title>opt_inject (23 instructions, 0.12%)</title><rect x="46.3280%" y="181" width="0.1206%" height="15" fill="rgb(209,138,14)" fg:x="8838" fg:w="23"/><text x="46.6210%" y="191.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.10%)</title><rect x="46.4486%" y="181" width="0.1048%" height="15" fill="rgb(222,18,33)" fg:x="8861" fg:w="20"/><text x="46.7416%" y="191.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.10%)</title><rect x="46.5534%" y="181" width="0.1048%" height="15" fill="rgb(213,199,7)" fg:x="8881" fg:w="20"/><text x="46.8464%" y="191.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (20 instructions, 0.10%)</title><rect x="46.6583%" y="165" width="0.1048%" height="15" fill="rgb(250,110,10)" fg:x="8901" fg:w="20"/><text x="46.9512%" y="175.50"></text></g><g><title>equalKey (36 instructions, 0.19%)</title><rect x="46.6583%" y="181" width="0.1887%" height="15" fill="rgb(248,123,6)" fg:x="8901" fg:w="36"/><text x="46.9512%" y="191.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="46.8470%" y="165" width="0.0891%" height="15" fill="rgb(206,91,31)" fg:x="8937" fg:w="17"/><text x="47.1400%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.10%)</title><rect x="46.9361%" y="149" width="0.1048%" height="15" fill="rgb(211,154,13)" fg:x="8954" fg:w="20"/><text x="47.2291%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.10%)</title><rect x="47.0409%" y="149" width="0.1048%" height="15" fill="rgb(225,148,7)" fg:x="8974" fg:w="20"/><text x="47.3339%" y="159.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (20 instructions, 0.10%)</title><rect x="47.1458%" y="149" width="0.1048%" height="15" fill="rgb(220,160,43)" fg:x="8994" fg:w="20"/><text x="47.4387%" y="159.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="47.2506%" y="133" width="0.1206%" height="15" fill="rgb(213,52,39)" fg:x="9014" fg:w="23"/><text x="47.5436%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="47.3712%" y="117" width="0.0891%" height="15" fill="rgb(243,137,7)" fg:x="9037" fg:w="17"/><text x="47.6641%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="47.4603%" y="117" width="0.0891%" height="15" fill="rgb(230,79,13)" fg:x="9054" fg:w="17"/><text x="47.7533%" y="127.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.38%)</title><rect x="47.3712%" y="133" width="0.3774%" height="15" fill="rgb(247,105,23)" fg:x="9037" fg:w="72"/><text x="47.6641%" y="143.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="47.7486%" y="117" width="0.1206%" height="15" fill="rgb(223,179,41)" fg:x="9109" fg:w="23"/><text x="48.0416%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="47.8692%" y="101" width="0.0891%" height="15" fill="rgb(218,9,34)" fg:x="9132" fg:w="17"/><text x="48.1621%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="47.9583%" y="101" width="0.0891%" height="15" fill="rgb(222,106,8)" fg:x="9149" fg:w="17"/><text x="48.2512%" y="111.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.38%)</title><rect x="47.8692%" y="117" width="0.3774%" height="15" fill="rgb(211,220,0)" fg:x="9132" fg:w="72"/><text x="48.1621%" y="127.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="48.2466%" y="101" width="0.1206%" height="15" fill="rgb(229,52,16)" fg:x="9204" fg:w="23"/><text x="48.5395%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="48.3671%" y="85" width="0.0891%" height="15" fill="rgb(212,155,18)" fg:x="9227" fg:w="17"/><text x="48.6601%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="48.4563%" y="85" width="0.0891%" height="15" fill="rgb(242,21,14)" fg:x="9244" fg:w="17"/><text x="48.7492%" y="95.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.38%)</title><rect x="48.3671%" y="101" width="0.3774%" height="15" fill="rgb(222,19,48)" fg:x="9227" fg:w="72"/><text x="48.6601%" y="111.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="48.7446%" y="85" width="0.1206%" height="15" fill="rgb(232,45,27)" fg:x="9299" fg:w="23"/><text x="49.0375%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="48.8651%" y="69" width="0.0891%" height="15" fill="rgb(249,103,42)" fg:x="9322" fg:w="17"/><text x="49.1581%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="48.9542%" y="69" width="0.0891%" height="15" fill="rgb(246,81,33)" fg:x="9339" fg:w="17"/><text x="49.2472%" y="79.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.38%)</title><rect x="48.8651%" y="85" width="0.3774%" height="15" fill="rgb(252,33,42)" fg:x="9322" fg:w="72"/><text x="49.1581%" y="95.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="49.2425%" y="69" width="0.1206%" height="15" fill="rgb(209,212,41)" fg:x="9394" fg:w="23"/><text x="49.5355%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="49.3631%" y="53" width="0.0891%" height="15" fill="rgb(207,154,6)" fg:x="9417" fg:w="17"/><text x="49.6561%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="49.4522%" y="53" width="0.0891%" height="15" fill="rgb(223,64,47)" fg:x="9434" fg:w="17"/><text x="49.7452%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="49.5413%" y="53" width="0.0891%" height="15" fill="rgb(211,161,38)" fg:x="9451" fg:w="17"/><text x="49.8343%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="49.6304%" y="53" width="0.0891%" height="15" fill="rgb(219,138,40)" fg:x="9468" fg:w="17"/><text x="49.9234%" y="63.50"></text></g><g><title>Blob.compare_eq (769 instructions, 4.03%)</title><rect x="49.7196%" y="37" width="4.0310%" height="15" fill="rgb(241,228,46)" fg:x="9485" fg:w="769"/><text x="50.0125%" y="47.50">Blo..</text></g><g><title>equal.1 (777 instructions, 4.07%)</title><rect x="49.7196%" y="53" width="4.0730%" height="15" fill="rgb(223,209,38)" fg:x="9485" fg:w="777"/><text x="50.0125%" y="63.50">equ..</text></g><g><title>anon-func-192.5 (911 instructions, 4.78%)</title><rect x="49.3631%" y="69" width="4.7754%" height="15" fill="rgb(236,164,45)" fg:x="9417" fg:w="911"/><text x="49.6561%" y="79.50">anon..</text></g><g><title>opt_inject (23 instructions, 0.12%)</title><rect x="54.1385%" y="69" width="0.1206%" height="15" fill="rgb(231,15,5)" fg:x="10328" fg:w="23"/><text x="54.4315%" y="79.50"></text></g><g><title>del (1,018 instructions, 5.34%)</title><rect x="49.2425%" y="85" width="5.3363%" height="15" fill="rgb(252,35,15)" fg:x="9394" fg:w="1018"/><text x="49.5355%" y="95.50">del</text></g><g><title>to_2_tuple (28 instructions, 0.15%)</title><rect x="54.5788%" y="85" width="0.1468%" height="15" fill="rgb(248,181,18)" fg:x="10412" fg:w="28"/><text x="54.8718%" y="95.50"></text></g><g><title>opt_inject (23 instructions, 0.12%)</title><rect x="54.7256%" y="85" width="0.1206%" height="15" fill="rgb(233,39,42)" fg:x="10440" fg:w="23"/><text x="55.0186%" y="95.50"></text></g><g><title>del (1,262 instructions, 6.62%)</title><rect x="48.7446%" y="101" width="6.6153%" height="15" fill="rgb(238,110,33)" fg:x="9299" fg:w="1262"/><text x="49.0375%" y="111.50">del</text></g><g><title>to_2_tuple (28 instructions, 0.15%)</title><rect x="55.3599%" y="101" width="0.1468%" height="15" fill="rgb(233,195,10)" fg:x="10561" fg:w="28"/><text x="55.6528%" y="111.50"></text></g><g><title>opt_inject (23 instructions, 0.12%)</title><rect x="55.5066%" y="101" width="0.1206%" height="15" fill="rgb(254,105,3)" fg:x="10589" fg:w="23"/><text x="55.7996%" y="111.50"></text></g><g><title>del (1,506 instructions, 7.89%)</title><rect x="48.2466%" y="117" width="7.8943%" height="15" fill="rgb(221,225,9)" fg:x="9204" fg:w="1506"/><text x="48.5395%" y="127.50">del</text></g><g><title>to_2_tuple (28 instructions, 0.15%)</title><rect x="56.1409%" y="117" width="0.1468%" height="15" fill="rgb(224,227,45)" fg:x="10710" fg:w="28"/><text x="56.4339%" y="127.50"></text></g><g><title>opt_inject (23 instructions, 0.12%)</title><rect x="56.2877%" y="117" width="0.1206%" height="15" fill="rgb(229,198,43)" fg:x="10738" fg:w="23"/><text x="56.5806%" y="127.50"></text></g><g><title>del (1,750 instructions, 9.17%)</title><rect x="47.7486%" y="133" width="9.1734%" height="15" fill="rgb(206,209,35)" fg:x="9109" fg:w="1750"/><text x="48.0416%" y="143.50">del</text></g><g><title>to_2_tuple (28 instructions, 0.15%)</title><rect x="56.9219%" y="133" width="0.1468%" height="15" fill="rgb(245,195,53)" fg:x="10859" fg:w="28"/><text x="57.2149%" y="143.50"></text></g><g><title>opt_inject (23 instructions, 0.12%)</title><rect x="57.0687%" y="133" width="0.1206%" height="15" fill="rgb(240,92,26)" fg:x="10887" fg:w="23"/><text x="57.3617%" y="143.50"></text></g><g><title>del (1,994 instructions, 10.45%)</title><rect x="47.2506%" y="149" width="10.4524%" height="15" fill="rgb(207,40,23)" fg:x="9014" fg:w="1994"/><text x="47.5436%" y="159.50">del</text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="57.7030%" y="149" width="0.1206%" height="15" fill="rgb(223,111,35)" fg:x="11008" fg:w="23"/><text x="57.9960%" y="159.50"></text></g><g><title>to_2_tuple (28 instructions, 0.15%)</title><rect x="57.8236%" y="149" width="0.1468%" height="15" fill="rgb(229,147,28)" fg:x="11031" fg:w="28"/><text x="58.1165%" y="159.50"></text></g><g><title>to_2_tuple (28 instructions, 0.15%)</title><rect x="57.9703%" y="149" width="0.1468%" height="15" fill="rgb(211,29,28)" fg:x="11059" fg:w="28"/><text x="58.2633%" y="159.50"></text></g><g><title>opt_inject (23 instructions, 0.12%)</title><rect x="58.1171%" y="149" width="0.1206%" height="15" fill="rgb(228,72,33)" fg:x="11087" fg:w="23"/><text x="58.4101%" y="159.50"></text></g><g><title>replace (2,257 instructions, 11.83%)</title><rect x="46.9361%" y="165" width="11.8310%" height="15" fill="rgb(205,214,31)" fg:x="8954" fg:w="2257"/><text x="47.2291%" y="175.50">replace</text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="58.7671%" y="133" width="0.1206%" height="15" fill="rgb(224,111,15)" fg:x="11211" fg:w="23"/><text x="59.0601%" y="143.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="58.8877%" y="133" width="0.0629%" height="15" fill="rgb(253,21,26)" fg:x="11234" fg:w="12"/><text x="59.1806%" y="143.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="58.9506%" y="133" width="0.1415%" height="15" fill="rgb(245,139,43)" fg:x="11246" fg:w="27"/><text x="59.2435%" y="143.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="59.0921%" y="133" width="0.1206%" height="15" fill="rgb(252,170,7)" fg:x="11273" fg:w="23"/><text x="59.3851%" y="143.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="59.2127%" y="133" width="0.0629%" height="15" fill="rgb(231,118,14)" fg:x="11296" fg:w="12"/><text x="59.5056%" y="143.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="59.2756%" y="133" width="0.1415%" height="15" fill="rgb(238,83,0)" fg:x="11308" fg:w="27"/><text x="59.5685%" y="143.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="59.4171%" y="133" width="0.1206%" height="15" fill="rgb(221,39,39)" fg:x="11335" fg:w="23"/><text x="59.7101%" y="143.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="59.5377%" y="133" width="0.0629%" height="15" fill="rgb(222,119,46)" fg:x="11358" fg:w="12"/><text x="59.8306%" y="143.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="59.6006%" y="133" width="0.1415%" height="15" fill="rgb(222,165,49)" fg:x="11370" fg:w="27"/><text x="59.8935%" y="143.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="59.7421%" y="133" width="0.1206%" height="15" fill="rgb(219,113,52)" fg:x="11397" fg:w="23"/><text x="60.0351%" y="143.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="59.8627%" y="133" width="0.0629%" height="15" fill="rgb(214,7,15)" fg:x="11420" fg:w="12"/><text x="60.1556%" y="143.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="59.9256%" y="133" width="0.1415%" height="15" fill="rgb(235,32,4)" fg:x="11432" fg:w="27"/><text x="60.2185%" y="143.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="60.0671%" y="133" width="0.1206%" height="15" fill="rgb(238,90,54)" fg:x="11459" fg:w="23"/><text x="60.3601%" y="143.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="60.1877%" y="133" width="0.0629%" height="15" fill="rgb(213,208,19)" fg:x="11482" fg:w="12"/><text x="60.4806%" y="143.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="60.2506%" y="133" width="0.1415%" height="15" fill="rgb(233,156,4)" fg:x="11494" fg:w="27"/><text x="60.5435%" y="143.50"></text></g><g><title>opt_inject (6 instructions, 0.03%)</title><rect x="60.3921%" y="133" width="0.0315%" height="15" fill="rgb(207,194,5)" fg:x="11521" fg:w="6"/><text x="60.6851%" y="143.50"></text></g><g><title>opt_project (6 instructions, 0.03%)</title><rect x="60.4235%" y="133" width="0.0315%" height="15" fill="rgb(206,111,30)" fg:x="11527" fg:w="6"/><text x="60.7165%" y="143.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (20 instructions, 0.10%)</title><rect x="60.4550%" y="133" width="0.1048%" height="15" fill="rgb(243,70,54)" fg:x="11533" fg:w="20"/><text x="60.7480%" y="143.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.10%)</title><rect x="60.5598%" y="133" width="0.1048%" height="15" fill="rgb(242,28,8)" fg:x="11553" fg:w="20"/><text x="60.8528%" y="143.50"></text></g><g><title>rec (663 instructions, 3.48%)</title><rect x="58.7671%" y="149" width="3.4754%" height="15" fill="rgb(219,106,18)" fg:x="11211" fg:w="663"/><text x="59.0601%" y="159.50">rec</text></g><g><title>leaf (672 instructions, 3.52%)</title><rect x="58.7671%" y="165" width="3.5226%" height="15" fill="rgb(244,222,10)" fg:x="11211" fg:w="672"/><text x="59.0601%" y="175.50">leaf</text></g><g><title>recursiveReplace (3,019 instructions, 15.83%)</title><rect x="46.8470%" y="181" width="15.8253%" height="15" fill="rgb(236,179,52)" fg:x="8937" fg:w="3019"/><text x="47.1400%" y="191.50">recursiveReplace</text></g><g><title>put.1 (3,216 instructions, 16.86%)</title><rect x="46.3280%" y="197" width="16.8580%" height="15" fill="rgb(213,23,39)" fg:x="8838" fg:w="3216"/><text x="46.6210%" y="207.50">put.1</text></g><g><title>to_2_tuple (28 instructions, 0.15%)</title><rect x="63.1860%" y="197" width="0.1468%" height="15" fill="rgb(238,48,10)" fg:x="12054" fg:w="28"/><text x="63.4790%" y="207.50"></text></g><g><title>account_put (4,135 instructions, 21.68%)</title><rect x="41.8043%" y="213" width="21.6753%" height="15" fill="rgb(251,196,23)" fg:x="7975" fg:w="4135"/><text x="42.0972%" y="223.50">account_put</text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (20 instructions, 0.10%)</title><rect x="63.4796%" y="213" width="0.1048%" height="15" fill="rgb(250,152,24)" fg:x="12110" fg:w="20"/><text x="63.7726%" y="223.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="63.5844%" y="197" width="0.1415%" height="15" fill="rgb(209,150,17)" fg:x="12130" fg:w="27"/><text x="63.8774%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (60 instructions, 0.31%)</title><rect x="63.7260%" y="149" width="0.3145%" height="15" fill="rgb(234,202,34)" fg:x="12157" fg:w="60"/><text x="64.0189%" y="159.50"></text></g><g><title>memset (106 instructions, 0.56%)</title><rect x="64.0405%" y="149" width="0.5556%" height="15" fill="rgb(253,148,53)" fg:x="12217" fg:w="106"/><text x="64.3334%" y="159.50"></text></g><g><title>mp_calloc (202 instructions, 1.06%)</title><rect x="63.7260%" y="165" width="1.0589%" height="15" fill="rgb(218,129,16)" fg:x="12157" fg:w="202"/><text x="64.0189%" y="175.50"></text></g><g><title>mp_init (223 instructions, 1.17%)</title><rect x="63.7260%" y="181" width="1.1689%" height="15" fill="rgb(216,85,19)" fg:x="12157" fg:w="223"/><text x="64.0189%" y="191.50"></text></g><g><title>mp_set_u64 (120 instructions, 0.63%)</title><rect x="64.8949%" y="181" width="0.6290%" height="15" fill="rgb(235,228,7)" fg:x="12380" fg:w="120"/><text x="65.1879%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (33 instructions, 0.17%)</title><rect x="65.5239%" y="181" width="0.1730%" height="15" fill="rgb(245,175,0)" fg:x="12500" fg:w="33"/><text x="65.8169%" y="191.50"></text></g><g><title>bigint_of_word64 (431 instructions, 2.26%)</title><rect x="63.7260%" y="197" width="2.2593%" height="15" fill="rgb(208,168,36)" fg:x="12157" fg:w="431"/><text x="64.0189%" y="207.50">b..</text></g><g><title>alloc_size&lt;11&gt;_tag&lt;1&gt; (20 instructions, 0.10%)</title><rect x="65.9852%" y="197" width="0.1048%" height="15" fill="rgb(246,171,24)" fg:x="12588" fg:w="20"/><text x="66.2782%" y="207.50"></text></g><g><title>box_i32 (11 instructions, 0.06%)</title><rect x="66.0901%" y="165" width="0.0577%" height="15" fill="rgb(215,142,24)" fg:x="12608" fg:w="11"/><text x="66.3830%" y="175.50"></text></g><g><title>box_i32 (11 instructions, 0.06%)</title><rect x="66.1477%" y="165" width="0.0577%" height="15" fill="rgb(250,187,7)" fg:x="12619" fg:w="11"/><text x="66.4407%" y="175.50"></text></g><g><title>box_i32 (11 instructions, 0.06%)</title><rect x="66.2054%" y="165" width="0.0577%" height="15" fill="rgb(228,66,33)" fg:x="12630" fg:w="11"/><text x="66.4983%" y="175.50"></text></g><g><title>box_i32 (11 instructions, 0.06%)</title><rect x="66.2630%" y="165" width="0.0577%" height="15" fill="rgb(234,215,21)" fg:x="12641" fg:w="11"/><text x="66.5560%" y="175.50"></text></g><g><title>box_i32 (11 instructions, 0.06%)</title><rect x="66.3207%" y="165" width="0.0577%" height="15" fill="rgb(222,191,20)" fg:x="12652" fg:w="11"/><text x="66.6137%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.10%)</title><rect x="66.3784%" y="165" width="0.1048%" height="15" fill="rgb(245,79,54)" fg:x="12663" fg:w="20"/><text x="66.6713%" y="175.50"></text></g><g><title>box_i32 (11 instructions, 0.06%)</title><rect x="66.4832%" y="165" width="0.0577%" height="15" fill="rgb(240,10,37)" fg:x="12683" fg:w="11"/><text x="66.7762%" y="175.50"></text></g><g><title>proposal_key (360 instructions, 1.89%)</title><rect x="66.0901%" y="181" width="1.8871%" height="15" fill="rgb(214,192,32)" fg:x="12608" fg:w="360"/><text x="66.3830%" y="191.50"></text></g><g><title>opt_inject (23 instructions, 0.12%)</title><rect x="67.9771%" y="165" width="0.1206%" height="15" fill="rgb(209,36,54)" fg:x="12968" fg:w="23"/><text x="68.2701%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.10%)</title><rect x="68.0977%" y="165" width="0.1048%" height="15" fill="rgb(220,10,11)" fg:x="12991" fg:w="20"/><text x="68.3907%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.10%)</title><rect x="68.2025%" y="165" width="0.1048%" height="15" fill="rgb(221,106,17)" fg:x="13011" fg:w="20"/><text x="68.4955%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (20 instructions, 0.10%)</title><rect x="68.3074%" y="149" width="0.1048%" height="15" fill="rgb(251,142,44)" fg:x="13031" fg:w="20"/><text x="68.6004%" y="159.50"></text></g><g><title>equalKey (36 instructions, 0.19%)</title><rect x="68.3074%" y="165" width="0.1887%" height="15" fill="rgb(238,13,15)" fg:x="13031" fg:w="36"/><text x="68.6004%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.10%)</title><rect x="68.4961%" y="133" width="0.1048%" height="15" fill="rgb(208,107,27)" fg:x="13067" fg:w="20"/><text x="68.7891%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.10%)</title><rect x="68.6009%" y="133" width="0.1048%" height="15" fill="rgb(205,136,37)" fg:x="13087" fg:w="20"/><text x="68.8939%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (20 instructions, 0.10%)</title><rect x="68.7058%" y="133" width="0.1048%" height="15" fill="rgb(250,205,27)" fg:x="13107" fg:w="20"/><text x="68.9987%" y="143.50"></text></g><g><title>del (31 instructions, 0.16%)</title><rect x="68.8106%" y="133" width="0.1625%" height="15" fill="rgb(210,80,43)" fg:x="13127" fg:w="31"/><text x="69.1036%" y="143.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="68.9731%" y="133" width="0.1206%" height="15" fill="rgb(247,160,36)" fg:x="13158" fg:w="23"/><text x="69.2661%" y="143.50"></text></g><g><title>to_2_tuple (28 instructions, 0.15%)</title><rect x="69.0937%" y="133" width="0.1468%" height="15" fill="rgb(234,13,49)" fg:x="13181" fg:w="28"/><text x="69.3866%" y="143.50"></text></g><g><title>to_2_tuple (28 instructions, 0.15%)</title><rect x="69.2404%" y="133" width="0.1468%" height="15" fill="rgb(234,122,0)" fg:x="13209" fg:w="28"/><text x="69.5334%" y="143.50"></text></g><g><title>opt_inject (23 instructions, 0.12%)</title><rect x="69.3872%" y="133" width="0.1206%" height="15" fill="rgb(207,146,38)" fg:x="13237" fg:w="23"/><text x="69.6802%" y="143.50"></text></g><g><title>replace (294 instructions, 1.54%)</title><rect x="68.4961%" y="149" width="1.5411%" height="15" fill="rgb(207,177,25)" fg:x="13067" fg:w="294"/><text x="68.7891%" y="159.50"></text></g><g><title>opt_project (23 instructions, 0.12%)</title><rect x="70.0372%" y="117" width="0.1206%" height="15" fill="rgb(211,178,42)" fg:x="13361" fg:w="23"/><text x="70.3302%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="70.1578%" y="117" width="0.0629%" height="15" fill="rgb(230,69,54)" fg:x="13384" fg:w="12"/><text x="70.4508%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="70.2207%" y="117" width="0.1415%" height="15" fill="rgb(214,135,41)" fg:x="13396" fg:w="27"/><text x="70.5137%" y="127.50"></text></g><g><title>opt_inject (6 instructions, 0.03%)</title><rect x="70.3622%" y="117" width="0.0315%" height="15" fill="rgb(237,67,25)" fg:x="13423" fg:w="6"/><text x="70.6552%" y="127.50"></text></g><g><title>opt_project (6 instructions, 0.03%)</title><rect x="70.3937%" y="117" width="0.0315%" height="15" fill="rgb(222,189,50)" fg:x="13429" fg:w="6"/><text x="70.6866%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (20 instructions, 0.10%)</title><rect x="70.4251%" y="117" width="0.1048%" height="15" fill="rgb(245,148,34)" fg:x="13435" fg:w="20"/><text x="70.7181%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.10%)</title><rect x="70.5300%" y="117" width="0.1048%" height="15" fill="rgb(222,29,6)" fg:x="13455" fg:w="20"/><text x="70.8229%" y="127.50"></text></g><g><title>rec (235 instructions, 1.23%)</title><rect x="70.0372%" y="133" width="1.2318%" height="15" fill="rgb(221,189,43)" fg:x="13361" fg:w="235"/><text x="70.3302%" y="143.50"></text></g><g><title>leaf (244 instructions, 1.28%)</title><rect x="70.0372%" y="149" width="1.2790%" height="15" fill="rgb(207,36,27)" fg:x="13361" fg:w="244"/><text x="70.3302%" y="159.50"></text></g><g><title>recursiveReplace (579 instructions, 3.04%)</title><rect x="68.4961%" y="165" width="3.0351%" height="15" fill="rgb(217,90,24)" fg:x="13067" fg:w="579"/><text x="68.7891%" y="175.50">re..</text></g><g><title>put.1 (776 instructions, 4.07%)</title><rect x="67.9771%" y="181" width="4.0677%" height="15" fill="rgb(224,66,35)" fg:x="12968" fg:w="776"/><text x="68.2701%" y="191.50">put..</text></g><g><title>to_2_tuple (28 instructions, 0.15%)</title><rect x="72.0449%" y="181" width="0.1468%" height="15" fill="rgb(221,13,50)" fg:x="13744" fg:w="28"/><text x="72.3378%" y="191.50"></text></g><g><title>proposal_put (1,192 instructions, 6.25%)</title><rect x="66.0901%" y="197" width="6.2484%" height="15" fill="rgb(236,68,49)" fg:x="12608" fg:w="1192"/><text x="66.3830%" y="207.50">proposa..</text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (20 instructions, 0.10%)</title><rect x="72.3384%" y="197" width="0.1048%" height="15" fill="rgb(229,146,28)" fg:x="13800" fg:w="20"/><text x="72.6314%" y="207.50"></text></g><g><title>anon-func-74.66 (2,282 instructions, 11.96%)</title><rect x="63.5844%" y="213" width="11.9620%" height="15" fill="rgb(225,31,38)" fg:x="12130" fg:w="2282"/><text x="63.8774%" y="223.50">anon-func-74.66</text></g><g><title>@buffer_size&lt;N&gt; (27 instructions, 0.14%)</title><rect x="75.5465%" y="197" width="0.1415%" height="15" fill="rgb(250,208,3)" fg:x="14412" fg:w="27"/><text x="75.8394%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.29%)</title><rect x="75.6880%" y="197" width="0.2935%" height="15" fill="rgb(246,54,23)" fg:x="14439" fg:w="56"/><text x="75.9810%" y="207.50"></text></g><g><title>memcpy (86 instructions, 0.45%)</title><rect x="75.9815%" y="197" width="0.4508%" height="15" fill="rgb(243,76,11)" fg:x="14495" fg:w="86"/><text x="76.2745%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.29%)</title><rect x="76.4324%" y="197" width="0.2935%" height="15" fill="rgb(245,21,50)" fg:x="14581" fg:w="56"/><text x="76.7253%" y="207.50"></text></g><g><title>leb128_encode (11 instructions, 0.06%)</title><rect x="76.7259%" y="197" width="0.0577%" height="15" fill="rgb(228,9,43)" fg:x="14637" fg:w="11"/><text x="77.0189%" y="207.50"></text></g><g><title>leb128_encode (11 instructions, 0.06%)</title><rect x="76.7836%" y="181" width="0.0577%" height="15" fill="rgb(208,100,47)" fg:x="14648" fg:w="11"/><text x="77.0765%" y="191.50"></text></g><g><title>@serialize_go&lt;N&gt; (51 instructions, 0.27%)</title><rect x="76.7836%" y="197" width="0.2673%" height="15" fill="rgb(232,26,8)" fg:x="14648" fg:w="51"/><text x="77.0765%" y="207.50"></text></g><g><title>reply_with_data (1,033 instructions, 5.41%)</title><rect x="77.0509%" y="197" width="5.4149%" height="15" fill="rgb(216,166,38)" fg:x="14699" fg:w="1033"/><text x="77.3439%" y="207.50">reply..</text></g><g><title>$lambda.32 (1,475 instructions, 7.73%)</title><rect x="75.5465%" y="213" width="7.7318%" height="15" fill="rgb(251,202,51)" fg:x="14412" fg:w="1475"/><text x="75.8394%" y="223.50">$lambda.32</text></g><g><title>$lambda.5 (11,988 instructions, 62.84%)</title><rect x="26.9015%" y="229" width="62.8401%" height="15" fill="rgb(254,216,34)" fg:x="5132" fg:w="11988"/><text x="27.1945%" y="239.50">$lambda.5</text></g><g><title>schedule_copying_gc (108 instructions, 0.57%)</title><rect x="89.7416%" y="229" width="0.5661%" height="15" fill="rgb(251,32,27)" fg:x="17120" fg:w="108"/><text x="90.0345%" y="239.50"></text></g><g><title>trans_state4 (16 instructions, 0.08%)</title><rect x="90.3077%" y="229" width="0.0839%" height="15" fill="rgb(208,127,28)" fg:x="17228" fg:w="16"/><text x="90.6007%" y="239.50"></text></g><g><title>all (19,077 instructions, 100%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(224,137,22)" fg:x="0" fg:w="19077"/><text x="0.2930%" y="271.50"></text></g><g><title>submit_proposal (19,077 instructions, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(254,70,32)" fg:x="0" fg:w="19077"/><text x="0.2930%" y="255.50">submit_proposal</text></g></svg></svg>