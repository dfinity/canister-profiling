<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="310" onload="init(evt)" viewBox="0 0 1024 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.submit_proposal</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="293.00"> </text><svg id="frames" x="10" width="1004" total_samples="118753"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="0.0000%" y="229" width="0.0691%" height="15" fill="rgb(228,134,27)" fg:x="0" fg:w="82"/><text x="0.2930%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="0.0691%" y="229" width="0.0691%" height="15" fill="rgb(205,55,33)" fg:x="82" fg:w="82"/><text x="0.3620%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (195 instructions, 0.16%)</title><rect x="0.1381%" y="197" width="0.1642%" height="15" fill="rgb(243,75,43)" fg:x="164" fg:w="195"/><text x="0.4311%" y="207.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (1,351 instructions, 1.14%)</title><rect x="0.1381%" y="213" width="1.1377%" height="15" fill="rgb(223,27,42)" fg:x="164" fg:w="1351"/><text x="0.4311%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="1.2758%" y="197" width="0.0429%" height="15" fill="rgb(232,189,33)" fg:x="1515" fg:w="51"/><text x="1.5687%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.37%)</title><rect x="1.3187%" y="197" width="0.3680%" height="15" fill="rgb(210,9,39)" fg:x="1566" fg:w="437"/><text x="1.6117%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.05%)</title><rect x="1.6867%" y="197" width="0.0539%" height="15" fill="rgb(242,85,26)" fg:x="2003" fg:w="64"/><text x="1.9797%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="1.7406%" y="197" width="0.0514%" height="15" fill="rgb(248,44,4)" fg:x="2067" fg:w="61"/><text x="2.0336%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="1.7920%" y="197" width="0.0514%" height="15" fill="rgb(250,96,46)" fg:x="2128" fg:w="61"/><text x="2.0849%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="1.8433%" y="197" width="0.0514%" height="15" fill="rgb(229,116,26)" fg:x="2189" fg:w="61"/><text x="2.1363%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="1.8947%" y="197" width="0.0514%" height="15" fill="rgb(246,94,34)" fg:x="2250" fg:w="61"/><text x="2.1877%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="1.9461%" y="197" width="0.0429%" height="15" fill="rgb(251,73,21)" fg:x="2311" fg:w="51"/><text x="2.2390%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.08%)</title><rect x="1.9890%" y="197" width="0.0800%" height="15" fill="rgb(254,121,25)" fg:x="2362" fg:w="95"/><text x="2.2820%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.37%)</title><rect x="2.0690%" y="197" width="0.3680%" height="15" fill="rgb(215,161,49)" fg:x="2457" fg:w="437"/><text x="2.3620%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.02%)</title><rect x="2.4370%" y="197" width="0.0160%" height="15" fill="rgb(221,43,13)" fg:x="2894" fg:w="19"/><text x="2.7300%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="2.4530%" y="165" width="0.0691%" height="15" fill="rgb(249,5,37)" fg:x="2913" fg:w="82"/><text x="2.7460%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.06%)</title><rect x="2.5220%" y="133" width="0.0564%" height="15" fill="rgb(226,25,44)" fg:x="2995" fg:w="67"/><text x="2.8150%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.08%)</title><rect x="2.5220%" y="149" width="0.0808%" height="15" fill="rgb(238,189,16)" fg:x="2995" fg:w="96"/><text x="2.8150%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.04%)</title><rect x="2.6121%" y="85" width="0.0429%" height="15" fill="rgb(251,186,8)" fg:x="3102" fg:w="51"/><text x="2.9051%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.07%)</title><rect x="2.6121%" y="101" width="0.0674%" height="15" fill="rgb(254,34,31)" fg:x="3102" fg:w="80"/><text x="2.9051%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.13%)</title><rect x="2.6029%" y="117" width="0.1347%" height="15" fill="rgb(225,215,27)" fg:x="3091" fg:w="160"/><text x="2.8959%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (231 instructions, 0.19%)</title><rect x="2.6029%" y="133" width="0.1945%" height="15" fill="rgb(221,192,48)" fg:x="3091" fg:w="231"/><text x="2.8959%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (241 instructions, 0.20%)</title><rect x="2.6029%" y="149" width="0.2029%" height="15" fill="rgb(219,137,20)" fg:x="3091" fg:w="241"/><text x="2.8959%" y="159.50"></text></g><g><title>core::fmt::write (470 instructions, 0.40%)</title><rect x="2.5220%" y="165" width="0.3958%" height="15" fill="rgb(219,84,11)" fg:x="2995" fg:w="470"/><text x="2.8150%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (688 instructions, 0.58%)</title><rect x="2.4530%" y="181" width="0.5794%" height="15" fill="rgb(224,10,23)" fg:x="2913" fg:w="688"/><text x="2.7460%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.05%)</title><rect x="3.0323%" y="181" width="0.0539%" height="15" fill="rgb(248,22,39)" fg:x="3601" fg:w="64"/><text x="3.3253%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.05%)</title><rect x="3.0862%" y="181" width="0.0514%" height="15" fill="rgb(212,154,20)" fg:x="3665" fg:w="61"/><text x="3.3792%" y="191.50"></text></g><g><title>binread::binary_template::write_vec (924 instructions, 0.78%)</title><rect x="2.4530%" y="197" width="0.7781%" height="15" fill="rgb(236,199,50)" fg:x="2913" fg:w="924"/><text x="2.7460%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="3.2311%" y="181" width="0.0514%" height="15" fill="rgb(211,9,17)" fg:x="3837" fg:w="61"/><text x="3.5240%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="3.2824%" y="181" width="0.0691%" height="15" fill="rgb(243,216,36)" fg:x="3898" fg:w="82"/><text x="3.5754%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="3.3515%" y="165" width="0.0691%" height="15" fill="rgb(250,2,10)" fg:x="3980" fg:w="82"/><text x="3.6445%" y="175.50"></text></g><g><title>memcpy (131 instructions, 0.11%)</title><rect x="3.4205%" y="133" width="0.1103%" height="15" fill="rgb(226,50,48)" fg:x="4062" fg:w="131"/><text x="3.7135%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (160 instructions, 0.13%)</title><rect x="3.4205%" y="149" width="0.1347%" height="15" fill="rgb(243,81,16)" fg:x="4062" fg:w="160"/><text x="3.7135%" y="159.50"></text></g><g><title>__rust_realloc (133 instructions, 0.11%)</title><rect x="3.5553%" y="69" width="0.1120%" height="15" fill="rgb(250,14,2)" fg:x="4222" fg:w="133"/><text x="3.8482%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (190 instructions, 0.16%)</title><rect x="3.5553%" y="85" width="0.1600%" height="15" fill="rgb(233,135,29)" fg:x="4222" fg:w="190"/><text x="3.8482%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (276 instructions, 0.23%)</title><rect x="3.5553%" y="101" width="0.2324%" height="15" fill="rgb(224,64,43)" fg:x="4222" fg:w="276"/><text x="3.8482%" y="111.50"></text></g><g><title>memcpy (211 instructions, 0.18%)</title><rect x="3.7877%" y="101" width="0.1777%" height="15" fill="rgb(238,84,13)" fg:x="4498" fg:w="211"/><text x="4.0807%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (527 instructions, 0.44%)</title><rect x="3.5553%" y="117" width="0.4438%" height="15" fill="rgb(253,48,26)" fg:x="4222" fg:w="527"/><text x="3.8482%" y="127.50"></text></g><g><title>memcpy (35 instructions, 0.03%)</title><rect x="4.0083%" y="69" width="0.0295%" height="15" fill="rgb(205,223,31)" fg:x="4760" fg:w="35"/><text x="4.3013%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.05%)</title><rect x="4.0083%" y="85" width="0.0539%" height="15" fill="rgb(221,41,32)" fg:x="4760" fg:w="64"/><text x="4.3013%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.12%)</title><rect x="3.9991%" y="101" width="0.1213%" height="15" fill="rgb(213,158,31)" fg:x="4749" fg:w="144"/><text x="4.2920%" y="111.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (215 instructions, 0.18%)</title><rect x="3.9991%" y="117" width="0.1810%" height="15" fill="rgb(245,126,43)" fg:x="4749" fg:w="215"/><text x="4.2920%" y="127.50"></text></g><g><title>memcpy (51 instructions, 0.04%)</title><rect x="4.1801%" y="101" width="0.0429%" height="15" fill="rgb(227,7,22)" fg:x="4964" fg:w="51"/><text x="4.4731%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.07%)</title><rect x="4.1801%" y="117" width="0.0674%" height="15" fill="rgb(252,90,44)" fg:x="4964" fg:w="80"/><text x="4.4731%" y="127.50"></text></g><g><title>core::fmt::write (983 instructions, 0.83%)</title><rect x="3.5553%" y="133" width="0.8278%" height="15" fill="rgb(253,91,0)" fg:x="4222" fg:w="983"/><text x="3.8482%" y="143.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (1,043 instructions, 0.88%)</title><rect x="3.5553%" y="149" width="0.8783%" height="15" fill="rgb(252,175,49)" fg:x="4222" fg:w="1043"/><text x="3.8482%" y="159.50"></text></g><g><title>core::fmt::write (1,336 instructions, 1.13%)</title><rect x="3.4205%" y="165" width="1.1250%" height="15" fill="rgb(246,150,1)" fg:x="4062" fg:w="1336"/><text x="3.7135%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (1,554 instructions, 1.31%)</title><rect x="3.3515%" y="181" width="1.3086%" height="15" fill="rgb(241,192,25)" fg:x="3980" fg:w="1554"/><text x="3.6445%" y="191.50"></text></g><g><title>binread::binary_template::write_comment (52 instructions, 0.04%)</title><rect x="4.6601%" y="181" width="0.0438%" height="15" fill="rgb(239,187,11)" fg:x="5534" fg:w="52"/><text x="4.9531%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.05%)</title><rect x="4.7039%" y="181" width="0.0514%" height="15" fill="rgb(218,202,51)" fg:x="5586" fg:w="61"/><text x="4.9968%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="4.7552%" y="181" width="0.0387%" height="15" fill="rgb(225,176,8)" fg:x="5647" fg:w="46"/><text x="5.0482%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.07%)</title><rect x="4.7940%" y="149" width="0.0674%" height="15" fill="rgb(219,122,41)" fg:x="5693" fg:w="80"/><text x="5.0870%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (121 instructions, 0.10%)</title><rect x="4.7940%" y="165" width="0.1019%" height="15" fill="rgb(248,140,20)" fg:x="5693" fg:w="121"/><text x="5.0870%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (197 instructions, 0.17%)</title><rect x="4.7940%" y="181" width="0.1659%" height="15" fill="rgb(245,41,37)" fg:x="5693" fg:w="197"/><text x="5.0870%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="4.9599%" y="181" width="0.0514%" height="15" fill="rgb(235,82,39)" fg:x="5890" fg:w="61"/><text x="5.2528%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.10%)</title><rect x="5.0112%" y="181" width="0.0968%" height="15" fill="rgb(230,108,42)" fg:x="5951" fg:w="115"/><text x="5.3042%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.07%)</title><rect x="5.1081%" y="165" width="0.0674%" height="15" fill="rgb(215,150,50)" fg:x="6066" fg:w="80"/><text x="5.4011%" y="175.50"></text></g><g><title>memcpy (131 instructions, 0.11%)</title><rect x="5.1754%" y="133" width="0.1103%" height="15" fill="rgb(233,212,5)" fg:x="6146" fg:w="131"/><text x="5.4684%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (160 instructions, 0.13%)</title><rect x="5.1754%" y="149" width="0.1347%" height="15" fill="rgb(245,80,22)" fg:x="6146" fg:w="160"/><text x="5.4684%" y="159.50"></text></g><g><title>__rust_realloc (77 instructions, 0.06%)</title><rect x="5.3102%" y="69" width="0.0648%" height="15" fill="rgb(238,129,16)" fg:x="6306" fg:w="77"/><text x="5.6032%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.11%)</title><rect x="5.3102%" y="85" width="0.1128%" height="15" fill="rgb(240,19,0)" fg:x="6306" fg:w="134"/><text x="5.6032%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (220 instructions, 0.19%)</title><rect x="5.3102%" y="101" width="0.1853%" height="15" fill="rgb(232,42,35)" fg:x="6306" fg:w="220"/><text x="5.6032%" y="111.50"></text></g><g><title>memcpy (211 instructions, 0.18%)</title><rect x="5.4954%" y="101" width="0.1777%" height="15" fill="rgb(223,130,24)" fg:x="6526" fg:w="211"/><text x="5.7884%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (471 instructions, 0.40%)</title><rect x="5.3102%" y="117" width="0.3966%" height="15" fill="rgb(237,16,22)" fg:x="6306" fg:w="471"/><text x="5.6032%" y="127.50"></text></g><g><title>memcpy (35 instructions, 0.03%)</title><rect x="5.7161%" y="69" width="0.0295%" height="15" fill="rgb(248,192,20)" fg:x="6788" fg:w="35"/><text x="6.0090%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.05%)</title><rect x="5.7161%" y="85" width="0.0539%" height="15" fill="rgb(233,167,2)" fg:x="6788" fg:w="64"/><text x="6.0090%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.12%)</title><rect x="5.7068%" y="101" width="0.1213%" height="15" fill="rgb(252,71,44)" fg:x="6777" fg:w="144"/><text x="5.9998%" y="111.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (215 instructions, 0.18%)</title><rect x="5.7068%" y="117" width="0.1810%" height="15" fill="rgb(238,37,47)" fg:x="6777" fg:w="215"/><text x="5.9998%" y="127.50"></text></g><g><title>memcpy (51 instructions, 0.04%)</title><rect x="5.8879%" y="101" width="0.0429%" height="15" fill="rgb(214,202,54)" fg:x="6992" fg:w="51"/><text x="6.1808%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.07%)</title><rect x="5.8879%" y="117" width="0.0674%" height="15" fill="rgb(254,165,40)" fg:x="6992" fg:w="80"/><text x="6.1808%" y="127.50"></text></g><g><title>core::fmt::write (927 instructions, 0.78%)</title><rect x="5.3102%" y="133" width="0.7806%" height="15" fill="rgb(246,173,38)" fg:x="6306" fg:w="927"/><text x="5.6032%" y="143.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (987 instructions, 0.83%)</title><rect x="5.3102%" y="149" width="0.8311%" height="15" fill="rgb(215,3,27)" fg:x="6306" fg:w="987"/><text x="5.6032%" y="159.50"></text></g><g><title>core::fmt::write (1,280 instructions, 1.08%)</title><rect x="5.1754%" y="165" width="1.0779%" height="15" fill="rgb(239,169,51)" fg:x="6146" fg:w="1280"/><text x="5.4684%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (1,496 instructions, 1.26%)</title><rect x="5.1081%" y="181" width="1.2598%" height="15" fill="rgb(212,5,25)" fg:x="6066" fg:w="1496"/><text x="5.4011%" y="191.50"></text></g><g><title>binread::binary_template::write_comment (52 instructions, 0.04%)</title><rect x="6.3678%" y="181" width="0.0438%" height="15" fill="rgb(243,45,17)" fg:x="7562" fg:w="52"/><text x="6.6608%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="6.4116%" y="181" width="0.0749%" height="15" fill="rgb(242,97,9)" fg:x="7614" fg:w="89"/><text x="6.7046%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="6.4866%" y="181" width="0.0387%" height="15" fill="rgb(228,71,31)" fg:x="7703" fg:w="46"/><text x="6.7795%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="6.5253%" y="181" width="0.0514%" height="15" fill="rgb(252,184,16)" fg:x="7749" fg:w="61"/><text x="6.8183%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="6.5767%" y="165" width="0.0429%" height="15" fill="rgb(236,169,46)" fg:x="7810" fg:w="51"/><text x="6.8696%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.08%)</title><rect x="6.6196%" y="165" width="0.0800%" height="15" fill="rgb(207,17,47)" fg:x="7861" fg:w="95"/><text x="6.9126%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.37%)</title><rect x="6.6996%" y="165" width="0.3680%" height="15" fill="rgb(206,201,28)" fg:x="7956" fg:w="437"/><text x="6.9926%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.02%)</title><rect x="7.0676%" y="165" width="0.0160%" height="15" fill="rgb(224,184,23)" fg:x="8393" fg:w="19"/><text x="7.3606%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.10%)</title><rect x="7.0836%" y="133" width="0.0968%" height="15" fill="rgb(208,139,48)" fg:x="8412" fg:w="115"/><text x="7.3766%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.06%)</title><rect x="7.1805%" y="101" width="0.0564%" height="15" fill="rgb(208,130,10)" fg:x="8527" fg:w="67"/><text x="7.4734%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.08%)</title><rect x="7.1805%" y="117" width="0.0808%" height="15" fill="rgb(211,213,45)" fg:x="8527" fg:w="96"/><text x="7.4734%" y="127.50"></text></g><g><title>memcpy (51 instructions, 0.04%)</title><rect x="7.2706%" y="53" width="0.0429%" height="15" fill="rgb(235,100,30)" fg:x="8634" fg:w="51"/><text x="7.5635%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.07%)</title><rect x="7.2706%" y="69" width="0.0674%" height="15" fill="rgb(206,144,31)" fg:x="8634" fg:w="80"/><text x="7.5635%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.13%)</title><rect x="7.2613%" y="85" width="0.1347%" height="15" fill="rgb(224,200,26)" fg:x="8623" fg:w="160"/><text x="7.5543%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (231 instructions, 0.19%)</title><rect x="7.2613%" y="101" width="0.1945%" height="15" fill="rgb(247,104,53)" fg:x="8623" fg:w="231"/><text x="7.5543%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (241 instructions, 0.20%)</title><rect x="7.2613%" y="117" width="0.2029%" height="15" fill="rgb(220,14,17)" fg:x="8623" fg:w="241"/><text x="7.5543%" y="127.50"></text></g><g><title>core::fmt::write (470 instructions, 0.40%)</title><rect x="7.1805%" y="133" width="0.3958%" height="15" fill="rgb(230,140,40)" fg:x="8527" fg:w="470"/><text x="7.4734%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (721 instructions, 0.61%)</title><rect x="7.0836%" y="149" width="0.6071%" height="15" fill="rgb(229,2,41)" fg:x="8412" fg:w="721"/><text x="7.3766%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.05%)</title><rect x="7.6908%" y="149" width="0.0539%" height="15" fill="rgb(232,89,16)" fg:x="9133" fg:w="64"/><text x="7.9837%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.05%)</title><rect x="7.7446%" y="149" width="0.0514%" height="15" fill="rgb(247,59,52)" fg:x="9197" fg:w="61"/><text x="8.0376%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (957 instructions, 0.81%)</title><rect x="7.0836%" y="165" width="0.8059%" height="15" fill="rgb(226,110,21)" fg:x="8412" fg:w="957"/><text x="7.3766%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="7.8895%" y="149" width="0.0429%" height="15" fill="rgb(224,176,43)" fg:x="9369" fg:w="51"/><text x="8.1825%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (299 instructions, 0.25%)</title><rect x="7.9324%" y="149" width="0.2518%" height="15" fill="rgb(221,73,6)" fg:x="9420" fg:w="299"/><text x="8.2254%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="8.1842%" y="133" width="0.0429%" height="15" fill="rgb(232,78,19)" fg:x="9719" fg:w="51"/><text x="8.4772%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.10%)</title><rect x="8.2272%" y="133" width="0.0994%" height="15" fill="rgb(233,112,48)" fg:x="9770" fg:w="118"/><text x="8.5201%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="8.3265%" y="133" width="0.0387%" height="15" fill="rgb(243,131,47)" fg:x="9888" fg:w="46"/><text x="8.6195%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.24%)</title><rect x="8.1842%" y="149" width="0.2383%" height="15" fill="rgb(226,51,1)" fg:x="9719" fg:w="283"/><text x="8.4772%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="8.4225%" y="149" width="0.0387%" height="15" fill="rgb(247,58,7)" fg:x="10002" fg:w="46"/><text x="8.7155%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (820 instructions, 0.69%)</title><rect x="7.8895%" y="165" width="0.6905%" height="15" fill="rgb(209,7,32)" fg:x="9369" fg:w="820"/><text x="8.1825%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.13%)</title><rect x="8.5800%" y="165" width="0.1339%" height="15" fill="rgb(209,39,41)" fg:x="10189" fg:w="159"/><text x="8.8730%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="8.7139%" y="149" width="0.0429%" height="15" fill="rgb(226,182,46)" fg:x="10348" fg:w="51"/><text x="9.0069%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (367 instructions, 0.31%)</title><rect x="8.7568%" y="149" width="0.3090%" height="15" fill="rgb(230,219,10)" fg:x="10399" fg:w="367"/><text x="9.0498%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="9.0659%" y="133" width="0.0429%" height="15" fill="rgb(227,175,30)" fg:x="10766" fg:w="51"/><text x="9.3588%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.10%)</title><rect x="9.1088%" y="133" width="0.0994%" height="15" fill="rgb(217,2,50)" fg:x="10817" fg:w="118"/><text x="9.4018%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="9.2082%" y="133" width="0.0387%" height="15" fill="rgb(229,160,0)" fg:x="10935" fg:w="46"/><text x="9.5012%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (288 instructions, 0.24%)</title><rect x="9.0659%" y="149" width="0.2425%" height="15" fill="rgb(207,78,37)" fg:x="10766" fg:w="288"/><text x="9.3588%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="9.3084%" y="149" width="0.0387%" height="15" fill="rgb(225,57,0)" fg:x="11054" fg:w="46"/><text x="9.6014%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="9.4659%" y="149" width="0.0429%" height="15" fill="rgb(232,154,2)" fg:x="11241" fg:w="51"/><text x="9.7588%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (367 instructions, 0.31%)</title><rect x="9.5088%" y="149" width="0.3090%" height="15" fill="rgb(241,212,25)" fg:x="11292" fg:w="367"/><text x="9.8018%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="9.8179%" y="133" width="0.0429%" height="15" fill="rgb(226,69,20)" fg:x="11659" fg:w="51"/><text x="10.1108%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.10%)</title><rect x="9.8608%" y="133" width="0.0994%" height="15" fill="rgb(247,184,54)" fg:x="11710" fg:w="118"/><text x="10.1538%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="9.9602%" y="133" width="0.0387%" height="15" fill="rgb(210,145,0)" fg:x="11828" fg:w="46"/><text x="10.2531%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.24%)</title><rect x="9.8179%" y="149" width="0.2383%" height="15" fill="rgb(253,82,12)" fg:x="11659" fg:w="283"/><text x="10.1108%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="10.0562%" y="149" width="0.0387%" height="15" fill="rgb(245,42,11)" fg:x="11942" fg:w="46"/><text x="10.3491%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,781 instructions, 1.50%)</title><rect x="8.7139%" y="165" width="1.4998%" height="15" fill="rgb(219,147,32)" fg:x="10348" fg:w="1781"/><text x="9.0069%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 instructions, 0.02%)</title><rect x="10.2136%" y="165" width="0.0211%" height="15" fill="rgb(246,12,7)" fg:x="12129" fg:w="25"/><text x="10.5066%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="10.2347%" y="165" width="0.0387%" height="15" fill="rgb(243,50,9)" fg:x="12154" fg:w="46"/><text x="10.5277%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (4,787 instructions, 4.03%)</title><rect x="6.5767%" y="181" width="4.0311%" height="15" fill="rgb(219,149,6)" fg:x="7810" fg:w="4787"/><text x="6.8696%" y="191.50">&lt;ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="10.6827%" y="149" width="0.0227%" height="15" fill="rgb(241,51,42)" fg:x="12686" fg:w="27"/><text x="10.9756%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.19%)</title><rect x="10.6077%" y="165" width="0.1945%" height="15" fill="rgb(226,128,27)" fg:x="12597" fg:w="231"/><text x="10.9007%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (389 instructions, 0.33%)</title><rect x="10.6077%" y="181" width="0.3276%" height="15" fill="rgb(244,144,4)" fg:x="12597" fg:w="389"/><text x="10.9007%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="10.9353%" y="165" width="0.0227%" height="15" fill="rgb(221,4,13)" fg:x="12986" fg:w="27"/><text x="11.2283%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.12%)</title><rect x="10.9353%" y="181" width="0.1213%" height="15" fill="rgb(208,170,28)" fg:x="12986" fg:w="144"/><text x="11.2283%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10,145 instructions, 8.54%)</title><rect x="3.2311%" y="197" width="8.5429%" height="15" fill="rgb(226,131,13)" fg:x="3837" fg:w="10145"/><text x="3.5240%" y="207.50">&lt;core::ite..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (214 instructions, 0.18%)</title><rect x="11.7740%" y="197" width="0.1802%" height="15" fill="rgb(215,72,41)" fg:x="13982" fg:w="214"/><text x="12.0670%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="11.9542%" y="181" width="0.0514%" height="15" fill="rgb(243,108,20)" fg:x="14196" fg:w="61"/><text x="12.2472%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="12.0056%" y="181" width="0.0691%" height="15" fill="rgb(230,189,17)" fg:x="14257" fg:w="82"/><text x="12.2986%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.07%)</title><rect x="12.0746%" y="165" width="0.0674%" height="15" fill="rgb(220,50,17)" fg:x="14339" fg:w="80"/><text x="12.3676%" y="175.50"></text></g><g><title>memcpy (131 instructions, 0.11%)</title><rect x="12.1420%" y="133" width="0.1103%" height="15" fill="rgb(248,152,48)" fg:x="14419" fg:w="131"/><text x="12.4350%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (160 instructions, 0.13%)</title><rect x="12.1420%" y="149" width="0.1347%" height="15" fill="rgb(244,91,11)" fg:x="14419" fg:w="160"/><text x="12.4350%" y="159.50"></text></g><g><title>__rust_realloc (77 instructions, 0.06%)</title><rect x="12.2767%" y="69" width="0.0648%" height="15" fill="rgb(220,157,5)" fg:x="14579" fg:w="77"/><text x="12.5697%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.11%)</title><rect x="12.2767%" y="85" width="0.1128%" height="15" fill="rgb(253,137,8)" fg:x="14579" fg:w="134"/><text x="12.5697%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (220 instructions, 0.19%)</title><rect x="12.2767%" y="101" width="0.1853%" height="15" fill="rgb(217,137,51)" fg:x="14579" fg:w="220"/><text x="12.5697%" y="111.50"></text></g><g><title>memcpy (211 instructions, 0.18%)</title><rect x="12.4620%" y="101" width="0.1777%" height="15" fill="rgb(218,209,53)" fg:x="14799" fg:w="211"/><text x="12.7550%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (471 instructions, 0.40%)</title><rect x="12.2767%" y="117" width="0.3966%" height="15" fill="rgb(249,137,25)" fg:x="14579" fg:w="471"/><text x="12.5697%" y="127.50"></text></g><g><title>memcpy (51 instructions, 0.04%)</title><rect x="12.6826%" y="69" width="0.0429%" height="15" fill="rgb(239,155,26)" fg:x="15061" fg:w="51"/><text x="12.9756%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.07%)</title><rect x="12.6826%" y="85" width="0.0674%" height="15" fill="rgb(227,85,46)" fg:x="15061" fg:w="80"/><text x="12.9756%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.13%)</title><rect x="12.6734%" y="101" width="0.1347%" height="15" fill="rgb(251,107,43)" fg:x="15050" fg:w="160"/><text x="12.9663%" y="111.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (265 instructions, 0.22%)</title><rect x="12.6734%" y="117" width="0.2232%" height="15" fill="rgb(234,170,33)" fg:x="15050" fg:w="265"/><text x="12.9663%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.07%)</title><rect x="12.8965%" y="53" width="0.0699%" height="15" fill="rgb(206,29,35)" fg:x="15315" fg:w="83"/><text x="13.1895%" y="63.50"></text></g><g><title>memcpy (168 instructions, 0.14%)</title><rect x="12.9664%" y="53" width="0.1415%" height="15" fill="rgb(227,138,25)" fg:x="15398" fg:w="168"/><text x="13.2594%" y="63.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="13.1079%" y="53" width="0.0749%" height="15" fill="rgb(249,131,35)" fg:x="15566" fg:w="89"/><text x="13.4008%" y="63.50"></text></g><g><title>__rust_realloc (469 instructions, 0.39%)</title><rect x="12.8965%" y="69" width="0.3949%" height="15" fill="rgb(239,6,40)" fg:x="15315" fg:w="469"/><text x="13.1895%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (526 instructions, 0.44%)</title><rect x="12.8965%" y="85" width="0.4429%" height="15" fill="rgb(246,136,47)" fg:x="15315" fg:w="526"/><text x="13.1895%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (612 instructions, 0.52%)</title><rect x="12.8965%" y="101" width="0.5154%" height="15" fill="rgb(253,58,26)" fg:x="15315" fg:w="612"/><text x="13.1895%" y="111.50"></text></g><g><title>memcpy (51 instructions, 0.04%)</title><rect x="13.4119%" y="101" width="0.0429%" height="15" fill="rgb(237,141,10)" fg:x="15927" fg:w="51"/><text x="13.7048%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (703 instructions, 0.59%)</title><rect x="12.8965%" y="117" width="0.5920%" height="15" fill="rgb(234,156,12)" fg:x="15315" fg:w="703"/><text x="13.1895%" y="127.50"></text></g><g><title>core::fmt::write (1,600 instructions, 1.35%)</title><rect x="12.2767%" y="133" width="1.3473%" height="15" fill="rgb(243,224,36)" fg:x="14579" fg:w="1600"/><text x="12.5697%" y="143.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (1,660 instructions, 1.40%)</title><rect x="12.2767%" y="149" width="1.3979%" height="15" fill="rgb(205,229,51)" fg:x="14579" fg:w="1660"/><text x="12.5697%" y="159.50"></text></g><g><title>core::fmt::write (1,953 instructions, 1.64%)</title><rect x="12.1420%" y="165" width="1.6446%" height="15" fill="rgb(223,189,4)" fg:x="14419" fg:w="1953"/><text x="12.4350%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (2,169 instructions, 1.83%)</title><rect x="12.0746%" y="181" width="1.8265%" height="15" fill="rgb(249,167,54)" fg:x="14339" fg:w="2169"/><text x="12.3676%" y="191.50"></text></g><g><title>binread::binary_template::write_comment (52 instructions, 0.04%)</title><rect x="13.9011%" y="181" width="0.0438%" height="15" fill="rgb(218,34,28)" fg:x="16508" fg:w="52"/><text x="14.1941%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="13.9449%" y="181" width="0.0699%" height="15" fill="rgb(232,109,42)" fg:x="16560" fg:w="83"/><text x="14.2379%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="14.0148%" y="181" width="0.0387%" height="15" fill="rgb(248,214,46)" fg:x="16643" fg:w="46"/><text x="14.3078%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.10%)</title><rect x="14.0535%" y="149" width="0.0968%" height="15" fill="rgb(244,216,40)" fg:x="16689" fg:w="115"/><text x="14.3465%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.13%)</title><rect x="14.0535%" y="165" width="0.1314%" height="15" fill="rgb(231,226,31)" fg:x="16689" fg:w="156"/><text x="14.3465%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (232 instructions, 0.20%)</title><rect x="14.0535%" y="181" width="0.1954%" height="15" fill="rgb(238,38,43)" fg:x="16689" fg:w="232"/><text x="14.3465%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="14.2489%" y="181" width="0.0514%" height="15" fill="rgb(208,88,43)" fg:x="16921" fg:w="61"/><text x="14.5419%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="14.3003%" y="165" width="0.0429%" height="15" fill="rgb(205,136,37)" fg:x="16982" fg:w="51"/><text x="14.5932%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.10%)</title><rect x="14.3432%" y="165" width="0.0994%" height="15" fill="rgb(237,34,14)" fg:x="17033" fg:w="118"/><text x="14.6362%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="14.4426%" y="165" width="0.0387%" height="15" fill="rgb(236,193,44)" fg:x="17151" fg:w="46"/><text x="14.7356%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.24%)</title><rect x="14.3003%" y="181" width="0.2383%" height="15" fill="rgb(231,48,10)" fg:x="16982" fg:w="283"/><text x="14.5932%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.07%)</title><rect x="14.5386%" y="181" width="0.0674%" height="15" fill="rgb(213,141,34)" fg:x="17265" fg:w="80"/><text x="14.8315%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="14.6059%" y="149" width="0.0227%" height="15" fill="rgb(249,130,34)" fg:x="17345" fg:w="27"/><text x="14.8989%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (136 instructions, 0.11%)</title><rect x="14.6059%" y="165" width="0.1145%" height="15" fill="rgb(219,42,41)" fg:x="17345" fg:w="136"/><text x="14.8989%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (221 instructions, 0.19%)</title><rect x="14.6059%" y="181" width="0.1861%" height="15" fill="rgb(224,100,54)" fg:x="17345" fg:w="221"/><text x="14.8989%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="14.7920%" y="181" width="0.0749%" height="15" fill="rgb(229,200,27)" fg:x="17566" fg:w="89"/><text x="15.0850%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,041 instructions, 3.40%)</title><rect x="11.9542%" y="197" width="3.4029%" height="15" fill="rgb(217,118,10)" fg:x="14196" fg:w="4041"/><text x="12.2472%" y="207.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 instructions, 0.02%)</title><rect x="15.3571%" y="197" width="0.0227%" height="15" fill="rgb(206,22,3)" fg:x="18237" fg:w="27"/><text x="15.6501%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="15.3798%" y="197" width="0.0387%" height="15" fill="rgb(232,163,46)" fg:x="18264" fg:w="46"/><text x="15.6728%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.08%)</title><rect x="15.4186%" y="197" width="0.0800%" height="15" fill="rgb(206,95,13)" fg:x="18310" fg:w="95"/><text x="15.7115%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.37%)</title><rect x="15.4986%" y="181" width="0.3680%" height="15" fill="rgb(253,154,18)" fg:x="18405" fg:w="437"/><text x="15.7915%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.02%)</title><rect x="15.8665%" y="181" width="0.0160%" height="15" fill="rgb(219,32,23)" fg:x="18842" fg:w="19"/><text x="16.1595%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.10%)</title><rect x="15.8825%" y="149" width="0.0968%" height="15" fill="rgb(230,191,45)" fg:x="18861" fg:w="115"/><text x="16.1755%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.06%)</title><rect x="15.9794%" y="117" width="0.0564%" height="15" fill="rgb(229,64,36)" fg:x="18976" fg:w="67"/><text x="16.2724%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.08%)</title><rect x="15.9794%" y="133" width="0.0808%" height="15" fill="rgb(205,129,25)" fg:x="18976" fg:w="96"/><text x="16.2724%" y="143.50"></text></g><g><title>memcpy (51 instructions, 0.04%)</title><rect x="16.0695%" y="69" width="0.0429%" height="15" fill="rgb(254,112,7)" fg:x="19083" fg:w="51"/><text x="16.3625%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.07%)</title><rect x="16.0695%" y="85" width="0.0674%" height="15" fill="rgb(226,53,48)" fg:x="19083" fg:w="80"/><text x="16.3625%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.13%)</title><rect x="16.0602%" y="101" width="0.1347%" height="15" fill="rgb(214,153,38)" fg:x="19072" fg:w="160"/><text x="16.3532%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (231 instructions, 0.19%)</title><rect x="16.0602%" y="117" width="0.1945%" height="15" fill="rgb(243,101,7)" fg:x="19072" fg:w="231"/><text x="16.3532%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (241 instructions, 0.20%)</title><rect x="16.0602%" y="133" width="0.2029%" height="15" fill="rgb(240,140,22)" fg:x="19072" fg:w="241"/><text x="16.3532%" y="143.50"></text></g><g><title>core::fmt::write (470 instructions, 0.40%)</title><rect x="15.9794%" y="149" width="0.3958%" height="15" fill="rgb(235,114,2)" fg:x="18976" fg:w="470"/><text x="16.2724%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (721 instructions, 0.61%)</title><rect x="15.8825%" y="165" width="0.6071%" height="15" fill="rgb(242,59,12)" fg:x="18861" fg:w="721"/><text x="16.1755%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.05%)</title><rect x="16.4897%" y="165" width="0.0539%" height="15" fill="rgb(252,134,9)" fg:x="19582" fg:w="64"/><text x="16.7827%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.05%)</title><rect x="16.5436%" y="165" width="0.0514%" height="15" fill="rgb(236,4,44)" fg:x="19646" fg:w="61"/><text x="16.8366%" y="175.50"></text></g><g><title>binread::binary_template::write_vec (957 instructions, 0.81%)</title><rect x="15.8825%" y="181" width="0.8059%" height="15" fill="rgb(254,172,41)" fg:x="18861" fg:w="957"/><text x="16.1755%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="16.6884%" y="165" width="0.0429%" height="15" fill="rgb(244,63,20)" fg:x="19818" fg:w="51"/><text x="16.9814%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.10%)</title><rect x="16.7314%" y="165" width="0.0994%" height="15" fill="rgb(250,73,31)" fg:x="19869" fg:w="118"/><text x="17.0243%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="16.8307%" y="165" width="0.0387%" height="15" fill="rgb(241,38,36)" fg:x="19987" fg:w="46"/><text x="17.1237%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.24%)</title><rect x="16.6884%" y="181" width="0.2383%" height="15" fill="rgb(245,211,2)" fg:x="19818" fg:w="283"/><text x="16.9814%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.07%)</title><rect x="16.9267%" y="181" width="0.0699%" height="15" fill="rgb(206,120,28)" fg:x="20101" fg:w="83"/><text x="17.2197%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,965 instructions, 1.65%)</title><rect x="15.4986%" y="197" width="1.6547%" height="15" fill="rgb(211,59,34)" fg:x="18405" fg:w="1965"/><text x="15.7915%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="17.1533%" y="197" width="0.0387%" height="15" fill="rgb(233,168,5)" fg:x="20370" fg:w="46"/><text x="17.4462%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="17.1920%" y="197" width="0.0691%" height="15" fill="rgb(234,33,13)" fg:x="20416" fg:w="82"/><text x="17.4850%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="17.2610%" y="181" width="0.0691%" height="15" fill="rgb(231,150,26)" fg:x="20498" fg:w="82"/><text x="17.5540%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (178 instructions, 0.15%)</title><rect x="17.2610%" y="197" width="0.1499%" height="15" fill="rgb(217,191,4)" fg:x="20498" fg:w="178"/><text x="17.5540%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.13%)</title><rect x="17.4109%" y="165" width="0.1339%" height="15" fill="rgb(246,198,38)" fg:x="20676" fg:w="159"/><text x="17.7039%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (200 instructions, 0.17%)</title><rect x="17.4109%" y="181" width="0.1684%" height="15" fill="rgb(245,64,37)" fg:x="20676" fg:w="200"/><text x="17.7039%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (287 instructions, 0.24%)</title><rect x="17.4109%" y="197" width="0.2417%" height="15" fill="rgb(250,30,36)" fg:x="20676" fg:w="287"/><text x="17.7039%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.07%)</title><rect x="17.6526%" y="197" width="0.0674%" height="15" fill="rgb(217,86,53)" fg:x="20963" fg:w="80"/><text x="17.9456%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.10%)</title><rect x="17.7200%" y="181" width="0.0968%" height="15" fill="rgb(228,157,16)" fg:x="21043" fg:w="115"/><text x="18.0129%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (211 instructions, 0.18%)</title><rect x="17.7200%" y="197" width="0.1777%" height="15" fill="rgb(217,59,31)" fg:x="21043" fg:w="211"/><text x="18.0129%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (153 instructions, 0.13%)</title><rect x="17.8977%" y="197" width="0.1288%" height="15" fill="rgb(237,138,41)" fg:x="21254" fg:w="153"/><text x="18.1906%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.07%)</title><rect x="18.0265%" y="165" width="0.0699%" height="15" fill="rgb(227,91,49)" fg:x="21407" fg:w="83"/><text x="18.3195%" y="175.50"></text></g><g><title>memcpy (99 instructions, 0.08%)</title><rect x="18.0964%" y="133" width="0.0834%" height="15" fill="rgb(247,21,44)" fg:x="21490" fg:w="99"/><text x="18.3894%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (128 instructions, 0.11%)</title><rect x="18.0964%" y="149" width="0.1078%" height="15" fill="rgb(219,210,51)" fg:x="21490" fg:w="128"/><text x="18.3894%" y="159.50"></text></g><g><title>memcpy (35 instructions, 0.03%)</title><rect x="18.2134%" y="85" width="0.0295%" height="15" fill="rgb(209,140,6)" fg:x="21629" fg:w="35"/><text x="18.5064%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.05%)</title><rect x="18.2134%" y="101" width="0.0539%" height="15" fill="rgb(221,188,24)" fg:x="21629" fg:w="64"/><text x="18.5064%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.12%)</title><rect x="18.2042%" y="117" width="0.1213%" height="15" fill="rgb(232,154,20)" fg:x="21618" fg:w="144"/><text x="18.4971%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.18%)</title><rect x="18.2042%" y="133" width="0.1768%" height="15" fill="rgb(244,137,50)" fg:x="21618" fg:w="210"/><text x="18.4971%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (230 instructions, 0.19%)</title><rect x="18.2042%" y="149" width="0.1937%" height="15" fill="rgb(225,185,43)" fg:x="21618" fg:w="230"/><text x="18.4971%" y="159.50"></text></g><g><title>core::fmt::write (491 instructions, 0.41%)</title><rect x="18.0964%" y="165" width="0.4135%" height="15" fill="rgb(213,205,38)" fg:x="21490" fg:w="491"/><text x="18.3894%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (710 instructions, 0.60%)</title><rect x="18.0265%" y="181" width="0.5979%" height="15" fill="rgb(236,73,12)" fg:x="21407" fg:w="710"/><text x="18.3195%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="18.6244%" y="181" width="0.0691%" height="15" fill="rgb(235,219,13)" fg:x="22117" fg:w="82"/><text x="18.9173%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (916 instructions, 0.77%)</title><rect x="18.0265%" y="197" width="0.7713%" height="15" fill="rgb(218,59,36)" fg:x="21407" fg:w="916"/><text x="18.3195%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (158 instructions, 0.13%)</title><rect x="18.7978%" y="197" width="0.1330%" height="15" fill="rgb(205,110,39)" fg:x="22323" fg:w="158"/><text x="19.0908%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="18.9309%" y="181" width="0.0691%" height="15" fill="rgb(218,206,42)" fg:x="22481" fg:w="82"/><text x="19.2239%" y="191.50"></text></g><g><title>memcpy (99 instructions, 0.08%)</title><rect x="18.9999%" y="149" width="0.0834%" height="15" fill="rgb(248,125,24)" fg:x="22563" fg:w="99"/><text x="19.2929%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (128 instructions, 0.11%)</title><rect x="18.9999%" y="165" width="0.1078%" height="15" fill="rgb(242,28,27)" fg:x="22563" fg:w="128"/><text x="19.2929%" y="175.50"></text></g><g><title>memcpy (35 instructions, 0.03%)</title><rect x="19.1170%" y="101" width="0.0295%" height="15" fill="rgb(216,228,15)" fg:x="22702" fg:w="35"/><text x="19.4100%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.05%)</title><rect x="19.1170%" y="117" width="0.0539%" height="15" fill="rgb(235,116,46)" fg:x="22702" fg:w="64"/><text x="19.4100%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.12%)</title><rect x="19.1077%" y="133" width="0.1213%" height="15" fill="rgb(224,18,32)" fg:x="22691" fg:w="144"/><text x="19.4007%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.18%)</title><rect x="19.1077%" y="149" width="0.1768%" height="15" fill="rgb(252,5,12)" fg:x="22691" fg:w="210"/><text x="19.4007%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (230 instructions, 0.19%)</title><rect x="19.1077%" y="165" width="0.1937%" height="15" fill="rgb(251,36,5)" fg:x="22691" fg:w="230"/><text x="19.4007%" y="175.50"></text></g><g><title>core::fmt::write (491 instructions, 0.41%)</title><rect x="18.9999%" y="181" width="0.4135%" height="15" fill="rgb(217,53,14)" fg:x="22563" fg:w="491"/><text x="19.2929%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 0.60%)</title><rect x="18.9309%" y="197" width="0.5970%" height="15" fill="rgb(215,86,45)" fg:x="22481" fg:w="709"/><text x="19.2239%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (214 instructions, 0.18%)</title><rect x="19.5279%" y="181" width="0.1802%" height="15" fill="rgb(242,169,11)" fg:x="23190" fg:w="214"/><text x="19.8209%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (280 instructions, 0.24%)</title><rect x="19.5279%" y="197" width="0.2358%" height="15" fill="rgb(211,213,45)" fg:x="23190" fg:w="280"/><text x="19.8209%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="19.7637%" y="181" width="0.0691%" height="15" fill="rgb(205,88,11)" fg:x="23470" fg:w="82"/><text x="20.0567%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (178 instructions, 0.15%)</title><rect x="19.7637%" y="197" width="0.1499%" height="15" fill="rgb(252,69,26)" fg:x="23470" fg:w="178"/><text x="20.0567%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="19.9136%" y="197" width="0.0691%" height="15" fill="rgb(246,123,37)" fg:x="23648" fg:w="82"/><text x="20.2066%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="19.9827%" y="181" width="0.0691%" height="15" fill="rgb(212,205,5)" fg:x="23730" fg:w="82"/><text x="20.2756%" y="191.50"></text></g><g><title>memcpy (99 instructions, 0.08%)</title><rect x="20.0517%" y="149" width="0.0834%" height="15" fill="rgb(253,148,0)" fg:x="23812" fg:w="99"/><text x="20.3447%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (128 instructions, 0.11%)</title><rect x="20.0517%" y="165" width="0.1078%" height="15" fill="rgb(239,22,4)" fg:x="23812" fg:w="128"/><text x="20.3447%" y="175.50"></text></g><g><title>memcpy (35 instructions, 0.03%)</title><rect x="20.1688%" y="101" width="0.0295%" height="15" fill="rgb(226,26,53)" fg:x="23951" fg:w="35"/><text x="20.4617%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.05%)</title><rect x="20.1688%" y="117" width="0.0539%" height="15" fill="rgb(225,229,45)" fg:x="23951" fg:w="64"/><text x="20.4617%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.12%)</title><rect x="20.1595%" y="133" width="0.1213%" height="15" fill="rgb(220,60,37)" fg:x="23940" fg:w="144"/><text x="20.4525%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.18%)</title><rect x="20.1595%" y="149" width="0.1768%" height="15" fill="rgb(217,180,35)" fg:x="23940" fg:w="210"/><text x="20.4525%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (230 instructions, 0.19%)</title><rect x="20.1595%" y="165" width="0.1937%" height="15" fill="rgb(229,7,53)" fg:x="23940" fg:w="230"/><text x="20.4525%" y="175.50"></text></g><g><title>core::fmt::write (491 instructions, 0.41%)</title><rect x="20.0517%" y="181" width="0.4135%" height="15" fill="rgb(254,137,3)" fg:x="23812" fg:w="491"/><text x="20.3447%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 0.60%)</title><rect x="19.9827%" y="197" width="0.5970%" height="15" fill="rgb(215,140,41)" fg:x="23730" fg:w="709"/><text x="20.2756%" y="207.50"></text></g><g><title>memcmp (134 instructions, 0.11%)</title><rect x="20.5797%" y="181" width="0.1128%" height="15" fill="rgb(250,80,15)" fg:x="24439" fg:w="134"/><text x="20.8727%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (322 instructions, 0.27%)</title><rect x="20.5797%" y="197" width="0.2712%" height="15" fill="rgb(252,191,6)" fg:x="24439" fg:w="322"/><text x="20.8727%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="20.8508%" y="165" width="0.0691%" height="15" fill="rgb(246,217,18)" fg:x="24761" fg:w="82"/><text x="21.1438%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (137 instructions, 0.12%)</title><rect x="20.8508%" y="181" width="0.1154%" height="15" fill="rgb(223,93,7)" fg:x="24761" fg:w="137"/><text x="21.1438%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.12%)</title><rect x="20.9662%" y="165" width="0.1229%" height="15" fill="rgb(225,55,52)" fg:x="24898" fg:w="146"/><text x="21.2592%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (231 instructions, 0.19%)</title><rect x="20.9662%" y="181" width="0.1945%" height="15" fill="rgb(240,31,24)" fg:x="24898" fg:w="231"/><text x="21.2592%" y="191.50"></text></g><g><title>memcmp (134 instructions, 0.11%)</title><rect x="21.1607%" y="165" width="0.1128%" height="15" fill="rgb(205,56,52)" fg:x="25129" fg:w="134"/><text x="21.4537%" y="175.50"></text></g><g><title>memcmp (134 instructions, 0.11%)</title><rect x="21.2736%" y="149" width="0.1128%" height="15" fill="rgb(246,146,12)" fg:x="25263" fg:w="134"/><text x="21.5665%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (283 instructions, 0.24%)</title><rect x="21.2736%" y="165" width="0.2383%" height="15" fill="rgb(239,84,36)" fg:x="25263" fg:w="283"/><text x="21.5665%" y="175.50"></text></g><g><title>memcmp (134 instructions, 0.11%)</title><rect x="21.5119%" y="149" width="0.1128%" height="15" fill="rgb(207,41,40)" fg:x="25546" fg:w="134"/><text x="21.8048%" y="159.50"></text></g><g><title>memcmp (146 instructions, 0.12%)</title><rect x="21.6247%" y="149" width="0.1229%" height="15" fill="rgb(241,179,25)" fg:x="25680" fg:w="146"/><text x="21.9177%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (419 instructions, 0.35%)</title><rect x="21.5119%" y="165" width="0.3528%" height="15" fill="rgb(210,0,34)" fg:x="25546" fg:w="419"/><text x="21.8048%" y="175.50"></text></g><g><title>memcmp (134 instructions, 0.11%)</title><rect x="21.8647%" y="149" width="0.1128%" height="15" fill="rgb(225,217,29)" fg:x="25965" fg:w="134"/><text x="22.1577%" y="159.50"></text></g><g><title>memcmp (146 instructions, 0.12%)</title><rect x="21.9776%" y="149" width="0.1229%" height="15" fill="rgb(216,191,38)" fg:x="26099" fg:w="146"/><text x="22.2705%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (433 instructions, 0.36%)</title><rect x="21.8647%" y="165" width="0.3646%" height="15" fill="rgb(232,140,52)" fg:x="25965" fg:w="433"/><text x="22.1577%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::is_empty (1,430 instructions, 1.20%)</title><rect x="21.1607%" y="181" width="1.2042%" height="15" fill="rgb(223,158,51)" fg:x="25129" fg:w="1430"/><text x="21.4537%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.12%)</title><rect x="22.3649%" y="165" width="0.1229%" height="15" fill="rgb(235,29,51)" fg:x="26559" fg:w="146"/><text x="22.6579%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (245 instructions, 0.21%)</title><rect x="22.3649%" y="181" width="0.2063%" height="15" fill="rgb(215,181,18)" fg:x="26559" fg:w="245"/><text x="22.6579%" y="191.50"></text></g><g><title>memcmp (134 instructions, 0.11%)</title><rect x="22.7236%" y="181" width="0.1128%" height="15" fill="rgb(227,125,34)" fg:x="26985" fg:w="134"/><text x="23.0166%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.12%)</title><rect x="22.8365%" y="181" width="0.1229%" height="15" fill="rgb(230,197,49)" fg:x="27119" fg:w="146"/><text x="23.1294%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::is_empty (2,669 instructions, 2.25%)</title><rect x="20.8508%" y="197" width="2.2475%" height="15" fill="rgb(239,141,16)" fg:x="24761" fg:w="2669"/><text x="21.1438%" y="207.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 instructions, 0.08%)</title><rect x="23.0984%" y="197" width="0.0775%" height="15" fill="rgb(225,105,43)" fg:x="27430" fg:w="92"/><text x="23.3913%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 instructions, 0.07%)</title><rect x="23.1758%" y="197" width="0.0657%" height="15" fill="rgb(214,131,14)" fg:x="27522" fg:w="78"/><text x="23.4688%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.01%)</title><rect x="23.2415%" y="197" width="0.0126%" height="15" fill="rgb(229,177,11)" fg:x="27600" fg:w="15"/><text x="23.5345%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.05%)</title><rect x="23.2541%" y="181" width="0.0514%" height="15" fill="rgb(231,180,14)" fg:x="27615" fg:w="61"/><text x="23.5471%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (219 instructions, 0.18%)</title><rect x="23.2541%" y="197" width="0.1844%" height="15" fill="rgb(232,88,2)" fg:x="27615" fg:w="219"/><text x="23.5471%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="23.4386%" y="165" width="0.0691%" height="15" fill="rgb(205,220,8)" fg:x="27834" fg:w="82"/><text x="23.7315%" y="175.50"></text></g><g><title>memcpy (99 instructions, 0.08%)</title><rect x="23.5076%" y="133" width="0.0834%" height="15" fill="rgb(225,23,53)" fg:x="27916" fg:w="99"/><text x="23.8006%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (128 instructions, 0.11%)</title><rect x="23.5076%" y="149" width="0.1078%" height="15" fill="rgb(213,62,29)" fg:x="27916" fg:w="128"/><text x="23.8006%" y="159.50"></text></g><g><title>memcpy (35 instructions, 0.03%)</title><rect x="23.6247%" y="85" width="0.0295%" height="15" fill="rgb(227,75,7)" fg:x="28055" fg:w="35"/><text x="23.9176%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.05%)</title><rect x="23.6247%" y="101" width="0.0539%" height="15" fill="rgb(207,105,14)" fg:x="28055" fg:w="64"/><text x="23.9176%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.12%)</title><rect x="23.6154%" y="117" width="0.1213%" height="15" fill="rgb(245,62,29)" fg:x="28044" fg:w="144"/><text x="23.9084%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.18%)</title><rect x="23.6154%" y="133" width="0.1768%" height="15" fill="rgb(236,202,4)" fg:x="28044" fg:w="210"/><text x="23.9084%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (230 instructions, 0.19%)</title><rect x="23.6154%" y="149" width="0.1937%" height="15" fill="rgb(250,67,1)" fg:x="28044" fg:w="230"/><text x="23.9084%" y="159.50"></text></g><g><title>core::fmt::write (491 instructions, 0.41%)</title><rect x="23.5076%" y="165" width="0.4135%" height="15" fill="rgb(253,115,44)" fg:x="27916" fg:w="491"/><text x="23.8006%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 0.60%)</title><rect x="23.4386%" y="181" width="0.5970%" height="15" fill="rgb(251,139,18)" fg:x="27834" fg:w="709"/><text x="23.7315%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="24.0356%" y="181" width="0.0691%" height="15" fill="rgb(218,22,32)" fg:x="28543" fg:w="82"/><text x="24.3286%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (915 instructions, 0.77%)</title><rect x="23.4386%" y="197" width="0.7705%" height="15" fill="rgb(243,53,5)" fg:x="27834" fg:w="915"/><text x="23.7315%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="24.2091%" y="165" width="0.0691%" height="15" fill="rgb(227,56,16)" fg:x="28749" fg:w="82"/><text x="24.5020%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.10%)</title><rect x="24.2091%" y="181" width="0.1036%" height="15" fill="rgb(245,53,0)" fg:x="28749" fg:w="123"/><text x="24.5020%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (210 instructions, 0.18%)</title><rect x="24.2091%" y="197" width="0.1768%" height="15" fill="rgb(216,170,35)" fg:x="28749" fg:w="210"/><text x="24.5020%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="24.3859%" y="197" width="0.0691%" height="15" fill="rgb(211,200,8)" fg:x="28959" fg:w="82"/><text x="24.6789%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="24.4550%" y="197" width="0.0749%" height="15" fill="rgb(228,204,44)" fg:x="29041" fg:w="89"/><text x="24.7479%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (152 instructions, 0.13%)</title><rect x="24.5299%" y="197" width="0.1280%" height="15" fill="rgb(214,121,17)" fg:x="29130" fg:w="152"/><text x="24.8229%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (158 instructions, 0.13%)</title><rect x="24.6579%" y="197" width="0.1330%" height="15" fill="rgb(233,64,38)" fg:x="29282" fg:w="158"/><text x="24.9509%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="24.7910%" y="181" width="0.0749%" height="15" fill="rgb(253,54,19)" fg:x="29440" fg:w="89"/><text x="25.0839%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (67 instructions, 0.06%)</title><rect x="24.8659%" y="181" width="0.0564%" height="15" fill="rgb(253,94,18)" fg:x="29529" fg:w="67"/><text x="25.1589%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (294 instructions, 0.25%)</title><rect x="24.7910%" y="197" width="0.2476%" height="15" fill="rgb(227,57,52)" fg:x="29440" fg:w="294"/><text x="25.0839%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="25.1135%" y="181" width="0.0227%" height="15" fill="rgb(230,228,50)" fg:x="29823" fg:w="27"/><text x="25.4064%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.06%)</title><rect x="25.1362%" y="181" width="0.0564%" height="15" fill="rgb(217,205,27)" fg:x="29850" fg:w="67"/><text x="25.4292%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (278 instructions, 0.23%)</title><rect x="25.0385%" y="197" width="0.2341%" height="15" fill="rgb(252,71,50)" fg:x="29734" fg:w="278"/><text x="25.3315%" y="207.50"></text></g><g><title>memcpy (392 instructions, 0.33%)</title><rect x="25.2726%" y="197" width="0.3301%" height="15" fill="rgb(209,86,4)" fg:x="30012" fg:w="392"/><text x="25.5656%" y="207.50"></text></g><g><title>memcpy (392 instructions, 0.33%)</title><rect x="25.6027%" y="197" width="0.3301%" height="15" fill="rgb(229,94,0)" fg:x="30404" fg:w="392"/><text x="25.8957%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.42%)</title><rect x="25.9328%" y="197" width="0.4244%" height="15" fill="rgb(252,223,21)" fg:x="30796" fg:w="504"/><text x="26.2258%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (32,403 instructions, 27.29%)</title><rect x="1.2758%" y="213" width="27.2860%" height="15" fill="rgb(230,210,4)" fg:x="1515" fg:w="32403"/><text x="1.5687%" y="223.50">candid::de::IDLDeserialize::new_with_..</text></g><g><title>memcpy (408 instructions, 0.34%)</title><rect x="28.5618%" y="213" width="0.3436%" height="15" fill="rgb(240,149,38)" fg:x="33918" fg:w="408"/><text x="28.8548%" y="223.50"></text></g><g><title>memcpy (408 instructions, 0.34%)</title><rect x="28.9054%" y="213" width="0.3436%" height="15" fill="rgb(254,105,20)" fg:x="34326" fg:w="408"/><text x="29.1983%" y="223.50"></text></g><g><title>candid::types::internal::find_type (107 instructions, 0.09%)</title><rect x="29.2489%" y="197" width="0.0901%" height="15" fill="rgb(253,87,46)" fg:x="34734" fg:w="107"/><text x="29.5419%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="29.3390%" y="197" width="0.0691%" height="15" fill="rgb(253,116,33)" fg:x="34841" fg:w="82"/><text x="29.6320%" y="207.50"></text></g><g><title>memmove (220 instructions, 0.19%)</title><rect x="29.4081%" y="181" width="0.1853%" height="15" fill="rgb(229,198,5)" fg:x="34923" fg:w="220"/><text x="29.7011%" y="191.50"></text></g><g><title>memmove (220 instructions, 0.19%)</title><rect x="29.5934%" y="181" width="0.1853%" height="15" fill="rgb(242,38,37)" fg:x="35143" fg:w="220"/><text x="29.8863%" y="191.50"></text></g><g><title>candid::types::internal::env_add (664 instructions, 0.56%)</title><rect x="29.4081%" y="197" width="0.5591%" height="15" fill="rgb(242,69,53)" fg:x="34923" fg:w="664"/><text x="29.7011%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="29.9672%" y="197" width="0.0691%" height="15" fill="rgb(249,80,16)" fg:x="35587" fg:w="82"/><text x="30.2602%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="30.0363%" y="197" width="0.0691%" height="15" fill="rgb(206,128,11)" fg:x="35669" fg:w="82"/><text x="30.3293%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.07%)</title><rect x="30.1053%" y="197" width="0.0699%" height="15" fill="rgb(212,35,20)" fg:x="35751" fg:w="83"/><text x="30.3983%" y="207.50"></text></g><g><title>memcmp (491 instructions, 0.41%)</title><rect x="30.1752%" y="165" width="0.4135%" height="15" fill="rgb(236,79,13)" fg:x="35834" fg:w="491"/><text x="30.4682%" y="175.50"></text></g><g><title>candid::types::internal::find_type (686 instructions, 0.58%)</title><rect x="30.1752%" y="181" width="0.5777%" height="15" fill="rgb(233,123,3)" fg:x="35834" fg:w="686"/><text x="30.4682%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (730 instructions, 0.61%)</title><rect x="30.1752%" y="197" width="0.6147%" height="15" fill="rgb(214,93,52)" fg:x="35834" fg:w="730"/><text x="30.4682%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="30.7900%" y="197" width="0.0691%" height="15" fill="rgb(251,37,40)" fg:x="36564" fg:w="82"/><text x="31.0829%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="30.8590%" y="197" width="0.0691%" height="15" fill="rgb(227,80,54)" fg:x="36646" fg:w="82"/><text x="31.1520%" y="207.50"></text></g><g><title>candid::types::internal::find_type (107 instructions, 0.09%)</title><rect x="30.9281%" y="181" width="0.0901%" height="15" fill="rgb(254,48,11)" fg:x="36728" fg:w="107"/><text x="31.2210%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (158 instructions, 0.13%)</title><rect x="31.0182%" y="181" width="0.1330%" height="15" fill="rgb(235,193,26)" fg:x="36835" fg:w="158"/><text x="31.3111%" y="191.50"></text></g><g><title>memmove (268 instructions, 0.23%)</title><rect x="31.1512%" y="165" width="0.2257%" height="15" fill="rgb(229,99,21)" fg:x="36993" fg:w="268"/><text x="31.4442%" y="175.50"></text></g><g><title>memmove (140 instructions, 0.12%)</title><rect x="31.3769%" y="165" width="0.1179%" height="15" fill="rgb(211,140,41)" fg:x="37261" fg:w="140"/><text x="31.6699%" y="175.50"></text></g><g><title>candid::types::internal::env_add (632 instructions, 0.53%)</title><rect x="31.1512%" y="181" width="0.5322%" height="15" fill="rgb(240,227,30)" fg:x="36993" fg:w="632"/><text x="31.4442%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (214 instructions, 0.18%)</title><rect x="31.6834%" y="181" width="0.1802%" height="15" fill="rgb(215,224,45)" fg:x="37625" fg:w="214"/><text x="31.9764%" y="191.50"></text></g><g><title>memcmp (537 instructions, 0.45%)</title><rect x="31.8636%" y="165" width="0.4522%" height="15" fill="rgb(206,123,31)" fg:x="37839" fg:w="537"/><text x="32.1566%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="32.3158%" y="133" width="0.0227%" height="15" fill="rgb(210,138,16)" fg:x="38376" fg:w="27"/><text x="32.6088%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.12%)</title><rect x="32.3158%" y="149" width="0.1196%" height="15" fill="rgb(228,57,28)" fg:x="38376" fg:w="142"/><text x="32.6088%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (213 instructions, 0.18%)</title><rect x="32.3158%" y="165" width="0.1794%" height="15" fill="rgb(242,170,10)" fg:x="38376" fg:w="213"/><text x="32.6088%" y="175.50"></text></g><g><title>candid::types::internal::env_add (929 instructions, 0.78%)</title><rect x="31.8636%" y="181" width="0.7823%" height="15" fill="rgb(228,214,39)" fg:x="37839" fg:w="929"/><text x="32.1566%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="32.6459%" y="165" width="0.0286%" height="15" fill="rgb(218,179,33)" fg:x="38768" fg:w="34"/><text x="32.9389%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="32.6745%" y="165" width="0.0286%" height="15" fill="rgb(235,193,39)" fg:x="38802" fg:w="34"/><text x="32.9675%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="32.7032%" y="165" width="0.0286%" height="15" fill="rgb(219,221,36)" fg:x="38836" fg:w="34"/><text x="32.9961%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="32.7318%" y="165" width="0.0286%" height="15" fill="rgb(248,218,19)" fg:x="38870" fg:w="34"/><text x="33.0248%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="32.7604%" y="165" width="0.0286%" height="15" fill="rgb(205,50,9)" fg:x="38904" fg:w="34"/><text x="33.0534%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="32.7891%" y="165" width="0.0286%" height="15" fill="rgb(238,81,28)" fg:x="38938" fg:w="34"/><text x="33.0820%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="32.8177%" y="165" width="0.0286%" height="15" fill="rgb(235,110,19)" fg:x="38972" fg:w="34"/><text x="33.1107%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="32.8463%" y="165" width="0.0286%" height="15" fill="rgb(214,7,14)" fg:x="39006" fg:w="34"/><text x="33.1393%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="32.8750%" y="165" width="0.0286%" height="15" fill="rgb(211,77,3)" fg:x="39040" fg:w="34"/><text x="33.1679%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (49 instructions, 0.04%)</title><rect x="32.9036%" y="165" width="0.0413%" height="15" fill="rgb(229,5,9)" fg:x="39074" fg:w="49"/><text x="33.1966%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="32.9449%" y="165" width="0.0118%" height="15" fill="rgb(225,90,11)" fg:x="39123" fg:w="14"/><text x="33.2378%" y="175.50"></text></g><g><title>candid::types::internal::env_id (842 instructions, 0.71%)</title><rect x="32.6459%" y="181" width="0.7090%" height="15" fill="rgb(242,56,8)" fg:x="38768" fg:w="842"/><text x="32.9389%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (3,001 instructions, 2.53%)</title><rect x="30.9281%" y="197" width="2.5271%" height="15" fill="rgb(249,212,39)" fg:x="36728" fg:w="3001"/><text x="31.2210%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="33.4552%" y="197" width="0.0691%" height="15" fill="rgb(236,90,9)" fg:x="39729" fg:w="82"/><text x="33.7481%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="33.5242%" y="197" width="0.0691%" height="15" fill="rgb(206,88,35)" fg:x="39811" fg:w="82"/><text x="33.8172%" y="207.50"></text></g><g><title>candid::types::internal::find_type (189 instructions, 0.16%)</title><rect x="33.5933%" y="197" width="0.1592%" height="15" fill="rgb(205,126,30)" fg:x="39893" fg:w="189"/><text x="33.8862%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="33.7524%" y="197" width="0.0691%" height="15" fill="rgb(230,176,12)" fg:x="40082" fg:w="82"/><text x="34.0454%" y="207.50"></text></g><g><title>memmove (220 instructions, 0.19%)</title><rect x="33.8215%" y="181" width="0.1853%" height="15" fill="rgb(243,19,9)" fg:x="40164" fg:w="220"/><text x="34.1144%" y="191.50"></text></g><g><title>memmove (220 instructions, 0.19%)</title><rect x="34.0067%" y="181" width="0.1853%" height="15" fill="rgb(245,171,17)" fg:x="40384" fg:w="220"/><text x="34.2997%" y="191.50"></text></g><g><title>candid::types::internal::env_add (746 instructions, 0.63%)</title><rect x="33.8215%" y="197" width="0.6282%" height="15" fill="rgb(227,52,21)" fg:x="40164" fg:w="746"/><text x="34.1144%" y="207.50"></text></g><g><title>candid::types::internal::find_type (230 instructions, 0.19%)</title><rect x="34.4497%" y="197" width="0.1937%" height="15" fill="rgb(238,69,14)" fg:x="40910" fg:w="230"/><text x="34.7426%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="34.6433%" y="197" width="0.0691%" height="15" fill="rgb(241,156,39)" fg:x="41140" fg:w="82"/><text x="34.9363%" y="207.50"></text></g><g><title>memmove (220 instructions, 0.19%)</title><rect x="34.7124%" y="181" width="0.1853%" height="15" fill="rgb(212,227,28)" fg:x="41222" fg:w="220"/><text x="35.0054%" y="191.50"></text></g><g><title>memmove (220 instructions, 0.19%)</title><rect x="34.8976%" y="181" width="0.1853%" height="15" fill="rgb(209,118,27)" fg:x="41442" fg:w="220"/><text x="35.1906%" y="191.50"></text></g><g><title>candid::types::internal::env_add (787 instructions, 0.66%)</title><rect x="34.7124%" y="197" width="0.6627%" height="15" fill="rgb(226,102,5)" fg:x="41222" fg:w="787"/><text x="35.0054%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="35.3751%" y="197" width="0.0691%" height="15" fill="rgb(223,34,3)" fg:x="42009" fg:w="82"/><text x="35.6681%" y="207.50"></text></g><g><title>memcmp (54 instructions, 0.05%)</title><rect x="35.4442%" y="181" width="0.0455%" height="15" fill="rgb(221,81,38)" fg:x="42091" fg:w="54"/><text x="35.7371%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="35.4896%" y="165" width="0.0749%" height="15" fill="rgb(236,219,28)" fg:x="42145" fg:w="89"/><text x="35.7826%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.13%)</title><rect x="35.4896%" y="181" width="0.1347%" height="15" fill="rgb(213,200,14)" fg:x="42145" fg:w="160"/><text x="35.7826%" y="191.50"></text></g><g><title>candid::types::internal::env_add (516 instructions, 0.43%)</title><rect x="35.4442%" y="197" width="0.4345%" height="15" fill="rgb(240,33,19)" fg:x="42091" fg:w="516"/><text x="35.7371%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="35.8787%" y="181" width="0.0286%" height="15" fill="rgb(233,113,27)" fg:x="42607" fg:w="34"/><text x="36.1716%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="35.9073%" y="181" width="0.0286%" height="15" fill="rgb(220,221,18)" fg:x="42641" fg:w="34"/><text x="36.2003%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (49 instructions, 0.04%)</title><rect x="35.9359%" y="181" width="0.0413%" height="15" fill="rgb(238,92,8)" fg:x="42675" fg:w="49"/><text x="36.2289%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="35.9772%" y="181" width="0.0118%" height="15" fill="rgb(222,164,16)" fg:x="42724" fg:w="14"/><text x="36.2702%" y="191.50"></text></g><g><title>candid::types::internal::env_id (369 instructions, 0.31%)</title><rect x="35.8787%" y="197" width="0.3107%" height="15" fill="rgb(241,119,3)" fg:x="42607" fg:w="369"/><text x="36.1716%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="36.1894%" y="197" width="0.0691%" height="15" fill="rgb(241,44,8)" fg:x="42976" fg:w="82"/><text x="36.4824%" y="207.50"></text></g><g><title>memcmp (445 instructions, 0.37%)</title><rect x="36.2585%" y="181" width="0.3747%" height="15" fill="rgb(230,36,40)" fg:x="43058" fg:w="445"/><text x="36.5514%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="36.6332%" y="165" width="0.0749%" height="15" fill="rgb(243,16,36)" fg:x="43503" fg:w="89"/><text x="36.9261%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.13%)</title><rect x="36.6332%" y="181" width="0.1347%" height="15" fill="rgb(231,4,26)" fg:x="43503" fg:w="160"/><text x="36.9261%" y="191.50"></text></g><g><title>candid::types::internal::env_add (866 instructions, 0.73%)</title><rect x="36.2585%" y="197" width="0.7292%" height="15" fill="rgb(240,9,31)" fg:x="43058" fg:w="866"/><text x="36.5514%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="36.9877%" y="181" width="0.0286%" height="15" fill="rgb(207,173,15)" fg:x="43924" fg:w="34"/><text x="37.2807%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="37.0163%" y="181" width="0.0286%" height="15" fill="rgb(224,192,53)" fg:x="43958" fg:w="34"/><text x="37.3093%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="37.0450%" y="181" width="0.0286%" height="15" fill="rgb(223,67,28)" fg:x="43992" fg:w="34"/><text x="37.3379%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="37.0736%" y="181" width="0.0286%" height="15" fill="rgb(211,20,47)" fg:x="44026" fg:w="34"/><text x="37.3666%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="37.1022%" y="181" width="0.0286%" height="15" fill="rgb(240,228,2)" fg:x="44060" fg:w="34"/><text x="37.3952%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (111 instructions, 0.09%)</title><rect x="37.1309%" y="181" width="0.0935%" height="15" fill="rgb(248,151,12)" fg:x="44094" fg:w="111"/><text x="37.4238%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="37.2243%" y="181" width="0.0118%" height="15" fill="rgb(244,8,39)" fg:x="44205" fg:w="14"/><text x="37.5173%" y="191.50"></text></g><g><title>candid::types::internal::env_id (632 instructions, 0.53%)</title><rect x="36.9877%" y="197" width="0.5322%" height="15" fill="rgb(222,26,8)" fg:x="43924" fg:w="632"/><text x="37.2807%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="37.5199%" y="197" width="0.0691%" height="15" fill="rgb(213,106,44)" fg:x="44556" fg:w="82"/><text x="37.8129%" y="207.50"></text></g><g><title>memcmp (767 instructions, 0.65%)</title><rect x="37.5889%" y="181" width="0.6459%" height="15" fill="rgb(214,129,20)" fg:x="44638" fg:w="767"/><text x="37.8819%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="38.2348%" y="165" width="0.0749%" height="15" fill="rgb(212,32,13)" fg:x="45405" fg:w="89"/><text x="38.5278%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.13%)</title><rect x="38.2348%" y="181" width="0.1347%" height="15" fill="rgb(208,168,33)" fg:x="45405" fg:w="160"/><text x="38.5278%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,147 instructions, 0.97%)</title><rect x="37.5889%" y="197" width="0.9659%" height="15" fill="rgb(231,207,8)" fg:x="44638" fg:w="1147"/><text x="37.8819%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.02%)</title><rect x="38.5548%" y="149" width="0.0160%" height="15" fill="rgb(235,219,23)" fg:x="45785" fg:w="19"/><text x="38.8478%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.12%)</title><rect x="38.5548%" y="165" width="0.1187%" height="15" fill="rgb(226,216,26)" fg:x="45785" fg:w="141"/><text x="38.8478%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.02%)</title><rect x="38.7300%" y="149" width="0.0160%" height="15" fill="rgb(239,137,16)" fg:x="45993" fg:w="19"/><text x="39.0229%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.12%)</title><rect x="38.7300%" y="165" width="0.1187%" height="15" fill="rgb(207,12,36)" fg:x="45993" fg:w="141"/><text x="39.0229%" y="175.50"></text></g><g><title>memcmp (146 instructions, 0.12%)</title><rect x="38.9051%" y="149" width="0.1229%" height="15" fill="rgb(210,214,24)" fg:x="46201" fg:w="146"/><text x="39.1981%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.03%)</title><rect x="39.0281%" y="149" width="0.0345%" height="15" fill="rgb(206,56,30)" fg:x="46347" fg:w="41"/><text x="39.3210%" y="159.50"></text></g><g><title>memcmp (261 instructions, 0.22%)</title><rect x="39.0626%" y="149" width="0.2198%" height="15" fill="rgb(228,143,26)" fg:x="46388" fg:w="261"/><text x="39.3556%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.03%)</title><rect x="39.2824%" y="149" width="0.0345%" height="15" fill="rgb(216,218,46)" fg:x="46649" fg:w="41"/><text x="39.5753%" y="159.50"></text></g><g><title>memcmp (169 instructions, 0.14%)</title><rect x="39.3169%" y="149" width="0.1423%" height="15" fill="rgb(206,6,19)" fg:x="46690" fg:w="169"/><text x="39.6099%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (105 instructions, 0.09%)</title><rect x="39.4592%" y="149" width="0.0884%" height="15" fill="rgb(239,177,51)" fg:x="46859" fg:w="105"/><text x="39.7522%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,150 instructions, 0.97%)</title><rect x="38.9051%" y="165" width="0.9684%" height="15" fill="rgb(216,55,25)" fg:x="46201" fg:w="1150"/><text x="39.1981%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (1,633 instructions, 1.38%)</title><rect x="38.5548%" y="181" width="1.3751%" height="15" fill="rgb(231,163,29)" fg:x="45785" fg:w="1633"/><text x="38.8478%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="39.9299%" y="181" width="0.0118%" height="15" fill="rgb(232,149,50)" fg:x="47418" fg:w="14"/><text x="40.2229%" y="191.50"></text></g><g><title>candid::types::internal::env_id (1,889 instructions, 1.59%)</title><rect x="38.5548%" y="197" width="1.5907%" height="15" fill="rgb(223,142,48)" fg:x="45785" fg:w="1889"/><text x="38.8478%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (13,488 instructions, 11.36%)</title><rect x="29.2489%" y="213" width="11.3580%" height="15" fill="rgb(245,83,23)" fg:x="34734" fg:w="13488"/><text x="29.5419%" y="223.50">candid::types:..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.04%)</title><rect x="40.6070%" y="213" width="0.0413%" height="15" fill="rgb(224,63,2)" fg:x="48222" fg:w="49"/><text x="40.8999%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="40.6482%" y="181" width="0.0227%" height="15" fill="rgb(218,65,53)" fg:x="48271" fg:w="27"/><text x="40.9412%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.12%)</title><rect x="40.6482%" y="197" width="0.1196%" height="15" fill="rgb(221,84,29)" fg:x="48271" fg:w="142"/><text x="40.9412%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="40.8276%" y="197" width="0.0749%" height="15" fill="rgb(234,0,32)" fg:x="48484" fg:w="89"/><text x="41.1206%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (373 instructions, 0.31%)</title><rect x="40.6482%" y="213" width="0.3141%" height="15" fill="rgb(206,20,16)" fg:x="48271" fg:w="373"/><text x="40.9412%" y="223.50"></text></g><g><title>memcmp (146 instructions, 0.12%)</title><rect x="40.9623%" y="149" width="0.1229%" height="15" fill="rgb(244,172,18)" fg:x="48644" fg:w="146"/><text x="41.2553%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (231 instructions, 0.19%)</title><rect x="40.9623%" y="165" width="0.1945%" height="15" fill="rgb(254,133,1)" fg:x="48644" fg:w="231"/><text x="41.2553%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.04%)</title><rect x="41.1569%" y="165" width="0.0413%" height="15" fill="rgb(222,206,41)" fg:x="48875" fg:w="49"/><text x="41.4498%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (346 instructions, 0.29%)</title><rect x="40.9623%" y="181" width="0.2914%" height="15" fill="rgb(212,3,42)" fg:x="48644" fg:w="346"/><text x="41.2553%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="41.2537%" y="181" width="0.0118%" height="15" fill="rgb(241,11,4)" fg:x="48990" fg:w="14"/><text x="41.5467%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (444 instructions, 0.37%)</title><rect x="40.9623%" y="197" width="0.3739%" height="15" fill="rgb(205,19,26)" fg:x="48644" fg:w="444"/><text x="41.2553%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="41.3362%" y="197" width="0.0261%" height="15" fill="rgb(210,179,32)" fg:x="49088" fg:w="31"/><text x="41.6292%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="41.3623%" y="181" width="0.0691%" height="15" fill="rgb(227,116,49)" fg:x="49119" fg:w="82"/><text x="41.6553%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.07%)</title><rect x="41.6099%" y="181" width="0.0674%" height="15" fill="rgb(211,146,6)" fg:x="49413" fg:w="80"/><text x="41.9029%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (586 instructions, 0.49%)</title><rect x="41.3623%" y="197" width="0.4935%" height="15" fill="rgb(219,44,39)" fg:x="49119" fg:w="586"/><text x="41.6553%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="41.8558%" y="197" width="0.0261%" height="15" fill="rgb(234,128,11)" fg:x="49705" fg:w="31"/><text x="42.1488%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="41.8819%" y="197" width="0.0118%" height="15" fill="rgb(220,183,53)" fg:x="49736" fg:w="14"/><text x="42.1749%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.01%)</title><rect x="41.8937%" y="197" width="0.0101%" height="15" fill="rgb(213,219,32)" fg:x="49750" fg:w="12"/><text x="42.1866%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="41.9038%" y="197" width="0.0118%" height="15" fill="rgb(232,156,16)" fg:x="49762" fg:w="14"/><text x="42.1968%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.01%)</title><rect x="41.9156%" y="197" width="0.0101%" height="15" fill="rgb(246,135,34)" fg:x="49776" fg:w="12"/><text x="42.2085%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="41.9257%" y="197" width="0.0261%" height="15" fill="rgb(241,99,0)" fg:x="49788" fg:w="31"/><text x="42.2186%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.10%)</title><rect x="41.9518%" y="197" width="0.0968%" height="15" fill="rgb(222,103,45)" fg:x="49819" fg:w="115"/><text x="42.2448%" y="207.50"></text></g><g><title>memcpy (115 instructions, 0.10%)</title><rect x="42.0486%" y="197" width="0.0968%" height="15" fill="rgb(212,57,4)" fg:x="49934" fg:w="115"/><text x="42.3416%" y="207.50"></text></g><g><title>memcmp (146 instructions, 0.12%)</title><rect x="42.1455%" y="197" width="0.1229%" height="15" fill="rgb(215,68,47)" fg:x="50049" fg:w="146"/><text x="42.4384%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.05%)</title><rect x="42.2684%" y="197" width="0.0514%" height="15" fill="rgb(230,84,2)" fg:x="50195" fg:w="61"/><text x="42.5614%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.01%)</title><rect x="42.3198%" y="197" width="0.0101%" height="15" fill="rgb(220,102,14)" fg:x="50256" fg:w="12"/><text x="42.6127%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="42.3299%" y="197" width="0.0261%" height="15" fill="rgb(240,10,32)" fg:x="50268" fg:w="31"/><text x="42.6228%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="42.3560%" y="181" width="0.0312%" height="15" fill="rgb(215,47,27)" fg:x="50299" fg:w="37"/><text x="42.6490%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="42.3871%" y="181" width="0.0286%" height="15" fill="rgb(233,188,43)" fg:x="50336" fg:w="34"/><text x="42.6801%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="42.4158%" y="181" width="0.0286%" height="15" fill="rgb(253,190,1)" fg:x="50370" fg:w="34"/><text x="42.7087%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="42.4444%" y="165" width="0.0429%" height="15" fill="rgb(206,114,52)" fg:x="50404" fg:w="51"/><text x="42.7374%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.08%)</title><rect x="42.4873%" y="165" width="0.0800%" height="15" fill="rgb(233,120,37)" fg:x="50455" fg:w="95"/><text x="42.7803%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="42.5673%" y="165" width="0.0387%" height="15" fill="rgb(214,52,39)" fg:x="50550" fg:w="46"/><text x="42.8603%" y="175.50"></text></g><g><title>binread::BinRead::read (255 instructions, 0.21%)</title><rect x="42.4444%" y="181" width="0.2147%" height="15" fill="rgb(223,80,29)" fg:x="50404" fg:w="255"/><text x="42.7374%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="42.6591%" y="181" width="0.0261%" height="15" fill="rgb(230,101,40)" fg:x="50659" fg:w="31"/><text x="42.9521%" y="191.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (56 instructions, 0.05%)</title><rect x="42.6852%" y="181" width="0.0472%" height="15" fill="rgb(219,211,8)" fg:x="50690" fg:w="56"/><text x="42.9782%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="42.7324%" y="165" width="0.0691%" height="15" fill="rgb(252,126,28)" fg:x="50746" fg:w="82"/><text x="43.0254%" y="175.50"></text></g><g><title>memcpy (194 instructions, 0.16%)</title><rect x="42.8014%" y="165" width="0.1634%" height="15" fill="rgb(215,56,38)" fg:x="50828" fg:w="194"/><text x="43.0944%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (318 instructions, 0.27%)</title><rect x="42.7324%" y="181" width="0.2678%" height="15" fill="rgb(249,55,44)" fg:x="50746" fg:w="318"/><text x="43.0254%" y="191.50"></text></g><g><title>core::str::converts::from_utf8 (174 instructions, 0.15%)</title><rect x="43.0002%" y="181" width="0.1465%" height="15" fill="rgb(220,221,32)" fg:x="51064" fg:w="174"/><text x="43.2931%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,096 instructions, 0.92%)</title><rect x="42.3560%" y="197" width="0.9229%" height="15" fill="rgb(212,216,41)" fg:x="50299" fg:w="1096"/><text x="42.6490%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="43.2789%" y="197" width="0.0261%" height="15" fill="rgb(228,213,43)" fg:x="51395" fg:w="31"/><text x="43.5719%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="43.3050%" y="197" width="0.0118%" height="15" fill="rgb(211,31,26)" fg:x="51426" fg:w="14"/><text x="43.5980%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.01%)</title><rect x="43.3168%" y="197" width="0.0101%" height="15" fill="rgb(229,202,19)" fg:x="51440" fg:w="12"/><text x="43.6098%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="43.3269%" y="197" width="0.0118%" height="15" fill="rgb(229,105,46)" fg:x="51452" fg:w="14"/><text x="43.6199%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.01%)</title><rect x="43.3387%" y="197" width="0.0101%" height="15" fill="rgb(235,108,1)" fg:x="51466" fg:w="12"/><text x="43.6317%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="43.3488%" y="197" width="0.0261%" height="15" fill="rgb(245,111,35)" fg:x="51478" fg:w="31"/><text x="43.6418%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.07%)</title><rect x="43.3749%" y="197" width="0.0674%" height="15" fill="rgb(219,185,31)" fg:x="51509" fg:w="80"/><text x="43.6679%" y="207.50"></text></g><g><title>memcpy (195 instructions, 0.16%)</title><rect x="43.4423%" y="197" width="0.1642%" height="15" fill="rgb(214,4,43)" fg:x="51589" fg:w="195"/><text x="43.7352%" y="207.50"></text></g><g><title>memcmp (261 instructions, 0.22%)</title><rect x="43.6065%" y="197" width="0.2198%" height="15" fill="rgb(235,227,40)" fg:x="51784" fg:w="261"/><text x="43.8994%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="43.8263%" y="197" width="0.0749%" height="15" fill="rgb(230,88,30)" fg:x="52045" fg:w="89"/><text x="44.1192%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.01%)</title><rect x="43.9012%" y="197" width="0.0101%" height="15" fill="rgb(216,217,1)" fg:x="52134" fg:w="12"/><text x="44.1942%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="43.9113%" y="181" width="0.0261%" height="15" fill="rgb(248,139,50)" fg:x="52146" fg:w="31"/><text x="44.2043%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="43.9374%" y="165" width="0.0312%" height="15" fill="rgb(233,1,21)" fg:x="52177" fg:w="37"/><text x="44.2304%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="43.9686%" y="165" width="0.0312%" height="15" fill="rgb(215,183,12)" fg:x="52214" fg:w="37"/><text x="44.2615%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="43.9997%" y="165" width="0.0286%" height="15" fill="rgb(229,104,42)" fg:x="52251" fg:w="34"/><text x="44.2927%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="44.0284%" y="165" width="0.0286%" height="15" fill="rgb(243,34,48)" fg:x="52285" fg:w="34"/><text x="44.3213%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="44.0570%" y="165" width="0.0691%" height="15" fill="rgb(239,11,44)" fg:x="52319" fg:w="82"/><text x="44.3500%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="44.1260%" y="149" width="0.0429%" height="15" fill="rgb(231,98,35)" fg:x="52401" fg:w="51"/><text x="44.4190%" y="159.50"></text></g><g><title>binread::binary_template::write_named (61 instructions, 0.05%)</title><rect x="44.1690%" y="133" width="0.0514%" height="15" fill="rgb(233,28,25)" fg:x="52452" fg:w="61"/><text x="44.4620%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (140 instructions, 0.12%)</title><rect x="44.1690%" y="149" width="0.1179%" height="15" fill="rgb(234,123,11)" fg:x="52452" fg:w="140"/><text x="44.4620%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.08%)</title><rect x="44.2869%" y="149" width="0.0800%" height="15" fill="rgb(220,69,3)" fg:x="52592" fg:w="95"/><text x="44.5798%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.37%)</title><rect x="44.3669%" y="149" width="0.3680%" height="15" fill="rgb(214,64,36)" fg:x="52687" fg:w="437"/><text x="44.6598%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.10%)</title><rect x="44.7349%" y="117" width="0.0968%" height="15" fill="rgb(211,138,32)" fg:x="53124" fg:w="115"/><text x="45.0278%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.06%)</title><rect x="44.8317%" y="85" width="0.0564%" height="15" fill="rgb(213,118,47)" fg:x="53239" fg:w="67"/><text x="45.1247%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.08%)</title><rect x="44.8317%" y="101" width="0.0808%" height="15" fill="rgb(243,124,49)" fg:x="53239" fg:w="96"/><text x="45.1247%" y="111.50"></text></g><g><title>memcpy (51 instructions, 0.04%)</title><rect x="44.9218%" y="37" width="0.0429%" height="15" fill="rgb(221,30,28)" fg:x="53346" fg:w="51"/><text x="45.2148%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.07%)</title><rect x="44.9218%" y="53" width="0.0674%" height="15" fill="rgb(246,37,13)" fg:x="53346" fg:w="80"/><text x="45.2148%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (160 instructions, 0.13%)</title><rect x="44.9125%" y="69" width="0.1347%" height="15" fill="rgb(249,66,14)" fg:x="53335" fg:w="160"/><text x="45.2055%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (231 instructions, 0.19%)</title><rect x="44.9125%" y="85" width="0.1945%" height="15" fill="rgb(213,166,5)" fg:x="53335" fg:w="231"/><text x="45.2055%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (241 instructions, 0.20%)</title><rect x="44.9125%" y="101" width="0.2029%" height="15" fill="rgb(221,66,24)" fg:x="53335" fg:w="241"/><text x="45.2055%" y="111.50"></text></g><g><title>core::fmt::write (470 instructions, 0.40%)</title><rect x="44.8317%" y="117" width="0.3958%" height="15" fill="rgb(210,132,17)" fg:x="53239" fg:w="470"/><text x="45.1247%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (721 instructions, 0.61%)</title><rect x="44.7349%" y="133" width="0.6071%" height="15" fill="rgb(243,202,5)" fg:x="53124" fg:w="721"/><text x="45.0278%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.05%)</title><rect x="45.3420%" y="133" width="0.0539%" height="15" fill="rgb(233,70,48)" fg:x="53845" fg:w="64"/><text x="45.6350%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.05%)</title><rect x="45.3959%" y="133" width="0.0514%" height="15" fill="rgb(238,41,26)" fg:x="53909" fg:w="61"/><text x="45.6889%" y="143.50"></text></g><g><title>binread::binary_template::write_vec (957 instructions, 0.81%)</title><rect x="44.7349%" y="149" width="0.8059%" height="15" fill="rgb(241,19,31)" fg:x="53124" fg:w="957"/><text x="45.0278%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="45.5407%" y="133" width="0.0514%" height="15" fill="rgb(214,76,10)" fg:x="54081" fg:w="61"/><text x="45.8337%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 instructions, 0.10%)</title><rect x="45.5407%" y="149" width="0.1019%" height="15" fill="rgb(254,202,22)" fg:x="54081" fg:w="121"/><text x="45.8337%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="45.6426%" y="149" width="0.0691%" height="15" fill="rgb(214,72,24)" fg:x="54202" fg:w="82"/><text x="45.9356%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="45.7117%" y="133" width="0.0514%" height="15" fill="rgb(221,92,46)" fg:x="54284" fg:w="61"/><text x="46.0047%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="45.8136%" y="133" width="0.0514%" height="15" fill="rgb(246,13,50)" fg:x="54405" fg:w="61"/><text x="46.1065%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="45.9155%" y="133" width="0.0514%" height="15" fill="rgb(240,165,38)" fg:x="54526" fg:w="61"/><text x="46.2084%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="46.0174%" y="133" width="0.0514%" height="15" fill="rgb(241,24,51)" fg:x="54647" fg:w="61"/><text x="46.3103%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="46.1193%" y="133" width="0.0514%" height="15" fill="rgb(227,51,44)" fg:x="54768" fg:w="61"/><text x="46.4122%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="46.2211%" y="133" width="0.0514%" height="15" fill="rgb(231,121,3)" fg:x="54889" fg:w="61"/><text x="46.5141%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="46.3230%" y="133" width="0.0514%" height="15" fill="rgb(245,3,41)" fg:x="55010" fg:w="61"/><text x="46.6160%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="46.4249%" y="133" width="0.0514%" height="15" fill="rgb(214,13,26)" fg:x="55131" fg:w="61"/><text x="46.7179%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (968 instructions, 0.82%)</title><rect x="45.7117%" y="149" width="0.8151%" height="15" fill="rgb(252,75,11)" fg:x="54284" fg:w="968"/><text x="46.0047%" y="159.50"></text></g><g><title>__rust_realloc (133 instructions, 0.11%)</title><rect x="46.5268%" y="117" width="0.1120%" height="15" fill="rgb(218,226,17)" fg:x="55252" fg:w="133"/><text x="46.8198%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 instructions, 0.15%)</title><rect x="46.5268%" y="133" width="0.1482%" height="15" fill="rgb(248,89,38)" fg:x="55252" fg:w="176"/><text x="46.8198%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (262 instructions, 0.22%)</title><rect x="46.5268%" y="149" width="0.2206%" height="15" fill="rgb(237,73,46)" fg:x="55252" fg:w="262"/><text x="46.8198%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.05%)</title><rect x="46.7475%" y="133" width="0.0514%" height="15" fill="rgb(242,78,33)" fg:x="55514" fg:w="61"/><text x="47.0404%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 instructions, 0.10%)</title><rect x="46.7475%" y="149" width="0.1019%" height="15" fill="rgb(235,60,3)" fg:x="55514" fg:w="121"/><text x="47.0404%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 instructions, 0.03%)</title><rect x="46.8493%" y="149" width="0.0269%" height="15" fill="rgb(216,172,19)" fg:x="55635" fg:w="32"/><text x="47.1423%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="46.8763%" y="149" width="0.0387%" height="15" fill="rgb(227,6,42)" fg:x="55667" fg:w="46"/><text x="47.1693%" y="159.50"></text></g><g><title>binread::BinRead::read (3,970 instructions, 3.34%)</title><rect x="44.1260%" y="165" width="3.3431%" height="15" fill="rgb(223,207,42)" fg:x="52401" fg:w="3970"/><text x="44.4190%" y="175.50">bi..</text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="47.4691%" y="165" width="0.0261%" height="15" fill="rgb(246,138,30)" fg:x="56371" fg:w="31"/><text x="47.7621%" y="175.50"></text></g><g><title>__rust_realloc (77 instructions, 0.06%)</title><rect x="47.4952%" y="133" width="0.0648%" height="15" fill="rgb(251,199,47)" fg:x="56402" fg:w="77"/><text x="47.7882%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 instructions, 0.10%)</title><rect x="47.4952%" y="149" width="0.1011%" height="15" fill="rgb(228,218,44)" fg:x="56402" fg:w="120"/><text x="47.7882%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.17%)</title><rect x="47.4952%" y="165" width="0.1735%" height="15" fill="rgb(220,68,6)" fg:x="56402" fg:w="206"/><text x="47.7882%" y="175.50"></text></g><g><title>memcpy (179 instructions, 0.15%)</title><rect x="47.6687%" y="165" width="0.1507%" height="15" fill="rgb(240,60,26)" fg:x="56608" fg:w="179"/><text x="47.9617%" y="175.50"></text></g><g><title>memcpy (179 instructions, 0.15%)</title><rect x="47.8194%" y="165" width="0.1507%" height="15" fill="rgb(211,200,19)" fg:x="56787" fg:w="179"/><text x="48.1124%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="47.9702%" y="165" width="0.0749%" height="15" fill="rgb(242,145,30)" fg:x="56966" fg:w="89"/><text x="48.2631%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.05%)</title><rect x="48.0451%" y="149" width="0.0514%" height="15" fill="rgb(225,64,13)" fg:x="57055" fg:w="61"/><text x="48.3381%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (102 instructions, 0.09%)</title><rect x="48.0451%" y="165" width="0.0859%" height="15" fill="rgb(218,103,35)" fg:x="57055" fg:w="102"/><text x="48.3381%" y="175.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (5,378 instructions, 4.53%)</title><rect x="43.9374%" y="181" width="4.5287%" height="15" fill="rgb(216,93,46)" fg:x="52177" fg:w="5378"/><text x="44.2304%" y="191.50">&lt;ic_..</text></g><g><title>serde::de::MapAccess::next_value (5,451 instructions, 4.59%)</title><rect x="43.9113%" y="197" width="4.5902%" height="15" fill="rgb(225,159,27)" fg:x="52146" fg:w="5451"/><text x="44.2043%" y="207.50">serd..</text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="48.5015%" y="197" width="0.0261%" height="15" fill="rgb(225,204,11)" fg:x="57597" fg:w="31"/><text x="48.7945%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="48.5276%" y="197" width="0.0118%" height="15" fill="rgb(205,56,4)" fg:x="57628" fg:w="14"/><text x="48.8206%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.01%)</title><rect x="48.5394%" y="197" width="0.0101%" height="15" fill="rgb(206,6,35)" fg:x="57642" fg:w="12"/><text x="48.8324%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="48.5495%" y="197" width="0.0118%" height="15" fill="rgb(247,73,52)" fg:x="57654" fg:w="14"/><text x="48.8425%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.01%)</title><rect x="48.5613%" y="197" width="0.0101%" height="15" fill="rgb(246,97,4)" fg:x="57668" fg:w="12"/><text x="48.8543%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="48.5714%" y="197" width="0.0261%" height="15" fill="rgb(212,37,15)" fg:x="57680" fg:w="31"/><text x="48.8644%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="48.5975%" y="197" width="0.0691%" height="15" fill="rgb(208,130,40)" fg:x="57711" fg:w="82"/><text x="48.8905%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.11%)</title><rect x="48.6666%" y="197" width="0.1103%" height="15" fill="rgb(236,55,29)" fg:x="57793" fg:w="131"/><text x="48.9595%" y="207.50"></text></g><g><title>memcmp (169 instructions, 0.14%)</title><rect x="48.7769%" y="197" width="0.1423%" height="15" fill="rgb(209,156,45)" fg:x="57924" fg:w="169"/><text x="49.0698%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="48.9192%" y="197" width="0.0749%" height="15" fill="rgb(249,107,4)" fg:x="58093" fg:w="89"/><text x="49.2122%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.01%)</title><rect x="48.9941%" y="197" width="0.0101%" height="15" fill="rgb(227,7,13)" fg:x="58182" fg:w="12"/><text x="49.2871%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="49.0042%" y="197" width="0.0261%" height="15" fill="rgb(250,129,14)" fg:x="58194" fg:w="31"/><text x="49.2972%" y="207.50"></text></g><g><title>memcmp (134 instructions, 0.11%)</title><rect x="49.0303%" y="149" width="0.1128%" height="15" fill="rgb(229,92,13)" fg:x="58225" fg:w="134"/><text x="49.3233%" y="159.50"></text></g><g><title>memcmp (146 instructions, 0.12%)</title><rect x="49.1432%" y="149" width="0.1229%" height="15" fill="rgb(245,98,39)" fg:x="58359" fg:w="146"/><text x="49.4361%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (419 instructions, 0.35%)</title><rect x="49.0303%" y="165" width="0.3528%" height="15" fill="rgb(234,135,48)" fg:x="58225" fg:w="419"/><text x="49.3233%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.04%)</title><rect x="49.3832%" y="165" width="0.0413%" height="15" fill="rgb(230,98,28)" fg:x="58644" fg:w="49"/><text x="49.6761%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (534 instructions, 0.45%)</title><rect x="49.0303%" y="181" width="0.4497%" height="15" fill="rgb(223,121,0)" fg:x="58225" fg:w="534"/><text x="49.3233%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="49.4800%" y="181" width="0.0118%" height="15" fill="rgb(234,173,33)" fg:x="58759" fg:w="14"/><text x="49.7730%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (632 instructions, 0.53%)</title><rect x="49.0303%" y="197" width="0.5322%" height="15" fill="rgb(245,47,8)" fg:x="58225" fg:w="632"/><text x="49.3233%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="49.5625%" y="197" width="0.0261%" height="15" fill="rgb(205,17,20)" fg:x="58857" fg:w="31"/><text x="49.8555%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.04%)</title><rect x="49.5886%" y="197" width="0.0413%" height="15" fill="rgb(232,151,16)" fg:x="58888" fg:w="49"/><text x="49.8816%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.04%)</title><rect x="49.6299%" y="181" width="0.0429%" height="15" fill="rgb(208,30,32)" fg:x="58937" fg:w="51"/><text x="49.9229%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.08%)</title><rect x="49.6729%" y="181" width="0.0800%" height="15" fill="rgb(254,26,3)" fg:x="58988" fg:w="95"/><text x="49.9658%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.04%)</title><rect x="49.7528%" y="181" width="0.0387%" height="15" fill="rgb(240,177,30)" fg:x="59083" fg:w="46"/><text x="50.0458%" y="191.50"></text></g><g><title>binread::BinRead::read (255 instructions, 0.21%)</title><rect x="49.6299%" y="197" width="0.2147%" height="15" fill="rgb(248,76,44)" fg:x="58937" fg:w="255"/><text x="49.9229%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="49.8446%" y="181" width="0.0261%" height="15" fill="rgb(241,186,54)" fg:x="59192" fg:w="31"/><text x="50.1376%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="49.8707%" y="181" width="0.0118%" height="15" fill="rgb(249,171,29)" fg:x="59223" fg:w="14"/><text x="50.1637%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="49.8825%" y="181" width="0.0118%" height="15" fill="rgb(237,151,44)" fg:x="59237" fg:w="14"/><text x="50.1755%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="49.8943%" y="165" width="0.0312%" height="15" fill="rgb(228,174,30)" fg:x="59251" fg:w="37"/><text x="50.1873%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="49.9255%" y="165" width="0.0286%" height="15" fill="rgb(252,14,37)" fg:x="59288" fg:w="34"/><text x="50.2184%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="49.9541%" y="165" width="0.0286%" height="15" fill="rgb(207,111,40)" fg:x="59322" fg:w="34"/><text x="50.2471%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="49.9827%" y="165" width="0.0261%" height="15" fill="rgb(248,171,54)" fg:x="59356" fg:w="31"/><text x="50.2757%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="49.8943%" y="181" width="0.2055%" height="15" fill="rgb(211,127,2)" fg:x="59251" fg:w="244"/><text x="50.1873%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="50.0998%" y="149" width="0.0691%" height="15" fill="rgb(236,87,47)" fg:x="59495" fg:w="82"/><text x="50.3928%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.10%)</title><rect x="50.0998%" y="165" width="0.1036%" height="15" fill="rgb(223,190,45)" fg:x="59495" fg:w="123"/><text x="50.3928%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (206 instructions, 0.17%)</title><rect x="50.0998%" y="181" width="0.1735%" height="15" fill="rgb(215,5,16)" fg:x="59495" fg:w="206"/><text x="50.3928%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="50.2733%" y="181" width="0.0261%" height="15" fill="rgb(252,82,33)" fg:x="59701" fg:w="31"/><text x="50.5662%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="50.2994%" y="181" width="0.0118%" height="15" fill="rgb(247,213,44)" fg:x="59732" fg:w="14"/><text x="50.5923%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="50.3112%" y="181" width="0.0118%" height="15" fill="rgb(205,196,44)" fg:x="59746" fg:w="14"/><text x="50.6041%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="50.3229%" y="165" width="0.0312%" height="15" fill="rgb(237,96,54)" fg:x="59760" fg:w="37"/><text x="50.6159%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="50.3541%" y="165" width="0.0286%" height="15" fill="rgb(230,113,34)" fg:x="59797" fg:w="34"/><text x="50.6471%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="50.3827%" y="165" width="0.0286%" height="15" fill="rgb(221,224,12)" fg:x="59831" fg:w="34"/><text x="50.6757%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="50.4114%" y="165" width="0.0261%" height="15" fill="rgb(219,112,44)" fg:x="59865" fg:w="31"/><text x="50.7043%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="50.3229%" y="181" width="0.2055%" height="15" fill="rgb(210,31,13)" fg:x="59760" fg:w="244"/><text x="50.6159%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="50.5284%" y="181" width="0.0261%" height="15" fill="rgb(230,25,16)" fg:x="60004" fg:w="31"/><text x="50.8214%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="50.5545%" y="181" width="0.0118%" height="15" fill="rgb(246,108,53)" fg:x="60035" fg:w="14"/><text x="50.8475%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="50.5663%" y="181" width="0.0118%" height="15" fill="rgb(241,172,50)" fg:x="60049" fg:w="14"/><text x="50.8593%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="50.5781%" y="165" width="0.0312%" height="15" fill="rgb(235,141,10)" fg:x="60063" fg:w="37"/><text x="50.8711%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="50.6092%" y="165" width="0.0286%" height="15" fill="rgb(220,174,43)" fg:x="60100" fg:w="34"/><text x="50.9022%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="50.6379%" y="165" width="0.0286%" height="15" fill="rgb(215,181,40)" fg:x="60134" fg:w="34"/><text x="50.9308%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="50.6665%" y="165" width="0.0261%" height="15" fill="rgb(230,97,2)" fg:x="60168" fg:w="31"/><text x="50.9595%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="50.5781%" y="181" width="0.2055%" height="15" fill="rgb(211,25,27)" fg:x="60063" fg:w="244"/><text x="50.8711%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="50.7836%" y="181" width="0.0261%" height="15" fill="rgb(230,87,26)" fg:x="60307" fg:w="31"/><text x="51.0765%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="50.8097%" y="181" width="0.0118%" height="15" fill="rgb(227,160,17)" fg:x="60338" fg:w="14"/><text x="51.1026%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="50.8215%" y="181" width="0.0118%" height="15" fill="rgb(244,85,34)" fg:x="60352" fg:w="14"/><text x="51.1144%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="50.8332%" y="165" width="0.0312%" height="15" fill="rgb(207,70,0)" fg:x="60366" fg:w="37"/><text x="51.1262%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="50.8644%" y="165" width="0.0286%" height="15" fill="rgb(223,129,7)" fg:x="60403" fg:w="34"/><text x="51.1574%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="50.8930%" y="165" width="0.0286%" height="15" fill="rgb(246,105,7)" fg:x="60437" fg:w="34"/><text x="51.1860%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="50.9217%" y="165" width="0.0261%" height="15" fill="rgb(215,154,42)" fg:x="60471" fg:w="31"/><text x="51.2146%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="50.8332%" y="181" width="0.2055%" height="15" fill="rgb(220,215,30)" fg:x="60366" fg:w="244"/><text x="51.1262%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="51.0387%" y="181" width="0.0261%" height="15" fill="rgb(228,81,51)" fg:x="60610" fg:w="31"/><text x="51.3317%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="51.0648%" y="181" width="0.0118%" height="15" fill="rgb(247,71,54)" fg:x="60641" fg:w="14"/><text x="51.3578%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="51.0766%" y="181" width="0.0118%" height="15" fill="rgb(234,176,34)" fg:x="60655" fg:w="14"/><text x="51.3696%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="51.0884%" y="165" width="0.0312%" height="15" fill="rgb(241,103,54)" fg:x="60669" fg:w="37"/><text x="51.3814%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="51.1196%" y="165" width="0.0286%" height="15" fill="rgb(228,22,34)" fg:x="60706" fg:w="34"/><text x="51.4125%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="51.1482%" y="165" width="0.0286%" height="15" fill="rgb(241,179,48)" fg:x="60740" fg:w="34"/><text x="51.4412%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="51.1768%" y="165" width="0.0261%" height="15" fill="rgb(235,167,37)" fg:x="60774" fg:w="31"/><text x="51.4698%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="51.0884%" y="181" width="0.2055%" height="15" fill="rgb(213,109,30)" fg:x="60669" fg:w="244"/><text x="51.3814%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="51.2939%" y="181" width="0.0261%" height="15" fill="rgb(222,172,16)" fg:x="60913" fg:w="31"/><text x="51.5868%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="51.3200%" y="181" width="0.0118%" height="15" fill="rgb(233,192,5)" fg:x="60944" fg:w="14"/><text x="51.6129%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="51.3318%" y="181" width="0.0118%" height="15" fill="rgb(247,189,41)" fg:x="60958" fg:w="14"/><text x="51.6247%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="51.3435%" y="165" width="0.0312%" height="15" fill="rgb(218,134,47)" fg:x="60972" fg:w="37"/><text x="51.6365%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="51.3747%" y="165" width="0.0286%" height="15" fill="rgb(216,29,3)" fg:x="61009" fg:w="34"/><text x="51.6677%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="51.4033%" y="165" width="0.0286%" height="15" fill="rgb(246,140,12)" fg:x="61043" fg:w="34"/><text x="51.6963%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="51.4320%" y="165" width="0.0261%" height="15" fill="rgb(230,136,11)" fg:x="61077" fg:w="31"/><text x="51.7249%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="51.3435%" y="181" width="0.2055%" height="15" fill="rgb(247,22,47)" fg:x="60972" fg:w="244"/><text x="51.6365%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="51.5490%" y="181" width="0.0261%" height="15" fill="rgb(218,84,22)" fg:x="61216" fg:w="31"/><text x="51.8420%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="51.5751%" y="181" width="0.0118%" height="15" fill="rgb(216,87,39)" fg:x="61247" fg:w="14"/><text x="51.8681%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="51.5869%" y="181" width="0.0118%" height="15" fill="rgb(221,178,8)" fg:x="61261" fg:w="14"/><text x="51.8799%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="51.5987%" y="165" width="0.0312%" height="15" fill="rgb(230,42,11)" fg:x="61275" fg:w="37"/><text x="51.8917%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="51.6299%" y="165" width="0.0286%" height="15" fill="rgb(237,229,4)" fg:x="61312" fg:w="34"/><text x="51.9228%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="51.6585%" y="165" width="0.0286%" height="15" fill="rgb(222,31,33)" fg:x="61346" fg:w="34"/><text x="51.9515%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="51.6871%" y="165" width="0.0261%" height="15" fill="rgb(210,17,39)" fg:x="61380" fg:w="31"/><text x="51.9801%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="51.5987%" y="181" width="0.2055%" height="15" fill="rgb(244,93,20)" fg:x="61275" fg:w="244"/><text x="51.8917%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="51.8042%" y="181" width="0.0261%" height="15" fill="rgb(210,40,47)" fg:x="61519" fg:w="31"/><text x="52.0971%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="51.8303%" y="181" width="0.0118%" height="15" fill="rgb(239,211,47)" fg:x="61550" fg:w="14"/><text x="52.1232%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="51.8421%" y="181" width="0.0118%" height="15" fill="rgb(251,223,49)" fg:x="61564" fg:w="14"/><text x="52.1350%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="51.8538%" y="165" width="0.0312%" height="15" fill="rgb(221,149,5)" fg:x="61578" fg:w="37"/><text x="52.1468%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="51.8850%" y="165" width="0.0286%" height="15" fill="rgb(219,224,51)" fg:x="61615" fg:w="34"/><text x="52.1780%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="51.9136%" y="165" width="0.0286%" height="15" fill="rgb(223,7,8)" fg:x="61649" fg:w="34"/><text x="52.2066%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="51.9423%" y="165" width="0.0261%" height="15" fill="rgb(241,217,22)" fg:x="61683" fg:w="31"/><text x="52.2352%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="51.8538%" y="181" width="0.2055%" height="15" fill="rgb(248,209,0)" fg:x="61578" fg:w="244"/><text x="52.1468%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="52.0593%" y="181" width="0.0261%" height="15" fill="rgb(217,205,4)" fg:x="61822" fg:w="31"/><text x="52.3523%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="52.0854%" y="181" width="0.0118%" height="15" fill="rgb(228,124,39)" fg:x="61853" fg:w="14"/><text x="52.3784%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="52.0972%" y="181" width="0.0118%" height="15" fill="rgb(250,116,42)" fg:x="61867" fg:w="14"/><text x="52.3902%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="52.1090%" y="165" width="0.0312%" height="15" fill="rgb(223,202,9)" fg:x="61881" fg:w="37"/><text x="52.4020%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="52.1402%" y="165" width="0.0286%" height="15" fill="rgb(242,222,40)" fg:x="61918" fg:w="34"/><text x="52.4331%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="52.1688%" y="165" width="0.0286%" height="15" fill="rgb(229,99,46)" fg:x="61952" fg:w="34"/><text x="52.4618%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="52.1974%" y="165" width="0.0261%" height="15" fill="rgb(225,56,46)" fg:x="61986" fg:w="31"/><text x="52.4904%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="52.1090%" y="181" width="0.2055%" height="15" fill="rgb(227,94,5)" fg:x="61881" fg:w="244"/><text x="52.4020%" y="191.50"></text></g><g><title>__rust_realloc (77 instructions, 0.06%)</title><rect x="52.3145%" y="149" width="0.0648%" height="15" fill="rgb(205,112,38)" fg:x="62125" fg:w="77"/><text x="52.6074%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 instructions, 0.10%)</title><rect x="52.3145%" y="165" width="0.1011%" height="15" fill="rgb(231,133,46)" fg:x="62125" fg:w="120"/><text x="52.6074%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (206 instructions, 0.17%)</title><rect x="52.3145%" y="181" width="0.1735%" height="15" fill="rgb(217,16,9)" fg:x="62125" fg:w="206"/><text x="52.6074%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="52.4879%" y="181" width="0.0261%" height="15" fill="rgb(249,173,9)" fg:x="62331" fg:w="31"/><text x="52.7809%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="52.5140%" y="181" width="0.0118%" height="15" fill="rgb(205,163,53)" fg:x="62362" fg:w="14"/><text x="52.8070%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="52.5258%" y="181" width="0.0118%" height="15" fill="rgb(217,54,41)" fg:x="62376" fg:w="14"/><text x="52.8188%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="52.5376%" y="165" width="0.0312%" height="15" fill="rgb(228,216,12)" fg:x="62390" fg:w="37"/><text x="52.8306%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="52.5688%" y="165" width="0.0286%" height="15" fill="rgb(244,228,15)" fg:x="62427" fg:w="34"/><text x="52.8617%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="52.5974%" y="165" width="0.0286%" height="15" fill="rgb(221,176,53)" fg:x="62461" fg:w="34"/><text x="52.8904%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="52.6260%" y="165" width="0.0261%" height="15" fill="rgb(205,94,34)" fg:x="62495" fg:w="31"/><text x="52.9190%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="52.5376%" y="181" width="0.2055%" height="15" fill="rgb(213,110,48)" fg:x="62390" fg:w="244"/><text x="52.8306%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="52.7431%" y="181" width="0.0261%" height="15" fill="rgb(236,142,28)" fg:x="62634" fg:w="31"/><text x="53.0361%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="52.7692%" y="181" width="0.0118%" height="15" fill="rgb(225,135,29)" fg:x="62665" fg:w="14"/><text x="53.0622%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="52.7810%" y="181" width="0.0118%" height="15" fill="rgb(252,45,31)" fg:x="62679" fg:w="14"/><text x="53.0740%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="52.7928%" y="165" width="0.0312%" height="15" fill="rgb(211,187,50)" fg:x="62693" fg:w="37"/><text x="53.0857%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="52.8239%" y="165" width="0.0286%" height="15" fill="rgb(229,109,7)" fg:x="62730" fg:w="34"/><text x="53.1169%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="52.8526%" y="165" width="0.0286%" height="15" fill="rgb(251,131,51)" fg:x="62764" fg:w="34"/><text x="53.1455%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="52.8812%" y="165" width="0.0261%" height="15" fill="rgb(251,180,35)" fg:x="62798" fg:w="31"/><text x="53.1742%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="52.7928%" y="181" width="0.2055%" height="15" fill="rgb(211,46,32)" fg:x="62693" fg:w="244"/><text x="53.0857%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="52.9982%" y="181" width="0.0261%" height="15" fill="rgb(248,123,17)" fg:x="62937" fg:w="31"/><text x="53.2912%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="53.0243%" y="181" width="0.0118%" height="15" fill="rgb(227,141,18)" fg:x="62968" fg:w="14"/><text x="53.3173%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="53.0361%" y="181" width="0.0118%" height="15" fill="rgb(216,102,9)" fg:x="62982" fg:w="14"/><text x="53.3291%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="53.0479%" y="165" width="0.0312%" height="15" fill="rgb(253,47,13)" fg:x="62996" fg:w="37"/><text x="53.3409%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="53.0791%" y="165" width="0.0286%" height="15" fill="rgb(226,93,23)" fg:x="63033" fg:w="34"/><text x="53.3720%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="53.1077%" y="165" width="0.0286%" height="15" fill="rgb(247,104,17)" fg:x="63067" fg:w="34"/><text x="53.4007%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="53.1363%" y="165" width="0.0261%" height="15" fill="rgb(233,203,26)" fg:x="63101" fg:w="31"/><text x="53.4293%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="53.0479%" y="181" width="0.2055%" height="15" fill="rgb(244,98,49)" fg:x="62996" fg:w="244"/><text x="53.3409%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="53.2534%" y="181" width="0.0261%" height="15" fill="rgb(235,134,22)" fg:x="63240" fg:w="31"/><text x="53.5464%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="53.2795%" y="181" width="0.0118%" height="15" fill="rgb(221,70,32)" fg:x="63271" fg:w="14"/><text x="53.5725%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="53.2913%" y="181" width="0.0118%" height="15" fill="rgb(238,15,50)" fg:x="63285" fg:w="14"/><text x="53.5843%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="53.3031%" y="165" width="0.0312%" height="15" fill="rgb(215,221,48)" fg:x="63299" fg:w="37"/><text x="53.5960%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="53.3342%" y="165" width="0.0286%" height="15" fill="rgb(236,73,3)" fg:x="63336" fg:w="34"/><text x="53.6272%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="53.3629%" y="165" width="0.0286%" height="15" fill="rgb(250,107,11)" fg:x="63370" fg:w="34"/><text x="53.6558%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="53.3915%" y="165" width="0.0261%" height="15" fill="rgb(242,39,14)" fg:x="63404" fg:w="31"/><text x="53.6845%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="53.3031%" y="181" width="0.2055%" height="15" fill="rgb(248,164,37)" fg:x="63299" fg:w="244"/><text x="53.5960%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="53.5085%" y="181" width="0.0261%" height="15" fill="rgb(217,60,12)" fg:x="63543" fg:w="31"/><text x="53.8015%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="53.5346%" y="181" width="0.0118%" height="15" fill="rgb(240,125,29)" fg:x="63574" fg:w="14"/><text x="53.8276%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="53.5464%" y="181" width="0.0118%" height="15" fill="rgb(208,207,28)" fg:x="63588" fg:w="14"/><text x="53.8394%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="53.5582%" y="165" width="0.0312%" height="15" fill="rgb(209,159,27)" fg:x="63602" fg:w="37"/><text x="53.8512%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="53.5894%" y="165" width="0.0286%" height="15" fill="rgb(251,176,53)" fg:x="63639" fg:w="34"/><text x="53.8824%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="53.6180%" y="165" width="0.0286%" height="15" fill="rgb(211,85,7)" fg:x="63673" fg:w="34"/><text x="53.9110%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="53.6466%" y="165" width="0.0261%" height="15" fill="rgb(216,64,54)" fg:x="63707" fg:w="31"/><text x="53.9396%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="53.5582%" y="181" width="0.2055%" height="15" fill="rgb(217,54,24)" fg:x="63602" fg:w="244"/><text x="53.8512%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="53.7637%" y="181" width="0.0261%" height="15" fill="rgb(208,206,53)" fg:x="63846" fg:w="31"/><text x="54.0567%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="53.7898%" y="181" width="0.0118%" height="15" fill="rgb(251,74,39)" fg:x="63877" fg:w="14"/><text x="54.0828%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="53.8016%" y="181" width="0.0118%" height="15" fill="rgb(226,47,5)" fg:x="63891" fg:w="14"/><text x="54.0946%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="53.8134%" y="165" width="0.0312%" height="15" fill="rgb(234,111,33)" fg:x="63905" fg:w="37"/><text x="54.1063%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="53.8445%" y="165" width="0.0286%" height="15" fill="rgb(251,14,10)" fg:x="63942" fg:w="34"/><text x="54.1375%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="53.8732%" y="165" width="0.0286%" height="15" fill="rgb(232,43,0)" fg:x="63976" fg:w="34"/><text x="54.1661%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="53.9018%" y="165" width="0.0261%" height="15" fill="rgb(222,68,43)" fg:x="64010" fg:w="31"/><text x="54.1948%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="53.8134%" y="181" width="0.2055%" height="15" fill="rgb(217,24,23)" fg:x="63905" fg:w="244"/><text x="54.1063%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="54.0188%" y="181" width="0.0261%" height="15" fill="rgb(229,209,14)" fg:x="64149" fg:w="31"/><text x="54.3118%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="54.0450%" y="181" width="0.0118%" height="15" fill="rgb(250,149,48)" fg:x="64180" fg:w="14"/><text x="54.3379%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="54.0567%" y="181" width="0.0118%" height="15" fill="rgb(210,120,37)" fg:x="64194" fg:w="14"/><text x="54.3497%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="54.0685%" y="165" width="0.0312%" height="15" fill="rgb(210,21,8)" fg:x="64208" fg:w="37"/><text x="54.3615%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="54.0997%" y="165" width="0.0286%" height="15" fill="rgb(243,145,7)" fg:x="64245" fg:w="34"/><text x="54.3927%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="54.1283%" y="165" width="0.0286%" height="15" fill="rgb(238,178,32)" fg:x="64279" fg:w="34"/><text x="54.4213%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="54.1569%" y="165" width="0.0261%" height="15" fill="rgb(222,4,10)" fg:x="64313" fg:w="31"/><text x="54.4499%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="54.0685%" y="181" width="0.2055%" height="15" fill="rgb(239,7,37)" fg:x="64208" fg:w="244"/><text x="54.3615%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="54.2740%" y="181" width="0.0261%" height="15" fill="rgb(215,31,37)" fg:x="64452" fg:w="31"/><text x="54.5670%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="54.3001%" y="181" width="0.0118%" height="15" fill="rgb(224,83,33)" fg:x="64483" fg:w="14"/><text x="54.5931%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="54.3119%" y="181" width="0.0118%" height="15" fill="rgb(239,55,3)" fg:x="64497" fg:w="14"/><text x="54.6049%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="54.3237%" y="165" width="0.0312%" height="15" fill="rgb(247,92,11)" fg:x="64511" fg:w="37"/><text x="54.6166%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="54.3548%" y="165" width="0.0286%" height="15" fill="rgb(239,200,7)" fg:x="64548" fg:w="34"/><text x="54.6478%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="54.3835%" y="165" width="0.0286%" height="15" fill="rgb(227,115,8)" fg:x="64582" fg:w="34"/><text x="54.6764%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="54.4121%" y="165" width="0.0261%" height="15" fill="rgb(215,189,27)" fg:x="64616" fg:w="31"/><text x="54.7051%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="54.3237%" y="181" width="0.2055%" height="15" fill="rgb(251,216,39)" fg:x="64511" fg:w="244"/><text x="54.6166%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="54.5291%" y="133" width="0.0691%" height="15" fill="rgb(207,29,47)" fg:x="64755" fg:w="82"/><text x="54.8221%" y="143.50"></text></g><g><title>memcpy (136 instructions, 0.11%)</title><rect x="54.5982%" y="133" width="0.1145%" height="15" fill="rgb(210,71,34)" fg:x="64837" fg:w="136"/><text x="54.8912%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="54.7127%" y="133" width="0.0749%" height="15" fill="rgb(253,217,51)" fg:x="64973" fg:w="89"/><text x="55.0057%" y="143.50"></text></g><g><title>__rust_realloc (436 instructions, 0.37%)</title><rect x="54.5291%" y="149" width="0.3671%" height="15" fill="rgb(222,117,46)" fg:x="64755" fg:w="436"/><text x="54.8221%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (479 instructions, 0.40%)</title><rect x="54.5291%" y="165" width="0.4034%" height="15" fill="rgb(226,132,6)" fg:x="64755" fg:w="479"/><text x="54.8221%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (565 instructions, 0.48%)</title><rect x="54.5291%" y="181" width="0.4758%" height="15" fill="rgb(254,145,51)" fg:x="64755" fg:w="565"/><text x="54.8221%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="55.0049%" y="181" width="0.0261%" height="15" fill="rgb(231,199,27)" fg:x="65320" fg:w="31"/><text x="55.2979%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="55.0310%" y="181" width="0.0118%" height="15" fill="rgb(245,158,14)" fg:x="65351" fg:w="14"/><text x="55.3240%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="55.0428%" y="181" width="0.0118%" height="15" fill="rgb(240,113,14)" fg:x="65365" fg:w="14"/><text x="55.3358%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="55.0546%" y="165" width="0.0312%" height="15" fill="rgb(210,20,13)" fg:x="65379" fg:w="37"/><text x="55.3476%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="55.0858%" y="165" width="0.0286%" height="15" fill="rgb(241,144,13)" fg:x="65416" fg:w="34"/><text x="55.3787%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="55.1144%" y="165" width="0.0286%" height="15" fill="rgb(235,43,34)" fg:x="65450" fg:w="34"/><text x="55.4074%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="55.1430%" y="165" width="0.0261%" height="15" fill="rgb(208,36,20)" fg:x="65484" fg:w="31"/><text x="55.4360%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="55.0546%" y="181" width="0.2055%" height="15" fill="rgb(239,204,10)" fg:x="65379" fg:w="244"/><text x="55.3476%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="55.2601%" y="181" width="0.0261%" height="15" fill="rgb(217,84,43)" fg:x="65623" fg:w="31"/><text x="55.5530%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="55.2862%" y="181" width="0.0118%" height="15" fill="rgb(241,170,50)" fg:x="65654" fg:w="14"/><text x="55.5792%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="55.2980%" y="181" width="0.0118%" height="15" fill="rgb(226,205,29)" fg:x="65668" fg:w="14"/><text x="55.5909%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="55.3098%" y="165" width="0.0312%" height="15" fill="rgb(233,113,1)" fg:x="65682" fg:w="37"/><text x="55.6027%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="55.3409%" y="165" width="0.0286%" height="15" fill="rgb(253,98,13)" fg:x="65719" fg:w="34"/><text x="55.6339%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="55.3695%" y="165" width="0.0286%" height="15" fill="rgb(211,115,12)" fg:x="65753" fg:w="34"/><text x="55.6625%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="55.3982%" y="165" width="0.0261%" height="15" fill="rgb(208,12,16)" fg:x="65787" fg:w="31"/><text x="55.6911%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="55.3098%" y="181" width="0.2055%" height="15" fill="rgb(237,193,54)" fg:x="65682" fg:w="244"/><text x="55.6027%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="55.5152%" y="181" width="0.0261%" height="15" fill="rgb(243,22,42)" fg:x="65926" fg:w="31"/><text x="55.8082%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="55.5413%" y="181" width="0.0118%" height="15" fill="rgb(233,151,36)" fg:x="65957" fg:w="14"/><text x="55.8343%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="55.5531%" y="181" width="0.0118%" height="15" fill="rgb(237,57,45)" fg:x="65971" fg:w="14"/><text x="55.8461%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="55.5649%" y="165" width="0.0312%" height="15" fill="rgb(221,88,17)" fg:x="65985" fg:w="37"/><text x="55.8579%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="55.5961%" y="165" width="0.0286%" height="15" fill="rgb(230,79,15)" fg:x="66022" fg:w="34"/><text x="55.8890%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="55.6247%" y="165" width="0.0286%" height="15" fill="rgb(213,57,13)" fg:x="66056" fg:w="34"/><text x="55.9177%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="55.6533%" y="165" width="0.0261%" height="15" fill="rgb(222,116,39)" fg:x="66090" fg:w="31"/><text x="55.9463%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="55.5649%" y="181" width="0.2055%" height="15" fill="rgb(245,107,2)" fg:x="65985" fg:w="244"/><text x="55.8579%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="55.7704%" y="181" width="0.0261%" height="15" fill="rgb(238,1,10)" fg:x="66229" fg:w="31"/><text x="56.0633%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="55.7965%" y="181" width="0.0118%" height="15" fill="rgb(249,4,48)" fg:x="66260" fg:w="14"/><text x="56.0895%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="55.8083%" y="181" width="0.0118%" height="15" fill="rgb(223,151,18)" fg:x="66274" fg:w="14"/><text x="56.1012%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="55.8201%" y="165" width="0.0312%" height="15" fill="rgb(227,65,43)" fg:x="66288" fg:w="37"/><text x="56.1130%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="55.8512%" y="165" width="0.0286%" height="15" fill="rgb(218,40,45)" fg:x="66325" fg:w="34"/><text x="56.1442%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="55.8799%" y="165" width="0.0286%" height="15" fill="rgb(252,121,31)" fg:x="66359" fg:w="34"/><text x="56.1728%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="55.9085%" y="165" width="0.0261%" height="15" fill="rgb(219,158,43)" fg:x="66393" fg:w="31"/><text x="56.2015%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="55.8201%" y="181" width="0.2055%" height="15" fill="rgb(231,162,42)" fg:x="66288" fg:w="244"/><text x="56.1130%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="56.0255%" y="181" width="0.0261%" height="15" fill="rgb(217,179,25)" fg:x="66532" fg:w="31"/><text x="56.3185%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="56.0516%" y="181" width="0.0118%" height="15" fill="rgb(206,212,31)" fg:x="66563" fg:w="14"/><text x="56.3446%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="56.0634%" y="181" width="0.0118%" height="15" fill="rgb(235,144,12)" fg:x="66577" fg:w="14"/><text x="56.3564%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="56.0752%" y="165" width="0.0312%" height="15" fill="rgb(213,51,10)" fg:x="66591" fg:w="37"/><text x="56.3682%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="56.1064%" y="165" width="0.0286%" height="15" fill="rgb(231,145,14)" fg:x="66628" fg:w="34"/><text x="56.3993%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="56.1350%" y="165" width="0.0286%" height="15" fill="rgb(235,15,28)" fg:x="66662" fg:w="34"/><text x="56.4280%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="56.1636%" y="165" width="0.0261%" height="15" fill="rgb(237,206,10)" fg:x="66696" fg:w="31"/><text x="56.4566%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="56.0752%" y="181" width="0.2055%" height="15" fill="rgb(236,227,27)" fg:x="66591" fg:w="244"/><text x="56.3682%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="56.2807%" y="181" width="0.0261%" height="15" fill="rgb(246,83,35)" fg:x="66835" fg:w="31"/><text x="56.5737%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="56.3068%" y="181" width="0.0118%" height="15" fill="rgb(220,136,24)" fg:x="66866" fg:w="14"/><text x="56.5998%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="56.3186%" y="181" width="0.0118%" height="15" fill="rgb(217,3,25)" fg:x="66880" fg:w="14"/><text x="56.6115%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="56.3304%" y="165" width="0.0312%" height="15" fill="rgb(239,24,14)" fg:x="66894" fg:w="37"/><text x="56.6233%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="56.3615%" y="165" width="0.0286%" height="15" fill="rgb(244,16,53)" fg:x="66931" fg:w="34"/><text x="56.6545%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="56.3902%" y="165" width="0.0286%" height="15" fill="rgb(208,175,44)" fg:x="66965" fg:w="34"/><text x="56.6831%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="56.4188%" y="165" width="0.0261%" height="15" fill="rgb(252,18,48)" fg:x="66999" fg:w="31"/><text x="56.7118%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="56.3304%" y="181" width="0.2055%" height="15" fill="rgb(234,199,32)" fg:x="66894" fg:w="244"/><text x="56.6233%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="56.5358%" y="181" width="0.0261%" height="15" fill="rgb(225,77,54)" fg:x="67138" fg:w="31"/><text x="56.8288%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="56.5619%" y="181" width="0.0118%" height="15" fill="rgb(225,42,25)" fg:x="67169" fg:w="14"/><text x="56.8549%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="56.5737%" y="181" width="0.0118%" height="15" fill="rgb(242,227,46)" fg:x="67183" fg:w="14"/><text x="56.8667%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="56.5855%" y="165" width="0.0312%" height="15" fill="rgb(246,197,35)" fg:x="67197" fg:w="37"/><text x="56.8785%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="56.6167%" y="165" width="0.0286%" height="15" fill="rgb(215,159,26)" fg:x="67234" fg:w="34"/><text x="56.9096%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="56.6453%" y="165" width="0.0286%" height="15" fill="rgb(212,194,50)" fg:x="67268" fg:w="34"/><text x="56.9383%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="56.6739%" y="165" width="0.0261%" height="15" fill="rgb(246,132,1)" fg:x="67302" fg:w="31"/><text x="56.9669%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="56.5855%" y="181" width="0.2055%" height="15" fill="rgb(217,71,7)" fg:x="67197" fg:w="244"/><text x="56.8785%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="56.7910%" y="181" width="0.0261%" height="15" fill="rgb(252,59,32)" fg:x="67441" fg:w="31"/><text x="57.0840%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="56.8171%" y="181" width="0.0118%" height="15" fill="rgb(253,204,25)" fg:x="67472" fg:w="14"/><text x="57.1101%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="56.8289%" y="181" width="0.0118%" height="15" fill="rgb(232,21,16)" fg:x="67486" fg:w="14"/><text x="57.1218%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="56.8407%" y="165" width="0.0312%" height="15" fill="rgb(248,90,29)" fg:x="67500" fg:w="37"/><text x="57.1336%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="56.8718%" y="165" width="0.0286%" height="15" fill="rgb(249,223,7)" fg:x="67537" fg:w="34"/><text x="57.1648%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="56.9005%" y="165" width="0.0286%" height="15" fill="rgb(231,119,42)" fg:x="67571" fg:w="34"/><text x="57.1934%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="56.9291%" y="165" width="0.0261%" height="15" fill="rgb(215,41,35)" fg:x="67605" fg:w="31"/><text x="57.2221%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="56.8407%" y="181" width="0.2055%" height="15" fill="rgb(220,44,45)" fg:x="67500" fg:w="244"/><text x="57.1336%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="57.0461%" y="181" width="0.0261%" height="15" fill="rgb(253,197,36)" fg:x="67744" fg:w="31"/><text x="57.3391%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="57.0722%" y="181" width="0.0118%" height="15" fill="rgb(245,225,54)" fg:x="67775" fg:w="14"/><text x="57.3652%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="57.0840%" y="181" width="0.0118%" height="15" fill="rgb(239,94,37)" fg:x="67789" fg:w="14"/><text x="57.3770%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="57.0958%" y="165" width="0.0312%" height="15" fill="rgb(242,217,10)" fg:x="67803" fg:w="37"/><text x="57.3888%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="57.1270%" y="165" width="0.0286%" height="15" fill="rgb(250,193,7)" fg:x="67840" fg:w="34"/><text x="57.4199%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="57.1556%" y="165" width="0.0286%" height="15" fill="rgb(230,104,19)" fg:x="67874" fg:w="34"/><text x="57.4486%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="57.1842%" y="165" width="0.0261%" height="15" fill="rgb(230,181,4)" fg:x="67908" fg:w="31"/><text x="57.4772%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="57.0958%" y="181" width="0.2055%" height="15" fill="rgb(216,219,49)" fg:x="67803" fg:w="244"/><text x="57.3888%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="57.3013%" y="181" width="0.0261%" height="15" fill="rgb(254,144,0)" fg:x="68047" fg:w="31"/><text x="57.5943%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="57.3274%" y="181" width="0.0118%" height="15" fill="rgb(205,209,38)" fg:x="68078" fg:w="14"/><text x="57.6204%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="57.3392%" y="181" width="0.0118%" height="15" fill="rgb(240,21,42)" fg:x="68092" fg:w="14"/><text x="57.6322%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="57.3510%" y="165" width="0.0312%" height="15" fill="rgb(241,132,3)" fg:x="68106" fg:w="37"/><text x="57.6439%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="57.3821%" y="165" width="0.0286%" height="15" fill="rgb(225,14,2)" fg:x="68143" fg:w="34"/><text x="57.6751%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="57.4108%" y="165" width="0.0286%" height="15" fill="rgb(210,141,35)" fg:x="68177" fg:w="34"/><text x="57.7037%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="57.4394%" y="165" width="0.0261%" height="15" fill="rgb(251,14,44)" fg:x="68211" fg:w="31"/><text x="57.7324%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="57.3510%" y="181" width="0.2055%" height="15" fill="rgb(247,48,18)" fg:x="68106" fg:w="244"/><text x="57.6439%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="57.5564%" y="181" width="0.0261%" height="15" fill="rgb(225,0,40)" fg:x="68350" fg:w="31"/><text x="57.8494%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="57.5825%" y="181" width="0.0118%" height="15" fill="rgb(221,31,33)" fg:x="68381" fg:w="14"/><text x="57.8755%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="57.5943%" y="181" width="0.0118%" height="15" fill="rgb(237,42,40)" fg:x="68395" fg:w="14"/><text x="57.8873%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="57.6061%" y="165" width="0.0312%" height="15" fill="rgb(233,51,29)" fg:x="68409" fg:w="37"/><text x="57.8991%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="57.6373%" y="165" width="0.0286%" height="15" fill="rgb(226,58,20)" fg:x="68446" fg:w="34"/><text x="57.9302%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="57.6659%" y="165" width="0.0286%" height="15" fill="rgb(208,98,7)" fg:x="68480" fg:w="34"/><text x="57.9589%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="57.6945%" y="165" width="0.0261%" height="15" fill="rgb(228,143,44)" fg:x="68514" fg:w="31"/><text x="57.9875%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="57.6061%" y="181" width="0.2055%" height="15" fill="rgb(246,55,38)" fg:x="68409" fg:w="244"/><text x="57.8991%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="57.8116%" y="181" width="0.0261%" height="15" fill="rgb(247,87,16)" fg:x="68653" fg:w="31"/><text x="58.1046%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="57.8377%" y="181" width="0.0118%" height="15" fill="rgb(234,129,42)" fg:x="68684" fg:w="14"/><text x="58.1307%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="57.8495%" y="181" width="0.0118%" height="15" fill="rgb(220,82,16)" fg:x="68698" fg:w="14"/><text x="58.1425%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="57.8613%" y="165" width="0.0312%" height="15" fill="rgb(211,88,4)" fg:x="68712" fg:w="37"/><text x="58.1542%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="57.8924%" y="165" width="0.0286%" height="15" fill="rgb(248,151,21)" fg:x="68749" fg:w="34"/><text x="58.1854%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="57.9211%" y="165" width="0.0286%" height="15" fill="rgb(238,163,6)" fg:x="68783" fg:w="34"/><text x="58.2140%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="57.9497%" y="165" width="0.0261%" height="15" fill="rgb(209,183,11)" fg:x="68817" fg:w="31"/><text x="58.2427%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="57.8613%" y="181" width="0.2055%" height="15" fill="rgb(219,37,20)" fg:x="68712" fg:w="244"/><text x="58.1542%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="58.0667%" y="181" width="0.0261%" height="15" fill="rgb(210,158,4)" fg:x="68956" fg:w="31"/><text x="58.3597%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="58.0928%" y="181" width="0.0118%" height="15" fill="rgb(221,167,53)" fg:x="68987" fg:w="14"/><text x="58.3858%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="58.1046%" y="181" width="0.0118%" height="15" fill="rgb(237,151,45)" fg:x="69001" fg:w="14"/><text x="58.3976%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="58.1164%" y="165" width="0.0312%" height="15" fill="rgb(231,39,3)" fg:x="69015" fg:w="37"/><text x="58.4094%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="58.1476%" y="165" width="0.0286%" height="15" fill="rgb(212,167,28)" fg:x="69052" fg:w="34"/><text x="58.4406%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="58.1762%" y="165" width="0.0286%" height="15" fill="rgb(232,178,8)" fg:x="69086" fg:w="34"/><text x="58.4692%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="58.2048%" y="165" width="0.0261%" height="15" fill="rgb(225,151,20)" fg:x="69120" fg:w="31"/><text x="58.4978%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="58.1164%" y="181" width="0.2055%" height="15" fill="rgb(238,3,37)" fg:x="69015" fg:w="244"/><text x="58.4094%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="58.3219%" y="181" width="0.0261%" height="15" fill="rgb(251,147,42)" fg:x="69259" fg:w="31"/><text x="58.6149%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="58.3480%" y="181" width="0.0118%" height="15" fill="rgb(208,173,10)" fg:x="69290" fg:w="14"/><text x="58.6410%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="58.3598%" y="181" width="0.0118%" height="15" fill="rgb(246,225,4)" fg:x="69304" fg:w="14"/><text x="58.6528%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="58.3716%" y="165" width="0.0312%" height="15" fill="rgb(248,102,6)" fg:x="69318" fg:w="37"/><text x="58.6645%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="58.4027%" y="165" width="0.0286%" height="15" fill="rgb(232,6,21)" fg:x="69355" fg:w="34"/><text x="58.6957%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="58.4314%" y="165" width="0.0286%" height="15" fill="rgb(221,179,22)" fg:x="69389" fg:w="34"/><text x="58.7243%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="58.4600%" y="165" width="0.0261%" height="15" fill="rgb(252,50,20)" fg:x="69423" fg:w="31"/><text x="58.7530%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="58.3716%" y="181" width="0.2055%" height="15" fill="rgb(222,56,38)" fg:x="69318" fg:w="244"/><text x="58.6645%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="58.5770%" y="181" width="0.0261%" height="15" fill="rgb(206,193,29)" fg:x="69562" fg:w="31"/><text x="58.8700%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="58.6032%" y="181" width="0.0118%" height="15" fill="rgb(239,192,45)" fg:x="69593" fg:w="14"/><text x="58.8961%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="58.6149%" y="181" width="0.0118%" height="15" fill="rgb(254,18,36)" fg:x="69607" fg:w="14"/><text x="58.9079%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="58.6267%" y="165" width="0.0312%" height="15" fill="rgb(221,127,11)" fg:x="69621" fg:w="37"/><text x="58.9197%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="58.6579%" y="165" width="0.0286%" height="15" fill="rgb(234,146,35)" fg:x="69658" fg:w="34"/><text x="58.9509%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="58.6865%" y="165" width="0.0286%" height="15" fill="rgb(254,201,37)" fg:x="69692" fg:w="34"/><text x="58.9795%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="58.7151%" y="165" width="0.0261%" height="15" fill="rgb(211,202,23)" fg:x="69726" fg:w="31"/><text x="59.0081%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="58.6267%" y="181" width="0.2055%" height="15" fill="rgb(237,91,2)" fg:x="69621" fg:w="244"/><text x="58.9197%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="58.8322%" y="181" width="0.0261%" height="15" fill="rgb(226,228,36)" fg:x="69865" fg:w="31"/><text x="59.1252%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="58.8583%" y="181" width="0.0118%" height="15" fill="rgb(213,63,50)" fg:x="69896" fg:w="14"/><text x="59.1513%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="58.8701%" y="181" width="0.0118%" height="15" fill="rgb(235,194,19)" fg:x="69910" fg:w="14"/><text x="59.1631%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="58.8819%" y="165" width="0.0312%" height="15" fill="rgb(207,204,18)" fg:x="69924" fg:w="37"/><text x="59.1748%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="58.9130%" y="165" width="0.0286%" height="15" fill="rgb(248,8,7)" fg:x="69961" fg:w="34"/><text x="59.2060%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="58.9417%" y="165" width="0.0286%" height="15" fill="rgb(223,145,47)" fg:x="69995" fg:w="34"/><text x="59.2346%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="58.9703%" y="165" width="0.0261%" height="15" fill="rgb(228,84,11)" fg:x="70029" fg:w="31"/><text x="59.2633%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="58.8819%" y="181" width="0.2055%" height="15" fill="rgb(218,76,45)" fg:x="69924" fg:w="244"/><text x="59.1748%" y="191.50"></text></g><g><title>__rust_realloc (128 instructions, 0.11%)</title><rect x="59.0873%" y="149" width="0.1078%" height="15" fill="rgb(223,80,15)" fg:x="70168" fg:w="128"/><text x="59.3803%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (171 instructions, 0.14%)</title><rect x="59.0873%" y="165" width="0.1440%" height="15" fill="rgb(219,218,33)" fg:x="70168" fg:w="171"/><text x="59.3803%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (257 instructions, 0.22%)</title><rect x="59.0873%" y="181" width="0.2164%" height="15" fill="rgb(208,51,11)" fg:x="70168" fg:w="257"/><text x="59.3803%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="59.3038%" y="181" width="0.0261%" height="15" fill="rgb(229,165,39)" fg:x="70425" fg:w="31"/><text x="59.5967%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="59.3299%" y="181" width="0.0118%" height="15" fill="rgb(241,100,24)" fg:x="70456" fg:w="14"/><text x="59.6228%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="59.3417%" y="181" width="0.0118%" height="15" fill="rgb(228,14,23)" fg:x="70470" fg:w="14"/><text x="59.6346%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="59.3534%" y="165" width="0.0312%" height="15" fill="rgb(247,116,52)" fg:x="70484" fg:w="37"/><text x="59.6464%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="59.3846%" y="165" width="0.0286%" height="15" fill="rgb(216,149,33)" fg:x="70521" fg:w="34"/><text x="59.6776%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="59.4132%" y="165" width="0.0286%" height="15" fill="rgb(238,142,29)" fg:x="70555" fg:w="34"/><text x="59.7062%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="59.4419%" y="165" width="0.0261%" height="15" fill="rgb(224,83,40)" fg:x="70589" fg:w="31"/><text x="59.7348%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="59.3534%" y="181" width="0.2055%" height="15" fill="rgb(234,165,11)" fg:x="70484" fg:w="244"/><text x="59.6464%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="59.5589%" y="181" width="0.0261%" height="15" fill="rgb(215,96,23)" fg:x="70728" fg:w="31"/><text x="59.8519%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="59.5850%" y="181" width="0.0118%" height="15" fill="rgb(233,179,26)" fg:x="70759" fg:w="14"/><text x="59.8780%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="59.5968%" y="181" width="0.0118%" height="15" fill="rgb(225,129,33)" fg:x="70773" fg:w="14"/><text x="59.8898%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="59.6086%" y="165" width="0.0312%" height="15" fill="rgb(237,49,13)" fg:x="70787" fg:w="37"/><text x="59.9016%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="59.6398%" y="165" width="0.0286%" height="15" fill="rgb(211,3,31)" fg:x="70824" fg:w="34"/><text x="59.9327%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="59.6684%" y="165" width="0.0286%" height="15" fill="rgb(216,152,19)" fg:x="70858" fg:w="34"/><text x="59.9614%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="59.6970%" y="165" width="0.0261%" height="15" fill="rgb(251,121,35)" fg:x="70892" fg:w="31"/><text x="59.9900%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="59.6086%" y="181" width="0.2055%" height="15" fill="rgb(210,217,47)" fg:x="70787" fg:w="244"/><text x="59.9016%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="59.8141%" y="181" width="0.0261%" height="15" fill="rgb(244,116,22)" fg:x="71031" fg:w="31"/><text x="60.1070%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="59.8402%" y="181" width="0.0118%" height="15" fill="rgb(228,17,21)" fg:x="71062" fg:w="14"/><text x="60.1331%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="59.8520%" y="181" width="0.0118%" height="15" fill="rgb(240,149,34)" fg:x="71076" fg:w="14"/><text x="60.1449%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="59.8638%" y="165" width="0.0312%" height="15" fill="rgb(208,125,47)" fg:x="71090" fg:w="37"/><text x="60.1567%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="59.8949%" y="165" width="0.0286%" height="15" fill="rgb(249,186,39)" fg:x="71127" fg:w="34"/><text x="60.1879%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="59.9235%" y="165" width="0.0286%" height="15" fill="rgb(240,220,33)" fg:x="71161" fg:w="34"/><text x="60.2165%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="59.9522%" y="165" width="0.0261%" height="15" fill="rgb(243,110,23)" fg:x="71195" fg:w="31"/><text x="60.2451%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="59.8638%" y="181" width="0.2055%" height="15" fill="rgb(219,163,46)" fg:x="71090" fg:w="244"/><text x="60.1567%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="60.0692%" y="181" width="0.0261%" height="15" fill="rgb(216,126,30)" fg:x="71334" fg:w="31"/><text x="60.3622%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="60.0953%" y="181" width="0.0118%" height="15" fill="rgb(208,139,11)" fg:x="71365" fg:w="14"/><text x="60.3883%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="60.1071%" y="181" width="0.0118%" height="15" fill="rgb(213,118,36)" fg:x="71379" fg:w="14"/><text x="60.4001%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="60.1189%" y="165" width="0.0312%" height="15" fill="rgb(226,43,17)" fg:x="71393" fg:w="37"/><text x="60.4119%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="60.1501%" y="165" width="0.0286%" height="15" fill="rgb(254,217,4)" fg:x="71430" fg:w="34"/><text x="60.4430%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="60.1787%" y="165" width="0.0286%" height="15" fill="rgb(210,134,47)" fg:x="71464" fg:w="34"/><text x="60.4717%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="60.2073%" y="165" width="0.0261%" height="15" fill="rgb(237,24,49)" fg:x="71498" fg:w="31"/><text x="60.5003%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="60.1189%" y="181" width="0.2055%" height="15" fill="rgb(251,39,46)" fg:x="71393" fg:w="244"/><text x="60.4119%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="60.3244%" y="181" width="0.0261%" height="15" fill="rgb(251,220,3)" fg:x="71637" fg:w="31"/><text x="60.6173%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="60.3505%" y="181" width="0.0118%" height="15" fill="rgb(228,105,12)" fg:x="71668" fg:w="14"/><text x="60.6434%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="60.3623%" y="181" width="0.0118%" height="15" fill="rgb(215,196,1)" fg:x="71682" fg:w="14"/><text x="60.6552%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="60.3741%" y="165" width="0.0312%" height="15" fill="rgb(214,33,39)" fg:x="71696" fg:w="37"/><text x="60.6670%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="60.4052%" y="165" width="0.0286%" height="15" fill="rgb(220,19,52)" fg:x="71733" fg:w="34"/><text x="60.6982%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="60.4338%" y="165" width="0.0286%" height="15" fill="rgb(221,78,38)" fg:x="71767" fg:w="34"/><text x="60.7268%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="60.4625%" y="165" width="0.0261%" height="15" fill="rgb(253,30,16)" fg:x="71801" fg:w="31"/><text x="60.7554%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="60.3741%" y="181" width="0.2055%" height="15" fill="rgb(242,65,0)" fg:x="71696" fg:w="244"/><text x="60.6670%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="60.5795%" y="181" width="0.0261%" height="15" fill="rgb(235,201,12)" fg:x="71940" fg:w="31"/><text x="60.8725%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="60.6056%" y="181" width="0.0118%" height="15" fill="rgb(233,161,9)" fg:x="71971" fg:w="14"/><text x="60.8986%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="60.6174%" y="181" width="0.0118%" height="15" fill="rgb(241,207,41)" fg:x="71985" fg:w="14"/><text x="60.9104%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="60.6292%" y="165" width="0.0312%" height="15" fill="rgb(212,69,46)" fg:x="71999" fg:w="37"/><text x="60.9222%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="60.6604%" y="165" width="0.0286%" height="15" fill="rgb(239,69,45)" fg:x="72036" fg:w="34"/><text x="60.9533%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="60.6890%" y="165" width="0.0286%" height="15" fill="rgb(242,117,48)" fg:x="72070" fg:w="34"/><text x="60.9820%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="60.7176%" y="165" width="0.0261%" height="15" fill="rgb(228,41,36)" fg:x="72104" fg:w="31"/><text x="61.0106%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="60.6292%" y="181" width="0.2055%" height="15" fill="rgb(212,3,32)" fg:x="71999" fg:w="244"/><text x="60.9222%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="60.8347%" y="181" width="0.0261%" height="15" fill="rgb(233,41,49)" fg:x="72243" fg:w="31"/><text x="61.1276%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="60.8608%" y="181" width="0.0118%" height="15" fill="rgb(252,170,49)" fg:x="72274" fg:w="14"/><text x="61.1537%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="60.8726%" y="181" width="0.0118%" height="15" fill="rgb(229,53,26)" fg:x="72288" fg:w="14"/><text x="61.1655%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="60.8844%" y="165" width="0.0312%" height="15" fill="rgb(217,157,12)" fg:x="72302" fg:w="37"/><text x="61.1773%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="60.9155%" y="165" width="0.0286%" height="15" fill="rgb(227,17,9)" fg:x="72339" fg:w="34"/><text x="61.2085%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="60.9441%" y="165" width="0.0286%" height="15" fill="rgb(218,84,12)" fg:x="72373" fg:w="34"/><text x="61.2371%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="60.9728%" y="165" width="0.0261%" height="15" fill="rgb(212,79,24)" fg:x="72407" fg:w="31"/><text x="61.2657%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="60.8844%" y="181" width="0.2055%" height="15" fill="rgb(217,222,37)" fg:x="72302" fg:w="244"/><text x="61.1773%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="61.0898%" y="181" width="0.0261%" height="15" fill="rgb(246,208,8)" fg:x="72546" fg:w="31"/><text x="61.3828%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="61.1159%" y="181" width="0.0118%" height="15" fill="rgb(244,133,10)" fg:x="72577" fg:w="14"/><text x="61.4089%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="61.1277%" y="181" width="0.0118%" height="15" fill="rgb(209,219,41)" fg:x="72591" fg:w="14"/><text x="61.4207%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="61.1395%" y="165" width="0.0312%" height="15" fill="rgb(253,175,45)" fg:x="72605" fg:w="37"/><text x="61.4325%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="61.1707%" y="165" width="0.0286%" height="15" fill="rgb(235,100,37)" fg:x="72642" fg:w="34"/><text x="61.4636%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="61.1993%" y="165" width="0.0286%" height="15" fill="rgb(225,87,19)" fg:x="72676" fg:w="34"/><text x="61.4923%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="61.2279%" y="165" width="0.0261%" height="15" fill="rgb(217,152,17)" fg:x="72710" fg:w="31"/><text x="61.5209%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="61.1395%" y="181" width="0.2055%" height="15" fill="rgb(235,72,13)" fg:x="72605" fg:w="244"/><text x="61.4325%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="61.3450%" y="181" width="0.0261%" height="15" fill="rgb(233,140,18)" fg:x="72849" fg:w="31"/><text x="61.6379%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="61.3711%" y="181" width="0.0118%" height="15" fill="rgb(207,212,28)" fg:x="72880" fg:w="14"/><text x="61.6640%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="61.3829%" y="181" width="0.0118%" height="15" fill="rgb(220,130,25)" fg:x="72894" fg:w="14"/><text x="61.6758%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="61.3947%" y="165" width="0.0312%" height="15" fill="rgb(205,55,34)" fg:x="72908" fg:w="37"/><text x="61.6876%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="61.4258%" y="165" width="0.0286%" height="15" fill="rgb(237,54,35)" fg:x="72945" fg:w="34"/><text x="61.7188%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="61.4544%" y="165" width="0.0286%" height="15" fill="rgb(208,67,23)" fg:x="72979" fg:w="34"/><text x="61.7474%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="61.4831%" y="165" width="0.0261%" height="15" fill="rgb(206,207,50)" fg:x="73013" fg:w="31"/><text x="61.7760%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="61.3947%" y="181" width="0.2055%" height="15" fill="rgb(213,211,42)" fg:x="72908" fg:w="244"/><text x="61.6876%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="61.6001%" y="181" width="0.0261%" height="15" fill="rgb(252,197,50)" fg:x="73152" fg:w="31"/><text x="61.8931%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="61.6262%" y="181" width="0.0118%" height="15" fill="rgb(251,211,41)" fg:x="73183" fg:w="14"/><text x="61.9192%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="61.6380%" y="181" width="0.0118%" height="15" fill="rgb(229,211,5)" fg:x="73197" fg:w="14"/><text x="61.9310%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="61.6498%" y="165" width="0.0312%" height="15" fill="rgb(239,36,31)" fg:x="73211" fg:w="37"/><text x="61.9428%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="61.6810%" y="165" width="0.0286%" height="15" fill="rgb(248,67,31)" fg:x="73248" fg:w="34"/><text x="61.9739%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="61.7096%" y="165" width="0.0286%" height="15" fill="rgb(249,55,44)" fg:x="73282" fg:w="34"/><text x="62.0026%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="61.7382%" y="165" width="0.0261%" height="15" fill="rgb(216,82,12)" fg:x="73316" fg:w="31"/><text x="62.0312%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="61.6498%" y="181" width="0.2055%" height="15" fill="rgb(242,174,1)" fg:x="73211" fg:w="244"/><text x="61.9428%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="61.8553%" y="181" width="0.0261%" height="15" fill="rgb(208,120,29)" fg:x="73455" fg:w="31"/><text x="62.1482%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="61.8814%" y="181" width="0.0118%" height="15" fill="rgb(221,105,43)" fg:x="73486" fg:w="14"/><text x="62.1744%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="61.8932%" y="181" width="0.0118%" height="15" fill="rgb(234,124,22)" fg:x="73500" fg:w="14"/><text x="62.1861%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="61.9050%" y="165" width="0.0312%" height="15" fill="rgb(212,23,30)" fg:x="73514" fg:w="37"/><text x="62.1979%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="61.9361%" y="165" width="0.0286%" height="15" fill="rgb(219,122,53)" fg:x="73551" fg:w="34"/><text x="62.2291%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="61.9648%" y="165" width="0.0286%" height="15" fill="rgb(248,84,24)" fg:x="73585" fg:w="34"/><text x="62.2577%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="61.9934%" y="165" width="0.0261%" height="15" fill="rgb(245,115,18)" fg:x="73619" fg:w="31"/><text x="62.2863%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="61.9050%" y="181" width="0.2055%" height="15" fill="rgb(227,176,51)" fg:x="73514" fg:w="244"/><text x="62.1979%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="62.1104%" y="181" width="0.0261%" height="15" fill="rgb(229,63,42)" fg:x="73758" fg:w="31"/><text x="62.4034%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="62.1365%" y="181" width="0.0118%" height="15" fill="rgb(247,202,24)" fg:x="73789" fg:w="14"/><text x="62.4295%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="62.1483%" y="181" width="0.0118%" height="15" fill="rgb(244,173,20)" fg:x="73803" fg:w="14"/><text x="62.4413%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="62.1601%" y="165" width="0.0312%" height="15" fill="rgb(242,81,47)" fg:x="73817" fg:w="37"/><text x="62.4531%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="62.1913%" y="165" width="0.0286%" height="15" fill="rgb(231,185,54)" fg:x="73854" fg:w="34"/><text x="62.4842%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="62.2199%" y="165" width="0.0286%" height="15" fill="rgb(243,55,32)" fg:x="73888" fg:w="34"/><text x="62.5129%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="62.2485%" y="165" width="0.0261%" height="15" fill="rgb(208,167,19)" fg:x="73922" fg:w="31"/><text x="62.5415%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="62.1601%" y="181" width="0.2055%" height="15" fill="rgb(231,72,35)" fg:x="73817" fg:w="244"/><text x="62.4531%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="62.3656%" y="181" width="0.0261%" height="15" fill="rgb(250,173,51)" fg:x="74061" fg:w="31"/><text x="62.6586%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="62.3917%" y="181" width="0.0118%" height="15" fill="rgb(209,5,22)" fg:x="74092" fg:w="14"/><text x="62.6847%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="62.4035%" y="181" width="0.0118%" height="15" fill="rgb(250,174,19)" fg:x="74106" fg:w="14"/><text x="62.6964%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="62.4153%" y="165" width="0.0312%" height="15" fill="rgb(217,3,49)" fg:x="74120" fg:w="37"/><text x="62.7082%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="62.4464%" y="165" width="0.0286%" height="15" fill="rgb(218,225,5)" fg:x="74157" fg:w="34"/><text x="62.7394%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="62.4751%" y="165" width="0.0286%" height="15" fill="rgb(236,89,11)" fg:x="74191" fg:w="34"/><text x="62.7680%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="62.5037%" y="165" width="0.0261%" height="15" fill="rgb(206,33,28)" fg:x="74225" fg:w="31"/><text x="62.7967%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="62.4153%" y="181" width="0.2055%" height="15" fill="rgb(241,56,42)" fg:x="74120" fg:w="244"/><text x="62.7082%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="62.6207%" y="181" width="0.0261%" height="15" fill="rgb(222,44,11)" fg:x="74364" fg:w="31"/><text x="62.9137%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="62.6468%" y="181" width="0.0118%" height="15" fill="rgb(234,111,20)" fg:x="74395" fg:w="14"/><text x="62.9398%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="62.6586%" y="181" width="0.0118%" height="15" fill="rgb(237,77,6)" fg:x="74409" fg:w="14"/><text x="62.9516%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="62.6704%" y="165" width="0.0312%" height="15" fill="rgb(235,111,23)" fg:x="74423" fg:w="37"/><text x="62.9634%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="62.7016%" y="165" width="0.0286%" height="15" fill="rgb(251,135,29)" fg:x="74460" fg:w="34"/><text x="62.9945%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="62.7302%" y="165" width="0.0286%" height="15" fill="rgb(217,57,1)" fg:x="74494" fg:w="34"/><text x="63.0232%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="62.7588%" y="165" width="0.0261%" height="15" fill="rgb(249,119,31)" fg:x="74528" fg:w="31"/><text x="63.0518%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="62.6704%" y="181" width="0.2055%" height="15" fill="rgb(233,164,33)" fg:x="74423" fg:w="244"/><text x="62.9634%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="62.8759%" y="181" width="0.0261%" height="15" fill="rgb(250,217,43)" fg:x="74667" fg:w="31"/><text x="63.1689%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="62.9020%" y="181" width="0.0118%" height="15" fill="rgb(232,154,50)" fg:x="74698" fg:w="14"/><text x="63.1950%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="62.9138%" y="181" width="0.0118%" height="15" fill="rgb(227,190,8)" fg:x="74712" fg:w="14"/><text x="63.2067%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.03%)</title><rect x="62.9256%" y="165" width="0.0312%" height="15" fill="rgb(209,217,32)" fg:x="74726" fg:w="37"/><text x="63.2185%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="62.9567%" y="165" width="0.0286%" height="15" fill="rgb(243,203,50)" fg:x="74763" fg:w="34"/><text x="63.2497%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.03%)</title><rect x="62.9854%" y="165" width="0.0286%" height="15" fill="rgb(232,152,27)" fg:x="74797" fg:w="34"/><text x="63.2783%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="63.0140%" y="165" width="0.0261%" height="15" fill="rgb(240,34,29)" fg:x="74831" fg:w="31"/><text x="63.3070%" y="175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (244 instructions, 0.21%)</title><rect x="62.9256%" y="181" width="0.2055%" height="15" fill="rgb(215,185,52)" fg:x="74726" fg:w="244"/><text x="63.2185%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="63.1310%" y="181" width="0.0261%" height="15" fill="rgb(240,89,49)" fg:x="74970" fg:w="31"/><text x="63.4240%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="63.1571%" y="165" width="0.0118%" height="15" fill="rgb(225,12,52)" fg:x="75001" fg:w="14"/><text x="63.4501%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="63.1689%" y="165" width="0.0118%" height="15" fill="rgb(239,128,45)" fg:x="75015" fg:w="14"/><text x="63.4619%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Compound&gt; (50 instructions, 0.04%)</title><rect x="63.1571%" y="181" width="0.0421%" height="15" fill="rgb(211,78,47)" fg:x="75001" fg:w="50"/><text x="63.4501%" y="191.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (21,429 instructions, 18.05%)</title><rect x="49.8446%" y="197" width="18.0450%" height="15" fill="rgb(232,31,21)" fg:x="59192" fg:w="21429"/><text x="50.1376%" y="207.50">&lt;serde::de::impls::&lt;impl..</text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.03%)</title><rect x="67.8897%" y="197" width="0.0261%" height="15" fill="rgb(222,168,14)" fg:x="80621" fg:w="31"/><text x="68.1826%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="67.9217%" y="181" width="0.0749%" height="15" fill="rgb(209,128,24)" fg:x="80659" fg:w="89"/><text x="68.2146%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="68.0025%" y="165" width="0.0227%" height="15" fill="rgb(249,35,13)" fg:x="80755" fg:w="27"/><text x="68.2955%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.12%)</title><rect x="68.0025%" y="181" width="0.1213%" height="15" fill="rgb(218,7,2)" fg:x="80755" fg:w="144"/><text x="68.2955%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Compound&gt; (362 instructions, 0.30%)</title><rect x="67.9158%" y="197" width="0.3048%" height="15" fill="rgb(238,107,27)" fg:x="80652" fg:w="362"/><text x="68.2087%" y="207.50"></text></g><g><title>basic_dao::types::_::&lt;impl serde::de::Deserialize for basic_dao::types::ProposalPayload&gt;::deserialize (34,589 instructions, 29.13%)</title><rect x="40.9623%" y="213" width="29.1268%" height="15" fill="rgb(217,88,38)" fg:x="48644" fg:w="34589"/><text x="41.2553%" y="223.50">basic_dao::types::_::&lt;impl serde::de::De..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="70.1641%" y="181" width="0.0227%" height="15" fill="rgb(230,207,0)" fg:x="83322" fg:w="27"/><text x="70.4571%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.20%)</title><rect x="70.0892%" y="197" width="0.1962%" height="15" fill="rgb(249,64,54)" fg:x="83233" fg:w="233"/><text x="70.3821%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (350 instructions, 0.29%)</title><rect x="70.0892%" y="213" width="0.2947%" height="15" fill="rgb(231,7,11)" fg:x="83233" fg:w="350"/><text x="70.3821%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="70.3839%" y="213" width="0.0118%" height="15" fill="rgb(205,149,21)" fg:x="83583" fg:w="14"/><text x="70.6769%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="70.3957%" y="213" width="0.0118%" height="15" fill="rgb(215,126,34)" fg:x="83597" fg:w="14"/><text x="70.6887%" y="223.50"></text></g><g><title>candid::de::IDLDeserialize::done (37 instructions, 0.03%)</title><rect x="70.4075%" y="213" width="0.0312%" height="15" fill="rgb(241,132,45)" fg:x="83611" fg:w="37"/><text x="70.7005%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="70.4386%" y="181" width="0.0749%" height="15" fill="rgb(252,69,32)" fg:x="83648" fg:w="89"/><text x="70.7316%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="70.5136%" y="133" width="0.0227%" height="15" fill="rgb(232,204,19)" fg:x="83737" fg:w="27"/><text x="70.8066%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.12%)</title><rect x="70.5136%" y="149" width="0.1196%" height="15" fill="rgb(249,15,47)" fg:x="83737" fg:w="142"/><text x="70.8066%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="70.6904%" y="149" width="0.0749%" height="15" fill="rgb(209,227,23)" fg:x="83947" fg:w="89"/><text x="70.9834%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="70.8252%" y="149" width="0.0699%" height="15" fill="rgb(248,92,24)" fg:x="84107" fg:w="83"/><text x="71.1181%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="70.9523%" y="149" width="0.0699%" height="15" fill="rgb(247,59,2)" fg:x="84258" fg:w="83"/><text x="71.2453%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="71.0820%" y="149" width="0.0699%" height="15" fill="rgb(221,30,5)" fg:x="84412" fg:w="83"/><text x="71.3750%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="71.2091%" y="133" width="0.0194%" height="15" fill="rgb(208,108,53)" fg:x="84563" fg:w="23"/><text x="71.5021%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="71.3220%" y="133" width="0.0194%" height="15" fill="rgb(211,183,26)" fg:x="84697" fg:w="23"/><text x="71.6150%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (268 instructions, 0.23%)</title><rect x="71.2091%" y="149" width="0.2257%" height="15" fill="rgb(232,132,4)" fg:x="84563" fg:w="268"/><text x="71.5021%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,211 instructions, 1.02%)</title><rect x="70.5136%" y="165" width="1.0198%" height="15" fill="rgb(253,128,37)" fg:x="83737" fg:w="1211"/><text x="70.8066%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="71.5334%" y="149" width="0.0194%" height="15" fill="rgb(221,58,24)" fg:x="84948" fg:w="23"/><text x="71.8263%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.11%)</title><rect x="71.5334%" y="165" width="0.1112%" height="15" fill="rgb(230,54,45)" fg:x="84948" fg:w="132"/><text x="71.8263%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="71.6445%" y="165" width="0.0699%" height="15" fill="rgb(254,21,18)" fg:x="85080" fg:w="83"/><text x="71.9375%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,629 instructions, 1.37%)</title><rect x="70.5136%" y="181" width="1.3718%" height="15" fill="rgb(221,108,0)" fg:x="83737" fg:w="1629"/><text x="70.8066%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="71.8853%" y="165" width="0.0194%" height="15" fill="rgb(206,95,1)" fg:x="85366" fg:w="23"/><text x="72.1783%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.12%)</title><rect x="71.8853%" y="181" width="0.1162%" height="15" fill="rgb(237,52,5)" fg:x="85366" fg:w="138"/><text x="72.1783%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="72.0015%" y="165" width="0.0118%" height="15" fill="rgb(218,150,34)" fg:x="85504" fg:w="14"/><text x="72.2945%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="72.0133%" y="149" width="0.0227%" height="15" fill="rgb(235,194,28)" fg:x="85518" fg:w="27"/><text x="72.3063%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.12%)</title><rect x="72.0133%" y="165" width="0.1196%" height="15" fill="rgb(245,92,18)" fg:x="85518" fg:w="142"/><text x="72.3063%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (237 instructions, 0.20%)</title><rect x="72.0015%" y="181" width="0.1996%" height="15" fill="rgb(253,203,53)" fg:x="85504" fg:w="237"/><text x="72.2945%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="72.2011%" y="181" width="0.0749%" height="15" fill="rgb(249,185,47)" fg:x="85741" fg:w="89"/><text x="72.4941%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,470 instructions, 2.08%)</title><rect x="70.4386%" y="197" width="2.0799%" height="15" fill="rgb(252,194,52)" fg:x="83648" fg:w="2470"/><text x="70.7316%" y="207.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="72.5186%" y="197" width="0.0749%" height="15" fill="rgb(210,53,36)" fg:x="86118" fg:w="89"/><text x="72.8116%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="72.5935%" y="165" width="0.0227%" height="15" fill="rgb(237,37,25)" fg:x="86207" fg:w="27"/><text x="72.8865%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="72.6163%" y="165" width="0.0227%" height="15" fill="rgb(242,116,27)" fg:x="86234" fg:w="27"/><text x="72.9092%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.06%)</title><rect x="72.6390%" y="165" width="0.0564%" height="15" fill="rgb(213,185,26)" fg:x="86261" fg:w="67"/><text x="72.9320%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (242 instructions, 0.20%)</title><rect x="72.5935%" y="181" width="0.2038%" height="15" fill="rgb(225,204,8)" fg:x="86207" fg:w="242"/><text x="72.8865%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (313 instructions, 0.26%)</title><rect x="72.5935%" y="197" width="0.2636%" height="15" fill="rgb(254,111,37)" fg:x="86207" fg:w="313"/><text x="72.8865%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="72.8571%" y="197" width="0.0118%" height="15" fill="rgb(242,35,9)" fg:x="86520" fg:w="14"/><text x="73.1501%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (2,984 instructions, 2.51%)</title><rect x="70.4386%" y="213" width="2.5128%" height="15" fill="rgb(232,138,49)" fg:x="83648" fg:w="2984"/><text x="70.7316%" y="223.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="72.9514%" y="197" width="0.0227%" height="15" fill="rgb(247,56,4)" fg:x="86632" fg:w="27"/><text x="73.2444%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.12%)</title><rect x="72.9514%" y="213" width="0.1196%" height="15" fill="rgb(226,179,17)" fg:x="86632" fg:w="142"/><text x="73.2444%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="73.0710%" y="197" width="0.0691%" height="15" fill="rgb(216,163,45)" fg:x="86774" fg:w="82"/><text x="73.3640%" y="207.50"></text></g><g><title>memset (141 instructions, 0.12%)</title><rect x="73.1400%" y="197" width="0.1187%" height="15" fill="rgb(211,157,3)" fg:x="86856" fg:w="141"/><text x="73.4330%" y="207.50"></text></g><g><title>memcpy (188 instructions, 0.16%)</title><rect x="73.2588%" y="197" width="0.1583%" height="15" fill="rgb(234,44,20)" fg:x="86997" fg:w="188"/><text x="73.5517%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="73.4171%" y="197" width="0.0749%" height="15" fill="rgb(254,138,23)" fg:x="87185" fg:w="89"/><text x="73.7101%" y="207.50"></text></g><g><title>&lt;basic_dao::env::CanisterEnvironment as basic_dao::env::Environment&gt;::caller (1,689 instructions, 1.42%)</title><rect x="73.0710%" y="213" width="1.4223%" height="15" fill="rgb(206,119,39)" fg:x="86774" fg:w="1689"/><text x="73.3640%" y="223.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (73 instructions, 0.06%)</title><rect x="74.4933%" y="197" width="0.0615%" height="15" fill="rgb(231,105,52)" fg:x="88463" fg:w="73"/><text x="74.7862%" y="207.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (69 instructions, 0.06%)</title><rect x="74.5547%" y="197" width="0.0581%" height="15" fill="rgb(250,20,5)" fg:x="88536" fg:w="69"/><text x="74.8477%" y="207.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (415 instructions, 0.35%)</title><rect x="74.6129%" y="197" width="0.3495%" height="15" fill="rgb(215,198,30)" fg:x="88605" fg:w="415"/><text x="74.9058%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (810 instructions, 0.68%)</title><rect x="74.4933%" y="213" width="0.6821%" height="15" fill="rgb(246,142,8)" fg:x="88463" fg:w="810"/><text x="74.7862%" y="223.50"></text></g><g><title>memcmp (675 instructions, 0.57%)</title><rect x="75.1754%" y="213" width="0.5684%" height="15" fill="rgb(243,26,38)" fg:x="89273" fg:w="675"/><text x="75.4683%" y="223.50"></text></g><g><title>&lt;basic_dao::env::CanisterEnvironment as basic_dao::env::Environment&gt;::now (506 instructions, 0.43%)</title><rect x="75.7438%" y="213" width="0.4261%" height="15" fill="rgb(205,133,28)" fg:x="89948" fg:w="506"/><text x="76.0367%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="76.1699%" y="197" width="0.0691%" height="15" fill="rgb(212,34,0)" fg:x="90454" fg:w="82"/><text x="76.4628%" y="207.50"></text></g><g><title>memset (141 instructions, 0.12%)</title><rect x="76.2389%" y="197" width="0.1187%" height="15" fill="rgb(251,226,22)" fg:x="90536" fg:w="141"/><text x="76.5319%" y="207.50"></text></g><g><title>memcpy (188 instructions, 0.16%)</title><rect x="76.3576%" y="197" width="0.1583%" height="15" fill="rgb(252,119,9)" fg:x="90677" fg:w="188"/><text x="76.6506%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="76.5160%" y="197" width="0.0749%" height="15" fill="rgb(213,150,50)" fg:x="90865" fg:w="89"/><text x="76.8089%" y="207.50"></text></g><g><title>&lt;basic_dao::env::CanisterEnvironment as basic_dao::env::Environment&gt;::caller (1,689 instructions, 1.42%)</title><rect x="76.1699%" y="213" width="1.4223%" height="15" fill="rgb(212,24,39)" fg:x="90454" fg:w="1689"/><text x="76.4628%" y="223.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (144 instructions, 0.12%)</title><rect x="77.5921%" y="181" width="0.1213%" height="15" fill="rgb(213,46,39)" fg:x="92143" fg:w="144"/><text x="77.8851%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (373 instructions, 0.31%)</title><rect x="77.5921%" y="197" width="0.3141%" height="15" fill="rgb(239,106,12)" fg:x="92143" fg:w="373"/><text x="77.8851%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (141 instructions, 0.12%)</title><rect x="77.9062%" y="181" width="0.1187%" height="15" fill="rgb(249,229,21)" fg:x="92516" fg:w="141"/><text x="78.1992%" y="191.50"></text></g><g><title>memset (152 instructions, 0.13%)</title><rect x="78.0250%" y="181" width="0.1280%" height="15" fill="rgb(212,158,3)" fg:x="92657" fg:w="152"/><text x="78.3179%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (457 instructions, 0.38%)</title><rect x="77.9062%" y="197" width="0.3848%" height="15" fill="rgb(253,26,48)" fg:x="92516" fg:w="457"/><text x="78.1992%" y="207.50"></text></g><g><title>memcpy (632 instructions, 0.53%)</title><rect x="78.2911%" y="197" width="0.5322%" height="15" fill="rgb(238,178,20)" fg:x="92973" fg:w="632"/><text x="78.5840%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,633 instructions, 1.38%)</title><rect x="77.5921%" y="213" width="1.3751%" height="15" fill="rgb(208,86,15)" fg:x="92143" fg:w="1633"/><text x="77.8851%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="78.9791%" y="149" width="0.0227%" height="15" fill="rgb(239,42,53)" fg:x="93790" fg:w="27"/><text x="79.2720%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="79.0953%" y="149" width="0.0227%" height="15" fill="rgb(245,226,8)" fg:x="93928" fg:w="27"/><text x="79.3882%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (276 instructions, 0.23%)</title><rect x="78.9791%" y="165" width="0.2324%" height="15" fill="rgb(216,176,32)" fg:x="93790" fg:w="276"/><text x="79.2720%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (386 instructions, 0.33%)</title><rect x="78.9791%" y="181" width="0.3250%" height="15" fill="rgb(231,186,21)" fg:x="93790" fg:w="386"/><text x="79.2720%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.06%)</title><rect x="79.3159%" y="149" width="0.0556%" height="15" fill="rgb(205,95,49)" fg:x="94190" fg:w="66"/><text x="79.6089%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="79.3715%" y="149" width="0.0194%" height="15" fill="rgb(217,145,8)" fg:x="94256" fg:w="23"/><text x="79.6644%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.06%)</title><rect x="79.3908%" y="149" width="0.0564%" height="15" fill="rgb(239,144,48)" fg:x="94279" fg:w="67"/><text x="79.6838%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="79.5491%" y="149" width="0.0227%" height="15" fill="rgb(214,189,23)" fg:x="94467" fg:w="27"/><text x="79.8421%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (421 instructions, 0.35%)</title><rect x="79.3159%" y="165" width="0.3545%" height="15" fill="rgb(229,157,17)" fg:x="94190" fg:w="421"/><text x="79.6089%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="79.7630%" y="165" width="0.0699%" height="15" fill="rgb(230,5,48)" fg:x="94721" fg:w="83"/><text x="80.0560%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="79.8927%" y="149" width="0.0194%" height="15" fill="rgb(224,156,48)" fg:x="94875" fg:w="23"/><text x="80.1857%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="80.0056%" y="149" width="0.0227%" height="15" fill="rgb(223,14,29)" fg:x="95009" fg:w="27"/><text x="80.2985%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.06%)</title><rect x="80.0283%" y="149" width="0.0564%" height="15" fill="rgb(229,96,36)" fg:x="95036" fg:w="67"/><text x="80.3213%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (323 instructions, 0.27%)</title><rect x="79.8927%" y="165" width="0.2720%" height="15" fill="rgb(231,102,53)" fg:x="94875" fg:w="323"/><text x="80.1857%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,132 instructions, 0.95%)</title><rect x="79.3041%" y="181" width="0.9532%" height="15" fill="rgb(210,77,38)" fg:x="94176" fg:w="1132"/><text x="79.5971%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="80.2573%" y="181" width="0.0118%" height="15" fill="rgb(235,131,6)" fg:x="95308" fg:w="14"/><text x="80.5503%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="80.2691%" y="165" width="0.0194%" height="15" fill="rgb(252,55,38)" fg:x="95322" fg:w="23"/><text x="80.5621%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="80.3870%" y="165" width="0.0194%" height="15" fill="rgb(246,38,14)" fg:x="95462" fg:w="23"/><text x="80.6800%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (274 instructions, 0.23%)</title><rect x="80.2691%" y="181" width="0.2307%" height="15" fill="rgb(242,27,5)" fg:x="95322" fg:w="274"/><text x="80.5621%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="80.6708%" y="181" width="0.0118%" height="15" fill="rgb(228,65,35)" fg:x="95799" fg:w="14"/><text x="80.9638%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="80.6826%" y="165" width="0.0194%" height="15" fill="rgb(245,93,11)" fg:x="95813" fg:w="23"/><text x="80.9756%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (140 instructions, 0.12%)</title><rect x="80.6826%" y="181" width="0.1179%" height="15" fill="rgb(213,1,31)" fg:x="95813" fg:w="140"/><text x="80.9756%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="80.8687%" y="165" width="0.0227%" height="15" fill="rgb(237,205,14)" fg:x="96034" fg:w="27"/><text x="81.1617%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="80.8914%" y="165" width="0.0227%" height="15" fill="rgb(232,118,45)" fg:x="96061" fg:w="27"/><text x="81.1844%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (98 instructions, 0.08%)</title><rect x="80.9142%" y="165" width="0.0825%" height="15" fill="rgb(218,5,6)" fg:x="96088" fg:w="98"/><text x="81.2071%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (273 instructions, 0.23%)</title><rect x="80.8687%" y="181" width="0.2299%" height="15" fill="rgb(251,87,51)" fg:x="96034" fg:w="273"/><text x="81.1617%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,602 instructions, 2.19%)</title><rect x="78.9673%" y="197" width="2.1911%" height="15" fill="rgb(207,225,20)" fg:x="93776" fg:w="2602"/><text x="79.2602%" y="207.50">&lt;..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="81.1584%" y="197" width="0.0118%" height="15" fill="rgb(222,78,54)" fg:x="96378" fg:w="14"/><text x="81.4513%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="81.1702%" y="197" width="0.0118%" height="15" fill="rgb(232,85,16)" fg:x="96392" fg:w="14"/><text x="81.4631%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="81.1819%" y="197" width="0.0118%" height="15" fill="rgb(244,25,33)" fg:x="96406" fg:w="14"/><text x="81.4749%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="81.1937%" y="181" width="0.0194%" height="15" fill="rgb(233,24,36)" fg:x="96420" fg:w="23"/><text x="81.4867%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (140 instructions, 0.12%)</title><rect x="81.1937%" y="197" width="0.1179%" height="15" fill="rgb(253,49,54)" fg:x="96420" fg:w="140"/><text x="81.4867%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (3,266 instructions, 2.75%)</title><rect x="78.9673%" y="213" width="2.7502%" height="15" fill="rgb(245,12,22)" fg:x="93776" fg:w="3266"/><text x="79.2602%" y="223.50">c..</text></g><g><title>candid::types::internal::find_type (24 instructions, 0.02%)</title><rect x="81.7175%" y="213" width="0.0202%" height="15" fill="rgb(253,141,28)" fg:x="97042" fg:w="24"/><text x="82.0105%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="81.7377%" y="213" width="0.0691%" height="15" fill="rgb(225,207,27)" fg:x="97066" fg:w="82"/><text x="82.0307%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.10%)</title><rect x="81.8068%" y="197" width="0.0968%" height="15" fill="rgb(220,84,2)" fg:x="97148" fg:w="115"/><text x="82.0997%" y="207.50"></text></g><g><title>candid::types::internal::env_add (199 instructions, 0.17%)</title><rect x="81.8068%" y="213" width="0.1676%" height="15" fill="rgb(224,37,37)" fg:x="97148" fg:w="199"/><text x="82.0997%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="81.9744%" y="213" width="0.0691%" height="15" fill="rgb(220,143,18)" fg:x="97347" fg:w="82"/><text x="82.2673%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.07%)</title><rect x="82.0434%" y="213" width="0.0674%" height="15" fill="rgb(210,88,33)" fg:x="97429" fg:w="80"/><text x="82.3364%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (116 instructions, 0.10%)</title><rect x="82.1108%" y="213" width="0.0977%" height="15" fill="rgb(219,87,51)" fg:x="97509" fg:w="116"/><text x="82.4037%" y="223.50"></text></g><g><title>candid::types::internal::find_type (107 instructions, 0.09%)</title><rect x="82.2084%" y="197" width="0.0901%" height="15" fill="rgb(211,7,35)" fg:x="97625" fg:w="107"/><text x="82.5014%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.13%)</title><rect x="82.2986%" y="197" width="0.1339%" height="15" fill="rgb(232,77,2)" fg:x="97732" fg:w="159"/><text x="82.5915%" y="207.50"></text></g><g><title>memmove (220 instructions, 0.19%)</title><rect x="82.4324%" y="181" width="0.1853%" height="15" fill="rgb(249,94,25)" fg:x="97891" fg:w="220"/><text x="82.7254%" y="191.50"></text></g><g><title>memmove (92 instructions, 0.08%)</title><rect x="82.6177%" y="181" width="0.0775%" height="15" fill="rgb(215,112,2)" fg:x="98111" fg:w="92"/><text x="82.9107%" y="191.50"></text></g><g><title>candid::types::internal::env_add (536 instructions, 0.45%)</title><rect x="82.4324%" y="197" width="0.4514%" height="15" fill="rgb(226,115,48)" fg:x="97891" fg:w="536"/><text x="82.7254%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (152 instructions, 0.13%)</title><rect x="82.8838%" y="197" width="0.1280%" height="15" fill="rgb(249,196,10)" fg:x="98427" fg:w="152"/><text x="83.1768%" y="207.50"></text></g><g><title>memcmp (77 instructions, 0.06%)</title><rect x="83.0118%" y="181" width="0.0648%" height="15" fill="rgb(237,109,14)" fg:x="98579" fg:w="77"/><text x="83.3048%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="83.0766%" y="149" width="0.0194%" height="15" fill="rgb(217,103,53)" fg:x="98656" fg:w="23"/><text x="83.3696%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.12%)</title><rect x="83.0766%" y="165" width="0.1162%" height="15" fill="rgb(244,137,9)" fg:x="98656" fg:w="138"/><text x="83.3696%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (209 instructions, 0.18%)</title><rect x="83.0766%" y="181" width="0.1760%" height="15" fill="rgb(227,201,3)" fg:x="98656" fg:w="209"/><text x="83.3696%" y="191.50"></text></g><g><title>candid::types::internal::env_add (465 instructions, 0.39%)</title><rect x="83.0118%" y="197" width="0.3916%" height="15" fill="rgb(243,94,6)" fg:x="98579" fg:w="465"/><text x="83.3048%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="83.4034%" y="181" width="0.0286%" height="15" fill="rgb(235,118,5)" fg:x="99044" fg:w="34"/><text x="83.6963%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="83.4320%" y="181" width="0.0286%" height="15" fill="rgb(247,10,30)" fg:x="99078" fg:w="34"/><text x="83.7250%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="83.4606%" y="181" width="0.0286%" height="15" fill="rgb(205,26,28)" fg:x="99112" fg:w="34"/><text x="83.7536%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (49 instructions, 0.04%)</title><rect x="83.4893%" y="181" width="0.0413%" height="15" fill="rgb(206,99,35)" fg:x="99146" fg:w="49"/><text x="83.7822%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="83.5305%" y="181" width="0.0118%" height="15" fill="rgb(238,130,40)" fg:x="99195" fg:w="14"/><text x="83.8235%" y="191.50"></text></g><g><title>candid::types::internal::env_id (436 instructions, 0.37%)</title><rect x="83.4034%" y="197" width="0.3671%" height="15" fill="rgb(224,126,31)" fg:x="99044" fg:w="436"/><text x="83.6963%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (1,974 instructions, 1.66%)</title><rect x="82.2084%" y="213" width="1.6623%" height="15" fill="rgb(254,105,17)" fg:x="97625" fg:w="1974"/><text x="82.5014%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="83.8707%" y="213" width="0.0691%" height="15" fill="rgb(216,87,36)" fg:x="99599" fg:w="82"/><text x="84.1637%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (158 instructions, 0.13%)</title><rect x="83.9398%" y="213" width="0.1330%" height="15" fill="rgb(240,21,12)" fg:x="99681" fg:w="158"/><text x="84.2327%" y="223.50"></text></g><g><title>candid::types::internal::find_type (148 instructions, 0.12%)</title><rect x="84.0728%" y="197" width="0.1246%" height="15" fill="rgb(245,192,34)" fg:x="99839" fg:w="148"/><text x="84.3658%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (152 instructions, 0.13%)</title><rect x="84.1975%" y="197" width="0.1280%" height="15" fill="rgb(226,100,49)" fg:x="99987" fg:w="152"/><text x="84.4904%" y="207.50"></text></g><g><title>memmove (220 instructions, 0.19%)</title><rect x="84.3254%" y="181" width="0.1853%" height="15" fill="rgb(245,188,27)" fg:x="100139" fg:w="220"/><text x="84.6184%" y="191.50"></text></g><g><title>memmove (92 instructions, 0.08%)</title><rect x="84.5107%" y="181" width="0.0775%" height="15" fill="rgb(212,170,8)" fg:x="100359" fg:w="92"/><text x="84.8037%" y="191.50"></text></g><g><title>candid::types::internal::env_add (577 instructions, 0.49%)</title><rect x="84.3254%" y="197" width="0.4859%" height="15" fill="rgb(217,113,29)" fg:x="100139" fg:w="577"/><text x="84.6184%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (152 instructions, 0.13%)</title><rect x="84.8113%" y="197" width="0.1280%" height="15" fill="rgb(237,30,3)" fg:x="100716" fg:w="152"/><text x="85.1043%" y="207.50"></text></g><g><title>memcmp (491 instructions, 0.41%)</title><rect x="84.9393%" y="181" width="0.4135%" height="15" fill="rgb(227,19,28)" fg:x="100868" fg:w="491"/><text x="85.2323%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.02%)</title><rect x="85.3528%" y="149" width="0.0194%" height="15" fill="rgb(239,172,45)" fg:x="101359" fg:w="23"/><text x="85.6458%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.12%)</title><rect x="85.3528%" y="165" width="0.1162%" height="15" fill="rgb(254,55,39)" fg:x="101359" fg:w="138"/><text x="85.6458%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (209 instructions, 0.18%)</title><rect x="85.3528%" y="181" width="0.1760%" height="15" fill="rgb(249,208,12)" fg:x="101359" fg:w="209"/><text x="85.6458%" y="191.50"></text></g><g><title>candid::types::internal::env_add (920 instructions, 0.77%)</title><rect x="84.9393%" y="197" width="0.7747%" height="15" fill="rgb(240,52,13)" fg:x="100868" fg:w="920"/><text x="85.2323%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="85.7140%" y="181" width="0.0286%" height="15" fill="rgb(252,149,13)" fg:x="101788" fg:w="34"/><text x="86.0070%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="85.7427%" y="181" width="0.0286%" height="15" fill="rgb(232,81,48)" fg:x="101822" fg:w="34"/><text x="86.0356%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="85.7713%" y="181" width="0.0286%" height="15" fill="rgb(222,144,2)" fg:x="101856" fg:w="34"/><text x="86.0643%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="85.7999%" y="181" width="0.0286%" height="15" fill="rgb(216,81,32)" fg:x="101890" fg:w="34"/><text x="86.0929%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (49 instructions, 0.04%)</title><rect x="85.8286%" y="181" width="0.0413%" height="15" fill="rgb(244,78,51)" fg:x="101924" fg:w="49"/><text x="86.1215%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="85.8698%" y="181" width="0.0118%" height="15" fill="rgb(217,66,21)" fg:x="101973" fg:w="14"/><text x="86.1628%" y="191.50"></text></g><g><title>candid::types::internal::env_id (503 instructions, 0.42%)</title><rect x="85.7140%" y="197" width="0.4236%" height="15" fill="rgb(247,101,42)" fg:x="101788" fg:w="503"/><text x="86.0070%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (2,571 instructions, 2.16%)</title><rect x="84.0728%" y="213" width="2.1650%" height="15" fill="rgb(227,81,39)" fg:x="99839" fg:w="2571"/><text x="84.3658%" y="223.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="86.2378%" y="213" width="0.0691%" height="15" fill="rgb(220,223,44)" fg:x="102410" fg:w="82"/><text x="86.5308%" y="223.50"></text></g><g><title>memcmp (1,112 instructions, 0.94%)</title><rect x="86.3069%" y="197" width="0.9364%" height="15" fill="rgb(205,218,2)" fg:x="102492" fg:w="1112"/><text x="86.5998%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="87.2433%" y="181" width="0.0749%" height="15" fill="rgb(212,207,28)" fg:x="103604" fg:w="89"/><text x="87.5362%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.13%)</title><rect x="87.2433%" y="197" width="0.1347%" height="15" fill="rgb(224,12,41)" fg:x="103604" fg:w="160"/><text x="87.5362%" y="207.50"></text></g><g><title>candid::types::internal::env_add (1,533 instructions, 1.29%)</title><rect x="86.3069%" y="213" width="1.2909%" height="15" fill="rgb(216,118,12)" fg:x="102492" fg:w="1533"/><text x="86.5998%" y="223.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="87.5978%" y="197" width="0.0286%" height="15" fill="rgb(252,97,46)" fg:x="104025" fg:w="34"/><text x="87.8908%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="87.6264%" y="197" width="0.0286%" height="15" fill="rgb(244,206,19)" fg:x="104059" fg:w="34"/><text x="87.9194%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="87.6550%" y="197" width="0.0286%" height="15" fill="rgb(231,84,31)" fg:x="104093" fg:w="34"/><text x="87.9480%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="87.6837%" y="197" width="0.0286%" height="15" fill="rgb(244,133,0)" fg:x="104127" fg:w="34"/><text x="87.9766%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="87.7123%" y="197" width="0.0286%" height="15" fill="rgb(223,15,50)" fg:x="104161" fg:w="34"/><text x="88.0053%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="87.7409%" y="197" width="0.0286%" height="15" fill="rgb(250,118,49)" fg:x="104195" fg:w="34"/><text x="88.0339%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.02%)</title><rect x="87.7982%" y="165" width="0.0160%" height="15" fill="rgb(248,25,38)" fg:x="104263" fg:w="19"/><text x="88.0912%" y="175.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.12%)</title><rect x="87.7982%" y="181" width="0.1187%" height="15" fill="rgb(215,70,14)" fg:x="104263" fg:w="141"/><text x="88.0912%" y="191.50"></text></g><g><title>memcmp (54 instructions, 0.05%)</title><rect x="87.9734%" y="165" width="0.0455%" height="15" fill="rgb(215,28,15)" fg:x="104471" fg:w="54"/><text x="88.2663%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="88.0188%" y="165" width="0.0286%" height="15" fill="rgb(243,6,28)" fg:x="104525" fg:w="34"/><text x="88.3118%" y="175.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (228 instructions, 0.19%)</title><rect x="87.9734%" y="181" width="0.1920%" height="15" fill="rgb(222,130,1)" fg:x="104471" fg:w="228"/><text x="88.2663%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (537 instructions, 0.45%)</title><rect x="87.7696%" y="197" width="0.4522%" height="15" fill="rgb(236,166,44)" fg:x="104229" fg:w="537"/><text x="88.0625%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="88.2218%" y="197" width="0.0286%" height="15" fill="rgb(221,108,14)" fg:x="104766" fg:w="34"/><text x="88.5147%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="88.2504%" y="197" width="0.0286%" height="15" fill="rgb(252,3,45)" fg:x="104800" fg:w="34"/><text x="88.5434%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="88.2790%" y="197" width="0.0286%" height="15" fill="rgb(237,68,30)" fg:x="104834" fg:w="34"/><text x="88.5720%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="88.3077%" y="197" width="0.0286%" height="15" fill="rgb(211,79,22)" fg:x="104868" fg:w="34"/><text x="88.6006%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="88.3363%" y="197" width="0.0286%" height="15" fill="rgb(252,185,21)" fg:x="104902" fg:w="34"/><text x="88.6293%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="88.3649%" y="197" width="0.0286%" height="15" fill="rgb(225,189,26)" fg:x="104936" fg:w="34"/><text x="88.6579%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="88.3936%" y="197" width="0.0286%" height="15" fill="rgb(241,30,40)" fg:x="104970" fg:w="34"/><text x="88.6865%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.02%)</title><rect x="88.4508%" y="165" width="0.0160%" height="15" fill="rgb(235,215,44)" fg:x="105038" fg:w="19"/><text x="88.7438%" y="175.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (141 instructions, 0.12%)</title><rect x="88.4508%" y="181" width="0.1187%" height="15" fill="rgb(205,8,29)" fg:x="105038" fg:w="141"/><text x="88.7438%" y="191.50"></text></g><g><title>memcmp (54 instructions, 0.05%)</title><rect x="88.6260%" y="165" width="0.0455%" height="15" fill="rgb(241,137,42)" fg:x="105246" fg:w="54"/><text x="88.9189%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="88.6714%" y="165" width="0.0286%" height="15" fill="rgb(237,155,2)" fg:x="105300" fg:w="34"/><text x="88.9644%" y="175.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (228 instructions, 0.19%)</title><rect x="88.6260%" y="181" width="0.1920%" height="15" fill="rgb(245,29,42)" fg:x="105246" fg:w="228"/><text x="88.9189%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (537 instructions, 0.45%)</title><rect x="88.4222%" y="197" width="0.4522%" height="15" fill="rgb(234,101,35)" fg:x="105004" fg:w="537"/><text x="88.7152%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="88.8744%" y="197" width="0.0286%" height="15" fill="rgb(228,64,37)" fg:x="105541" fg:w="34"/><text x="89.1674%" y="207.50"></text></g><g><title>memmove (92 instructions, 0.08%)</title><rect x="88.9030%" y="197" width="0.0775%" height="15" fill="rgb(217,214,36)" fg:x="105575" fg:w="92"/><text x="89.1960%" y="207.50"></text></g><g><title>memmove (220 instructions, 0.19%)</title><rect x="88.9805%" y="197" width="0.1853%" height="15" fill="rgb(243,70,3)" fg:x="105667" fg:w="220"/><text x="89.2735%" y="207.50"></text></g><g><title>candid::types::internal::env_id (2,820 instructions, 2.37%)</title><rect x="87.5978%" y="213" width="2.3747%" height="15" fill="rgb(253,158,52)" fg:x="104025" fg:w="2820"/><text x="87.8908%" y="223.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (152 instructions, 0.13%)</title><rect x="89.9725%" y="181" width="0.1280%" height="15" fill="rgb(234,111,54)" fg:x="106845" fg:w="152"/><text x="90.2654%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (193 instructions, 0.16%)</title><rect x="89.9725%" y="197" width="0.1625%" height="15" fill="rgb(217,70,32)" fg:x="106845" fg:w="193"/><text x="90.2654%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (280 instructions, 0.24%)</title><rect x="89.9725%" y="213" width="0.2358%" height="15" fill="rgb(234,18,33)" fg:x="106845" fg:w="280"/><text x="90.2654%" y="223.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.03%)</title><rect x="90.2082%" y="197" width="0.0320%" height="15" fill="rgb(234,12,49)" fg:x="107125" fg:w="38"/><text x="90.5012%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (277 instructions, 0.23%)</title><rect x="90.2402%" y="197" width="0.2333%" height="15" fill="rgb(236,10,21)" fg:x="107163" fg:w="277"/><text x="90.5332%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="90.4735%" y="165" width="0.0691%" height="15" fill="rgb(248,182,45)" fg:x="107440" fg:w="82"/><text x="90.7665%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.10%)</title><rect x="90.4735%" y="181" width="0.1036%" height="15" fill="rgb(217,95,36)" fg:x="107440" fg:w="123"/><text x="90.7665%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (199 instructions, 0.17%)</title><rect x="90.4735%" y="197" width="0.1676%" height="15" fill="rgb(212,110,31)" fg:x="107440" fg:w="199"/><text x="90.7665%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="90.6411%" y="181" width="0.0286%" height="15" fill="rgb(206,32,53)" fg:x="107639" fg:w="34"/><text x="90.9340%" y="191.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.03%)</title><rect x="90.6697%" y="181" width="0.0261%" height="15" fill="rgb(246,141,37)" fg:x="107673" fg:w="31"/><text x="90.9627%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="90.6958%" y="181" width="0.0118%" height="15" fill="rgb(219,16,7)" fg:x="107704" fg:w="14"/><text x="90.9888%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.03%)</title><rect x="90.8112%" y="181" width="0.0286%" height="15" fill="rgb(230,205,45)" fg:x="107841" fg:w="34"/><text x="91.1041%" y="191.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.03%)</title><rect x="90.8398%" y="181" width="0.0261%" height="15" fill="rgb(231,43,49)" fg:x="107875" fg:w="31"/><text x="91.1328%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="90.8659%" y="181" width="0.0118%" height="15" fill="rgb(212,106,34)" fg:x="107906" fg:w="14"/><text x="91.1589%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (404 instructions, 0.34%)</title><rect x="90.6411%" y="197" width="0.3402%" height="15" fill="rgb(206,83,17)" fg:x="107639" fg:w="404"/><text x="90.9340%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.07%)</title><rect x="90.9813%" y="149" width="0.0699%" height="15" fill="rgb(244,154,49)" fg:x="108043" fg:w="83"/><text x="91.2742%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.10%)</title><rect x="90.9813%" y="165" width="0.1044%" height="15" fill="rgb(244,149,49)" fg:x="108043" fg:w="124"/><text x="91.2742%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (207 instructions, 0.17%)</title><rect x="90.9813%" y="181" width="0.1743%" height="15" fill="rgb(227,134,18)" fg:x="108043" fg:w="207"/><text x="91.2742%" y="191.50"></text></g><g><title>leb128::write::signed (261 instructions, 0.22%)</title><rect x="90.9813%" y="197" width="0.2198%" height="15" fill="rgb(237,116,36)" fg:x="108043" fg:w="261"/><text x="91.2742%" y="207.50"></text></g><g><title>leb128::write::unsigned (47 instructions, 0.04%)</title><rect x="91.2011%" y="197" width="0.0396%" height="15" fill="rgb(205,129,40)" fg:x="108304" fg:w="47"/><text x="91.4940%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::encode (68 instructions, 0.06%)</title><rect x="91.2406%" y="197" width="0.0573%" height="15" fill="rgb(236,178,4)" fg:x="108351" fg:w="68"/><text x="91.5336%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="91.2979%" y="149" width="0.0691%" height="15" fill="rgb(251,76,53)" fg:x="108419" fg:w="82"/><text x="91.5909%" y="159.50"></text></g><g><title>memcpy (211 instructions, 0.18%)</title><rect x="91.3670%" y="149" width="0.1777%" height="15" fill="rgb(242,92,40)" fg:x="108501" fg:w="211"/><text x="91.6599%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="91.5446%" y="149" width="0.0699%" height="15" fill="rgb(209,45,30)" fg:x="108712" fg:w="83"/><text x="91.8376%" y="159.50"></text></g><g><title>__rust_realloc (505 instructions, 0.43%)</title><rect x="91.2979%" y="165" width="0.4253%" height="15" fill="rgb(218,157,36)" fg:x="108419" fg:w="505"/><text x="91.5909%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (548 instructions, 0.46%)</title><rect x="91.2979%" y="181" width="0.4615%" height="15" fill="rgb(222,186,16)" fg:x="108419" fg:w="548"/><text x="91.5909%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (634 instructions, 0.53%)</title><rect x="91.2979%" y="197" width="0.5339%" height="15" fill="rgb(254,72,35)" fg:x="108419" fg:w="634"/><text x="91.5909%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::encode (68 instructions, 0.06%)</title><rect x="91.8318%" y="197" width="0.0573%" height="15" fill="rgb(224,25,35)" fg:x="109053" fg:w="68"/><text x="92.1248%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="91.8890%" y="197" width="0.0118%" height="15" fill="rgb(206,135,52)" fg:x="109121" fg:w="14"/><text x="92.1820%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,844 instructions, 2.39%)</title><rect x="90.2082%" y="213" width="2.3949%" height="15" fill="rgb(229,174,47)" fg:x="107125" fg:w="2844"/><text x="90.5012%" y="223.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="92.6031%" y="213" width="0.0118%" height="15" fill="rgb(242,184,21)" fg:x="109969" fg:w="14"/><text x="92.8961%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.07%)</title><rect x="92.6149%" y="165" width="0.0699%" height="15" fill="rgb(213,22,45)" fg:x="109983" fg:w="83"/><text x="92.9079%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.10%)</title><rect x="92.6149%" y="181" width="0.1044%" height="15" fill="rgb(237,81,54)" fg:x="109983" fg:w="124"/><text x="92.9079%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (207 instructions, 0.17%)</title><rect x="92.6149%" y="197" width="0.1743%" height="15" fill="rgb(248,177,18)" fg:x="109983" fg:w="207"/><text x="92.9079%" y="207.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_variant (261 instructions, 0.22%)</title><rect x="92.6149%" y="213" width="0.2198%" height="15" fill="rgb(254,31,16)" fg:x="109983" fg:w="261"/><text x="92.9079%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="92.8347%" y="165" width="0.0691%" height="15" fill="rgb(235,20,31)" fg:x="110244" fg:w="82"/><text x="93.1277%" y="175.50"></text></g><g><title>memcpy (211 instructions, 0.18%)</title><rect x="92.9038%" y="165" width="0.1777%" height="15" fill="rgb(240,56,43)" fg:x="110326" fg:w="211"/><text x="93.1967%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="93.0814%" y="165" width="0.0699%" height="15" fill="rgb(237,197,51)" fg:x="110537" fg:w="83"/><text x="93.3744%" y="175.50"></text></g><g><title>__rust_realloc (505 instructions, 0.43%)</title><rect x="92.8347%" y="181" width="0.4253%" height="15" fill="rgb(241,162,44)" fg:x="110244" fg:w="505"/><text x="93.1277%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (548 instructions, 0.46%)</title><rect x="92.8347%" y="197" width="0.4615%" height="15" fill="rgb(224,23,20)" fg:x="110244" fg:w="548"/><text x="93.1277%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (634 instructions, 0.53%)</title><rect x="92.8347%" y="213" width="0.5339%" height="15" fill="rgb(250,109,34)" fg:x="110244" fg:w="634"/><text x="93.1277%" y="223.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (518 instructions, 0.44%)</title><rect x="93.3686%" y="197" width="0.4362%" height="15" fill="rgb(214,175,50)" fg:x="110878" fg:w="518"/><text x="93.6616%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.07%)</title><rect x="93.8048%" y="149" width="0.0699%" height="15" fill="rgb(213,182,5)" fg:x="111396" fg:w="83"/><text x="94.0978%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.10%)</title><rect x="93.8048%" y="165" width="0.1044%" height="15" fill="rgb(209,199,19)" fg:x="111396" fg:w="124"/><text x="94.0978%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (207 instructions, 0.17%)</title><rect x="93.8048%" y="181" width="0.1743%" height="15" fill="rgb(236,224,42)" fg:x="111396" fg:w="207"/><text x="94.0978%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.07%)</title><rect x="93.9791%" y="181" width="0.0699%" height="15" fill="rgb(246,226,29)" fg:x="111603" fg:w="83"/><text x="94.2721%" y="191.50"></text></g><g><title>memcpy (195 instructions, 0.16%)</title><rect x="94.0490%" y="181" width="0.1642%" height="15" fill="rgb(227,223,11)" fg:x="111686" fg:w="195"/><text x="94.3420%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.07%)</title><rect x="94.2132%" y="133" width="0.0691%" height="15" fill="rgb(219,7,51)" fg:x="111881" fg:w="82"/><text x="94.5062%" y="143.50"></text></g><g><title>memcpy (211 instructions, 0.18%)</title><rect x="94.2822%" y="133" width="0.1777%" height="15" fill="rgb(245,167,10)" fg:x="111963" fg:w="211"/><text x="94.5752%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="94.4599%" y="133" width="0.0699%" height="15" fill="rgb(237,224,16)" fg:x="112174" fg:w="83"/><text x="94.7529%" y="143.50"></text></g><g><title>__rust_realloc (505 instructions, 0.43%)</title><rect x="94.2132%" y="149" width="0.4253%" height="15" fill="rgb(226,132,13)" fg:x="111881" fg:w="505"/><text x="94.5062%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (548 instructions, 0.46%)</title><rect x="94.2132%" y="165" width="0.4615%" height="15" fill="rgb(214,140,3)" fg:x="111881" fg:w="548"/><text x="94.5062%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (634 instructions, 0.53%)</title><rect x="94.2132%" y="181" width="0.5339%" height="15" fill="rgb(221,177,4)" fg:x="111881" fg:w="634"/><text x="94.5062%" y="191.50"></text></g><g><title>memcpy (195 instructions, 0.16%)</title><rect x="94.7471%" y="181" width="0.1642%" height="15" fill="rgb(238,139,3)" fg:x="112515" fg:w="195"/><text x="95.0400%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="94.9113%" y="181" width="0.0699%" height="15" fill="rgb(216,17,39)" fg:x="112710" fg:w="83"/><text x="95.2043%" y="191.50"></text></g><g><title>memcmp (54 instructions, 0.05%)</title><rect x="94.9812%" y="133" width="0.0455%" height="15" fill="rgb(238,120,9)" fg:x="112793" fg:w="54"/><text x="95.2741%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.03%)</title><rect x="95.0267%" y="133" width="0.0345%" height="15" fill="rgb(244,92,53)" fg:x="112847" fg:w="41"/><text x="95.3196%" y="143.50"></text></g><g><title>memcmp (77 instructions, 0.06%)</title><rect x="95.0612%" y="133" width="0.0648%" height="15" fill="rgb(224,148,33)" fg:x="112888" fg:w="77"/><text x="95.3541%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.03%)</title><rect x="95.1260%" y="133" width="0.0345%" height="15" fill="rgb(243,6,36)" fg:x="112965" fg:w="41"/><text x="95.4190%" y="143.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (481 instructions, 0.41%)</title><rect x="94.9812%" y="149" width="0.4050%" height="15" fill="rgb(230,102,11)" fg:x="112793" fg:w="481"/><text x="95.2741%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (548 instructions, 0.46%)</title><rect x="94.9812%" y="165" width="0.4615%" height="15" fill="rgb(234,148,36)" fg:x="112793" fg:w="548"/><text x="95.2741%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.07%)</title><rect x="95.4426%" y="117" width="0.0699%" height="15" fill="rgb(251,153,25)" fg:x="113341" fg:w="83"/><text x="95.7356%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.10%)</title><rect x="95.4426%" y="133" width="0.1044%" height="15" fill="rgb(215,129,8)" fg:x="113341" fg:w="124"/><text x="95.7356%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (207 instructions, 0.17%)</title><rect x="95.4426%" y="149" width="0.1743%" height="15" fill="rgb(224,128,35)" fg:x="113341" fg:w="207"/><text x="95.7356%" y="159.50"></text></g><g><title>leb128::write::signed (261 instructions, 0.22%)</title><rect x="95.4426%" y="165" width="0.2198%" height="15" fill="rgb(237,56,52)" fg:x="113341" fg:w="261"/><text x="95.7356%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (943 instructions, 0.79%)</title><rect x="94.9812%" y="181" width="0.7941%" height="15" fill="rgb(234,213,19)" fg:x="112793" fg:w="943"/><text x="95.2741%" y="191.50"></text></g><g><title>memcpy (35 instructions, 0.03%)</title><rect x="95.7753%" y="181" width="0.0295%" height="15" fill="rgb(252,82,23)" fg:x="113736" fg:w="35"/><text x="96.0682%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="95.8047%" y="181" width="0.0699%" height="15" fill="rgb(254,201,21)" fg:x="113771" fg:w="83"/><text x="96.0977%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,916 instructions, 2.46%)</title><rect x="93.8048%" y="197" width="2.4555%" height="15" fill="rgb(250,186,11)" fg:x="111396" fg:w="2916"/><text x="94.0978%" y="207.50">c..</text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (528 instructions, 0.44%)</title><rect x="96.2603%" y="197" width="0.4446%" height="15" fill="rgb(211,174,5)" fg:x="114312" fg:w="528"/><text x="96.5533%" y="207.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (523 instructions, 0.44%)</title><rect x="96.7049%" y="197" width="0.4404%" height="15" fill="rgb(214,121,10)" fg:x="114840" fg:w="523"/><text x="96.9979%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (4,562 instructions, 3.84%)</title><rect x="93.3686%" y="213" width="3.8416%" height="15" fill="rgb(241,66,2)" fg:x="110878" fg:w="4562"/><text x="93.6616%" y="223.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="97.2102%" y="213" width="0.0749%" height="15" fill="rgb(220,167,19)" fg:x="115440" fg:w="89"/><text x="97.5031%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="97.2851%" y="213" width="0.0749%" height="15" fill="rgb(231,54,50)" fg:x="115529" fg:w="89"/><text x="97.5781%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="97.3601%" y="197" width="0.0118%" height="15" fill="rgb(239,217,53)" fg:x="115618" fg:w="14"/><text x="97.6530%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="97.3719%" y="197" width="0.0749%" height="15" fill="rgb(248,8,0)" fg:x="115632" fg:w="89"/><text x="97.6648%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (240 instructions, 0.20%)</title><rect x="97.3601%" y="213" width="0.2021%" height="15" fill="rgb(229,118,37)" fg:x="115618" fg:w="240"/><text x="97.6530%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.01%)</title><rect x="97.5689%" y="213" width="0.0118%" height="15" fill="rgb(253,223,43)" fg:x="115866" fg:w="14"/><text x="97.8619%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="97.5807%" y="197" width="0.0227%" height="15" fill="rgb(211,77,36)" fg:x="115880" fg:w="27"/><text x="97.8737%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.12%)</title><rect x="97.5807%" y="213" width="0.1196%" height="15" fill="rgb(219,3,53)" fg:x="115880" fg:w="142"/><text x="97.8737%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.02%)</title><rect x="97.7516%" y="197" width="0.0227%" height="15" fill="rgb(244,45,42)" fg:x="116083" fg:w="27"/><text x="98.0446%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (177 instructions, 0.15%)</title><rect x="97.7003%" y="213" width="0.1490%" height="15" fill="rgb(225,95,27)" fg:x="116022" fg:w="177"/><text x="97.9932%" y="223.50"></text></g><g><title>basic_dao::__canister_method_submit_proposal::{{closure}} (118,188 instructions, 99.52%)</title><rect x="0.1381%" y="229" width="99.5242%" height="15" fill="rgb(207,74,8)" fg:x="164" fg:w="118188"/><text x="0.4311%" y="239.50">basic_dao::__canister_method_submit_proposal::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (15 instructions, 0.01%)</title><rect x="99.6623%" y="229" width="0.0126%" height="15" fill="rgb(243,63,36)" fg:x="118352" fg:w="15"/><text x="99.9553%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.07%)</title><rect x="99.6758%" y="213" width="0.0699%" height="15" fill="rgb(211,180,12)" fg:x="118368" fg:w="83"/><text x="99.9688%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.07%)</title><rect x="99.7457%" y="213" width="0.0749%" height="15" fill="rgb(254,166,49)" fg:x="118451" fg:w="89"/><text x="100.0387%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (290 instructions, 0.24%)</title><rect x="99.6750%" y="229" width="0.2442%" height="15" fill="rgb(205,19,0)" fg:x="118367" fg:w="290"/><text x="99.9679%" y="239.50"></text></g><g><title>all (118,753 instructions, 100%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(224,172,32)" fg:x="0" fg:w="118753"/><text x="0.2930%" y="271.50"></text></g><g><title>canister_update submit_proposal (118,753 instructions, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(254,136,30)" fg:x="0" fg:w="118753"/><text x="0.2930%" y="255.50">canister_update submit_proposal</text></g></svg></svg>