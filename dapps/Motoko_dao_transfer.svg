<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="16270"><g><title>trans_state5 (8 instructions, 0.05%)</title><rect x="0.0000%" y="213" width="0.0492%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="0.0492%" y="213" width="0.2028%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="33"/><text x="0.3421%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="0.2520%" y="197" width="0.2827%" height="15" fill="rgb(221,193,54)" fg:x="41" fg:w="46"/><text x="0.5450%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="0.5347%" y="197" width="0.2028%" height="15" fill="rgb(248,212,6)" fg:x="87" fg:w="33"/><text x="0.8277%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="0.7376%" y="197" width="0.3688%" height="15" fill="rgb(208,68,35)" fg:x="120" fg:w="60"/><text x="1.0305%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="1.1063%" y="197" width="0.2827%" height="15" fill="rgb(232,128,0)" fg:x="180" fg:w="46"/><text x="1.3993%" y="207.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="1.3891%" y="197" width="0.7498%" height="15" fill="rgb(207,160,47)" fg:x="226" fg:w="122"/><text x="1.6820%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="2.1389%" y="197" width="0.3688%" height="15" fill="rgb(228,23,34)" fg:x="348" fg:w="60"/><text x="2.4319%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="2.5077%" y="197" width="1.2170%" height="15" fill="rgb(218,30,26)" fg:x="408" fg:w="198"/><text x="2.8007%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="3.7246%" y="197" width="0.3688%" height="15" fill="rgb(220,122,19)" fg:x="606" fg:w="60"/><text x="4.0176%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="4.0934%" y="197" width="0.3688%" height="15" fill="rgb(250,228,42)" fg:x="666" fg:w="60"/><text x="4.3864%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="4.4622%" y="197" width="0.2827%" height="15" fill="rgb(240,193,28)" fg:x="726" fg:w="46"/><text x="4.7552%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="4.7449%" y="197" width="1.2170%" height="15" fill="rgb(216,20,37)" fg:x="772" fg:w="198"/><text x="5.0379%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="5.9619%" y="197" width="0.3688%" height="15" fill="rgb(206,188,39)" fg:x="970" fg:w="60"/><text x="6.2549%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.3307%" y="197" width="0.3688%" height="15" fill="rgb(217,207,13)" fg:x="1030" fg:w="60"/><text x="6.6236%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.6994%" y="197" width="0.3688%" height="15" fill="rgb(231,73,38)" fg:x="1090" fg:w="60"/><text x="6.9924%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="7.0682%" y="197" width="0.2827%" height="15" fill="rgb(225,20,46)" fg:x="1150" fg:w="46"/><text x="7.3612%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="7.3510%" y="197" width="0.3688%" height="15" fill="rgb(210,31,41)" fg:x="1196" fg:w="60"/><text x="7.6439%" y="207.50"></text></g><g><title>parse_idl_header (1,572 instructions, 9.66%)</title><rect x="0.2520%" y="213" width="9.6620%" height="15" fill="rgb(221,200,47)" fg:x="41" fg:w="1572"/><text x="0.5450%" y="223.50">parse_idl_h..</text></g><g><title>memset (3 instructions, 0.02%)</title><rect x="9.9140%" y="197" width="0.0184%" height="15" fill="rgb(226,26,5)" fg:x="1613" fg:w="3"/><text x="10.2069%" y="207.50"></text></g><g><title>idl_sub_buf_init (6 instructions, 0.04%)</title><rect x="9.9140%" y="213" width="0.0369%" height="15" fill="rgb(249,33,26)" fg:x="1613" fg:w="6"/><text x="10.2069%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="9.9508%" y="213" width="0.2827%" height="15" fill="rgb(235,183,28)" fg:x="1619" fg:w="46"/><text x="10.2438%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.2336%" y="213" width="0.3688%" height="15" fill="rgb(221,5,38)" fg:x="1665" fg:w="60"/><text x="10.5265%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.6023%" y="213" width="0.3688%" height="15" fill="rgb(247,18,42)" fg:x="1725" fg:w="60"/><text x="10.8953%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="10.9711%" y="213" width="0.2827%" height="15" fill="rgb(241,131,45)" fg:x="1785" fg:w="46"/><text x="11.2641%" y="223.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="11.2538%" y="213" width="0.0922%" height="15" fill="rgb(249,31,29)" fg:x="1831" fg:w="15"/><text x="11.5468%" y="223.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="11.3460%" y="197" width="0.7498%" height="15" fill="rgb(225,111,53)" fg:x="1846" fg:w="122"/><text x="11.6390%" y="207.50"></text></g><g><title>find_field (149 instructions, 0.92%)</title><rect x="11.3460%" y="213" width="0.9158%" height="15" fill="rgb(238,160,17)" fg:x="1846" fg:w="149"/><text x="11.6390%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="12.2618%" y="213" width="0.3688%" height="15" fill="rgb(214,148,48)" fg:x="1995" fg:w="60"/><text x="12.5548%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="12.6306%" y="197" width="0.2827%" height="15" fill="rgb(232,36,49)" fg:x="2055" fg:w="46"/><text x="12.9236%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="12.9133%" y="197" width="0.2028%" height="15" fill="rgb(209,103,24)" fg:x="2101" fg:w="33"/><text x="13.2063%" y="207.50"></text></g><g><title>memcpy (181 instructions, 1.11%)</title><rect x="13.1162%" y="197" width="1.1125%" height="15" fill="rgb(229,88,8)" fg:x="2134" fg:w="181"/><text x="13.4091%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (335 instructions, 2.06%)</title><rect x="12.6306%" y="213" width="2.0590%" height="15" fill="rgb(213,181,19)" fg:x="2055" fg:w="335"/><text x="12.9236%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="14.6896%" y="197" width="1.2170%" height="15" fill="rgb(254,191,54)" fg:x="2390" fg:w="198"/><text x="14.9826%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="14.6896%" y="213" width="1.3829%" height="15" fill="rgb(241,83,37)" fg:x="2390" fg:w="225"/><text x="14.9826%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.0725%" y="213" width="0.3688%" height="15" fill="rgb(233,36,39)" fg:x="2615" fg:w="60"/><text x="16.3655%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.4413%" y="197" width="0.3688%" height="15" fill="rgb(226,3,54)" fg:x="2675" fg:w="60"/><text x="16.7343%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="16.8101%" y="197" width="0.2827%" height="15" fill="rgb(245,192,40)" fg:x="2735" fg:w="46"/><text x="17.1030%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="17.0928%" y="197" width="0.0922%" height="15" fill="rgb(238,167,29)" fg:x="2781" fg:w="15"/><text x="17.3858%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="17.1850%" y="181" width="1.2170%" height="15" fill="rgb(232,182,51)" fg:x="2796" fg:w="198"/><text x="17.4780%" y="191.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="17.1850%" y="197" width="1.3829%" height="15" fill="rgb(231,60,39)" fg:x="2796" fg:w="225"/><text x="17.4780%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="18.5679%" y="197" width="0.3688%" height="15" fill="rgb(208,69,12)" fg:x="3021" fg:w="60"/><text x="18.8609%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (55 instructions, 0.34%)</title><rect x="18.9367%" y="181" width="0.3380%" height="15" fill="rgb(235,93,37)" fg:x="3081" fg:w="55"/><text x="19.2297%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (99 instructions, 0.61%)</title><rect x="18.9367%" y="197" width="0.6085%" height="15" fill="rgb(213,116,39)" fg:x="3081" fg:w="99"/><text x="19.2297%" y="207.50"></text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="19.5452%" y="197" width="0.0246%" height="15" fill="rgb(222,207,29)" fg:x="3180" fg:w="4"/><text x="19.8381%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (641 instructions, 3.94%)</title><rect x="16.4413%" y="213" width="3.9398%" height="15" fill="rgb(206,96,30)" fg:x="2675" fg:w="641"/><text x="16.7343%" y="223.50">@de..</text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="20.3811%" y="213" width="0.0246%" height="15" fill="rgb(218,138,4)" fg:x="3316" fg:w="4"/><text x="20.6740%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="20.4057%" y="213" width="0.0922%" height="15" fill="rgb(250,191,14)" fg:x="3320" fg:w="15"/><text x="20.6986%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="20.4978%" y="197" width="0.2028%" height="15" fill="rgb(239,60,40)" fg:x="3335" fg:w="33"/><text x="20.7908%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="20.7007%" y="197" width="0.0922%" height="15" fill="rgb(206,27,48)" fg:x="3368" fg:w="15"/><text x="20.9936%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="20.7929%" y="197" width="0.0983%" height="15" fill="rgb(225,35,8)" fg:x="3383" fg:w="16"/><text x="21.0858%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.59%)</title><rect x="20.8912%" y="165" width="4.5851%" height="15" fill="rgb(250,213,24)" fg:x="3399" fg:w="746"/><text x="21.1842%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="25.4763%" y="165" width="0.1414%" height="15" fill="rgb(247,123,22)" fg:x="4145" fg:w="23"/><text x="25.7693%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="25.6177%" y="165" width="0.0922%" height="15" fill="rgb(231,138,38)" fg:x="4168" fg:w="15"/><text x="25.9107%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="25.7099%" y="165" width="0.1414%" height="15" fill="rgb(231,145,46)" fg:x="4183" fg:w="23"/><text x="26.0029%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.11%)</title><rect x="20.8912%" y="181" width="5.1076%" height="15" fill="rgb(251,118,11)" fg:x="3399" fg:w="831"/><text x="21.1842%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="25.9988%" y="149" width="0.0922%" height="15" fill="rgb(217,147,25)" fg:x="4230" fg:w="15"/><text x="26.2917%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="25.9988%" y="165" width="0.1598%" height="15" fill="rgb(247,81,37)" fg:x="4230" fg:w="26"/><text x="26.2917%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="26.1586%" y="165" width="0.0922%" height="15" fill="rgb(209,12,38)" fg:x="4256" fg:w="15"/><text x="26.4515%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="26.2508%" y="149" width="0.0983%" height="15" fill="rgb(227,1,9)" fg:x="4271" fg:w="16"/><text x="26.5437%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.3491%" y="149" width="0.1106%" height="15" fill="rgb(248,47,43)" fg:x="4287" fg:w="18"/><text x="26.6421%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.4597%" y="133" width="0.0983%" height="15" fill="rgb(221,10,30)" fg:x="4305" fg:w="16"/><text x="26.7527%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.5581%" y="133" width="0.0983%" height="15" fill="rgb(210,229,1)" fg:x="4321" fg:w="16"/><text x="26.8511%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="26.4597%" y="149" width="0.3442%" height="15" fill="rgb(222,148,37)" fg:x="4305" fg:w="56"/><text x="26.7527%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.8039%" y="149" width="0.1106%" height="15" fill="rgb(234,67,33)" fg:x="4361" fg:w="18"/><text x="27.0969%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.9146%" y="133" width="0.0983%" height="15" fill="rgb(247,98,35)" fg:x="4379" fg:w="16"/><text x="27.2075%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.0129%" y="133" width="0.0983%" height="15" fill="rgb(247,138,52)" fg:x="4395" fg:w="16"/><text x="27.3059%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="26.9146%" y="149" width="0.3503%" height="15" fill="rgb(213,79,30)" fg:x="4379" fg:w="57"/><text x="27.2075%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.2649%" y="149" width="0.1106%" height="15" fill="rgb(246,177,23)" fg:x="4436" fg:w="18"/><text x="27.5579%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.3755%" y="133" width="0.0983%" height="15" fill="rgb(230,62,27)" fg:x="4454" fg:w="16"/><text x="27.6685%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.4739%" y="133" width="0.0983%" height="15" fill="rgb(216,154,8)" fg:x="4470" fg:w="16"/><text x="27.7668%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="27.3755%" y="149" width="0.3503%" height="15" fill="rgb(244,35,45)" fg:x="4454" fg:w="57"/><text x="27.6685%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.7259%" y="149" width="0.1106%" height="15" fill="rgb(251,115,12)" fg:x="4511" fg:w="18"/><text x="28.0188%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.8365%" y="133" width="0.0983%" height="15" fill="rgb(240,54,50)" fg:x="4529" fg:w="16"/><text x="28.1295%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.9348%" y="133" width="0.0983%" height="15" fill="rgb(233,84,52)" fg:x="4545" fg:w="16"/><text x="28.2278%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="28.0332%" y="133" width="0.0983%" height="15" fill="rgb(207,117,47)" fg:x="4561" fg:w="16"/><text x="28.3262%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="28.1315%" y="133" width="0.0983%" height="15" fill="rgb(249,43,39)" fg:x="4577" fg:w="16"/><text x="28.4245%" y="143.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.17%)</title><rect x="28.2299%" y="117" width="4.1733%" height="15" fill="rgb(209,38,44)" fg:x="4593" fg:w="679"/><text x="28.5228%" y="127.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.19%)</title><rect x="28.2299%" y="133" width="4.1918%" height="15" fill="rgb(236,212,23)" fg:x="4593" fg:w="682"/><text x="28.5228%" y="143.50">equa..</text></g><g><title>anon-func-192.5 (781 instructions, 4.80%)</title><rect x="27.8365%" y="149" width="4.8002%" height="15" fill="rgb(242,79,21)" fg:x="4529" fg:w="781"/><text x="28.1295%" y="159.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="32.6368%" y="149" width="0.1106%" height="15" fill="rgb(211,96,35)" fg:x="5310" fg:w="18"/><text x="32.9297%" y="159.50"></text></g><g><title>rec.2 (1,207 instructions, 7.42%)</title><rect x="26.2508%" y="165" width="7.4186%" height="15" fill="rgb(253,215,40)" fg:x="4271" fg:w="1207"/><text x="26.5437%" y="175.50">rec.2</text></g><g><title>get.2 (1,270 instructions, 7.81%)</title><rect x="25.9988%" y="181" width="7.8058%" height="15" fill="rgb(211,81,21)" fg:x="4230" fg:w="1270"/><text x="26.2917%" y="191.50">get.2</text></g><g><title>account_get (2,107 instructions, 12.95%)</title><rect x="20.8912%" y="197" width="12.9502%" height="15" fill="rgb(208,190,38)" fg:x="3399" fg:w="2107"/><text x="21.1842%" y="207.50">account_get</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="33.8414%" y="197" width="0.1106%" height="15" fill="rgb(235,213,38)" fg:x="5506" fg:w="18"/><text x="34.1344%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.9521%" y="197" width="0.0983%" height="15" fill="rgb(237,122,38)" fg:x="5524" fg:w="16"/><text x="34.2450%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.0504%" y="197" width="0.0983%" height="15" fill="rgb(244,218,35)" fg:x="5540" fg:w="16"/><text x="34.3434%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="34.1487%" y="197" width="0.0983%" height="15" fill="rgb(240,68,47)" fg:x="5556" fg:w="16"/><text x="34.4417%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.2471%" y="197" width="0.0983%" height="15" fill="rgb(210,16,53)" fg:x="5572" fg:w="16"/><text x="34.5400%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.3454%" y="197" width="0.0983%" height="15" fill="rgb(235,124,12)" fg:x="5588" fg:w="16"/><text x="34.6384%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="34.4438%" y="197" width="0.1475%" height="15" fill="rgb(224,169,11)" fg:x="5604" fg:w="24"/><text x="34.7367%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="34.5913%" y="133" width="0.2274%" height="15" fill="rgb(250,166,2)" fg:x="5628" fg:w="37"/><text x="34.8842%" y="143.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="34.8187%" y="133" width="0.6023%" height="15" fill="rgb(242,216,29)" fg:x="5665" fg:w="98"/><text x="35.1117%" y="143.50"></text></g><g><title>mp_calloc (159 instructions, 0.98%)</title><rect x="34.5913%" y="149" width="0.9773%" height="15" fill="rgb(230,116,27)" fg:x="5628" fg:w="159"/><text x="34.8842%" y="159.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="34.5913%" y="165" width="1.0695%" height="15" fill="rgb(228,99,48)" fg:x="5628" fg:w="174"/><text x="34.8842%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="35.6607%" y="165" width="0.5962%" height="15" fill="rgb(253,11,6)" fg:x="5802" fg:w="97"/><text x="35.9537%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="36.2569%" y="165" width="0.1844%" height="15" fill="rgb(247,143,39)" fg:x="5899" fg:w="30"/><text x="36.5499%" y="175.50"></text></g><g><title>bigint_of_int64 (350 instructions, 2.15%)</title><rect x="34.5913%" y="181" width="2.1512%" height="15" fill="rgb(236,97,10)" fg:x="5628" fg:w="350"/><text x="34.8842%" y="191.50">b..</text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="36.7425%" y="165" width="0.0676%" height="15" fill="rgb(233,208,19)" fg:x="5978" fg:w="11"/><text x="37.0354%" y="175.50"></text></g><g><title>mp_cmp (25 instructions, 0.15%)</title><rect x="36.7425%" y="181" width="0.1537%" height="15" fill="rgb(216,164,2)" fg:x="5978" fg:w="25"/><text x="37.0354%" y="191.50"></text></g><g><title>B_lt (415 instructions, 2.55%)</title><rect x="34.5913%" y="197" width="2.5507%" height="15" fill="rgb(220,129,5)" fg:x="5628" fg:w="415"/><text x="34.8842%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="37.1420%" y="197" width="0.0983%" height="15" fill="rgb(242,17,10)" fg:x="6043" fg:w="16"/><text x="37.4349%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="37.2403%" y="133" width="0.2274%" height="15" fill="rgb(242,107,0)" fg:x="6059" fg:w="37"/><text x="37.5333%" y="143.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="37.4677%" y="133" width="0.6023%" height="15" fill="rgb(251,28,31)" fg:x="6096" fg:w="98"/><text x="37.7607%" y="143.50"></text></g><g><title>mp_calloc (159 instructions, 0.98%)</title><rect x="37.2403%" y="149" width="0.9773%" height="15" fill="rgb(233,223,10)" fg:x="6059" fg:w="159"/><text x="37.5333%" y="159.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="37.2403%" y="165" width="1.0695%" height="15" fill="rgb(215,21,27)" fg:x="6059" fg:w="174"/><text x="37.5333%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="38.3098%" y="165" width="0.5962%" height="15" fill="rgb(232,23,21)" fg:x="6233" fg:w="97"/><text x="38.6027%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="38.9060%" y="165" width="0.1844%" height="15" fill="rgb(244,5,23)" fg:x="6330" fg:w="30"/><text x="39.1989%" y="175.50"></text></g><g><title>bigint_of_int64 (350 instructions, 2.15%)</title><rect x="37.2403%" y="181" width="2.1512%" height="15" fill="rgb(226,81,46)" fg:x="6059" fg:w="350"/><text x="37.5333%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="39.3915%" y="149" width="0.2274%" height="15" fill="rgb(247,70,30)" fg:x="6409" fg:w="37"/><text x="39.6845%" y="159.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="39.6189%" y="149" width="0.6023%" height="15" fill="rgb(212,68,19)" fg:x="6446" fg:w="98"/><text x="39.9119%" y="159.50"></text></g><g><title>mp_calloc (159 instructions, 0.98%)</title><rect x="39.3915%" y="165" width="0.9773%" height="15" fill="rgb(240,187,13)" fg:x="6409" fg:w="159"/><text x="39.6845%" y="175.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="39.3915%" y="181" width="1.0695%" height="15" fill="rgb(223,113,26)" fg:x="6409" fg:w="174"/><text x="39.6845%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="40.4610%" y="165" width="0.0676%" height="15" fill="rgb(206,192,2)" fg:x="6583" fg:w="11"/><text x="40.7539%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.14%)</title><rect x="40.5286%" y="149" width="0.1352%" height="15" fill="rgb(241,108,4)" fg:x="6594" fg:w="22"/><text x="40.8215%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="40.5286%" y="165" width="0.8175%" height="15" fill="rgb(247,173,49)" fg:x="6594" fg:w="133"/><text x="40.8215%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="40.4610%" y="181" width="1.0141%" height="15" fill="rgb(224,114,35)" fg:x="6583" fg:w="165"/><text x="40.7539%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="41.4751%" y="181" width="0.1844%" height="15" fill="rgb(245,159,27)" fg:x="6748" fg:w="30"/><text x="41.7681%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="41.6595%" y="165" width="1.0203%" height="15" fill="rgb(245,172,44)" fg:x="6778" fg:w="166"/><text x="41.9525%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="41.6595%" y="181" width="1.2231%" height="15" fill="rgb(236,23,11)" fg:x="6778" fg:w="199"/><text x="41.9525%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="43.4726%" y="133" width="0.2274%" height="15" fill="rgb(205,117,38)" fg:x="7073" fg:w="37"/><text x="43.7656%" y="143.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="43.7001%" y="133" width="0.6023%" height="15" fill="rgb(237,72,25)" fg:x="7110" fg:w="98"/><text x="43.9930%" y="143.50"></text></g><g><title>mp_calloc (159 instructions, 0.98%)</title><rect x="43.4726%" y="149" width="0.9773%" height="15" fill="rgb(244,70,9)" fg:x="7073" fg:w="159"/><text x="43.7656%" y="159.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="43.4726%" y="165" width="1.0695%" height="15" fill="rgb(217,125,39)" fg:x="7073" fg:w="174"/><text x="43.7656%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="44.5421%" y="165" width="0.5962%" height="15" fill="rgb(235,36,10)" fg:x="7247" fg:w="97"/><text x="44.8351%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="45.1383%" y="165" width="0.1844%" height="15" fill="rgb(251,123,47)" fg:x="7344" fg:w="30"/><text x="45.4313%" y="175.50"></text></g><g><title>bigint_of_int64 (350 instructions, 2.15%)</title><rect x="43.4726%" y="181" width="2.1512%" height="15" fill="rgb(221,13,13)" fg:x="7073" fg:w="350"/><text x="43.7656%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="45.6238%" y="149" width="0.2274%" height="15" fill="rgb(238,131,9)" fg:x="7423" fg:w="37"/><text x="45.9168%" y="159.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="45.8513%" y="149" width="0.6023%" height="15" fill="rgb(211,50,8)" fg:x="7460" fg:w="98"/><text x="46.1442%" y="159.50"></text></g><g><title>mp_calloc (159 instructions, 0.98%)</title><rect x="45.6238%" y="165" width="0.9773%" height="15" fill="rgb(245,182,24)" fg:x="7423" fg:w="159"/><text x="45.9168%" y="175.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="45.6238%" y="181" width="1.0695%" height="15" fill="rgb(242,14,37)" fg:x="7423" fg:w="174"/><text x="45.9168%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="46.6933%" y="165" width="0.0676%" height="15" fill="rgb(246,228,12)" fg:x="7597" fg:w="11"/><text x="46.9863%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.14%)</title><rect x="46.7609%" y="149" width="0.1352%" height="15" fill="rgb(213,55,15)" fg:x="7608" fg:w="22"/><text x="47.0539%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="46.7609%" y="165" width="0.8175%" height="15" fill="rgb(209,9,3)" fg:x="7608" fg:w="133"/><text x="47.0539%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="46.6933%" y="181" width="1.0141%" height="15" fill="rgb(230,59,30)" fg:x="7597" fg:w="165"/><text x="46.9863%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="47.7074%" y="181" width="0.1844%" height="15" fill="rgb(209,121,21)" fg:x="7762" fg:w="30"/><text x="48.0004%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="47.8918%" y="165" width="1.0203%" height="15" fill="rgb(220,109,13)" fg:x="7792" fg:w="166"/><text x="48.1848%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="47.8918%" y="181" width="1.2231%" height="15" fill="rgb(232,18,1)" fg:x="7792" fg:w="199"/><text x="48.1848%" y="191.50"></text></g><g><title>B_sub (2,028 instructions, 12.46%)</title><rect x="37.2403%" y="197" width="12.4647%" height="15" fill="rgb(215,41,42)" fg:x="6059" fg:w="2028"/><text x="37.5333%" y="207.50">B_sub</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="49.7050%" y="197" width="0.0922%" height="15" fill="rgb(224,123,36)" fg:x="8087" fg:w="15"/><text x="49.9979%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.59%)</title><rect x="49.7972%" y="165" width="4.5851%" height="15" fill="rgb(240,125,3)" fg:x="8102" fg:w="746"/><text x="50.0901%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="54.3823%" y="165" width="0.1414%" height="15" fill="rgb(205,98,50)" fg:x="8848" fg:w="23"/><text x="54.6753%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="54.5237%" y="165" width="0.0922%" height="15" fill="rgb(205,185,37)" fg:x="8871" fg:w="15"/><text x="54.8166%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="54.6159%" y="165" width="0.1414%" height="15" fill="rgb(238,207,15)" fg:x="8886" fg:w="23"/><text x="54.9088%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.11%)</title><rect x="49.7972%" y="181" width="5.1076%" height="15" fill="rgb(213,199,42)" fg:x="8102" fg:w="831"/><text x="50.0901%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="54.9047%" y="165" width="0.1106%" height="15" fill="rgb(235,201,11)" fg:x="8933" fg:w="18"/><text x="55.1977%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.0154%" y="165" width="0.0922%" height="15" fill="rgb(207,46,11)" fg:x="8951" fg:w="15"/><text x="55.3083%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.1076%" y="165" width="0.0922%" height="15" fill="rgb(241,35,35)" fg:x="8966" fg:w="15"/><text x="55.4005%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.1998%" y="149" width="0.0922%" height="15" fill="rgb(243,32,47)" fg:x="8981" fg:w="15"/><text x="55.4927%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="55.1998%" y="165" width="0.1598%" height="15" fill="rgb(247,202,23)" fg:x="8981" fg:w="26"/><text x="55.4927%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="55.3596%" y="149" width="0.0983%" height="15" fill="rgb(219,102,11)" fg:x="9007" fg:w="16"/><text x="55.6525%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.4579%" y="133" width="0.0922%" height="15" fill="rgb(243,110,44)" fg:x="9023" fg:w="15"/><text x="55.7509%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.5501%" y="133" width="0.0922%" height="15" fill="rgb(222,74,54)" fg:x="9038" fg:w="15"/><text x="55.8431%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.6423%" y="133" width="0.0922%" height="15" fill="rgb(216,99,12)" fg:x="9053" fg:w="15"/><text x="55.9353%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="55.7345%" y="117" width="0.1106%" height="15" fill="rgb(226,22,26)" fg:x="9068" fg:w="18"/><text x="56.0274%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.8451%" y="101" width="0.0983%" height="15" fill="rgb(217,163,10)" fg:x="9086" fg:w="16"/><text x="56.1381%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.9435%" y="101" width="0.0983%" height="15" fill="rgb(213,25,53)" fg:x="9102" fg:w="16"/><text x="56.2364%" y="111.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="55.8451%" y="117" width="0.3442%" height="15" fill="rgb(252,105,26)" fg:x="9086" fg:w="56"/><text x="56.1381%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.1893%" y="101" width="0.1106%" height="15" fill="rgb(220,39,43)" fg:x="9142" fg:w="18"/><text x="56.4823%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.2999%" y="85" width="0.0983%" height="15" fill="rgb(229,68,48)" fg:x="9160" fg:w="16"/><text x="56.5929%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.3983%" y="85" width="0.0983%" height="15" fill="rgb(252,8,32)" fg:x="9176" fg:w="16"/><text x="56.6912%" y="95.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="56.2999%" y="101" width="0.3503%" height="15" fill="rgb(223,20,43)" fg:x="9160" fg:w="57"/><text x="56.5929%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.6503%" y="85" width="0.1106%" height="15" fill="rgb(229,81,49)" fg:x="9217" fg:w="18"/><text x="56.9432%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.7609%" y="69" width="0.0983%" height="15" fill="rgb(236,28,36)" fg:x="9235" fg:w="16"/><text x="57.0539%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.8593%" y="69" width="0.0983%" height="15" fill="rgb(249,185,26)" fg:x="9251" fg:w="16"/><text x="57.1522%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="56.7609%" y="85" width="0.3503%" height="15" fill="rgb(249,174,33)" fg:x="9235" fg:w="57"/><text x="57.0539%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="57.1112%" y="69" width="0.1106%" height="15" fill="rgb(233,201,37)" fg:x="9292" fg:w="18"/><text x="57.4042%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.2219%" y="53" width="0.0983%" height="15" fill="rgb(221,78,26)" fg:x="9310" fg:w="16"/><text x="57.5148%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.3202%" y="53" width="0.0983%" height="15" fill="rgb(250,127,30)" fg:x="9326" fg:w="16"/><text x="57.6132%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.4186%" y="53" width="0.0983%" height="15" fill="rgb(230,49,44)" fg:x="9342" fg:w="16"/><text x="57.7115%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.5169%" y="53" width="0.0983%" height="15" fill="rgb(229,67,23)" fg:x="9358" fg:w="16"/><text x="57.8099%" y="63.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.17%)</title><rect x="57.6152%" y="37" width="4.1733%" height="15" fill="rgb(249,83,47)" fg:x="9374" fg:w="679"/><text x="57.9082%" y="47.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.19%)</title><rect x="57.6152%" y="53" width="4.1918%" height="15" fill="rgb(215,43,3)" fg:x="9374" fg:w="682"/><text x="57.9082%" y="63.50">equa..</text></g><g><title>anon-func-192.5 (781 instructions, 4.80%)</title><rect x="57.2219%" y="69" width="4.8002%" height="15" fill="rgb(238,154,13)" fg:x="9310" fg:w="781"/><text x="57.5148%" y="79.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.0221%" y="69" width="0.1106%" height="15" fill="rgb(219,56,2)" fg:x="10091" fg:w="18"/><text x="62.3151%" y="79.50"></text></g><g><title>del (858 instructions, 5.27%)</title><rect x="57.1112%" y="85" width="5.2735%" height="15" fill="rgb(233,0,4)" fg:x="9292" fg:w="858"/><text x="57.4042%" y="95.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.3848%" y="85" width="0.1414%" height="15" fill="rgb(235,30,7)" fg:x="10150" fg:w="23"/><text x="62.6777%" y="95.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.5261%" y="85" width="0.1106%" height="15" fill="rgb(250,79,13)" fg:x="10173" fg:w="18"/><text x="62.8191%" y="95.50"></text></g><g><title>del (1,036 instructions, 6.37%)</title><rect x="56.6503%" y="101" width="6.3675%" height="15" fill="rgb(211,146,34)" fg:x="9217" fg:w="1036"/><text x="56.9432%" y="111.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="63.0178%" y="101" width="0.1414%" height="15" fill="rgb(228,22,38)" fg:x="10253" fg:w="23"/><text x="63.3108%" y="111.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.1592%" y="101" width="0.1106%" height="15" fill="rgb(235,168,5)" fg:x="10276" fg:w="18"/><text x="63.4522%" y="111.50"></text></g><g><title>del (1,214 instructions, 7.46%)</title><rect x="56.1893%" y="117" width="7.4616%" height="15" fill="rgb(221,155,16)" fg:x="9142" fg:w="1214"/><text x="56.4823%" y="127.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="63.6509%" y="117" width="0.1414%" height="15" fill="rgb(215,215,53)" fg:x="10356" fg:w="23"/><text x="63.9439%" y="127.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.7923%" y="117" width="0.1106%" height="15" fill="rgb(223,4,10)" fg:x="10379" fg:w="18"/><text x="64.0852%" y="127.50"></text></g><g><title>del (1,391 instructions, 8.55%)</title><rect x="55.7345%" y="133" width="8.5495%" height="15" fill="rgb(234,103,6)" fg:x="9068" fg:w="1391"/><text x="56.0274%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="64.2840%" y="133" width="0.1106%" height="15" fill="rgb(227,97,0)" fg:x="10459" fg:w="18"/><text x="64.5769%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.3946%" y="133" width="0.1414%" height="15" fill="rgb(234,150,53)" fg:x="10477" fg:w="23"/><text x="64.6876%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.5360%" y="133" width="0.1414%" height="15" fill="rgb(228,201,54)" fg:x="10500" fg:w="23"/><text x="64.8289%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="64.6773%" y="133" width="0.1106%" height="15" fill="rgb(222,22,37)" fg:x="10523" fg:w="18"/><text x="64.9703%" y="143.50"></text></g><g><title>replace (1,577 instructions, 9.69%)</title><rect x="55.4579%" y="149" width="9.6927%" height="15" fill="rgb(237,53,32)" fg:x="9023" fg:w="1577"/><text x="55.7509%" y="159.50">replace</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.1506%" y="117" width="0.1106%" height="15" fill="rgb(233,25,53)" fg:x="10600" fg:w="18"/><text x="65.4436%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.2612%" y="117" width="0.0615%" height="15" fill="rgb(210,40,34)" fg:x="10618" fg:w="10"/><text x="65.5542%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.3227%" y="117" width="0.1475%" height="15" fill="rgb(241,220,44)" fg:x="10628" fg:w="24"/><text x="65.6156%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.4702%" y="117" width="0.1106%" height="15" fill="rgb(235,28,35)" fg:x="10652" fg:w="18"/><text x="65.7632%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.5808%" y="117" width="0.0615%" height="15" fill="rgb(210,56,17)" fg:x="10670" fg:w="10"/><text x="65.8738%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.6423%" y="117" width="0.1475%" height="15" fill="rgb(224,130,29)" fg:x="10680" fg:w="24"/><text x="65.9353%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.7898%" y="117" width="0.1106%" height="15" fill="rgb(235,212,8)" fg:x="10704" fg:w="18"/><text x="66.0828%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.9004%" y="117" width="0.0615%" height="15" fill="rgb(223,33,50)" fg:x="10722" fg:w="10"/><text x="66.1934%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.9619%" y="117" width="0.1475%" height="15" fill="rgb(219,149,13)" fg:x="10732" fg:w="24"/><text x="66.2549%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="66.1094%" y="117" width="0.1106%" height="15" fill="rgb(250,156,29)" fg:x="10756" fg:w="18"/><text x="66.4024%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="66.2200%" y="117" width="0.0615%" height="15" fill="rgb(216,193,19)" fg:x="10774" fg:w="10"/><text x="66.5130%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="66.2815%" y="117" width="0.1475%" height="15" fill="rgb(216,135,14)" fg:x="10784" fg:w="24"/><text x="66.5745%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="66.4290%" y="117" width="0.0246%" height="15" fill="rgb(241,47,5)" fg:x="10808" fg:w="4"/><text x="66.7220%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="66.4536%" y="117" width="0.0246%" height="15" fill="rgb(233,42,35)" fg:x="10812" fg:w="4"/><text x="66.7466%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="66.4782%" y="117" width="0.0922%" height="15" fill="rgb(231,13,6)" fg:x="10816" fg:w="15"/><text x="66.7711%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="66.5704%" y="117" width="0.0922%" height="15" fill="rgb(207,181,40)" fg:x="10831" fg:w="15"/><text x="66.8633%" y="127.50"></text></g><g><title>rec (417 instructions, 2.56%)</title><rect x="65.1506%" y="133" width="2.5630%" height="15" fill="rgb(254,173,49)" fg:x="10600" fg:w="417"/><text x="65.4436%" y="143.50">r..</text></g><g><title>leaf (421 instructions, 2.59%)</title><rect x="65.1506%" y="149" width="2.5876%" height="15" fill="rgb(221,1,38)" fg:x="10600" fg:w="421"/><text x="65.4436%" y="159.50">l..</text></g><g><title>recursiveReplace (2,067 instructions, 12.70%)</title><rect x="55.3596%" y="165" width="12.7044%" height="15" fill="rgb(206,124,46)" fg:x="9007" fg:w="2067"/><text x="55.6525%" y="175.50">recursiveReplace</text></g><g><title>put.1 (2,207 instructions, 13.56%)</title><rect x="54.9047%" y="181" width="13.5648%" height="15" fill="rgb(249,21,11)" fg:x="8933" fg:w="2207"/><text x="55.1977%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="68.4696%" y="181" width="0.1414%" height="15" fill="rgb(222,201,40)" fg:x="11140" fg:w="23"/><text x="68.7625%" y="191.50"></text></g><g><title>account_put (3,074 instructions, 18.89%)</title><rect x="49.7972%" y="197" width="18.8937%" height="15" fill="rgb(235,61,29)" fg:x="8102" fg:w="3074"/><text x="50.0901%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="68.6908%" y="197" width="0.0983%" height="15" fill="rgb(219,207,3)" fg:x="11176" fg:w="16"/><text x="68.9838%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.59%)</title><rect x="68.7892%" y="165" width="4.5851%" height="15" fill="rgb(222,56,46)" fg:x="11192" fg:w="746"/><text x="69.0822%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="73.3743%" y="165" width="0.0553%" height="15" fill="rgb(239,76,54)" fg:x="11938" fg:w="9"/><text x="73.6673%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="73.4296%" y="165" width="0.0922%" height="15" fill="rgb(231,124,27)" fg:x="11947" fg:w="15"/><text x="73.7226%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="73.5218%" y="165" width="0.0553%" height="15" fill="rgb(249,195,6)" fg:x="11962" fg:w="9"/><text x="73.8148%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.94%)</title><rect x="68.7892%" y="181" width="4.9416%" height="15" fill="rgb(237,174,47)" fg:x="11192" fg:w="804"/><text x="69.0822%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.7308%" y="149" width="0.0922%" height="15" fill="rgb(206,201,31)" fg:x="11996" fg:w="15"/><text x="74.0238%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="73.7308%" y="165" width="0.1598%" height="15" fill="rgb(231,57,52)" fg:x="11996" fg:w="26"/><text x="74.0238%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.8906%" y="165" width="0.0922%" height="15" fill="rgb(248,177,22)" fg:x="12022" fg:w="15"/><text x="74.1836%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="73.9828%" y="149" width="0.0983%" height="15" fill="rgb(215,211,37)" fg:x="12037" fg:w="16"/><text x="74.2758%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.0811%" y="149" width="0.1106%" height="15" fill="rgb(241,128,51)" fg:x="12053" fg:w="18"/><text x="74.3741%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.1918%" y="133" width="0.0983%" height="15" fill="rgb(227,165,31)" fg:x="12071" fg:w="16"/><text x="74.4847%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.2901%" y="133" width="0.0983%" height="15" fill="rgb(228,167,24)" fg:x="12087" fg:w="16"/><text x="74.5831%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="74.1918%" y="149" width="0.3503%" height="15" fill="rgb(228,143,12)" fg:x="12071" fg:w="57"/><text x="74.4847%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.5421%" y="149" width="0.1106%" height="15" fill="rgb(249,149,8)" fg:x="12128" fg:w="18"/><text x="74.8351%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.6527%" y="133" width="0.0983%" height="15" fill="rgb(243,35,44)" fg:x="12146" fg:w="16"/><text x="74.9457%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.7511%" y="133" width="0.0983%" height="15" fill="rgb(246,89,9)" fg:x="12162" fg:w="16"/><text x="75.0440%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="74.6527%" y="149" width="0.3503%" height="15" fill="rgb(233,213,13)" fg:x="12146" fg:w="57"/><text x="74.9457%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="75.0031%" y="149" width="0.1106%" height="15" fill="rgb(233,141,41)" fg:x="12203" fg:w="18"/><text x="75.2960%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.1137%" y="133" width="0.0983%" height="15" fill="rgb(239,167,4)" fg:x="12221" fg:w="16"/><text x="75.4067%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.2120%" y="133" width="0.0983%" height="15" fill="rgb(209,217,16)" fg:x="12237" fg:w="16"/><text x="75.5050%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="75.1137%" y="149" width="0.3565%" height="15" fill="rgb(219,88,35)" fg:x="12221" fg:w="58"/><text x="75.4067%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="75.4702%" y="149" width="0.1106%" height="15" fill="rgb(220,193,23)" fg:x="12279" fg:w="18"/><text x="75.7632%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.5808%" y="133" width="0.0983%" height="15" fill="rgb(230,90,52)" fg:x="12297" fg:w="16"/><text x="75.8738%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.6792%" y="133" width="0.0983%" height="15" fill="rgb(252,106,19)" fg:x="12313" fg:w="16"/><text x="75.9721%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="75.5808%" y="149" width="0.3565%" height="15" fill="rgb(206,74,20)" fg:x="12297" fg:w="58"/><text x="75.8738%" y="159.50"></text></g><g><title>rec.2 (484 instructions, 2.97%)</title><rect x="73.9828%" y="165" width="2.9748%" height="15" fill="rgb(230,138,44)" fg:x="12037" fg:w="484"/><text x="74.2758%" y="175.50">re..</text></g><g><title>get.2 (547 instructions, 3.36%)</title><rect x="73.7308%" y="181" width="3.3620%" height="15" fill="rgb(235,182,43)" fg:x="11996" fg:w="547"/><text x="74.0238%" y="191.50">ge..</text></g><g><title>account_get (1,357 instructions, 8.34%)</title><rect x="68.7892%" y="197" width="8.3405%" height="15" fill="rgb(242,16,51)" fg:x="11192" fg:w="1357"/><text x="69.0822%" y="207.50">account_get</text></g><g><title>get.1 (7 instructions, 0.04%)</title><rect x="77.1297%" y="197" width="0.0430%" height="15" fill="rgb(248,9,4)" fg:x="12549" fg:w="7"/><text x="77.4227%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.1727%" y="197" width="0.0983%" height="15" fill="rgb(210,31,22)" fg:x="12556" fg:w="16"/><text x="77.4657%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="77.2711%" y="197" width="0.1475%" height="15" fill="rgb(239,54,39)" fg:x="12572" fg:w="24"/><text x="77.5640%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.4186%" y="197" width="0.0983%" height="15" fill="rgb(230,99,41)" fg:x="12596" fg:w="16"/><text x="77.7115%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="77.5169%" y="197" width="0.0922%" height="15" fill="rgb(253,106,12)" fg:x="12612" fg:w="15"/><text x="77.8099%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.59%)</title><rect x="77.6091%" y="165" width="4.5851%" height="15" fill="rgb(213,46,41)" fg:x="12627" fg:w="746"/><text x="77.9021%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="82.1942%" y="165" width="0.0553%" height="15" fill="rgb(215,133,35)" fg:x="13373" fg:w="9"/><text x="82.4872%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="82.2495%" y="165" width="0.0922%" height="15" fill="rgb(213,28,5)" fg:x="13382" fg:w="15"/><text x="82.5425%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="82.3417%" y="165" width="0.0553%" height="15" fill="rgb(215,77,49)" fg:x="13397" fg:w="9"/><text x="82.6347%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.94%)</title><rect x="77.6091%" y="181" width="4.9416%" height="15" fill="rgb(248,100,22)" fg:x="12627" fg:w="804"/><text x="77.9021%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="82.5507%" y="165" width="0.1106%" height="15" fill="rgb(208,67,9)" fg:x="13431" fg:w="18"/><text x="82.8437%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.6613%" y="165" width="0.0922%" height="15" fill="rgb(219,133,21)" fg:x="13449" fg:w="15"/><text x="82.9543%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.7535%" y="165" width="0.0922%" height="15" fill="rgb(246,46,29)" fg:x="13464" fg:w="15"/><text x="83.0465%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="82.8457%" y="149" width="0.0922%" height="15" fill="rgb(246,185,52)" fg:x="13479" fg:w="15"/><text x="83.1387%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="82.8457%" y="165" width="0.1598%" height="15" fill="rgb(252,136,11)" fg:x="13479" fg:w="26"/><text x="83.1387%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="83.0055%" y="149" width="0.0983%" height="15" fill="rgb(219,138,53)" fg:x="13505" fg:w="16"/><text x="83.2985%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.1039%" y="133" width="0.0922%" height="15" fill="rgb(211,51,23)" fg:x="13521" fg:w="15"/><text x="83.3968%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.1961%" y="133" width="0.0922%" height="15" fill="rgb(247,221,28)" fg:x="13536" fg:w="15"/><text x="83.4890%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="83.2883%" y="133" width="0.0922%" height="15" fill="rgb(251,222,45)" fg:x="13551" fg:w="15"/><text x="83.5812%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.3805%" y="117" width="0.1106%" height="15" fill="rgb(217,162,53)" fg:x="13566" fg:w="18"/><text x="83.6734%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.4911%" y="101" width="0.0983%" height="15" fill="rgb(229,93,14)" fg:x="13584" fg:w="16"/><text x="83.7841%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.5894%" y="101" width="0.0983%" height="15" fill="rgb(209,67,49)" fg:x="13600" fg:w="16"/><text x="83.8824%" y="111.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="83.4911%" y="117" width="0.3503%" height="15" fill="rgb(213,87,29)" fg:x="13584" fg:w="57"/><text x="83.7841%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.8414%" y="101" width="0.1106%" height="15" fill="rgb(205,151,52)" fg:x="13641" fg:w="18"/><text x="84.1344%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.9521%" y="85" width="0.0983%" height="15" fill="rgb(253,215,39)" fg:x="13659" fg:w="16"/><text x="84.2450%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.0504%" y="85" width="0.0983%" height="15" fill="rgb(221,220,41)" fg:x="13675" fg:w="16"/><text x="84.3434%" y="95.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="83.9521%" y="101" width="0.3503%" height="15" fill="rgb(218,133,21)" fg:x="13659" fg:w="57"/><text x="84.2450%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.3024%" y="85" width="0.1106%" height="15" fill="rgb(221,193,43)" fg:x="13716" fg:w="18"/><text x="84.5954%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.4130%" y="69" width="0.0983%" height="15" fill="rgb(240,128,52)" fg:x="13734" fg:w="16"/><text x="84.7060%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.5114%" y="69" width="0.0983%" height="15" fill="rgb(253,114,12)" fg:x="13750" fg:w="16"/><text x="84.8043%" y="79.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="84.4130%" y="85" width="0.3565%" height="15" fill="rgb(215,223,47)" fg:x="13734" fg:w="58"/><text x="84.7060%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.7695%" y="69" width="0.1106%" height="15" fill="rgb(248,225,23)" fg:x="13792" fg:w="18"/><text x="85.0625%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.8801%" y="53" width="0.0983%" height="15" fill="rgb(250,108,0)" fg:x="13810" fg:w="16"/><text x="85.1731%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.9785%" y="53" width="0.0983%" height="15" fill="rgb(228,208,7)" fg:x="13826" fg:w="16"/><text x="85.2715%" y="63.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="84.8801%" y="69" width="0.3565%" height="15" fill="rgb(244,45,10)" fg:x="13810" fg:w="58"/><text x="85.1731%" y="79.50"></text></g><g><title>del (27 instructions, 0.17%)</title><rect x="85.2366%" y="69" width="0.1659%" height="15" fill="rgb(207,125,25)" fg:x="13868" fg:w="27"/><text x="85.5296%" y="79.50"></text></g><g><title>del (155 instructions, 0.95%)</title><rect x="84.7695%" y="85" width="0.9527%" height="15" fill="rgb(210,195,18)" fg:x="13792" fg:w="155"/><text x="85.0625%" y="95.50"></text></g><g><title>del (283 instructions, 1.74%)</title><rect x="84.3024%" y="101" width="1.7394%" height="15" fill="rgb(249,80,12)" fg:x="13716" fg:w="283"/><text x="84.5954%" y="111.50"></text></g><g><title>del (410 instructions, 2.52%)</title><rect x="83.8414%" y="117" width="2.5200%" height="15" fill="rgb(221,65,9)" fg:x="13641" fg:w="410"/><text x="84.1344%" y="127.50">d..</text></g><g><title>del (537 instructions, 3.30%)</title><rect x="83.3805%" y="133" width="3.3006%" height="15" fill="rgb(235,49,36)" fg:x="13566" fg:w="537"/><text x="83.6734%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="86.6810%" y="133" width="0.1106%" height="15" fill="rgb(225,32,20)" fg:x="14103" fg:w="18"/><text x="86.9740%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.7916%" y="133" width="0.1414%" height="15" fill="rgb(215,141,46)" fg:x="14121" fg:w="23"/><text x="87.0846%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.9330%" y="133" width="0.1414%" height="15" fill="rgb(250,160,47)" fg:x="14144" fg:w="23"/><text x="87.2260%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="87.0744%" y="133" width="0.1106%" height="15" fill="rgb(216,222,40)" fg:x="14167" fg:w="18"/><text x="87.3673%" y="143.50"></text></g><g><title>replace (723 instructions, 4.44%)</title><rect x="83.1039%" y="149" width="4.4438%" height="15" fill="rgb(234,217,39)" fg:x="13521" fg:w="723"/><text x="83.3968%" y="159.50">repl..</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.5476%" y="117" width="0.1106%" height="15" fill="rgb(207,178,40)" fg:x="14244" fg:w="18"/><text x="87.8406%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.6583%" y="117" width="0.0615%" height="15" fill="rgb(221,136,13)" fg:x="14262" fg:w="10"/><text x="87.9512%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="87.7197%" y="117" width="0.1475%" height="15" fill="rgb(249,199,10)" fg:x="14272" fg:w="24"/><text x="88.0127%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.8672%" y="117" width="0.1106%" height="15" fill="rgb(249,222,13)" fg:x="14296" fg:w="18"/><text x="88.1602%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.9779%" y="117" width="0.0615%" height="15" fill="rgb(244,185,38)" fg:x="14314" fg:w="10"/><text x="88.2708%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.0393%" y="117" width="0.1475%" height="15" fill="rgb(236,202,9)" fg:x="14324" fg:w="24"/><text x="88.3323%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.1868%" y="117" width="0.1106%" height="15" fill="rgb(250,229,37)" fg:x="14348" fg:w="18"/><text x="88.4798%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.2975%" y="117" width="0.0615%" height="15" fill="rgb(206,174,23)" fg:x="14366" fg:w="10"/><text x="88.5904%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.3589%" y="117" width="0.1475%" height="15" fill="rgb(211,33,43)" fg:x="14376" fg:w="24"/><text x="88.6519%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.5065%" y="117" width="0.1106%" height="15" fill="rgb(245,58,50)" fg:x="14400" fg:w="18"/><text x="88.7994%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.6171%" y="117" width="0.0615%" height="15" fill="rgb(244,68,36)" fg:x="14418" fg:w="10"/><text x="88.9101%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.6785%" y="117" width="0.1475%" height="15" fill="rgb(232,229,15)" fg:x="14428" fg:w="24"/><text x="88.9715%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.8261%" y="117" width="0.1106%" height="15" fill="rgb(254,30,23)" fg:x="14452" fg:w="18"/><text x="89.1190%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.9367%" y="117" width="0.0615%" height="15" fill="rgb(235,160,14)" fg:x="14470" fg:w="10"/><text x="89.2297%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.9982%" y="117" width="0.1475%" height="15" fill="rgb(212,155,44)" fg:x="14480" fg:w="24"/><text x="89.2911%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="89.1457%" y="117" width="0.0246%" height="15" fill="rgb(226,2,50)" fg:x="14504" fg:w="4"/><text x="89.4386%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="89.1703%" y="117" width="0.0246%" height="15" fill="rgb(234,177,6)" fg:x="14508" fg:w="4"/><text x="89.4632%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="89.1948%" y="117" width="0.0922%" height="15" fill="rgb(217,24,9)" fg:x="14512" fg:w="15"/><text x="89.4878%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="89.2870%" y="117" width="0.0922%" height="15" fill="rgb(220,13,46)" fg:x="14527" fg:w="15"/><text x="89.5800%" y="127.50"></text></g><g><title>rec (498 instructions, 3.06%)</title><rect x="87.5476%" y="133" width="3.0608%" height="15" fill="rgb(239,221,27)" fg:x="14244" fg:w="498"/><text x="87.8406%" y="143.50">rec</text></g><g><title>leaf (502 instructions, 3.09%)</title><rect x="87.5476%" y="149" width="3.0854%" height="15" fill="rgb(222,198,25)" fg:x="14244" fg:w="502"/><text x="87.8406%" y="159.50">le..</text></g><g><title>recursiveReplace (1,294 instructions, 7.95%)</title><rect x="83.0055%" y="165" width="7.9533%" height="15" fill="rgb(211,99,13)" fg:x="13505" fg:w="1294"/><text x="83.2985%" y="175.50">recursive..</text></g><g><title>put.1 (1,434 instructions, 8.81%)</title><rect x="82.5507%" y="181" width="8.8138%" height="15" fill="rgb(232,111,31)" fg:x="13431" fg:w="1434"/><text x="82.8437%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="91.3645%" y="181" width="0.1414%" height="15" fill="rgb(245,82,37)" fg:x="14865" fg:w="23"/><text x="91.6574%" y="191.50"></text></g><g><title>account_put (2,274 instructions, 13.98%)</title><rect x="77.6091%" y="197" width="13.9766%" height="15" fill="rgb(227,149,46)" fg:x="12627" fg:w="2274"/><text x="77.9021%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="91.5857%" y="181" width="0.2028%" height="15" fill="rgb(218,36,50)" fg:x="14901" fg:w="33"/><text x="91.8787%" y="191.50"></text></g><g><title>memcpy (76 instructions, 0.47%)</title><rect x="91.7886%" y="181" width="0.4671%" height="15" fill="rgb(226,80,48)" fg:x="14934" fg:w="76"/><text x="92.0815%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="92.2557%" y="181" width="0.2028%" height="15" fill="rgb(238,224,15)" fg:x="15010" fg:w="33"/><text x="92.5487%" y="191.50"></text></g><g><title>leb128_encode (9 instructions, 0.06%)</title><rect x="92.4585%" y="181" width="0.0553%" height="15" fill="rgb(241,136,10)" fg:x="15043" fg:w="9"/><text x="92.7515%" y="191.50"></text></g><g><title>reply_with_data (43 instructions, 0.26%)</title><rect x="92.5138%" y="181" width="0.2643%" height="15" fill="rgb(208,32,45)" fg:x="15052" fg:w="43"/><text x="92.8068%" y="191.50"></text></g><g><title>$lambda.35 (300 instructions, 1.84%)</title><rect x="91.5857%" y="197" width="1.8439%" height="15" fill="rgb(207,135,9)" fg:x="14901" fg:w="300"/><text x="91.8787%" y="207.50"></text></g><g><title>$lambda.2 (11,992 instructions, 73.71%)</title><rect x="20.4978%" y="213" width="73.7062%" height="15" fill="rgb(206,86,44)" fg:x="3335" fg:w="11992"/><text x="20.7908%" y="223.50">$lambda.2</text></g><g><title>schedule_copying_gc (45 instructions, 0.28%)</title><rect x="94.2041%" y="213" width="0.2766%" height="15" fill="rgb(245,177,15)" fg:x="15327" fg:w="45"/><text x="94.4970%" y="223.50"></text></g><g><title>trans_state4 (13 instructions, 0.08%)</title><rect x="94.4806%" y="213" width="0.0799%" height="15" fill="rgb(206,64,50)" fg:x="15372" fg:w="13"/><text x="94.7736%" y="223.50"></text></g><g><title>all (16,270 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(234,36,40)" fg:x="0" fg:w="16270"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (16,270 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(213,64,8)" fg:x="0" fg:w="16270"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>