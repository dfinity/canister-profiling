<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="16294"><g><title>trans_state5 (8 instructions, 0.05%)</title><rect x="0.0000%" y="213" width="0.0491%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="0.0491%" y="213" width="0.2025%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="33"/><text x="0.3421%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="0.2516%" y="197" width="0.2823%" height="15" fill="rgb(221,193,54)" fg:x="41" fg:w="46"/><text x="0.5446%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="0.5339%" y="197" width="0.2025%" height="15" fill="rgb(248,212,6)" fg:x="87" fg:w="33"/><text x="0.8269%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="0.7365%" y="197" width="0.3682%" height="15" fill="rgb(208,68,35)" fg:x="120" fg:w="60"/><text x="1.0294%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="1.1047%" y="197" width="0.2823%" height="15" fill="rgb(232,128,0)" fg:x="180" fg:w="46"/><text x="1.3977%" y="207.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="1.3870%" y="197" width="0.7487%" height="15" fill="rgb(207,160,47)" fg:x="226" fg:w="122"/><text x="1.6800%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="2.1358%" y="197" width="0.3682%" height="15" fill="rgb(228,23,34)" fg:x="348" fg:w="60"/><text x="2.4287%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (17 instructions, 0.10%)</title><rect x="2.5040%" y="197" width="0.1043%" height="15" fill="rgb(218,30,26)" fg:x="408" fg:w="17"/><text x="2.7970%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="2.6083%" y="197" width="1.2152%" height="15" fill="rgb(220,122,19)" fg:x="425" fg:w="198"/><text x="2.9013%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="3.8235%" y="197" width="0.3682%" height="15" fill="rgb(250,228,42)" fg:x="623" fg:w="60"/><text x="4.1165%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.06%)</title><rect x="4.1917%" y="197" width="0.0552%" height="15" fill="rgb(240,193,28)" fg:x="683" fg:w="9"/><text x="4.4847%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="4.2470%" y="197" width="0.3682%" height="15" fill="rgb(216,20,37)" fg:x="692" fg:w="60"/><text x="4.5399%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="4.6152%" y="197" width="0.2823%" height="15" fill="rgb(206,188,39)" fg:x="752" fg:w="46"/><text x="4.9082%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="4.8975%" y="197" width="1.2152%" height="15" fill="rgb(217,207,13)" fg:x="798" fg:w="198"/><text x="5.1905%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.1127%" y="197" width="0.3682%" height="15" fill="rgb(231,73,38)" fg:x="996" fg:w="60"/><text x="6.4056%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.06%)</title><rect x="6.4809%" y="197" width="0.0552%" height="15" fill="rgb(225,20,46)" fg:x="1056" fg:w="9"/><text x="6.7739%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.5361%" y="197" width="0.3682%" height="15" fill="rgb(210,31,41)" fg:x="1065" fg:w="60"/><text x="6.8291%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.9044%" y="197" width="0.3682%" height="15" fill="rgb(221,200,47)" fg:x="1125" fg:w="60"/><text x="7.1974%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="7.2726%" y="197" width="0.2823%" height="15" fill="rgb(226,26,5)" fg:x="1185" fg:w="46"/><text x="7.5656%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="7.5549%" y="197" width="0.3682%" height="15" fill="rgb(249,33,26)" fg:x="1231" fg:w="60"/><text x="7.8479%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.06%)</title><rect x="7.9232%" y="197" width="0.0552%" height="15" fill="rgb(235,183,28)" fg:x="1291" fg:w="9"/><text x="8.2161%" y="207.50"></text></g><g><title>parse_idl_header (1,580 instructions, 9.70%)</title><rect x="0.2516%" y="213" width="9.6968%" height="15" fill="rgb(221,5,38)" fg:x="41" fg:w="1580"/><text x="0.5446%" y="223.50">parse_idl_he..</text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="9.9484%" y="197" width="0.0245%" height="15" fill="rgb(247,18,42)" fg:x="1621" fg:w="4"/><text x="10.2414%" y="207.50"></text></g><g><title>idl_sub_buf_init (8 instructions, 0.05%)</title><rect x="9.9484%" y="213" width="0.0491%" height="15" fill="rgb(241,131,45)" fg:x="1621" fg:w="8"/><text x="10.2414%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="9.9975%" y="213" width="0.2823%" height="15" fill="rgb(249,31,29)" fg:x="1629" fg:w="46"/><text x="10.2905%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.2799%" y="213" width="0.3682%" height="15" fill="rgb(225,111,53)" fg:x="1675" fg:w="60"/><text x="10.5728%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.6481%" y="213" width="0.3682%" height="15" fill="rgb(238,160,17)" fg:x="1735" fg:w="60"/><text x="10.9411%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="11.0163%" y="213" width="0.2823%" height="15" fill="rgb(214,148,48)" fg:x="1795" fg:w="46"/><text x="11.3093%" y="223.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="11.2986%" y="213" width="0.0921%" height="15" fill="rgb(232,36,49)" fg:x="1841" fg:w="15"/><text x="11.5916%" y="223.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="11.3907%" y="197" width="0.7487%" height="15" fill="rgb(209,103,24)" fg:x="1856" fg:w="122"/><text x="11.6837%" y="207.50"></text></g><g><title>find_field (149 instructions, 0.91%)</title><rect x="11.3907%" y="213" width="0.9144%" height="15" fill="rgb(229,88,8)" fg:x="1856" fg:w="149"/><text x="11.6837%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="12.3051%" y="213" width="0.3682%" height="15" fill="rgb(213,181,19)" fg:x="2005" fg:w="60"/><text x="12.5981%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="12.6734%" y="197" width="0.2823%" height="15" fill="rgb(254,191,54)" fg:x="2065" fg:w="46"/><text x="12.9663%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="12.9557%" y="197" width="0.2025%" height="15" fill="rgb(241,83,37)" fg:x="2111" fg:w="33"/><text x="13.2487%" y="207.50"></text></g><g><title>memcpy (181 instructions, 1.11%)</title><rect x="13.1582%" y="197" width="1.1108%" height="15" fill="rgb(233,36,39)" fg:x="2144" fg:w="181"/><text x="13.4512%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (335 instructions, 2.06%)</title><rect x="12.6734%" y="213" width="2.0560%" height="15" fill="rgb(226,3,54)" fg:x="2065" fg:w="335"/><text x="12.9663%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="14.7293%" y="197" width="1.2152%" height="15" fill="rgb(245,192,40)" fg:x="2400" fg:w="198"/><text x="15.0223%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="14.7293%" y="213" width="1.3809%" height="15" fill="rgb(238,167,29)" fg:x="2400" fg:w="225"/><text x="15.0223%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.1102%" y="213" width="0.3682%" height="15" fill="rgb(232,182,51)" fg:x="2625" fg:w="60"/><text x="16.4032%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.4785%" y="197" width="0.3682%" height="15" fill="rgb(231,60,39)" fg:x="2685" fg:w="60"/><text x="16.7714%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="16.8467%" y="197" width="0.2823%" height="15" fill="rgb(208,69,12)" fg:x="2745" fg:w="46"/><text x="17.1397%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="17.1290%" y="197" width="0.0921%" height="15" fill="rgb(235,93,37)" fg:x="2791" fg:w="15"/><text x="17.4220%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="17.2211%" y="181" width="1.2152%" height="15" fill="rgb(213,116,39)" fg:x="2806" fg:w="198"/><text x="17.5140%" y="191.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="17.2211%" y="197" width="1.3809%" height="15" fill="rgb(222,207,29)" fg:x="2806" fg:w="225"/><text x="17.5140%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="18.6019%" y="197" width="0.3682%" height="15" fill="rgb(206,96,30)" fg:x="3031" fg:w="60"/><text x="18.8949%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (55 instructions, 0.34%)</title><rect x="18.9702%" y="181" width="0.3375%" height="15" fill="rgb(218,138,4)" fg:x="3091" fg:w="55"/><text x="19.2631%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (99 instructions, 0.61%)</title><rect x="18.9702%" y="197" width="0.6076%" height="15" fill="rgb(250,191,14)" fg:x="3091" fg:w="99"/><text x="19.2631%" y="207.50"></text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="19.5778%" y="197" width="0.0245%" height="15" fill="rgb(239,60,40)" fg:x="3190" fg:w="4"/><text x="19.8707%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (641 instructions, 3.93%)</title><rect x="16.4785%" y="213" width="3.9340%" height="15" fill="rgb(206,27,48)" fg:x="2685" fg:w="641"/><text x="16.7714%" y="223.50">@de..</text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="20.4124%" y="213" width="0.0245%" height="15" fill="rgb(225,35,8)" fg:x="3326" fg:w="4"/><text x="20.7054%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="20.4370%" y="213" width="0.0921%" height="15" fill="rgb(250,213,24)" fg:x="3330" fg:w="15"/><text x="20.7299%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="20.5290%" y="197" width="0.2025%" height="15" fill="rgb(247,123,22)" fg:x="3345" fg:w="33"/><text x="20.8220%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="20.7316%" y="197" width="0.0921%" height="15" fill="rgb(231,138,38)" fg:x="3378" fg:w="15"/><text x="21.0245%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="20.8236%" y="197" width="0.0982%" height="15" fill="rgb(231,145,46)" fg:x="3393" fg:w="16"/><text x="21.1166%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.58%)</title><rect x="20.9218%" y="165" width="4.5784%" height="15" fill="rgb(251,118,11)" fg:x="3409" fg:w="746"/><text x="21.2148%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="25.5002%" y="165" width="0.0552%" height="15" fill="rgb(217,147,25)" fg:x="4155" fg:w="9"/><text x="25.7932%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="25.5554%" y="165" width="0.0921%" height="15" fill="rgb(247,81,37)" fg:x="4164" fg:w="15"/><text x="25.8484%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="25.6475%" y="165" width="0.0552%" height="15" fill="rgb(209,12,38)" fg:x="4179" fg:w="9"/><text x="25.9404%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.93%)</title><rect x="20.9218%" y="181" width="4.9343%" height="15" fill="rgb(227,1,9)" fg:x="3409" fg:w="804"/><text x="21.2148%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="25.8561%" y="149" width="0.0921%" height="15" fill="rgb(248,47,43)" fg:x="4213" fg:w="15"/><text x="26.1491%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="25.8561%" y="165" width="0.1596%" height="15" fill="rgb(221,10,30)" fg:x="4213" fg:w="26"/><text x="26.1491%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="26.0157%" y="165" width="0.0921%" height="15" fill="rgb(210,229,1)" fg:x="4239" fg:w="15"/><text x="26.3087%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="26.1078%" y="149" width="0.0982%" height="15" fill="rgb(222,148,37)" fg:x="4254" fg:w="16"/><text x="26.4007%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.2060%" y="149" width="0.1105%" height="15" fill="rgb(234,67,33)" fg:x="4270" fg:w="18"/><text x="26.4989%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.3164%" y="133" width="0.0982%" height="15" fill="rgb(247,98,35)" fg:x="4288" fg:w="16"/><text x="26.6094%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.4146%" y="133" width="0.0982%" height="15" fill="rgb(247,138,52)" fg:x="4304" fg:w="16"/><text x="26.7076%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="26.3164%" y="149" width="0.3498%" height="15" fill="rgb(213,79,30)" fg:x="4288" fg:w="57"/><text x="26.6094%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.6663%" y="149" width="0.1105%" height="15" fill="rgb(246,177,23)" fg:x="4345" fg:w="18"/><text x="26.9592%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.7767%" y="133" width="0.0982%" height="15" fill="rgb(230,62,27)" fg:x="4363" fg:w="16"/><text x="27.0697%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.8749%" y="133" width="0.0982%" height="15" fill="rgb(216,154,8)" fg:x="4379" fg:w="16"/><text x="27.1679%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="26.7767%" y="149" width="0.3560%" height="15" fill="rgb(244,35,45)" fg:x="4363" fg:w="58"/><text x="27.0697%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.1327%" y="149" width="0.1105%" height="15" fill="rgb(251,115,12)" fg:x="4421" fg:w="18"/><text x="27.4257%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.2432%" y="133" width="0.0982%" height="15" fill="rgb(240,54,50)" fg:x="4439" fg:w="16"/><text x="27.5361%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.3414%" y="133" width="0.0982%" height="15" fill="rgb(233,84,52)" fg:x="4455" fg:w="16"/><text x="27.6343%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="27.2432%" y="149" width="0.3560%" height="15" fill="rgb(207,117,47)" fg:x="4439" fg:w="58"/><text x="27.5361%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.5991%" y="149" width="0.1105%" height="15" fill="rgb(249,43,39)" fg:x="4497" fg:w="18"/><text x="27.8921%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.7096%" y="133" width="0.0982%" height="15" fill="rgb(209,38,44)" fg:x="4515" fg:w="16"/><text x="28.0026%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.8078%" y="133" width="0.0982%" height="15" fill="rgb(236,212,23)" fg:x="4531" fg:w="16"/><text x="28.1008%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="27.9060%" y="133" width="0.0982%" height="15" fill="rgb(242,79,21)" fg:x="4547" fg:w="16"/><text x="28.1989%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="28.0042%" y="133" width="0.0982%" height="15" fill="rgb(211,96,35)" fg:x="4563" fg:w="16"/><text x="28.2971%" y="143.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.17%)</title><rect x="28.1024%" y="117" width="4.1672%" height="15" fill="rgb(253,215,40)" fg:x="4579" fg:w="679"/><text x="28.3953%" y="127.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.19%)</title><rect x="28.1024%" y="133" width="4.1856%" height="15" fill="rgb(211,81,21)" fg:x="4579" fg:w="682"/><text x="28.3953%" y="143.50">equa..</text></g><g><title>anon-func-192.5 (783 instructions, 4.81%)</title><rect x="27.7096%" y="149" width="4.8054%" height="15" fill="rgb(208,190,38)" fg:x="4515" fg:w="783"/><text x="28.0026%" y="159.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="32.5150%" y="149" width="0.1105%" height="15" fill="rgb(235,213,38)" fg:x="5298" fg:w="18"/><text x="32.8080%" y="159.50"></text></g><g><title>rec.2 (1,212 instructions, 7.44%)</title><rect x="26.1078%" y="165" width="7.4383%" height="15" fill="rgb(237,122,38)" fg:x="4254" fg:w="1212"/><text x="26.4007%" y="175.50">rec.2</text></g><g><title>get.2 (1,275 instructions, 7.82%)</title><rect x="25.8561%" y="181" width="7.8250%" height="15" fill="rgb(244,218,35)" fg:x="4213" fg:w="1275"/><text x="26.1491%" y="191.50">get.2</text></g><g><title>account_get (2,085 instructions, 12.80%)</title><rect x="20.9218%" y="197" width="12.7961%" height="15" fill="rgb(240,68,47)" fg:x="3409" fg:w="2085"/><text x="21.2148%" y="207.50">account_get</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="33.7179%" y="197" width="0.1105%" height="15" fill="rgb(210,16,53)" fg:x="5494" fg:w="18"/><text x="34.0109%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.8284%" y="197" width="0.0982%" height="15" fill="rgb(235,124,12)" fg:x="5512" fg:w="16"/><text x="34.1214%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.9266%" y="197" width="0.0982%" height="15" fill="rgb(224,169,11)" fg:x="5528" fg:w="16"/><text x="34.2196%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="34.0248%" y="197" width="0.0982%" height="15" fill="rgb(250,166,2)" fg:x="5544" fg:w="16"/><text x="34.3178%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.1230%" y="197" width="0.0982%" height="15" fill="rgb(242,216,29)" fg:x="5560" fg:w="16"/><text x="34.4160%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.2212%" y="197" width="0.0982%" height="15" fill="rgb(230,116,27)" fg:x="5576" fg:w="16"/><text x="34.5142%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="34.3194%" y="197" width="0.1473%" height="15" fill="rgb(228,99,48)" fg:x="5592" fg:w="24"/><text x="34.6124%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="34.4667%" y="133" width="0.2271%" height="15" fill="rgb(253,11,6)" fg:x="5616" fg:w="37"/><text x="34.7596%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="34.6938%" y="133" width="0.6076%" height="15" fill="rgb(247,143,39)" fg:x="5653" fg:w="99"/><text x="34.9867%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="34.4667%" y="149" width="0.9881%" height="15" fill="rgb(236,97,10)" fg:x="5616" fg:w="161"/><text x="34.7596%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="34.4667%" y="165" width="1.0802%" height="15" fill="rgb(233,208,19)" fg:x="5616" fg:w="176"/><text x="34.7596%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="35.5468%" y="165" width="0.5953%" height="15" fill="rgb(216,164,2)" fg:x="5792" fg:w="97"/><text x="35.8398%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="36.1421%" y="165" width="0.1841%" height="15" fill="rgb(220,129,5)" fg:x="5889" fg:w="30"/><text x="36.4351%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.16%)</title><rect x="34.4667%" y="181" width="2.1603%" height="15" fill="rgb(242,17,10)" fg:x="5616" fg:w="352"/><text x="34.7596%" y="191.50">b..</text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="36.6270%" y="165" width="0.0675%" height="15" fill="rgb(242,107,0)" fg:x="5968" fg:w="11"/><text x="36.9199%" y="175.50"></text></g><g><title>mp_cmp (25 instructions, 0.15%)</title><rect x="36.6270%" y="181" width="0.1534%" height="15" fill="rgb(251,28,31)" fg:x="5968" fg:w="25"/><text x="36.9199%" y="191.50"></text></g><g><title>B_lt (417 instructions, 2.56%)</title><rect x="34.4667%" y="197" width="2.5592%" height="15" fill="rgb(233,223,10)" fg:x="5616" fg:w="417"/><text x="34.7596%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="37.0259%" y="197" width="0.0982%" height="15" fill="rgb(215,21,27)" fg:x="6033" fg:w="16"/><text x="37.3189%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="37.1241%" y="133" width="0.2271%" height="15" fill="rgb(232,23,21)" fg:x="6049" fg:w="37"/><text x="37.4171%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="37.3512%" y="133" width="0.6076%" height="15" fill="rgb(244,5,23)" fg:x="6086" fg:w="99"/><text x="37.6441%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="37.1241%" y="149" width="0.9881%" height="15" fill="rgb(226,81,46)" fg:x="6049" fg:w="161"/><text x="37.4171%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="37.1241%" y="165" width="1.0802%" height="15" fill="rgb(247,70,30)" fg:x="6049" fg:w="176"/><text x="37.4171%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="38.2042%" y="165" width="0.5953%" height="15" fill="rgb(212,68,19)" fg:x="6225" fg:w="97"/><text x="38.4972%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="38.7996%" y="165" width="0.1841%" height="15" fill="rgb(240,187,13)" fg:x="6322" fg:w="30"/><text x="39.0925%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.16%)</title><rect x="37.1241%" y="181" width="2.1603%" height="15" fill="rgb(223,113,26)" fg:x="6049" fg:w="352"/><text x="37.4171%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="39.2844%" y="149" width="0.2271%" height="15" fill="rgb(206,192,2)" fg:x="6401" fg:w="37"/><text x="39.5774%" y="159.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="39.5115%" y="149" width="0.6076%" height="15" fill="rgb(241,108,4)" fg:x="6438" fg:w="99"/><text x="39.8044%" y="159.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="39.2844%" y="165" width="0.9881%" height="15" fill="rgb(247,173,49)" fg:x="6401" fg:w="161"/><text x="39.5774%" y="175.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="39.2844%" y="181" width="1.0802%" height="15" fill="rgb(224,114,35)" fg:x="6401" fg:w="176"/><text x="39.5774%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="40.3646%" y="165" width="0.0675%" height="15" fill="rgb(245,159,27)" fg:x="6577" fg:w="11"/><text x="40.6575%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.14%)</title><rect x="40.4321%" y="149" width="0.1350%" height="15" fill="rgb(245,172,44)" fg:x="6588" fg:w="22"/><text x="40.7250%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="40.4321%" y="165" width="0.8163%" height="15" fill="rgb(236,23,11)" fg:x="6588" fg:w="133"/><text x="40.7250%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="40.3646%" y="181" width="1.0126%" height="15" fill="rgb(205,117,38)" fg:x="6577" fg:w="165"/><text x="40.6575%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="41.3772%" y="181" width="0.1841%" height="15" fill="rgb(237,72,25)" fg:x="6742" fg:w="30"/><text x="41.6702%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="41.5613%" y="165" width="1.0188%" height="15" fill="rgb(244,70,9)" fg:x="6772" fg:w="166"/><text x="41.8543%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="41.5613%" y="181" width="1.2213%" height="15" fill="rgb(217,125,39)" fg:x="6772" fg:w="199"/><text x="41.8543%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="43.3718%" y="133" width="0.2271%" height="15" fill="rgb(235,36,10)" fg:x="7067" fg:w="37"/><text x="43.6648%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="43.5989%" y="133" width="0.6076%" height="15" fill="rgb(251,123,47)" fg:x="7104" fg:w="99"/><text x="43.8918%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="43.3718%" y="149" width="0.9881%" height="15" fill="rgb(221,13,13)" fg:x="7067" fg:w="161"/><text x="43.6648%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="43.3718%" y="165" width="1.0802%" height="15" fill="rgb(238,131,9)" fg:x="7067" fg:w="176"/><text x="43.6648%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="44.4519%" y="165" width="0.5953%" height="15" fill="rgb(211,50,8)" fg:x="7243" fg:w="97"/><text x="44.7449%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="45.0473%" y="165" width="0.1841%" height="15" fill="rgb(245,182,24)" fg:x="7340" fg:w="30"/><text x="45.3402%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.16%)</title><rect x="43.3718%" y="181" width="2.1603%" height="15" fill="rgb(242,14,37)" fg:x="7067" fg:w="352"/><text x="43.6648%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="45.5321%" y="149" width="0.2271%" height="15" fill="rgb(246,228,12)" fg:x="7419" fg:w="37"/><text x="45.8251%" y="159.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="45.7592%" y="149" width="0.6076%" height="15" fill="rgb(213,55,15)" fg:x="7456" fg:w="99"/><text x="46.0521%" y="159.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="45.5321%" y="165" width="0.9881%" height="15" fill="rgb(209,9,3)" fg:x="7419" fg:w="161"/><text x="45.8251%" y="175.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="45.5321%" y="181" width="1.0802%" height="15" fill="rgb(230,59,30)" fg:x="7419" fg:w="176"/><text x="45.8251%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="46.6122%" y="165" width="0.0675%" height="15" fill="rgb(209,121,21)" fg:x="7595" fg:w="11"/><text x="46.9052%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.14%)</title><rect x="46.6798%" y="149" width="0.1350%" height="15" fill="rgb(220,109,13)" fg:x="7606" fg:w="22"/><text x="46.9727%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="46.6798%" y="165" width="0.8163%" height="15" fill="rgb(232,18,1)" fg:x="7606" fg:w="133"/><text x="46.9727%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="46.6122%" y="181" width="1.0126%" height="15" fill="rgb(215,41,42)" fg:x="7595" fg:w="165"/><text x="46.9052%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="47.6249%" y="181" width="0.1841%" height="15" fill="rgb(224,123,36)" fg:x="7760" fg:w="30"/><text x="47.9179%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="47.8090%" y="165" width="1.0188%" height="15" fill="rgb(240,125,3)" fg:x="7790" fg:w="166"/><text x="48.1020%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="47.8090%" y="181" width="1.2213%" height="15" fill="rgb(205,98,50)" fg:x="7790" fg:w="199"/><text x="48.1020%" y="191.50"></text></g><g><title>B_sub (2,036 instructions, 12.50%)</title><rect x="37.1241%" y="197" width="12.4954%" height="15" fill="rgb(205,185,37)" fg:x="6049" fg:w="2036"/><text x="37.4171%" y="207.50">B_sub</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="49.6195%" y="197" width="0.0921%" height="15" fill="rgb(238,207,15)" fg:x="8085" fg:w="15"/><text x="49.9125%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.58%)</title><rect x="49.7116%" y="165" width="4.5784%" height="15" fill="rgb(213,199,42)" fg:x="8100" fg:w="746"/><text x="50.0045%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="54.2899%" y="165" width="0.0552%" height="15" fill="rgb(235,201,11)" fg:x="8846" fg:w="9"/><text x="54.5829%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="54.3452%" y="165" width="0.0921%" height="15" fill="rgb(207,46,11)" fg:x="8855" fg:w="15"/><text x="54.6381%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="54.4372%" y="165" width="0.0552%" height="15" fill="rgb(241,35,35)" fg:x="8870" fg:w="9"/><text x="54.7302%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.93%)</title><rect x="49.7116%" y="181" width="4.9343%" height="15" fill="rgb(243,32,47)" fg:x="8100" fg:w="804"/><text x="50.0045%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="54.6459%" y="165" width="0.1105%" height="15" fill="rgb(247,202,23)" fg:x="8904" fg:w="18"/><text x="54.9389%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="54.7564%" y="165" width="0.0921%" height="15" fill="rgb(219,102,11)" fg:x="8922" fg:w="15"/><text x="55.0493%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="54.8484%" y="165" width="0.0921%" height="15" fill="rgb(243,110,44)" fg:x="8937" fg:w="15"/><text x="55.1414%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="54.9405%" y="149" width="0.0921%" height="15" fill="rgb(222,74,54)" fg:x="8952" fg:w="15"/><text x="55.2334%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="54.9405%" y="165" width="0.1596%" height="15" fill="rgb(216,99,12)" fg:x="8952" fg:w="26"/><text x="55.2334%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="55.1000%" y="149" width="0.0982%" height="15" fill="rgb(226,22,26)" fg:x="8978" fg:w="16"/><text x="55.3930%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.1982%" y="133" width="0.0921%" height="15" fill="rgb(217,163,10)" fg:x="8994" fg:w="15"/><text x="55.4912%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.2903%" y="133" width="0.0921%" height="15" fill="rgb(213,25,53)" fg:x="9009" fg:w="15"/><text x="55.5833%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.3823%" y="133" width="0.0921%" height="15" fill="rgb(252,105,26)" fg:x="9024" fg:w="15"/><text x="55.6753%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="55.4744%" y="117" width="0.1105%" height="15" fill="rgb(220,39,43)" fg:x="9039" fg:w="18"/><text x="55.7674%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.5849%" y="101" width="0.0982%" height="15" fill="rgb(229,68,48)" fg:x="9057" fg:w="16"/><text x="55.8778%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.6831%" y="101" width="0.0982%" height="15" fill="rgb(252,8,32)" fg:x="9073" fg:w="16"/><text x="55.9760%" y="111.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="55.5849%" y="117" width="0.3498%" height="15" fill="rgb(223,20,43)" fg:x="9057" fg:w="57"/><text x="55.8778%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="55.9347%" y="101" width="0.1105%" height="15" fill="rgb(229,81,49)" fg:x="9114" fg:w="18"/><text x="56.2277%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.0452%" y="85" width="0.0982%" height="15" fill="rgb(236,28,36)" fg:x="9132" fg:w="16"/><text x="56.3381%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.1434%" y="85" width="0.0982%" height="15" fill="rgb(249,185,26)" fg:x="9148" fg:w="16"/><text x="56.4363%" y="95.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="56.0452%" y="101" width="0.3560%" height="15" fill="rgb(249,174,33)" fg:x="9132" fg:w="58"/><text x="56.3381%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.4011%" y="85" width="0.1105%" height="15" fill="rgb(233,201,37)" fg:x="9190" fg:w="18"/><text x="56.6941%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.5116%" y="69" width="0.0982%" height="15" fill="rgb(221,78,26)" fg:x="9208" fg:w="16"/><text x="56.8046%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.6098%" y="69" width="0.0982%" height="15" fill="rgb(250,127,30)" fg:x="9224" fg:w="16"/><text x="56.9028%" y="79.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="56.5116%" y="85" width="0.3560%" height="15" fill="rgb(230,49,44)" fg:x="9208" fg:w="58"/><text x="56.8046%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.8676%" y="69" width="0.1105%" height="15" fill="rgb(229,67,23)" fg:x="9266" fg:w="18"/><text x="57.1605%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.9780%" y="53" width="0.0982%" height="15" fill="rgb(249,83,47)" fg:x="9284" fg:w="16"/><text x="57.2710%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.0762%" y="53" width="0.0982%" height="15" fill="rgb(215,43,3)" fg:x="9300" fg:w="16"/><text x="57.3692%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.1744%" y="53" width="0.0982%" height="15" fill="rgb(238,154,13)" fg:x="9316" fg:w="16"/><text x="57.4674%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.2726%" y="53" width="0.0982%" height="15" fill="rgb(219,56,2)" fg:x="9332" fg:w="16"/><text x="57.5656%" y="63.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.17%)</title><rect x="57.3708%" y="37" width="4.1672%" height="15" fill="rgb(233,0,4)" fg:x="9348" fg:w="679"/><text x="57.6638%" y="47.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.19%)</title><rect x="57.3708%" y="53" width="4.1856%" height="15" fill="rgb(235,30,7)" fg:x="9348" fg:w="682"/><text x="57.6638%" y="63.50">equa..</text></g><g><title>anon-func-192.5 (783 instructions, 4.81%)</title><rect x="56.9780%" y="69" width="4.8054%" height="15" fill="rgb(250,79,13)" fg:x="9284" fg:w="783"/><text x="57.2710%" y="79.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="61.7835%" y="69" width="0.1105%" height="15" fill="rgb(211,146,34)" fg:x="10067" fg:w="18"/><text x="62.0764%" y="79.50"></text></g><g><title>del (860 instructions, 5.28%)</title><rect x="56.8676%" y="85" width="5.2780%" height="15" fill="rgb(228,22,38)" fg:x="9266" fg:w="860"/><text x="57.1605%" y="95.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.1456%" y="85" width="0.1412%" height="15" fill="rgb(235,168,5)" fg:x="10126" fg:w="23"/><text x="62.4385%" y="95.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.2867%" y="85" width="0.1105%" height="15" fill="rgb(221,155,16)" fg:x="10149" fg:w="18"/><text x="62.5797%" y="95.50"></text></g><g><title>del (1,039 instructions, 6.38%)</title><rect x="56.4011%" y="101" width="6.3766%" height="15" fill="rgb(215,215,53)" fg:x="9190" fg:w="1039"/><text x="56.6941%" y="111.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.7777%" y="101" width="0.1412%" height="15" fill="rgb(223,4,10)" fg:x="10229" fg:w="23"/><text x="63.0707%" y="111.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.9189%" y="101" width="0.1105%" height="15" fill="rgb(234,103,6)" fg:x="10252" fg:w="18"/><text x="63.2118%" y="111.50"></text></g><g><title>del (1,218 instructions, 7.48%)</title><rect x="55.9347%" y="117" width="7.4751%" height="15" fill="rgb(227,97,0)" fg:x="9114" fg:w="1218"/><text x="56.2277%" y="127.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="63.4098%" y="117" width="0.1412%" height="15" fill="rgb(234,150,53)" fg:x="10332" fg:w="23"/><text x="63.7028%" y="127.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.5510%" y="117" width="0.1105%" height="15" fill="rgb(228,201,54)" fg:x="10355" fg:w="18"/><text x="63.8440%" y="127.50"></text></g><g><title>del (1,396 instructions, 8.57%)</title><rect x="55.4744%" y="133" width="8.5676%" height="15" fill="rgb(222,22,37)" fg:x="9039" fg:w="1396"/><text x="55.7674%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="64.0420%" y="133" width="0.1105%" height="15" fill="rgb(237,53,32)" fg:x="10435" fg:w="18"/><text x="64.3349%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.1524%" y="133" width="0.1412%" height="15" fill="rgb(233,25,53)" fg:x="10453" fg:w="23"/><text x="64.4454%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.2936%" y="133" width="0.1412%" height="15" fill="rgb(210,40,34)" fg:x="10476" fg:w="23"/><text x="64.5866%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="64.4348%" y="133" width="0.1105%" height="15" fill="rgb(241,220,44)" fg:x="10499" fg:w="18"/><text x="64.7277%" y="143.50"></text></g><g><title>replace (1,582 instructions, 9.71%)</title><rect x="55.1982%" y="149" width="9.7091%" height="15" fill="rgb(235,28,35)" fg:x="8994" fg:w="1582"/><text x="55.4912%" y="159.50">replace</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="64.9073%" y="117" width="0.1105%" height="15" fill="rgb(210,56,17)" fg:x="10576" fg:w="18"/><text x="65.2003%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.0178%" y="117" width="0.0614%" height="15" fill="rgb(224,130,29)" fg:x="10594" fg:w="10"/><text x="65.3108%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.0792%" y="117" width="0.1473%" height="15" fill="rgb(235,212,8)" fg:x="10604" fg:w="24"/><text x="65.3721%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.2265%" y="117" width="0.1105%" height="15" fill="rgb(223,33,50)" fg:x="10628" fg:w="18"/><text x="65.5194%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.3369%" y="117" width="0.0614%" height="15" fill="rgb(219,149,13)" fg:x="10646" fg:w="10"/><text x="65.6299%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.3983%" y="117" width="0.1473%" height="15" fill="rgb(250,156,29)" fg:x="10656" fg:w="24"/><text x="65.6913%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.5456%" y="117" width="0.1105%" height="15" fill="rgb(216,193,19)" fg:x="10680" fg:w="18"/><text x="65.8386%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.6561%" y="117" width="0.0614%" height="15" fill="rgb(216,135,14)" fg:x="10698" fg:w="10"/><text x="65.9490%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.7174%" y="117" width="0.1473%" height="15" fill="rgb(241,47,5)" fg:x="10708" fg:w="24"/><text x="66.0104%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.8647%" y="117" width="0.1105%" height="15" fill="rgb(233,42,35)" fg:x="10732" fg:w="18"/><text x="66.1577%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.9752%" y="117" width="0.0614%" height="15" fill="rgb(231,13,6)" fg:x="10750" fg:w="10"/><text x="66.2682%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="66.0366%" y="117" width="0.1473%" height="15" fill="rgb(207,181,40)" fg:x="10760" fg:w="24"/><text x="66.3295%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="66.1839%" y="117" width="0.0245%" height="15" fill="rgb(254,173,49)" fg:x="10784" fg:w="4"/><text x="66.4768%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="66.2084%" y="117" width="0.0245%" height="15" fill="rgb(221,1,38)" fg:x="10788" fg:w="4"/><text x="66.5014%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="66.2330%" y="117" width="0.0921%" height="15" fill="rgb(206,124,46)" fg:x="10792" fg:w="15"/><text x="66.5259%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="66.3250%" y="117" width="0.0921%" height="15" fill="rgb(249,21,11)" fg:x="10807" fg:w="15"/><text x="66.6180%" y="127.50"></text></g><g><title>rec (417 instructions, 2.56%)</title><rect x="64.9073%" y="133" width="2.5592%" height="15" fill="rgb(222,201,40)" fg:x="10576" fg:w="417"/><text x="65.2003%" y="143.50">r..</text></g><g><title>leaf (421 instructions, 2.58%)</title><rect x="64.9073%" y="149" width="2.5838%" height="15" fill="rgb(235,61,29)" fg:x="10576" fg:w="421"/><text x="65.2003%" y="159.50">l..</text></g><g><title>recursiveReplace (2,072 instructions, 12.72%)</title><rect x="55.1000%" y="165" width="12.7163%" height="15" fill="rgb(219,207,3)" fg:x="8978" fg:w="2072"/><text x="55.3930%" y="175.50">recursiveReplace</text></g><g><title>put.1 (2,212 instructions, 13.58%)</title><rect x="54.6459%" y="181" width="13.5755%" height="15" fill="rgb(222,56,46)" fg:x="8904" fg:w="2212"/><text x="54.9389%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="68.2214%" y="181" width="0.1412%" height="15" fill="rgb(239,76,54)" fg:x="11116" fg:w="23"/><text x="68.5144%" y="191.50"></text></g><g><title>account_put (3,052 instructions, 18.73%)</title><rect x="49.7116%" y="197" width="18.7308%" height="15" fill="rgb(231,124,27)" fg:x="8100" fg:w="3052"/><text x="50.0045%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="68.4424%" y="197" width="0.0982%" height="15" fill="rgb(249,195,6)" fg:x="11152" fg:w="16"/><text x="68.7353%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.58%)</title><rect x="68.5406%" y="165" width="4.5784%" height="15" fill="rgb(237,174,47)" fg:x="11168" fg:w="746"/><text x="68.8335%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="73.1189%" y="165" width="0.1412%" height="15" fill="rgb(206,201,31)" fg:x="11914" fg:w="23"/><text x="73.4119%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="73.2601%" y="165" width="0.0921%" height="15" fill="rgb(231,57,52)" fg:x="11937" fg:w="15"/><text x="73.5531%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="73.3522%" y="165" width="0.1412%" height="15" fill="rgb(248,177,22)" fg:x="11952" fg:w="23"/><text x="73.6451%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.10%)</title><rect x="68.5406%" y="181" width="5.1000%" height="15" fill="rgb(215,211,37)" fg:x="11168" fg:w="831"/><text x="68.8335%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.6406%" y="149" width="0.0921%" height="15" fill="rgb(241,128,51)" fg:x="11999" fg:w="15"/><text x="73.9336%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="73.6406%" y="165" width="0.1596%" height="15" fill="rgb(227,165,31)" fg:x="11999" fg:w="26"/><text x="73.9336%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.8002%" y="165" width="0.0921%" height="15" fill="rgb(228,167,24)" fg:x="12025" fg:w="15"/><text x="74.0931%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="73.8922%" y="149" width="0.0982%" height="15" fill="rgb(228,143,12)" fg:x="12040" fg:w="16"/><text x="74.1852%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="73.9904%" y="149" width="0.1105%" height="15" fill="rgb(249,149,8)" fg:x="12056" fg:w="18"/><text x="74.2834%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.1009%" y="133" width="0.0982%" height="15" fill="rgb(243,35,44)" fg:x="12074" fg:w="16"/><text x="74.3939%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.1991%" y="133" width="0.0982%" height="15" fill="rgb(246,89,9)" fg:x="12090" fg:w="16"/><text x="74.4921%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="74.1009%" y="149" width="0.3498%" height="15" fill="rgb(233,213,13)" fg:x="12074" fg:w="57"/><text x="74.3939%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.4507%" y="149" width="0.1105%" height="15" fill="rgb(233,141,41)" fg:x="12131" fg:w="18"/><text x="74.7437%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.5612%" y="133" width="0.0982%" height="15" fill="rgb(239,167,4)" fg:x="12149" fg:w="16"/><text x="74.8542%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.6594%" y="133" width="0.0982%" height="15" fill="rgb(209,217,16)" fg:x="12165" fg:w="16"/><text x="74.9524%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="74.5612%" y="149" width="0.3437%" height="15" fill="rgb(219,88,35)" fg:x="12149" fg:w="56"/><text x="74.8542%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.9049%" y="149" width="0.1105%" height="15" fill="rgb(220,193,23)" fg:x="12205" fg:w="18"/><text x="75.1978%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.0153%" y="133" width="0.0982%" height="15" fill="rgb(230,90,52)" fg:x="12223" fg:w="16"/><text x="75.3083%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.1135%" y="133" width="0.0982%" height="15" fill="rgb(252,106,19)" fg:x="12239" fg:w="16"/><text x="75.4065%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="75.0153%" y="149" width="0.3498%" height="15" fill="rgb(206,74,20)" fg:x="12223" fg:w="57"/><text x="75.3083%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="75.3652%" y="149" width="0.1105%" height="15" fill="rgb(230,138,44)" fg:x="12280" fg:w="18"/><text x="75.6581%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.4756%" y="133" width="0.0982%" height="15" fill="rgb(235,182,43)" fg:x="12298" fg:w="16"/><text x="75.7686%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.5738%" y="133" width="0.0982%" height="15" fill="rgb(242,16,51)" fg:x="12314" fg:w="16"/><text x="75.8668%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="75.4756%" y="149" width="0.3498%" height="15" fill="rgb(248,9,4)" fg:x="12298" fg:w="57"/><text x="75.7686%" y="159.50"></text></g><g><title>rec.2 (481 instructions, 2.95%)</title><rect x="73.8922%" y="165" width="2.9520%" height="15" fill="rgb(210,31,22)" fg:x="12040" fg:w="481"/><text x="74.1852%" y="175.50">re..</text></g><g><title>get.2 (544 instructions, 3.34%)</title><rect x="73.6406%" y="181" width="3.3387%" height="15" fill="rgb(239,54,39)" fg:x="11999" fg:w="544"/><text x="73.9336%" y="191.50">ge..</text></g><g><title>account_get (1,381 instructions, 8.48%)</title><rect x="68.5406%" y="197" width="8.4755%" height="15" fill="rgb(230,99,41)" fg:x="11168" fg:w="1381"/><text x="68.8335%" y="207.50">account_get</text></g><g><title>get.1 (7 instructions, 0.04%)</title><rect x="77.0161%" y="197" width="0.0430%" height="15" fill="rgb(253,106,12)" fg:x="12549" fg:w="7"/><text x="77.3090%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.0590%" y="197" width="0.0982%" height="15" fill="rgb(213,46,41)" fg:x="12556" fg:w="16"/><text x="77.3520%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="77.1572%" y="197" width="0.1473%" height="15" fill="rgb(215,133,35)" fg:x="12572" fg:w="24"/><text x="77.4502%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.3045%" y="197" width="0.0982%" height="15" fill="rgb(213,28,5)" fg:x="12596" fg:w="16"/><text x="77.5975%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="77.4027%" y="197" width="0.0921%" height="15" fill="rgb(215,77,49)" fg:x="12612" fg:w="15"/><text x="77.6957%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.58%)</title><rect x="77.4948%" y="165" width="4.5784%" height="15" fill="rgb(248,100,22)" fg:x="12627" fg:w="746"/><text x="77.7878%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="82.0732%" y="165" width="0.1412%" height="15" fill="rgb(208,67,9)" fg:x="13373" fg:w="23"/><text x="82.3661%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="82.2143%" y="165" width="0.0921%" height="15" fill="rgb(219,133,21)" fg:x="13396" fg:w="15"/><text x="82.5073%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="82.3064%" y="165" width="0.1412%" height="15" fill="rgb(246,46,29)" fg:x="13411" fg:w="23"/><text x="82.5993%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.10%)</title><rect x="77.4948%" y="181" width="5.1000%" height="15" fill="rgb(246,185,52)" fg:x="12627" fg:w="831"/><text x="77.7878%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="82.5948%" y="165" width="0.1105%" height="15" fill="rgb(252,136,11)" fg:x="13458" fg:w="18"/><text x="82.8878%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.7053%" y="165" width="0.0921%" height="15" fill="rgb(219,138,53)" fg:x="13476" fg:w="15"/><text x="82.9983%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.7973%" y="165" width="0.0921%" height="15" fill="rgb(211,51,23)" fg:x="13491" fg:w="15"/><text x="83.0903%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="82.8894%" y="149" width="0.0921%" height="15" fill="rgb(247,221,28)" fg:x="13506" fg:w="15"/><text x="83.1824%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="82.8894%" y="165" width="0.1596%" height="15" fill="rgb(251,222,45)" fg:x="13506" fg:w="26"/><text x="83.1824%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="83.0490%" y="149" width="0.0982%" height="15" fill="rgb(217,162,53)" fg:x="13532" fg:w="16"/><text x="83.3419%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.1472%" y="133" width="0.0921%" height="15" fill="rgb(229,93,14)" fg:x="13548" fg:w="15"/><text x="83.4401%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.2392%" y="133" width="0.0921%" height="15" fill="rgb(209,67,49)" fg:x="13563" fg:w="15"/><text x="83.5322%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="83.3313%" y="133" width="0.0921%" height="15" fill="rgb(213,87,29)" fg:x="13578" fg:w="15"/><text x="83.6243%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.4233%" y="117" width="0.1105%" height="15" fill="rgb(205,151,52)" fg:x="13593" fg:w="18"/><text x="83.7163%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.5338%" y="101" width="0.0982%" height="15" fill="rgb(253,215,39)" fg:x="13611" fg:w="16"/><text x="83.8268%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.6320%" y="101" width="0.0982%" height="15" fill="rgb(221,220,41)" fg:x="13627" fg:w="16"/><text x="83.9250%" y="111.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="83.5338%" y="117" width="0.3498%" height="15" fill="rgb(218,133,21)" fg:x="13611" fg:w="57"/><text x="83.8268%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.8836%" y="101" width="0.1105%" height="15" fill="rgb(221,193,43)" fg:x="13668" fg:w="18"/><text x="84.1766%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.9941%" y="85" width="0.0982%" height="15" fill="rgb(240,128,52)" fg:x="13686" fg:w="16"/><text x="84.2871%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.0923%" y="85" width="0.0982%" height="15" fill="rgb(253,114,12)" fg:x="13702" fg:w="16"/><text x="84.3853%" y="95.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="83.9941%" y="101" width="0.3437%" height="15" fill="rgb(215,223,47)" fg:x="13686" fg:w="56"/><text x="84.2871%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.3378%" y="85" width="0.1105%" height="15" fill="rgb(248,225,23)" fg:x="13742" fg:w="18"/><text x="84.6308%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.4483%" y="69" width="0.0982%" height="15" fill="rgb(250,108,0)" fg:x="13760" fg:w="16"/><text x="84.7412%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.5465%" y="69" width="0.0982%" height="15" fill="rgb(228,208,7)" fg:x="13776" fg:w="16"/><text x="84.8394%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="84.4483%" y="85" width="0.3498%" height="15" fill="rgb(244,45,10)" fg:x="13760" fg:w="57"/><text x="84.7412%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.7981%" y="69" width="0.1105%" height="15" fill="rgb(207,125,25)" fg:x="13817" fg:w="18"/><text x="85.0911%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.9086%" y="53" width="0.0982%" height="15" fill="rgb(210,195,18)" fg:x="13835" fg:w="16"/><text x="85.2015%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="85.0068%" y="53" width="0.0982%" height="15" fill="rgb(249,80,12)" fg:x="13851" fg:w="16"/><text x="85.2997%" y="63.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="84.9086%" y="69" width="0.3498%" height="15" fill="rgb(221,65,9)" fg:x="13835" fg:w="57"/><text x="85.2015%" y="79.50"></text></g><g><title>del (27 instructions, 0.17%)</title><rect x="85.2584%" y="69" width="0.1657%" height="15" fill="rgb(235,49,36)" fg:x="13892" fg:w="27"/><text x="85.5513%" y="79.50"></text></g><g><title>del (154 instructions, 0.95%)</title><rect x="84.7981%" y="85" width="0.9451%" height="15" fill="rgb(225,32,20)" fg:x="13817" fg:w="154"/><text x="85.0911%" y="95.50"></text></g><g><title>del (281 instructions, 1.72%)</title><rect x="84.3378%" y="101" width="1.7246%" height="15" fill="rgb(215,141,46)" fg:x="13742" fg:w="281"/><text x="84.6308%" y="111.50"></text></g><g><title>del (407 instructions, 2.50%)</title><rect x="83.8836%" y="117" width="2.4979%" height="15" fill="rgb(250,160,47)" fg:x="13668" fg:w="407"/><text x="84.1766%" y="127.50">d..</text></g><g><title>del (534 instructions, 3.28%)</title><rect x="83.4233%" y="133" width="3.2773%" height="15" fill="rgb(216,222,40)" fg:x="13593" fg:w="534"/><text x="83.7163%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="86.7006%" y="133" width="0.1105%" height="15" fill="rgb(234,217,39)" fg:x="14127" fg:w="18"/><text x="86.9936%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.8111%" y="133" width="0.1412%" height="15" fill="rgb(207,178,40)" fg:x="14145" fg:w="23"/><text x="87.1041%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.9523%" y="133" width="0.1412%" height="15" fill="rgb(221,136,13)" fg:x="14168" fg:w="23"/><text x="87.2452%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="87.0934%" y="133" width="0.1105%" height="15" fill="rgb(249,199,10)" fg:x="14191" fg:w="18"/><text x="87.3864%" y="143.50"></text></g><g><title>replace (720 instructions, 4.42%)</title><rect x="83.1472%" y="149" width="4.4188%" height="15" fill="rgb(249,222,13)" fg:x="13548" fg:w="720"/><text x="83.4401%" y="159.50">repl..</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.5660%" y="117" width="0.1105%" height="15" fill="rgb(244,185,38)" fg:x="14268" fg:w="18"/><text x="87.8589%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.6764%" y="117" width="0.0614%" height="15" fill="rgb(236,202,9)" fg:x="14286" fg:w="10"/><text x="87.9694%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="87.7378%" y="117" width="0.1473%" height="15" fill="rgb(250,229,37)" fg:x="14296" fg:w="24"/><text x="88.0308%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.8851%" y="117" width="0.1105%" height="15" fill="rgb(206,174,23)" fg:x="14320" fg:w="18"/><text x="88.1781%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.9956%" y="117" width="0.0614%" height="15" fill="rgb(211,33,43)" fg:x="14338" fg:w="10"/><text x="88.2885%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.0570%" y="117" width="0.1473%" height="15" fill="rgb(245,58,50)" fg:x="14348" fg:w="24"/><text x="88.3499%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.2042%" y="117" width="0.1105%" height="15" fill="rgb(244,68,36)" fg:x="14372" fg:w="18"/><text x="88.4972%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.3147%" y="117" width="0.0614%" height="15" fill="rgb(232,229,15)" fg:x="14390" fg:w="10"/><text x="88.6077%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.3761%" y="117" width="0.1473%" height="15" fill="rgb(254,30,23)" fg:x="14400" fg:w="24"/><text x="88.6691%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.5234%" y="117" width="0.1105%" height="15" fill="rgb(235,160,14)" fg:x="14424" fg:w="18"/><text x="88.8164%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.6339%" y="117" width="0.0614%" height="15" fill="rgb(212,155,44)" fg:x="14442" fg:w="10"/><text x="88.9268%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.6952%" y="117" width="0.1473%" height="15" fill="rgb(226,2,50)" fg:x="14452" fg:w="24"/><text x="88.9882%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.8425%" y="117" width="0.1105%" height="15" fill="rgb(234,177,6)" fg:x="14476" fg:w="18"/><text x="89.1355%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.9530%" y="117" width="0.0614%" height="15" fill="rgb(217,24,9)" fg:x="14494" fg:w="10"/><text x="89.2460%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="89.0144%" y="117" width="0.1473%" height="15" fill="rgb(220,13,46)" fg:x="14504" fg:w="24"/><text x="89.3073%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="89.1617%" y="117" width="0.0245%" height="15" fill="rgb(239,221,27)" fg:x="14528" fg:w="4"/><text x="89.4546%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="89.1862%" y="117" width="0.0245%" height="15" fill="rgb(222,198,25)" fg:x="14532" fg:w="4"/><text x="89.4792%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="89.2108%" y="117" width="0.0921%" height="15" fill="rgb(211,99,13)" fg:x="14536" fg:w="15"/><text x="89.5037%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="89.3028%" y="117" width="0.0921%" height="15" fill="rgb(232,111,31)" fg:x="14551" fg:w="15"/><text x="89.5958%" y="127.50"></text></g><g><title>rec (498 instructions, 3.06%)</title><rect x="87.5660%" y="133" width="3.0563%" height="15" fill="rgb(245,82,37)" fg:x="14268" fg:w="498"/><text x="87.8589%" y="143.50">rec</text></g><g><title>leaf (502 instructions, 3.08%)</title><rect x="87.5660%" y="149" width="3.0809%" height="15" fill="rgb(227,149,46)" fg:x="14268" fg:w="502"/><text x="87.8589%" y="159.50">le..</text></g><g><title>recursiveReplace (1,291 instructions, 7.92%)</title><rect x="83.0490%" y="165" width="7.9232%" height="15" fill="rgb(218,36,50)" fg:x="13532" fg:w="1291"/><text x="83.3419%" y="175.50">recursive..</text></g><g><title>put.1 (1,431 instructions, 8.78%)</title><rect x="82.5948%" y="181" width="8.7824%" height="15" fill="rgb(226,80,48)" fg:x="13458" fg:w="1431"/><text x="82.8878%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="91.3772%" y="181" width="0.1412%" height="15" fill="rgb(238,224,15)" fg:x="14889" fg:w="23"/><text x="91.6702%" y="191.50"></text></g><g><title>account_put (2,298 instructions, 14.10%)</title><rect x="77.4948%" y="197" width="14.1034%" height="15" fill="rgb(241,136,10)" fg:x="12627" fg:w="2298"/><text x="77.7878%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="91.5981%" y="181" width="0.2025%" height="15" fill="rgb(208,32,45)" fg:x="14925" fg:w="33"/><text x="91.8911%" y="191.50"></text></g><g><title>memcpy (76 instructions, 0.47%)</title><rect x="91.8007%" y="181" width="0.4664%" height="15" fill="rgb(207,135,9)" fg:x="14958" fg:w="76"/><text x="92.0936%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="92.2671%" y="181" width="0.2025%" height="15" fill="rgb(206,86,44)" fg:x="15034" fg:w="33"/><text x="92.5601%" y="191.50"></text></g><g><title>leb128_encode (9 instructions, 0.06%)</title><rect x="92.4696%" y="181" width="0.0552%" height="15" fill="rgb(245,177,15)" fg:x="15067" fg:w="9"/><text x="92.7626%" y="191.50"></text></g><g><title>reply_with_data (43 instructions, 0.26%)</title><rect x="92.5249%" y="181" width="0.2639%" height="15" fill="rgb(206,64,50)" fg:x="15076" fg:w="43"/><text x="92.8178%" y="191.50"></text></g><g><title>$lambda.35 (300 instructions, 1.84%)</title><rect x="91.5981%" y="197" width="1.8412%" height="15" fill="rgb(234,36,40)" fg:x="14925" fg:w="300"/><text x="91.8911%" y="207.50"></text></g><g><title>$lambda.2 (12,006 instructions, 73.68%)</title><rect x="20.5290%" y="213" width="73.6836%" height="15" fill="rgb(213,64,8)" fg:x="3345" fg:w="12006"/><text x="20.8220%" y="223.50">$lambda.2</text></g><g><title>schedule_copying_gc (45 instructions, 0.28%)</title><rect x="94.2126%" y="213" width="0.2762%" height="15" fill="rgb(210,75,36)" fg:x="15351" fg:w="45"/><text x="94.5056%" y="223.50"></text></g><g><title>trans_state4 (13 instructions, 0.08%)</title><rect x="94.4888%" y="213" width="0.0798%" height="15" fill="rgb(229,88,21)" fg:x="15396" fg:w="13"/><text x="94.7817%" y="223.50"></text></g><g><title>all (16,294 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(252,204,47)" fg:x="0" fg:w="16294"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (16,294 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(208,77,27)" fg:x="0" fg:w="16294"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>