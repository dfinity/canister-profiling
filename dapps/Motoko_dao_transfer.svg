<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="18236"><g><title>trans_state5 (8 instructions, 0.04%)</title><rect x="0.0000%" y="213" width="0.0439%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.16%)</title><rect x="0.0439%" y="213" width="0.1645%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="30"/><text x="0.3368%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.25%)</title><rect x="0.2084%" y="197" width="0.2522%" height="15" fill="rgb(221,193,54)" fg:x="38" fg:w="46"/><text x="0.5013%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.16%)</title><rect x="0.4606%" y="197" width="0.1645%" height="15" fill="rgb(248,212,6)" fg:x="84" fg:w="30"/><text x="0.7536%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="0.6251%" y="197" width="0.3290%" height="15" fill="rgb(208,68,35)" fg:x="114" fg:w="60"/><text x="0.9181%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.25%)</title><rect x="0.9542%" y="197" width="0.2522%" height="15" fill="rgb(232,128,0)" fg:x="174" fg:w="46"/><text x="1.2471%" y="207.50"></text></g><g><title>leb128_decode (122 instructions, 0.67%)</title><rect x="1.2064%" y="197" width="0.6690%" height="15" fill="rgb(207,160,47)" fg:x="220" fg:w="122"/><text x="1.4994%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="1.8754%" y="197" width="0.3290%" height="15" fill="rgb(228,23,34)" fg:x="342" fg:w="60"/><text x="2.1684%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.09%)</title><rect x="2.2044%" y="197" width="1.0858%" height="15" fill="rgb(218,30,26)" fg:x="402" fg:w="198"/><text x="2.4974%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="3.2902%" y="197" width="0.3290%" height="15" fill="rgb(220,122,19)" fg:x="600" fg:w="60"/><text x="3.5832%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="3.6192%" y="197" width="0.3290%" height="15" fill="rgb(250,228,42)" fg:x="660" fg:w="60"/><text x="3.9122%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.25%)</title><rect x="3.9482%" y="197" width="0.2522%" height="15" fill="rgb(240,193,28)" fg:x="720" fg:w="46"/><text x="4.2412%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.09%)</title><rect x="4.2005%" y="197" width="1.0858%" height="15" fill="rgb(216,20,37)" fg:x="766" fg:w="198"/><text x="4.4935%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="5.2862%" y="197" width="0.3290%" height="15" fill="rgb(206,188,39)" fg:x="964" fg:w="60"/><text x="5.5792%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="5.6153%" y="197" width="0.3290%" height="15" fill="rgb(217,207,13)" fg:x="1024" fg:w="60"/><text x="5.9082%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="5.9443%" y="197" width="0.3290%" height="15" fill="rgb(231,73,38)" fg:x="1084" fg:w="60"/><text x="6.2373%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.25%)</title><rect x="6.2733%" y="197" width="0.2522%" height="15" fill="rgb(225,20,46)" fg:x="1144" fg:w="46"/><text x="6.5663%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="6.5256%" y="197" width="0.3290%" height="15" fill="rgb(210,31,41)" fg:x="1190" fg:w="60"/><text x="6.8185%" y="207.50"></text></g><g><title>parse_idl_header (1,569 instructions, 8.60%)</title><rect x="0.2084%" y="213" width="8.6039%" height="15" fill="rgb(221,200,47)" fg:x="38" fg:w="1569"/><text x="0.5013%" y="223.50">parse_idl_..</text></g><g><title>memset (3 instructions, 0.02%)</title><rect x="8.8122%" y="197" width="0.0165%" height="15" fill="rgb(226,26,5)" fg:x="1607" fg:w="3"/><text x="9.1052%" y="207.50"></text></g><g><title>idl_sub_buf_init (6 instructions, 0.03%)</title><rect x="8.8122%" y="213" width="0.0329%" height="15" fill="rgb(249,33,26)" fg:x="1607" fg:w="6"/><text x="9.1052%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.25%)</title><rect x="8.8451%" y="213" width="0.2522%" height="15" fill="rgb(235,183,28)" fg:x="1613" fg:w="46"/><text x="9.1381%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="9.0974%" y="213" width="0.3290%" height="15" fill="rgb(221,5,38)" fg:x="1659" fg:w="60"/><text x="9.3904%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="9.4264%" y="213" width="0.3290%" height="15" fill="rgb(247,18,42)" fg:x="1719" fg:w="60"/><text x="9.7194%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.25%)</title><rect x="9.7554%" y="213" width="0.2522%" height="15" fill="rgb(241,131,45)" fg:x="1779" fg:w="46"/><text x="10.0484%" y="223.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="10.0077%" y="213" width="0.1206%" height="15" fill="rgb(249,31,29)" fg:x="1825" fg:w="22"/><text x="10.3006%" y="223.50"></text></g><g><title>leb128_decode (122 instructions, 0.67%)</title><rect x="10.1283%" y="197" width="0.6690%" height="15" fill="rgb(225,111,53)" fg:x="1847" fg:w="122"/><text x="10.4213%" y="207.50"></text></g><g><title>find_field (149 instructions, 0.82%)</title><rect x="10.1283%" y="213" width="0.8171%" height="15" fill="rgb(238,160,17)" fg:x="1847" fg:w="149"/><text x="10.4213%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="10.9454%" y="213" width="0.3290%" height="15" fill="rgb(214,148,48)" fg:x="1996" fg:w="60"/><text x="11.2384%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.25%)</title><rect x="11.2744%" y="197" width="0.2522%" height="15" fill="rgb(232,36,49)" fg:x="2056" fg:w="46"/><text x="11.5674%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.16%)</title><rect x="11.5267%" y="197" width="0.1645%" height="15" fill="rgb(209,103,24)" fg:x="2102" fg:w="30"/><text x="11.8196%" y="207.50"></text></g><g><title>memcpy (181 instructions, 0.99%)</title><rect x="11.6912%" y="197" width="0.9925%" height="15" fill="rgb(229,88,8)" fg:x="2132" fg:w="181"/><text x="11.9841%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (332 instructions, 1.82%)</title><rect x="11.2744%" y="213" width="1.8206%" height="15" fill="rgb(213,181,19)" fg:x="2056" fg:w="332"/><text x="11.5674%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.09%)</title><rect x="13.0950%" y="197" width="1.0858%" height="15" fill="rgb(254,191,54)" fg:x="2388" fg:w="198"/><text x="13.3879%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.23%)</title><rect x="13.0950%" y="213" width="1.2338%" height="15" fill="rgb(241,83,37)" fg:x="2388" fg:w="225"/><text x="13.3879%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="14.3288%" y="213" width="0.3290%" height="15" fill="rgb(233,36,39)" fg:x="2613" fg:w="60"/><text x="14.6218%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="14.6578%" y="197" width="0.3290%" height="15" fill="rgb(226,3,54)" fg:x="2673" fg:w="60"/><text x="14.9508%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.25%)</title><rect x="14.9868%" y="197" width="0.2522%" height="15" fill="rgb(245,192,40)" fg:x="2733" fg:w="46"/><text x="15.2798%" y="207.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="15.2391%" y="197" width="0.1206%" height="15" fill="rgb(238,167,29)" fg:x="2779" fg:w="22"/><text x="15.5321%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.09%)</title><rect x="15.3597%" y="181" width="1.0858%" height="15" fill="rgb(232,182,51)" fg:x="2801" fg:w="198"/><text x="15.6527%" y="191.50"></text></g><g><title>find_field (225 instructions, 1.23%)</title><rect x="15.3597%" y="197" width="1.2338%" height="15" fill="rgb(231,60,39)" fg:x="2801" fg:w="225"/><text x="15.6527%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.33%)</title><rect x="16.5936%" y="197" width="0.3290%" height="15" fill="rgb(208,69,12)" fg:x="3026" fg:w="60"/><text x="16.8865%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (55 instructions, 0.30%)</title><rect x="16.9226%" y="181" width="0.3016%" height="15" fill="rgb(235,93,37)" fg:x="3086" fg:w="55"/><text x="17.2155%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (99 instructions, 0.54%)</title><rect x="16.9226%" y="197" width="0.5429%" height="15" fill="rgb(213,116,39)" fg:x="3086" fg:w="99"/><text x="17.2155%" y="207.50"></text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="17.4655%" y="197" width="0.0219%" height="15" fill="rgb(222,207,29)" fg:x="3185" fg:w="4"/><text x="17.7584%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (652 instructions, 3.58%)</title><rect x="14.6578%" y="213" width="3.5753%" height="15" fill="rgb(206,96,30)" fg:x="2673" fg:w="652"/><text x="14.9508%" y="223.50">@de..</text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="18.2332%" y="213" width="0.0219%" height="15" fill="rgb(218,138,4)" fg:x="3325" fg:w="4"/><text x="18.5261%" y="223.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="18.2551%" y="213" width="0.1206%" height="15" fill="rgb(250,191,14)" fg:x="3329" fg:w="22"/><text x="18.5481%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.16%)</title><rect x="18.3757%" y="197" width="0.1645%" height="15" fill="rgb(239,60,40)" fg:x="3351" fg:w="30"/><text x="18.6687%" y="207.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="18.5403%" y="197" width="0.1206%" height="15" fill="rgb(206,27,48)" fg:x="3381" fg:w="22"/><text x="18.8332%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="18.6609%" y="197" width="0.0877%" height="15" fill="rgb(225,35,8)" fg:x="3403" fg:w="16"/><text x="18.9539%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.09%)</title><rect x="18.7486%" y="165" width="4.0908%" height="15" fill="rgb(250,213,24)" fg:x="3419" fg:w="746"/><text x="19.0416%" y="175.50">com..</text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="22.8394%" y="149" width="0.1206%" height="15" fill="rgb(247,123,22)" fg:x="4165" fg:w="22"/><text x="23.1324%" y="159.50"></text></g><g><title>box_i32 (37 instructions, 0.20%)</title><rect x="22.8394%" y="165" width="0.2029%" height="15" fill="rgb(231,138,38)" fg:x="4165" fg:w="37"/><text x="23.1324%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="23.0423%" y="165" width="0.1206%" height="15" fill="rgb(231,145,46)" fg:x="4202" fg:w="22"/><text x="23.3353%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="23.1630%" y="149" width="0.1206%" height="15" fill="rgb(251,118,11)" fg:x="4224" fg:w="22"/><text x="23.4559%" y="159.50"></text></g><g><title>box_i32 (37 instructions, 0.20%)</title><rect x="23.1630%" y="165" width="0.2029%" height="15" fill="rgb(217,147,25)" fg:x="4224" fg:w="37"/><text x="23.4559%" y="175.50"></text></g><g><title>account_key (870 instructions, 4.77%)</title><rect x="18.7486%" y="181" width="4.7708%" height="15" fill="rgb(247,81,37)" fg:x="3419" fg:w="870"/><text x="19.0416%" y="191.50">acco..</text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="23.5194%" y="149" width="0.1206%" height="15" fill="rgb(209,12,38)" fg:x="4289" fg:w="22"/><text x="23.8124%" y="159.50"></text></g><g><title>equalKey (37 instructions, 0.20%)</title><rect x="23.5194%" y="165" width="0.2029%" height="15" fill="rgb(227,1,9)" fg:x="4289" fg:w="37"/><text x="23.8124%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="23.7223%" y="165" width="0.1206%" height="15" fill="rgb(248,47,43)" fg:x="4326" fg:w="22"/><text x="24.0153%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="23.8429%" y="149" width="0.0877%" height="15" fill="rgb(221,10,30)" fg:x="4348" fg:w="16"/><text x="24.1359%" y="159.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="23.9307%" y="149" width="0.1206%" height="15" fill="rgb(210,229,1)" fg:x="4364" fg:w="22"/><text x="24.2237%" y="159.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="24.0513%" y="149" width="0.1206%" height="15" fill="rgb(222,148,37)" fg:x="4386" fg:w="22"/><text x="24.3443%" y="159.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="24.1720%" y="133" width="0.0768%" height="15" fill="rgb(234,67,33)" fg:x="4408" fg:w="14"/><text x="24.4649%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="24.2487%" y="117" width="0.0877%" height="15" fill="rgb(247,98,35)" fg:x="4422" fg:w="16"/><text x="24.5417%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="24.3365%" y="117" width="0.0877%" height="15" fill="rgb(247,138,52)" fg:x="4438" fg:w="16"/><text x="24.6294%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="24.4242%" y="117" width="0.0877%" height="15" fill="rgb(213,79,30)" fg:x="4454" fg:w="16"/><text x="24.7172%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="24.5120%" y="117" width="0.0877%" height="15" fill="rgb(246,177,23)" fg:x="4470" fg:w="16"/><text x="24.8049%" y="127.50"></text></g><g><title>Blob.compare_eq (679 instructions, 3.72%)</title><rect x="24.5997%" y="101" width="3.7234%" height="15" fill="rgb(230,62,27)" fg:x="4486" fg:w="679"/><text x="24.8927%" y="111.50">Blo..</text></g><g><title>equal.1 (682 instructions, 3.74%)</title><rect x="24.5997%" y="117" width="3.7399%" height="15" fill="rgb(216,154,8)" fg:x="4486" fg:w="682"/><text x="24.8927%" y="127.50">equ..</text></g><g><title>anon-func-192.5 (781 instructions, 4.28%)</title><rect x="24.2487%" y="133" width="4.2827%" height="15" fill="rgb(244,35,45)" fg:x="4422" fg:w="781"/><text x="24.5417%" y="143.50">anon..</text></g><g><title>opt_inject (14 instructions, 0.08%)</title><rect x="28.5315%" y="133" width="0.0768%" height="15" fill="rgb(251,115,12)" fg:x="5203" fg:w="14"/><text x="28.8244%" y="143.50"></text></g><g><title>rec.5 (853 instructions, 4.68%)</title><rect x="24.1720%" y="149" width="4.6776%" height="15" fill="rgb(240,54,50)" fg:x="4408" fg:w="853"/><text x="24.4649%" y="159.50">rec.5</text></g><g><title>rec.4 (980 instructions, 5.37%)</title><rect x="23.8429%" y="165" width="5.3740%" height="15" fill="rgb(233,84,52)" fg:x="4348" fg:w="980"/><text x="24.1359%" y="175.50">rec.4</text></g><g><title>get.2 (1,065 instructions, 5.84%)</title><rect x="23.5194%" y="181" width="5.8401%" height="15" fill="rgb(207,117,47)" fg:x="4289" fg:w="1065"/><text x="23.8124%" y="191.50">get.2</text></g><g><title>account_get (1,941 instructions, 10.64%)</title><rect x="18.7486%" y="197" width="10.6438%" height="15" fill="rgb(249,43,39)" fg:x="3419" fg:w="1941"/><text x="19.0416%" y="207.50">account_get</text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="29.3924%" y="197" width="0.0768%" height="15" fill="rgb(209,38,44)" fg:x="5360" fg:w="14"/><text x="29.6854%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="29.4692%" y="197" width="0.0877%" height="15" fill="rgb(236,212,23)" fg:x="5374" fg:w="16"/><text x="29.7622%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="29.5569%" y="197" width="0.0877%" height="15" fill="rgb(242,79,21)" fg:x="5390" fg:w="16"/><text x="29.8499%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="29.6447%" y="197" width="0.0877%" height="15" fill="rgb(211,96,35)" fg:x="5406" fg:w="16"/><text x="29.9376%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="29.7324%" y="197" width="0.0877%" height="15" fill="rgb(253,215,40)" fg:x="5422" fg:w="16"/><text x="30.0254%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="29.8201%" y="197" width="0.0877%" height="15" fill="rgb(211,81,21)" fg:x="5438" fg:w="16"/><text x="30.1131%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.13%)</title><rect x="29.9079%" y="197" width="0.1316%" height="15" fill="rgb(208,190,38)" fg:x="5454" fg:w="24"/><text x="30.2008%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h6355501f33786335 (34 instructions, 0.19%)</title><rect x="30.0395%" y="133" width="0.1864%" height="15" fill="rgb(235,213,38)" fg:x="5478" fg:w="34"/><text x="30.3325%" y="143.50"></text></g><g><title>memset (233 instructions, 1.28%)</title><rect x="30.2259%" y="133" width="1.2777%" height="15" fill="rgb(237,122,38)" fg:x="5512" fg:w="233"/><text x="30.5189%" y="143.50"></text></g><g><title>mp_calloc (291 instructions, 1.60%)</title><rect x="30.0395%" y="149" width="1.5957%" height="15" fill="rgb(244,218,35)" fg:x="5478" fg:w="291"/><text x="30.3325%" y="159.50"></text></g><g><title>mp_init (306 instructions, 1.68%)</title><rect x="30.0395%" y="165" width="1.6780%" height="15" fill="rgb(240,68,47)" fg:x="5478" fg:w="306"/><text x="30.3325%" y="175.50"></text></g><g><title>mp_set_u64 (489 instructions, 2.68%)</title><rect x="31.7175%" y="165" width="2.6815%" height="15" fill="rgb(210,16,53)" fg:x="5784" fg:w="489"/><text x="32.0105%" y="175.50">m..</text></g><g><title>motoko_rts::bigint::persist_bigint::hfac9333f501b1524 (30 instructions, 0.16%)</title><rect x="34.3990%" y="165" width="0.1645%" height="15" fill="rgb(235,124,12)" fg:x="6273" fg:w="30"/><text x="34.6920%" y="175.50"></text></g><g><title>bigint_of_int64 (874 instructions, 4.79%)</title><rect x="30.0395%" y="181" width="4.7927%" height="15" fill="rgb(224,169,11)" fg:x="5478" fg:w="874"/><text x="30.3325%" y="191.50">bigi..</text></g><g><title>mp_cmp_mag (11 instructions, 0.06%)</title><rect x="34.8322%" y="165" width="0.0603%" height="15" fill="rgb(250,166,2)" fg:x="6352" fg:w="11"/><text x="35.1252%" y="175.50"></text></g><g><title>mp_cmp (25 instructions, 0.14%)</title><rect x="34.8322%" y="181" width="0.1371%" height="15" fill="rgb(242,216,29)" fg:x="6352" fg:w="25"/><text x="35.1252%" y="191.50"></text></g><g><title>B_lt (939 instructions, 5.15%)</title><rect x="30.0395%" y="197" width="5.1492%" height="15" fill="rgb(230,116,27)" fg:x="5478" fg:w="939"/><text x="30.3325%" y="207.50">B_lt</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="35.1886%" y="197" width="0.0877%" height="15" fill="rgb(228,99,48)" fg:x="6417" fg:w="16"/><text x="35.4816%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h6355501f33786335 (34 instructions, 0.19%)</title><rect x="35.2764%" y="133" width="0.1864%" height="15" fill="rgb(253,11,6)" fg:x="6433" fg:w="34"/><text x="35.5693%" y="143.50"></text></g><g><title>memset (233 instructions, 1.28%)</title><rect x="35.4628%" y="133" width="1.2777%" height="15" fill="rgb(247,143,39)" fg:x="6467" fg:w="233"/><text x="35.7558%" y="143.50"></text></g><g><title>mp_calloc (291 instructions, 1.60%)</title><rect x="35.2764%" y="149" width="1.5957%" height="15" fill="rgb(236,97,10)" fg:x="6433" fg:w="291"/><text x="35.5693%" y="159.50"></text></g><g><title>mp_init (306 instructions, 1.68%)</title><rect x="35.2764%" y="165" width="1.6780%" height="15" fill="rgb(233,208,19)" fg:x="6433" fg:w="306"/><text x="35.5693%" y="175.50"></text></g><g><title>mp_set_u64 (489 instructions, 2.68%)</title><rect x="36.9544%" y="165" width="2.6815%" height="15" fill="rgb(216,164,2)" fg:x="6739" fg:w="489"/><text x="37.2473%" y="175.50">m..</text></g><g><title>motoko_rts::bigint::persist_bigint::hfac9333f501b1524 (30 instructions, 0.16%)</title><rect x="39.6359%" y="165" width="0.1645%" height="15" fill="rgb(220,129,5)" fg:x="7228" fg:w="30"/><text x="39.9289%" y="175.50"></text></g><g><title>bigint_of_int64 (874 instructions, 4.79%)</title><rect x="35.2764%" y="181" width="4.7927%" height="15" fill="rgb(242,17,10)" fg:x="6433" fg:w="874"/><text x="35.5693%" y="191.50">bigi..</text></g><g><title>motoko_rts::bigint::mp_alloc::h6355501f33786335 (34 instructions, 0.19%)</title><rect x="40.0691%" y="149" width="0.1864%" height="15" fill="rgb(242,107,0)" fg:x="7307" fg:w="34"/><text x="40.3621%" y="159.50"></text></g><g><title>memset (233 instructions, 1.28%)</title><rect x="40.2555%" y="149" width="1.2777%" height="15" fill="rgb(251,28,31)" fg:x="7341" fg:w="233"/><text x="40.5485%" y="159.50"></text></g><g><title>mp_calloc (291 instructions, 1.60%)</title><rect x="40.0691%" y="165" width="1.5957%" height="15" fill="rgb(233,223,10)" fg:x="7307" fg:w="291"/><text x="40.3621%" y="175.50"></text></g><g><title>mp_init (306 instructions, 1.68%)</title><rect x="40.0691%" y="181" width="1.6780%" height="15" fill="rgb(215,21,27)" fg:x="7307" fg:w="306"/><text x="40.3621%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.06%)</title><rect x="41.7471%" y="165" width="0.0603%" height="15" fill="rgb(232,23,21)" fg:x="7613" fg:w="11"/><text x="42.0401%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.12%)</title><rect x="41.8074%" y="149" width="0.1206%" height="15" fill="rgb(244,5,23)" fg:x="7624" fg:w="22"/><text x="42.1004%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.73%)</title><rect x="41.8074%" y="165" width="0.7293%" height="15" fill="rgb(226,81,46)" fg:x="7624" fg:w="133"/><text x="42.1004%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 0.90%)</title><rect x="41.7471%" y="181" width="0.9048%" height="15" fill="rgb(247,70,30)" fg:x="7613" fg:w="165"/><text x="42.0401%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hfac9333f501b1524 (30 instructions, 0.16%)</title><rect x="42.6519%" y="181" width="0.1645%" height="15" fill="rgb(212,68,19)" fg:x="7778" fg:w="30"/><text x="42.9449%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 0.91%)</title><rect x="42.8164%" y="165" width="0.9103%" height="15" fill="rgb(240,187,13)" fg:x="7808" fg:w="166"/><text x="43.1094%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.09%)</title><rect x="42.8164%" y="181" width="1.0912%" height="15" fill="rgb(223,113,26)" fg:x="7808" fg:w="199"/><text x="43.1094%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h6355501f33786335 (34 instructions, 0.19%)</title><rect x="44.4341%" y="133" width="0.1864%" height="15" fill="rgb(206,192,2)" fg:x="8103" fg:w="34"/><text x="44.7271%" y="143.50"></text></g><g><title>memset (233 instructions, 1.28%)</title><rect x="44.6205%" y="133" width="1.2777%" height="15" fill="rgb(241,108,4)" fg:x="8137" fg:w="233"/><text x="44.9135%" y="143.50"></text></g><g><title>mp_calloc (291 instructions, 1.60%)</title><rect x="44.4341%" y="149" width="1.5957%" height="15" fill="rgb(247,173,49)" fg:x="8103" fg:w="291"/><text x="44.7271%" y="159.50"></text></g><g><title>mp_init (306 instructions, 1.68%)</title><rect x="44.4341%" y="165" width="1.6780%" height="15" fill="rgb(224,114,35)" fg:x="8103" fg:w="306"/><text x="44.7271%" y="175.50"></text></g><g><title>mp_set_u64 (489 instructions, 2.68%)</title><rect x="46.1121%" y="165" width="2.6815%" height="15" fill="rgb(245,159,27)" fg:x="8409" fg:w="489"/><text x="46.4051%" y="175.50">m..</text></g><g><title>motoko_rts::bigint::persist_bigint::hfac9333f501b1524 (30 instructions, 0.16%)</title><rect x="48.7936%" y="165" width="0.1645%" height="15" fill="rgb(245,172,44)" fg:x="8898" fg:w="30"/><text x="49.0866%" y="175.50"></text></g><g><title>bigint_of_int64 (874 instructions, 4.79%)</title><rect x="44.4341%" y="181" width="4.7927%" height="15" fill="rgb(236,23,11)" fg:x="8103" fg:w="874"/><text x="44.7271%" y="191.50">bigi..</text></g><g><title>motoko_rts::bigint::mp_alloc::h6355501f33786335 (34 instructions, 0.19%)</title><rect x="49.2268%" y="149" width="0.1864%" height="15" fill="rgb(205,117,38)" fg:x="8977" fg:w="34"/><text x="49.5198%" y="159.50"></text></g><g><title>memset (233 instructions, 1.28%)</title><rect x="49.4132%" y="149" width="1.2777%" height="15" fill="rgb(237,72,25)" fg:x="9011" fg:w="233"/><text x="49.7062%" y="159.50"></text></g><g><title>mp_calloc (291 instructions, 1.60%)</title><rect x="49.2268%" y="165" width="1.5957%" height="15" fill="rgb(244,70,9)" fg:x="8977" fg:w="291"/><text x="49.5198%" y="175.50"></text></g><g><title>mp_init (306 instructions, 1.68%)</title><rect x="49.2268%" y="181" width="1.6780%" height="15" fill="rgb(217,125,39)" fg:x="8977" fg:w="306"/><text x="49.5198%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.06%)</title><rect x="50.9048%" y="165" width="0.0603%" height="15" fill="rgb(235,36,10)" fg:x="9283" fg:w="11"/><text x="51.1978%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.12%)</title><rect x="50.9651%" y="149" width="0.1206%" height="15" fill="rgb(251,123,47)" fg:x="9294" fg:w="22"/><text x="51.2581%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.73%)</title><rect x="50.9651%" y="165" width="0.7293%" height="15" fill="rgb(221,13,13)" fg:x="9294" fg:w="133"/><text x="51.2581%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 0.90%)</title><rect x="50.9048%" y="181" width="0.9048%" height="15" fill="rgb(238,131,9)" fg:x="9283" fg:w="165"/><text x="51.1978%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hfac9333f501b1524 (30 instructions, 0.16%)</title><rect x="51.8096%" y="181" width="0.1645%" height="15" fill="rgb(211,50,8)" fg:x="9448" fg:w="30"/><text x="52.1026%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 0.91%)</title><rect x="51.9741%" y="165" width="0.9103%" height="15" fill="rgb(245,182,24)" fg:x="9478" fg:w="166"/><text x="52.2671%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.09%)</title><rect x="51.9741%" y="181" width="1.0912%" height="15" fill="rgb(242,14,37)" fg:x="9478" fg:w="199"/><text x="52.2671%" y="191.50"></text></g><g><title>B_sub (3,340 instructions, 18.32%)</title><rect x="35.2764%" y="197" width="18.3154%" height="15" fill="rgb(246,228,12)" fg:x="6433" fg:w="3340"/><text x="35.5693%" y="207.50">B_sub</text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="53.5918%" y="197" width="0.1206%" height="15" fill="rgb(213,55,15)" fg:x="9773" fg:w="22"/><text x="53.8848%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.09%)</title><rect x="53.7124%" y="165" width="4.0908%" height="15" fill="rgb(209,9,3)" fg:x="9795" fg:w="746"/><text x="54.0054%" y="175.50">com..</text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="57.8032%" y="149" width="0.1206%" height="15" fill="rgb(230,59,30)" fg:x="10541" fg:w="22"/><text x="58.0962%" y="159.50"></text></g><g><title>box_i32 (37 instructions, 0.20%)</title><rect x="57.8032%" y="165" width="0.2029%" height="15" fill="rgb(209,121,21)" fg:x="10541" fg:w="37"/><text x="58.0962%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="58.0061%" y="165" width="0.1206%" height="15" fill="rgb(220,109,13)" fg:x="10578" fg:w="22"/><text x="58.2991%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="58.1268%" y="149" width="0.1206%" height="15" fill="rgb(232,18,1)" fg:x="10600" fg:w="22"/><text x="58.4198%" y="159.50"></text></g><g><title>box_i32 (37 instructions, 0.20%)</title><rect x="58.1268%" y="165" width="0.2029%" height="15" fill="rgb(215,41,42)" fg:x="10600" fg:w="37"/><text x="58.4198%" y="175.50"></text></g><g><title>account_key (870 instructions, 4.77%)</title><rect x="53.7124%" y="181" width="4.7708%" height="15" fill="rgb(224,123,36)" fg:x="9795" fg:w="870"/><text x="54.0054%" y="191.50">acco..</text></g><g><title>opt_inject (14 instructions, 0.08%)</title><rect x="58.4832%" y="165" width="0.0768%" height="15" fill="rgb(240,125,3)" fg:x="10665" fg:w="14"/><text x="58.7762%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="58.5600%" y="165" width="0.1206%" height="15" fill="rgb(205,98,50)" fg:x="10679" fg:w="22"/><text x="58.8530%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="58.6806%" y="149" width="0.1206%" height="15" fill="rgb(205,185,37)" fg:x="10701" fg:w="22"/><text x="58.9736%" y="159.50"></text></g><g><title>equalKey (37 instructions, 0.20%)</title><rect x="58.6806%" y="165" width="0.2029%" height="15" fill="rgb(238,207,15)" fg:x="10701" fg:w="37"/><text x="58.9736%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="58.8835%" y="165" width="0.1206%" height="15" fill="rgb(213,199,42)" fg:x="10738" fg:w="22"/><text x="59.1765%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="59.0042%" y="149" width="0.0877%" height="15" fill="rgb(235,201,11)" fg:x="10760" fg:w="16"/><text x="59.2971%" y="159.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="59.0919%" y="133" width="0.1206%" height="15" fill="rgb(207,46,11)" fg:x="10776" fg:w="22"/><text x="59.3849%" y="143.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="59.2125%" y="133" width="0.1206%" height="15" fill="rgb(241,35,35)" fg:x="10798" fg:w="22"/><text x="59.5055%" y="143.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="59.3332%" y="117" width="0.0768%" height="15" fill="rgb(243,32,47)" fg:x="10820" fg:w="14"/><text x="59.6262%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="59.4100%" y="101" width="0.0877%" height="15" fill="rgb(247,202,23)" fg:x="10834" fg:w="16"/><text x="59.7029%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="59.4977%" y="101" width="0.0877%" height="15" fill="rgb(219,102,11)" fg:x="10850" fg:w="16"/><text x="59.7907%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="59.5854%" y="101" width="0.0877%" height="15" fill="rgb(243,110,44)" fg:x="10866" fg:w="16"/><text x="59.8784%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="59.6732%" y="101" width="0.0877%" height="15" fill="rgb(222,74,54)" fg:x="10882" fg:w="16"/><text x="59.9661%" y="111.50"></text></g><g><title>Blob.compare_eq (679 instructions, 3.72%)</title><rect x="59.7609%" y="85" width="3.7234%" height="15" fill="rgb(216,99,12)" fg:x="10898" fg:w="679"/><text x="60.0539%" y="95.50">Blo..</text></g><g><title>equal.1 (682 instructions, 3.74%)</title><rect x="59.7609%" y="101" width="3.7399%" height="15" fill="rgb(226,22,26)" fg:x="10898" fg:w="682"/><text x="60.0539%" y="111.50">equ..</text></g><g><title>anon-func-192.5 (781 instructions, 4.28%)</title><rect x="59.4100%" y="117" width="4.2827%" height="15" fill="rgb(217,163,10)" fg:x="10834" fg:w="781"/><text x="59.7029%" y="127.50">anon..</text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="63.6927%" y="117" width="0.0768%" height="15" fill="rgb(213,25,53)" fg:x="11615" fg:w="14"/><text x="63.9857%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="63.7695%" y="101" width="0.1206%" height="15" fill="rgb(252,105,26)" fg:x="11629" fg:w="22"/><text x="64.0624%" y="111.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="63.9724%" y="101" width="0.1206%" height="15" fill="rgb(220,39,43)" fg:x="11666" fg:w="22"/><text x="64.2653%" y="111.50"></text></g><g><title>to_2_tuple (74 instructions, 0.41%)</title><rect x="63.7695%" y="117" width="0.4058%" height="15" fill="rgb(229,68,48)" fg:x="11629" fg:w="74"/><text x="64.0624%" y="127.50"></text></g><g><title>opt_inject (14 instructions, 0.08%)</title><rect x="64.1753%" y="117" width="0.0768%" height="15" fill="rgb(252,8,32)" fg:x="11703" fg:w="14"/><text x="64.4682%" y="127.50"></text></g><g><title>opt_inject (14 instructions, 0.08%)</title><rect x="64.2520%" y="117" width="0.0768%" height="15" fill="rgb(223,20,43)" fg:x="11717" fg:w="14"/><text x="64.5450%" y="127.50"></text></g><g><title>rec.1 (979 instructions, 5.37%)</title><rect x="59.3332%" y="133" width="5.3685%" height="15" fill="rgb(229,81,49)" fg:x="10820" fg:w="979"/><text x="59.6262%" y="143.50">rec.1</text></g><g><title>replace.1 (1,064 instructions, 5.83%)</title><rect x="59.0919%" y="149" width="5.8346%" height="15" fill="rgb(236,28,36)" fg:x="10776" fg:w="1064"/><text x="59.3849%" y="159.50">replac..</text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="64.9265%" y="117" width="0.0768%" height="15" fill="rgb(249,185,26)" fg:x="11840" fg:w="14"/><text x="65.2195%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.05%)</title><rect x="65.0033%" y="117" width="0.0548%" height="15" fill="rgb(249,174,33)" fg:x="11854" fg:w="10"/><text x="65.2963%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.13%)</title><rect x="65.0581%" y="117" width="0.1316%" height="15" fill="rgb(233,201,37)" fg:x="11864" fg:w="24"/><text x="65.3511%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="65.1897%" y="117" width="0.0768%" height="15" fill="rgb(221,78,26)" fg:x="11888" fg:w="14"/><text x="65.4827%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.05%)</title><rect x="65.2665%" y="117" width="0.0548%" height="15" fill="rgb(250,127,30)" fg:x="11902" fg:w="10"/><text x="65.5595%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.13%)</title><rect x="65.3213%" y="117" width="0.1316%" height="15" fill="rgb(230,49,44)" fg:x="11912" fg:w="24"/><text x="65.6143%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="65.4530%" y="117" width="0.0768%" height="15" fill="rgb(229,67,23)" fg:x="11936" fg:w="14"/><text x="65.7459%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.05%)</title><rect x="65.5297%" y="117" width="0.0548%" height="15" fill="rgb(249,83,47)" fg:x="11950" fg:w="10"/><text x="65.8227%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.13%)</title><rect x="65.5846%" y="117" width="0.1316%" height="15" fill="rgb(215,43,3)" fg:x="11960" fg:w="24"/><text x="65.8775%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="65.7162%" y="117" width="0.0768%" height="15" fill="rgb(238,154,13)" fg:x="11984" fg:w="14"/><text x="66.0091%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.05%)</title><rect x="65.7929%" y="117" width="0.0548%" height="15" fill="rgb(219,56,2)" fg:x="11998" fg:w="10"/><text x="66.0859%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.13%)</title><rect x="65.8478%" y="117" width="0.1316%" height="15" fill="rgb(233,0,4)" fg:x="12008" fg:w="24"/><text x="66.1407%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="65.9794%" y="117" width="0.0219%" height="15" fill="rgb(235,30,7)" fg:x="12032" fg:w="4"/><text x="66.2724%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="66.0013%" y="117" width="0.0219%" height="15" fill="rgb(250,79,13)" fg:x="12036" fg:w="4"/><text x="66.2943%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="66.0233%" y="117" width="0.1206%" height="15" fill="rgb(211,146,34)" fg:x="12040" fg:w="22"/><text x="66.3162%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="66.1439%" y="117" width="0.1206%" height="15" fill="rgb(228,22,38)" fg:x="12062" fg:w="22"/><text x="66.4369%" y="127.50"></text></g><g><title>rec (423 instructions, 2.32%)</title><rect x="64.9265%" y="133" width="2.3196%" height="15" fill="rgb(235,168,5)" fg:x="11840" fg:w="423"/><text x="65.2195%" y="143.50">r..</text></g><g><title>leaf (427 instructions, 2.34%)</title><rect x="64.9265%" y="149" width="2.3415%" height="15" fill="rgb(221,155,16)" fg:x="11840" fg:w="427"/><text x="65.2195%" y="159.50">l..</text></g><g><title>rec.2 (1,558 instructions, 8.54%)</title><rect x="59.0042%" y="165" width="8.5435%" height="15" fill="rgb(215,215,53)" fg:x="10760" fg:w="1558"/><text x="59.2971%" y="175.50">rec.2</text></g><g><title>put.1 (1,701 instructions, 9.33%)</title><rect x="58.4832%" y="181" width="9.3277%" height="15" fill="rgb(223,4,10)" fg:x="10665" fg:w="1701"/><text x="58.7762%" y="191.50">put.1</text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="67.8109%" y="165" width="0.1206%" height="15" fill="rgb(234,103,6)" fg:x="12366" fg:w="22"/><text x="68.1039%" y="175.50"></text></g><g><title>to_2_tuple (37 instructions, 0.20%)</title><rect x="67.8109%" y="181" width="0.2029%" height="15" fill="rgb(227,97,0)" fg:x="12366" fg:w="37"/><text x="68.1039%" y="191.50"></text></g><g><title>account_put (2,621 instructions, 14.37%)</title><rect x="53.7124%" y="197" width="14.3727%" height="15" fill="rgb(234,150,53)" fg:x="9795" fg:w="2621"/><text x="54.0054%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="68.0851%" y="197" width="0.0877%" height="15" fill="rgb(228,201,54)" fg:x="12416" fg:w="16"/><text x="68.3781%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.09%)</title><rect x="68.1728%" y="165" width="4.0908%" height="15" fill="rgb(222,22,37)" fg:x="12432" fg:w="746"/><text x="68.4658%" y="175.50">com..</text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="72.2637%" y="149" width="0.1206%" height="15" fill="rgb(237,53,32)" fg:x="13178" fg:w="22"/><text x="72.5566%" y="159.50"></text></g><g><title>box_i32 (37 instructions, 0.20%)</title><rect x="72.2637%" y="165" width="0.2029%" height="15" fill="rgb(233,25,53)" fg:x="13178" fg:w="37"/><text x="72.5566%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="72.4665%" y="165" width="0.1206%" height="15" fill="rgb(210,40,34)" fg:x="13215" fg:w="22"/><text x="72.7595%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="72.5872%" y="149" width="0.1206%" height="15" fill="rgb(241,220,44)" fg:x="13237" fg:w="22"/><text x="72.8802%" y="159.50"></text></g><g><title>box_i32 (37 instructions, 0.20%)</title><rect x="72.5872%" y="165" width="0.2029%" height="15" fill="rgb(235,28,35)" fg:x="13237" fg:w="37"/><text x="72.8802%" y="175.50"></text></g><g><title>account_key (870 instructions, 4.77%)</title><rect x="68.1728%" y="181" width="4.7708%" height="15" fill="rgb(210,56,17)" fg:x="12432" fg:w="870"/><text x="68.4658%" y="191.50">acco..</text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="72.9436%" y="149" width="0.1206%" height="15" fill="rgb(224,130,29)" fg:x="13302" fg:w="22"/><text x="73.2366%" y="159.50"></text></g><g><title>equalKey (37 instructions, 0.20%)</title><rect x="72.9436%" y="165" width="0.2029%" height="15" fill="rgb(235,212,8)" fg:x="13302" fg:w="37"/><text x="73.2366%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="73.1465%" y="165" width="0.1206%" height="15" fill="rgb(223,33,50)" fg:x="13339" fg:w="22"/><text x="73.4395%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="73.2672%" y="149" width="0.0877%" height="15" fill="rgb(219,149,13)" fg:x="13361" fg:w="16"/><text x="73.5601%" y="159.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="73.3549%" y="149" width="0.1206%" height="15" fill="rgb(250,156,29)" fg:x="13377" fg:w="22"/><text x="73.6479%" y="159.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="73.4755%" y="149" width="0.1206%" height="15" fill="rgb(216,193,19)" fg:x="13399" fg:w="22"/><text x="73.7685%" y="159.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="73.5962%" y="133" width="0.0768%" height="15" fill="rgb(216,135,14)" fg:x="13421" fg:w="14"/><text x="73.8892%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="73.6730%" y="117" width="0.0877%" height="15" fill="rgb(241,47,5)" fg:x="13435" fg:w="16"/><text x="73.9659%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="73.7607%" y="117" width="0.0877%" height="15" fill="rgb(233,42,35)" fg:x="13451" fg:w="16"/><text x="74.0537%" y="127.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.31%)</title><rect x="73.6730%" y="133" width="0.3071%" height="15" fill="rgb(231,13,6)" fg:x="13435" fg:w="56"/><text x="73.9659%" y="143.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="73.9800%" y="117" width="0.0768%" height="15" fill="rgb(207,181,40)" fg:x="13491" fg:w="14"/><text x="74.2730%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="74.0568%" y="101" width="0.0877%" height="15" fill="rgb(254,173,49)" fg:x="13505" fg:w="16"/><text x="74.3498%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="74.1445%" y="101" width="0.0877%" height="15" fill="rgb(221,1,38)" fg:x="13521" fg:w="16"/><text x="74.4375%" y="111.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.31%)</title><rect x="74.0568%" y="117" width="0.3126%" height="15" fill="rgb(206,124,46)" fg:x="13505" fg:w="57"/><text x="74.3498%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="74.3694%" y="101" width="0.0768%" height="15" fill="rgb(249,21,11)" fg:x="13562" fg:w="14"/><text x="74.6623%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="74.4462%" y="85" width="0.0877%" height="15" fill="rgb(222,201,40)" fg:x="13576" fg:w="16"/><text x="74.7391%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="74.5339%" y="85" width="0.0877%" height="15" fill="rgb(235,61,29)" fg:x="13592" fg:w="16"/><text x="74.8269%" y="95.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.31%)</title><rect x="74.4462%" y="101" width="0.3126%" height="15" fill="rgb(219,207,3)" fg:x="13576" fg:w="57"/><text x="74.7391%" y="111.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="74.7587%" y="85" width="0.0768%" height="15" fill="rgb(222,56,46)" fg:x="13633" fg:w="14"/><text x="75.0517%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="74.8355%" y="69" width="0.0877%" height="15" fill="rgb(239,76,54)" fg:x="13647" fg:w="16"/><text x="75.1285%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="74.9232%" y="69" width="0.0877%" height="15" fill="rgb(231,124,27)" fg:x="13663" fg:w="16"/><text x="75.2162%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.31%)</title><rect x="74.8355%" y="85" width="0.3126%" height="15" fill="rgb(249,195,6)" fg:x="13647" fg:w="57"/><text x="75.1285%" y="95.50"></text></g><g><title>rec.5 (16 instructions, 0.09%)</title><rect x="75.1481%" y="85" width="0.0877%" height="15" fill="rgb(237,174,47)" fg:x="13704" fg:w="16"/><text x="75.4410%" y="95.50"></text></g><g><title>rec.5 (136 instructions, 0.75%)</title><rect x="74.7587%" y="101" width="0.7458%" height="15" fill="rgb(206,201,31)" fg:x="13633" fg:w="136"/><text x="75.0517%" y="111.50"></text></g><g><title>rec.5 (256 instructions, 1.40%)</title><rect x="74.3694%" y="117" width="1.4038%" height="15" fill="rgb(231,57,52)" fg:x="13562" fg:w="256"/><text x="74.6623%" y="127.50"></text></g><g><title>rec.5 (376 instructions, 2.06%)</title><rect x="73.9800%" y="133" width="2.0619%" height="15" fill="rgb(248,177,22)" fg:x="13491" fg:w="376"/><text x="74.2730%" y="143.50"></text></g><g><title>rec.5 (495 instructions, 2.71%)</title><rect x="73.5962%" y="149" width="2.7144%" height="15" fill="rgb(215,211,37)" fg:x="13421" fg:w="495"/><text x="73.8892%" y="159.50">r..</text></g><g><title>rec.4 (622 instructions, 3.41%)</title><rect x="73.2672%" y="165" width="3.4108%" height="15" fill="rgb(241,128,51)" fg:x="13361" fg:w="622"/><text x="73.5601%" y="175.50">re..</text></g><g><title>get.2 (707 instructions, 3.88%)</title><rect x="72.9436%" y="181" width="3.8769%" height="15" fill="rgb(227,165,31)" fg:x="13302" fg:w="707"/><text x="73.2366%" y="191.50">get..</text></g><g><title>account_get (1,583 instructions, 8.68%)</title><rect x="68.1728%" y="197" width="8.6806%" height="15" fill="rgb(228,167,24)" fg:x="12432" fg:w="1583"/><text x="68.4658%" y="207.50">account_get</text></g><g><title>get.1 (7 instructions, 0.04%)</title><rect x="76.8535%" y="197" width="0.0384%" height="15" fill="rgb(228,143,12)" fg:x="14015" fg:w="7"/><text x="77.1464%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="76.8919%" y="197" width="0.0877%" height="15" fill="rgb(249,149,8)" fg:x="14022" fg:w="16"/><text x="77.1848%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.13%)</title><rect x="76.9796%" y="197" width="0.1316%" height="15" fill="rgb(243,35,44)" fg:x="14038" fg:w="24"/><text x="77.2726%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="77.1112%" y="197" width="0.0877%" height="15" fill="rgb(246,89,9)" fg:x="14062" fg:w="16"/><text x="77.4042%" y="207.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="77.1989%" y="197" width="0.1206%" height="15" fill="rgb(233,213,13)" fg:x="14078" fg:w="22"/><text x="77.4919%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.09%)</title><rect x="77.3196%" y="165" width="4.0908%" height="15" fill="rgb(233,141,41)" fg:x="14100" fg:w="746"/><text x="77.6126%" y="175.50">com..</text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="81.4104%" y="149" width="0.1206%" height="15" fill="rgb(239,167,4)" fg:x="14846" fg:w="22"/><text x="81.7034%" y="159.50"></text></g><g><title>box_i32 (37 instructions, 0.20%)</title><rect x="81.4104%" y="165" width="0.2029%" height="15" fill="rgb(209,217,16)" fg:x="14846" fg:w="37"/><text x="81.7034%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="81.6133%" y="165" width="0.1206%" height="15" fill="rgb(219,88,35)" fg:x="14883" fg:w="22"/><text x="81.9063%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="81.7339%" y="149" width="0.1206%" height="15" fill="rgb(220,193,23)" fg:x="14905" fg:w="22"/><text x="82.0269%" y="159.50"></text></g><g><title>box_i32 (37 instructions, 0.20%)</title><rect x="81.7339%" y="165" width="0.2029%" height="15" fill="rgb(230,90,52)" fg:x="14905" fg:w="37"/><text x="82.0269%" y="175.50"></text></g><g><title>account_key (870 instructions, 4.77%)</title><rect x="77.3196%" y="181" width="4.7708%" height="15" fill="rgb(252,106,19)" fg:x="14100" fg:w="870"/><text x="77.6126%" y="191.50">acco..</text></g><g><title>opt_inject (14 instructions, 0.08%)</title><rect x="82.0904%" y="165" width="0.0768%" height="15" fill="rgb(206,74,20)" fg:x="14970" fg:w="14"/><text x="82.3833%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="82.1671%" y="165" width="0.1206%" height="15" fill="rgb(230,138,44)" fg:x="14984" fg:w="22"/><text x="82.4601%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="82.2878%" y="149" width="0.1206%" height="15" fill="rgb(235,182,43)" fg:x="15006" fg:w="22"/><text x="82.5808%" y="159.50"></text></g><g><title>equalKey (37 instructions, 0.20%)</title><rect x="82.2878%" y="165" width="0.2029%" height="15" fill="rgb(242,16,51)" fg:x="15006" fg:w="37"/><text x="82.5808%" y="175.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="82.4907%" y="165" width="0.1206%" height="15" fill="rgb(248,9,4)" fg:x="15043" fg:w="22"/><text x="82.7836%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.09%)</title><rect x="82.6113%" y="149" width="0.0877%" height="15" fill="rgb(210,31,22)" fg:x="15065" fg:w="16"/><text x="82.9043%" y="159.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="82.6991%" y="133" width="0.1206%" height="15" fill="rgb(239,54,39)" fg:x="15081" fg:w="22"/><text x="82.9920%" y="143.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="82.8197%" y="133" width="0.1206%" height="15" fill="rgb(230,99,41)" fg:x="15103" fg:w="22"/><text x="83.1127%" y="143.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="82.9403%" y="117" width="0.0768%" height="15" fill="rgb(253,106,12)" fg:x="15125" fg:w="14"/><text x="83.2333%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="83.0171%" y="101" width="0.0877%" height="15" fill="rgb(213,46,41)" fg:x="15139" fg:w="16"/><text x="83.3101%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="83.1048%" y="101" width="0.0877%" height="15" fill="rgb(215,133,35)" fg:x="15155" fg:w="16"/><text x="83.3978%" y="111.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.31%)</title><rect x="83.0171%" y="117" width="0.3071%" height="15" fill="rgb(213,28,5)" fg:x="15139" fg:w="56"/><text x="83.3101%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="83.3242%" y="101" width="0.0768%" height="15" fill="rgb(215,77,49)" fg:x="15195" fg:w="14"/><text x="83.6172%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="83.4010%" y="85" width="0.0877%" height="15" fill="rgb(248,100,22)" fg:x="15209" fg:w="16"/><text x="83.6939%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="83.4887%" y="85" width="0.0877%" height="15" fill="rgb(208,67,9)" fg:x="15225" fg:w="16"/><text x="83.7817%" y="95.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.31%)</title><rect x="83.4010%" y="101" width="0.3126%" height="15" fill="rgb(219,133,21)" fg:x="15209" fg:w="57"/><text x="83.6939%" y="111.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="83.7135%" y="85" width="0.0768%" height="15" fill="rgb(246,46,29)" fg:x="15266" fg:w="14"/><text x="84.0065%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="83.7903%" y="69" width="0.0877%" height="15" fill="rgb(246,185,52)" fg:x="15280" fg:w="16"/><text x="84.0833%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="83.8780%" y="69" width="0.0877%" height="15" fill="rgb(252,136,11)" fg:x="15296" fg:w="16"/><text x="84.1710%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.31%)</title><rect x="83.7903%" y="85" width="0.3126%" height="15" fill="rgb(219,138,53)" fg:x="15280" fg:w="57"/><text x="84.0833%" y="95.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="84.1029%" y="69" width="0.0768%" height="15" fill="rgb(211,51,23)" fg:x="15337" fg:w="14"/><text x="84.3958%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="84.1796%" y="53" width="0.0877%" height="15" fill="rgb(247,221,28)" fg:x="15351" fg:w="16"/><text x="84.4726%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.09%)</title><rect x="84.2674%" y="53" width="0.0877%" height="15" fill="rgb(251,222,45)" fg:x="15367" fg:w="16"/><text x="84.5604%" y="63.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.31%)</title><rect x="84.1796%" y="69" width="0.3126%" height="15" fill="rgb(217,162,53)" fg:x="15351" fg:w="57"/><text x="84.4726%" y="79.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="84.4922%" y="53" width="0.0768%" height="15" fill="rgb(229,93,14)" fg:x="15408" fg:w="14"/><text x="84.7852%" y="63.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="84.5690%" y="37" width="0.1206%" height="15" fill="rgb(209,67,49)" fg:x="15422" fg:w="22"/><text x="84.8620%" y="47.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="84.7719%" y="37" width="0.1206%" height="15" fill="rgb(213,87,29)" fg:x="15459" fg:w="22"/><text x="85.0648%" y="47.50"></text></g><g><title>to_2_tuple (74 instructions, 0.41%)</title><rect x="84.5690%" y="53" width="0.4058%" height="15" fill="rgb(205,151,52)" fg:x="15422" fg:w="74"/><text x="84.8620%" y="63.50"></text></g><g><title>opt_inject (14 instructions, 0.08%)</title><rect x="84.9748%" y="53" width="0.0768%" height="15" fill="rgb(253,215,39)" fg:x="15496" fg:w="14"/><text x="85.2677%" y="63.50"></text></g><g><title>rec.1 (141 instructions, 0.77%)</title><rect x="84.4922%" y="69" width="0.7732%" height="15" fill="rgb(221,220,41)" fg:x="15408" fg:w="141"/><text x="84.7852%" y="79.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="85.2654%" y="53" width="0.1206%" height="15" fill="rgb(218,133,21)" fg:x="15549" fg:w="22"/><text x="85.5584%" y="63.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="85.4683%" y="53" width="0.1206%" height="15" fill="rgb(221,193,43)" fg:x="15586" fg:w="22"/><text x="85.7613%" y="63.50"></text></g><g><title>to_2_tuple (74 instructions, 0.41%)</title><rect x="85.2654%" y="69" width="0.4058%" height="15" fill="rgb(240,128,52)" fg:x="15549" fg:w="74"/><text x="85.5584%" y="79.50"></text></g><g><title>opt_inject (14 instructions, 0.08%)</title><rect x="85.6712%" y="69" width="0.0768%" height="15" fill="rgb(253,114,12)" fg:x="15623" fg:w="14"/><text x="85.9642%" y="79.50"></text></g><g><title>rec.1 (365 instructions, 2.00%)</title><rect x="84.1029%" y="85" width="2.0015%" height="15" fill="rgb(215,223,47)" fg:x="15337" fg:w="365"/><text x="84.3958%" y="95.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="86.1044%" y="69" width="0.1206%" height="15" fill="rgb(248,225,23)" fg:x="15702" fg:w="22"/><text x="86.3974%" y="79.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="86.3073%" y="69" width="0.1206%" height="15" fill="rgb(250,108,0)" fg:x="15739" fg:w="22"/><text x="86.6003%" y="79.50"></text></g><g><title>to_2_tuple (74 instructions, 0.41%)</title><rect x="86.1044%" y="85" width="0.4058%" height="15" fill="rgb(228,208,7)" fg:x="15702" fg:w="74"/><text x="86.3974%" y="95.50"></text></g><g><title>opt_inject (14 instructions, 0.08%)</title><rect x="86.5102%" y="85" width="0.0768%" height="15" fill="rgb(244,45,10)" fg:x="15776" fg:w="14"/><text x="86.8032%" y="95.50"></text></g><g><title>rec.1 (589 instructions, 3.23%)</title><rect x="83.7135%" y="101" width="3.2299%" height="15" fill="rgb(207,125,25)" fg:x="15266" fg:w="589"/><text x="84.0065%" y="111.50">re..</text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="86.9434%" y="85" width="0.1206%" height="15" fill="rgb(210,195,18)" fg:x="15855" fg:w="22"/><text x="87.2364%" y="95.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="87.1463%" y="85" width="0.1206%" height="15" fill="rgb(249,80,12)" fg:x="15892" fg:w="22"/><text x="87.4393%" y="95.50"></text></g><g><title>to_2_tuple (74 instructions, 0.41%)</title><rect x="86.9434%" y="101" width="0.4058%" height="15" fill="rgb(221,65,9)" fg:x="15855" fg:w="74"/><text x="87.2364%" y="111.50"></text></g><g><title>opt_inject (14 instructions, 0.08%)</title><rect x="87.3492%" y="101" width="0.0768%" height="15" fill="rgb(235,49,36)" fg:x="15929" fg:w="14"/><text x="87.6422%" y="111.50"></text></g><g><title>rec.1 (813 instructions, 4.46%)</title><rect x="83.3242%" y="117" width="4.4582%" height="15" fill="rgb(225,32,20)" fg:x="15195" fg:w="813"/><text x="83.6172%" y="127.50">rec.1</text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="87.7824%" y="101" width="0.1206%" height="15" fill="rgb(215,141,46)" fg:x="16008" fg:w="22"/><text x="88.0754%" y="111.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="87.9853%" y="101" width="0.1206%" height="15" fill="rgb(250,160,47)" fg:x="16045" fg:w="22"/><text x="88.2783%" y="111.50"></text></g><g><title>to_2_tuple (74 instructions, 0.41%)</title><rect x="87.7824%" y="117" width="0.4058%" height="15" fill="rgb(216,222,40)" fg:x="16008" fg:w="74"/><text x="88.0754%" y="127.50"></text></g><g><title>opt_inject (14 instructions, 0.08%)</title><rect x="88.1882%" y="117" width="0.0768%" height="15" fill="rgb(234,217,39)" fg:x="16082" fg:w="14"/><text x="88.4812%" y="127.50"></text></g><g><title>rec.1 (1,036 instructions, 5.68%)</title><rect x="82.9403%" y="133" width="5.6811%" height="15" fill="rgb(207,178,40)" fg:x="15125" fg:w="1036"/><text x="83.2333%" y="143.50">rec.1</text></g><g><title>replace.1 (1,121 instructions, 6.15%)</title><rect x="82.6991%" y="149" width="6.1472%" height="15" fill="rgb(221,136,13)" fg:x="15081" fg:w="1121"/><text x="82.9920%" y="159.50">replac..</text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="88.8462%" y="117" width="0.0768%" height="15" fill="rgb(249,199,10)" fg:x="16202" fg:w="14"/><text x="89.1392%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.05%)</title><rect x="88.9230%" y="117" width="0.0548%" height="15" fill="rgb(249,222,13)" fg:x="16216" fg:w="10"/><text x="89.2160%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.13%)</title><rect x="88.9778%" y="117" width="0.1316%" height="15" fill="rgb(244,185,38)" fg:x="16226" fg:w="24"/><text x="89.2708%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="89.1095%" y="117" width="0.0768%" height="15" fill="rgb(236,202,9)" fg:x="16250" fg:w="14"/><text x="89.4024%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.05%)</title><rect x="89.1862%" y="117" width="0.0548%" height="15" fill="rgb(250,229,37)" fg:x="16264" fg:w="10"/><text x="89.4792%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.13%)</title><rect x="89.2411%" y="117" width="0.1316%" height="15" fill="rgb(206,174,23)" fg:x="16274" fg:w="24"/><text x="89.5340%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="89.3727%" y="117" width="0.0768%" height="15" fill="rgb(211,33,43)" fg:x="16298" fg:w="14"/><text x="89.6656%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.05%)</title><rect x="89.4494%" y="117" width="0.0548%" height="15" fill="rgb(245,58,50)" fg:x="16312" fg:w="10"/><text x="89.7424%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.13%)</title><rect x="89.5043%" y="117" width="0.1316%" height="15" fill="rgb(244,68,36)" fg:x="16322" fg:w="24"/><text x="89.7972%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="89.6359%" y="117" width="0.0768%" height="15" fill="rgb(232,229,15)" fg:x="16346" fg:w="14"/><text x="89.9289%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.05%)</title><rect x="89.7127%" y="117" width="0.0548%" height="15" fill="rgb(254,30,23)" fg:x="16360" fg:w="10"/><text x="90.0056%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.13%)</title><rect x="89.7675%" y="117" width="0.1316%" height="15" fill="rgb(235,160,14)" fg:x="16370" fg:w="24"/><text x="90.0605%" y="127.50"></text></g><g><title>opt_project (14 instructions, 0.08%)</title><rect x="89.8991%" y="117" width="0.0768%" height="15" fill="rgb(212,155,44)" fg:x="16394" fg:w="14"/><text x="90.1921%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.05%)</title><rect x="89.9759%" y="117" width="0.0548%" height="15" fill="rgb(226,2,50)" fg:x="16408" fg:w="10"/><text x="90.2688%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.13%)</title><rect x="90.0307%" y="117" width="0.1316%" height="15" fill="rgb(234,177,6)" fg:x="16418" fg:w="24"/><text x="90.3237%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="90.1623%" y="117" width="0.0219%" height="15" fill="rgb(217,24,9)" fg:x="16442" fg:w="4"/><text x="90.4553%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="90.1843%" y="117" width="0.0219%" height="15" fill="rgb(220,13,46)" fg:x="16446" fg:w="4"/><text x="90.4772%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="90.2062%" y="117" width="0.1206%" height="15" fill="rgb(239,221,27)" fg:x="16450" fg:w="22"/><text x="90.4992%" y="127.50"></text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="90.3268%" y="117" width="0.1206%" height="15" fill="rgb(222,198,25)" fg:x="16472" fg:w="22"/><text x="90.6198%" y="127.50"></text></g><g><title>rec (500 instructions, 2.74%)</title><rect x="88.8462%" y="133" width="2.7418%" height="15" fill="rgb(211,99,13)" fg:x="16202" fg:w="500"/><text x="89.1392%" y="143.50">r..</text></g><g><title>leaf (504 instructions, 2.76%)</title><rect x="88.8462%" y="149" width="2.7638%" height="15" fill="rgb(232,111,31)" fg:x="16202" fg:w="504"/><text x="89.1392%" y="159.50">l..</text></g><g><title>rec.2 (1,692 instructions, 9.28%)</title><rect x="82.6113%" y="165" width="9.2784%" height="15" fill="rgb(245,82,37)" fg:x="15065" fg:w="1692"/><text x="82.9043%" y="175.50">rec.2</text></g><g><title>put.1 (1,835 instructions, 10.06%)</title><rect x="82.0904%" y="181" width="10.0625%" height="15" fill="rgb(227,149,46)" fg:x="14970" fg:w="1835"/><text x="82.3833%" y="191.50">put.1</text></g><g><title>alloc_words (22 instructions, 0.12%)</title><rect x="92.1529%" y="165" width="0.1206%" height="15" fill="rgb(218,36,50)" fg:x="16805" fg:w="22"/><text x="92.4459%" y="175.50"></text></g><g><title>to_2_tuple (37 instructions, 0.20%)</title><rect x="92.1529%" y="181" width="0.2029%" height="15" fill="rgb(226,80,48)" fg:x="16805" fg:w="37"/><text x="92.4459%" y="191.50"></text></g><g><title>account_put (2,755 instructions, 15.11%)</title><rect x="77.3196%" y="197" width="15.1075%" height="15" fill="rgb(238,224,15)" fg:x="14100" fg:w="2755"/><text x="77.6126%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.16%)</title><rect x="92.4271%" y="181" width="0.1645%" height="15" fill="rgb(241,136,10)" fg:x="16855" fg:w="30"/><text x="92.7200%" y="191.50"></text></g><g><title>memcpy (76 instructions, 0.42%)</title><rect x="92.5916%" y="181" width="0.4168%" height="15" fill="rgb(208,32,45)" fg:x="16885" fg:w="76"/><text x="92.8845%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (30 instructions, 0.16%)</title><rect x="93.0083%" y="181" width="0.1645%" height="15" fill="rgb(207,135,9)" fg:x="16961" fg:w="30"/><text x="93.3013%" y="191.50"></text></g><g><title>leb128_encode (9 instructions, 0.05%)</title><rect x="93.1728%" y="181" width="0.0494%" height="15" fill="rgb(206,86,44)" fg:x="16991" fg:w="9"/><text x="93.4658%" y="191.50"></text></g><g><title>reply_with_data (43 instructions, 0.24%)</title><rect x="93.2222%" y="181" width="0.2358%" height="15" fill="rgb(245,177,15)" fg:x="17000" fg:w="43"/><text x="93.5152%" y="191.50"></text></g><g><title>$lambda.35 (294 instructions, 1.61%)</title><rect x="92.4271%" y="197" width="1.6122%" height="15" fill="rgb(206,64,50)" fg:x="16855" fg:w="294"/><text x="92.7200%" y="207.50"></text></g><g><title>$lambda.2 (13,936 instructions, 76.42%)</title><rect x="18.3757%" y="213" width="76.4203%" height="15" fill="rgb(234,36,40)" fg:x="3351" fg:w="13936"/><text x="18.6687%" y="223.50">$lambda.2</text></g><g><title>schedule_copying_gc (43 instructions, 0.24%)</title><rect x="94.7960%" y="213" width="0.2358%" height="15" fill="rgb(213,64,8)" fg:x="17287" fg:w="43"/><text x="95.0890%" y="223.50"></text></g><g><title>trans_state4 (13 instructions, 0.07%)</title><rect x="95.0318%" y="213" width="0.0713%" height="15" fill="rgb(210,75,36)" fg:x="17330" fg:w="13"/><text x="95.3248%" y="223.50"></text></g><g><title>all (18,236 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(229,88,21)" fg:x="0" fg:w="18236"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (18,236 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(252,204,47)" fg:x="0" fg:w="18236"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>