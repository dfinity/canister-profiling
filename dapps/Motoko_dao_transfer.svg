<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="16340"><g><title>trans_state5 (8 instructions, 0.05%)</title><rect x="0.0000%" y="213" width="0.0490%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="0.0490%" y="213" width="0.2020%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="33"/><text x="0.3419%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="0.2509%" y="197" width="0.2815%" height="15" fill="rgb(221,193,54)" fg:x="41" fg:w="46"/><text x="0.5439%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="0.5324%" y="197" width="0.2020%" height="15" fill="rgb(248,212,6)" fg:x="87" fg:w="33"/><text x="0.8254%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="0.7344%" y="197" width="0.3672%" height="15" fill="rgb(208,68,35)" fg:x="120" fg:w="60"/><text x="1.0274%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="1.1016%" y="197" width="0.2815%" height="15" fill="rgb(232,128,0)" fg:x="180" fg:w="46"/><text x="1.3946%" y="207.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="1.3831%" y="197" width="0.7466%" height="15" fill="rgb(207,160,47)" fg:x="226" fg:w="122"/><text x="1.6761%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="2.1297%" y="197" width="0.3672%" height="15" fill="rgb(228,23,34)" fg:x="348" fg:w="60"/><text x="2.4227%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (17 instructions, 0.10%)</title><rect x="2.4969%" y="197" width="0.1040%" height="15" fill="rgb(218,30,26)" fg:x="408" fg:w="17"/><text x="2.7899%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="2.6010%" y="197" width="1.2118%" height="15" fill="rgb(220,122,19)" fg:x="425" fg:w="198"/><text x="2.8939%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="3.8127%" y="197" width="0.3672%" height="15" fill="rgb(250,228,42)" fg:x="623" fg:w="60"/><text x="4.1057%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.06%)</title><rect x="4.1799%" y="197" width="0.0551%" height="15" fill="rgb(240,193,28)" fg:x="683" fg:w="9"/><text x="4.4729%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="4.2350%" y="197" width="0.3672%" height="15" fill="rgb(216,20,37)" fg:x="692" fg:w="60"/><text x="4.5280%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="4.6022%" y="197" width="0.2815%" height="15" fill="rgb(206,188,39)" fg:x="752" fg:w="46"/><text x="4.8952%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="4.8837%" y="197" width="1.2118%" height="15" fill="rgb(217,207,13)" fg:x="798" fg:w="198"/><text x="5.1767%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.0955%" y="197" width="0.3672%" height="15" fill="rgb(231,73,38)" fg:x="996" fg:w="60"/><text x="6.3884%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.06%)</title><rect x="6.4627%" y="197" width="0.0551%" height="15" fill="rgb(225,20,46)" fg:x="1056" fg:w="9"/><text x="6.7556%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.5177%" y="197" width="0.3672%" height="15" fill="rgb(210,31,41)" fg:x="1065" fg:w="60"/><text x="6.8107%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.8849%" y="197" width="0.3672%" height="15" fill="rgb(221,200,47)" fg:x="1125" fg:w="60"/><text x="7.1779%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="7.2521%" y="197" width="0.2815%" height="15" fill="rgb(226,26,5)" fg:x="1185" fg:w="46"/><text x="7.5451%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="7.5337%" y="197" width="0.3672%" height="15" fill="rgb(249,33,26)" fg:x="1231" fg:w="60"/><text x="7.8266%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.06%)</title><rect x="7.9009%" y="197" width="0.0551%" height="15" fill="rgb(235,183,28)" fg:x="1291" fg:w="9"/><text x="8.1938%" y="207.50"></text></g><g><title>parse_idl_header (1,580 instructions, 9.67%)</title><rect x="0.2509%" y="213" width="9.6695%" height="15" fill="rgb(221,5,38)" fg:x="41" fg:w="1580"/><text x="0.5439%" y="223.50">parse_idl_h..</text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="9.9204%" y="197" width="0.0245%" height="15" fill="rgb(247,18,42)" fg:x="1621" fg:w="4"/><text x="10.2134%" y="207.50"></text></g><g><title>idl_sub_buf_init (8 instructions, 0.05%)</title><rect x="9.9204%" y="213" width="0.0490%" height="15" fill="rgb(241,131,45)" fg:x="1621" fg:w="8"/><text x="10.2134%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="9.9694%" y="213" width="0.2815%" height="15" fill="rgb(249,31,29)" fg:x="1629" fg:w="46"/><text x="10.2624%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.2509%" y="213" width="0.3672%" height="15" fill="rgb(225,111,53)" fg:x="1675" fg:w="60"/><text x="10.5439%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.6181%" y="213" width="0.3672%" height="15" fill="rgb(238,160,17)" fg:x="1735" fg:w="60"/><text x="10.9111%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="10.9853%" y="213" width="0.2815%" height="15" fill="rgb(214,148,48)" fg:x="1795" fg:w="46"/><text x="11.2783%" y="223.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="11.2668%" y="213" width="0.0918%" height="15" fill="rgb(232,36,49)" fg:x="1841" fg:w="15"/><text x="11.5598%" y="223.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="11.3586%" y="197" width="0.7466%" height="15" fill="rgb(209,103,24)" fg:x="1856" fg:w="122"/><text x="11.6516%" y="207.50"></text></g><g><title>find_field (149 instructions, 0.91%)</title><rect x="11.3586%" y="213" width="0.9119%" height="15" fill="rgb(229,88,8)" fg:x="1856" fg:w="149"/><text x="11.6516%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="12.2705%" y="213" width="0.3672%" height="15" fill="rgb(213,181,19)" fg:x="2005" fg:w="60"/><text x="12.5635%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="12.6377%" y="197" width="0.2815%" height="15" fill="rgb(254,191,54)" fg:x="2065" fg:w="46"/><text x="12.9307%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="12.9192%" y="197" width="0.2020%" height="15" fill="rgb(241,83,37)" fg:x="2111" fg:w="33"/><text x="13.2122%" y="207.50"></text></g><g><title>memcpy (181 instructions, 1.11%)</title><rect x="13.1212%" y="197" width="1.1077%" height="15" fill="rgb(233,36,39)" fg:x="2144" fg:w="181"/><text x="13.4141%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (335 instructions, 2.05%)</title><rect x="12.6377%" y="213" width="2.0502%" height="15" fill="rgb(226,3,54)" fg:x="2065" fg:w="335"/><text x="12.9307%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="14.6879%" y="197" width="1.2118%" height="15" fill="rgb(245,192,40)" fg:x="2400" fg:w="198"/><text x="14.9809%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="14.6879%" y="213" width="1.3770%" height="15" fill="rgb(238,167,29)" fg:x="2400" fg:w="225"/><text x="14.9809%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.0649%" y="213" width="0.3672%" height="15" fill="rgb(232,182,51)" fg:x="2625" fg:w="60"/><text x="16.3578%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.4321%" y="197" width="0.3672%" height="15" fill="rgb(231,60,39)" fg:x="2685" fg:w="60"/><text x="16.7250%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="16.7993%" y="197" width="0.2815%" height="15" fill="rgb(208,69,12)" fg:x="2745" fg:w="46"/><text x="17.0922%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="17.0808%" y="197" width="0.0918%" height="15" fill="rgb(235,93,37)" fg:x="2791" fg:w="15"/><text x="17.3738%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="17.1726%" y="181" width="1.2118%" height="15" fill="rgb(213,116,39)" fg:x="2806" fg:w="198"/><text x="17.4656%" y="191.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="17.1726%" y="197" width="1.3770%" height="15" fill="rgb(222,207,29)" fg:x="2806" fg:w="225"/><text x="17.4656%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="18.5496%" y="197" width="0.3672%" height="15" fill="rgb(206,96,30)" fg:x="3031" fg:w="60"/><text x="18.8425%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (55 instructions, 0.34%)</title><rect x="18.9168%" y="181" width="0.3366%" height="15" fill="rgb(218,138,4)" fg:x="3091" fg:w="55"/><text x="19.2097%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (99 instructions, 0.61%)</title><rect x="18.9168%" y="197" width="0.6059%" height="15" fill="rgb(250,191,14)" fg:x="3091" fg:w="99"/><text x="19.2097%" y="207.50"></text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="19.5226%" y="197" width="0.0245%" height="15" fill="rgb(239,60,40)" fg:x="3190" fg:w="4"/><text x="19.8156%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (641 instructions, 3.92%)</title><rect x="16.4321%" y="213" width="3.9229%" height="15" fill="rgb(206,27,48)" fg:x="2685" fg:w="641"/><text x="16.7250%" y="223.50">@de..</text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="20.3550%" y="213" width="0.0245%" height="15" fill="rgb(225,35,8)" fg:x="3326" fg:w="4"/><text x="20.6479%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="20.3794%" y="213" width="0.0918%" height="15" fill="rgb(250,213,24)" fg:x="3330" fg:w="15"/><text x="20.6724%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="20.4712%" y="197" width="0.2020%" height="15" fill="rgb(247,123,22)" fg:x="3345" fg:w="33"/><text x="20.7642%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="20.6732%" y="197" width="0.0918%" height="15" fill="rgb(231,138,38)" fg:x="3378" fg:w="15"/><text x="20.9662%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="20.7650%" y="197" width="0.0979%" height="15" fill="rgb(231,145,46)" fg:x="3393" fg:w="16"/><text x="21.0580%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="20.8629%" y="165" width="4.5655%" height="15" fill="rgb(251,118,11)" fg:x="3409" fg:w="746"/><text x="21.1559%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="25.4284%" y="165" width="0.1408%" height="15" fill="rgb(217,147,25)" fg:x="4155" fg:w="23"/><text x="25.7214%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="25.5692%" y="165" width="0.0918%" height="15" fill="rgb(247,81,37)" fg:x="4178" fg:w="15"/><text x="25.8621%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="25.6610%" y="165" width="0.1408%" height="15" fill="rgb(209,12,38)" fg:x="4193" fg:w="23"/><text x="25.9539%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="20.8629%" y="181" width="5.0857%" height="15" fill="rgb(227,1,9)" fg:x="3409" fg:w="831"/><text x="21.1559%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="25.9486%" y="149" width="0.0918%" height="15" fill="rgb(248,47,43)" fg:x="4240" fg:w="15"/><text x="26.2416%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="25.9486%" y="165" width="0.1591%" height="15" fill="rgb(221,10,30)" fg:x="4240" fg:w="26"/><text x="26.2416%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="26.1077%" y="165" width="0.0918%" height="15" fill="rgb(210,229,1)" fg:x="4266" fg:w="15"/><text x="26.4007%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="26.1995%" y="149" width="0.0979%" height="15" fill="rgb(222,148,37)" fg:x="4281" fg:w="16"/><text x="26.4925%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.2974%" y="149" width="0.1102%" height="15" fill="rgb(234,67,33)" fg:x="4297" fg:w="18"/><text x="26.5904%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.4076%" y="133" width="0.0979%" height="15" fill="rgb(247,98,35)" fg:x="4315" fg:w="16"/><text x="26.7006%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.5055%" y="133" width="0.0979%" height="15" fill="rgb(247,138,52)" fg:x="4331" fg:w="16"/><text x="26.7985%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="26.4076%" y="149" width="0.3488%" height="15" fill="rgb(213,79,30)" fg:x="4315" fg:w="57"/><text x="26.7006%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.7564%" y="149" width="0.1102%" height="15" fill="rgb(246,177,23)" fg:x="4372" fg:w="18"/><text x="27.0494%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.8666%" y="133" width="0.0979%" height="15" fill="rgb(230,62,27)" fg:x="4390" fg:w="16"/><text x="27.1596%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.9645%" y="133" width="0.0979%" height="15" fill="rgb(216,154,8)" fg:x="4406" fg:w="16"/><text x="27.2575%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="26.8666%" y="149" width="0.3488%" height="15" fill="rgb(244,35,45)" fg:x="4390" fg:w="57"/><text x="27.1596%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.2154%" y="149" width="0.1102%" height="15" fill="rgb(251,115,12)" fg:x="4447" fg:w="18"/><text x="27.5084%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.3256%" y="133" width="0.0979%" height="15" fill="rgb(240,54,50)" fg:x="4465" fg:w="16"/><text x="27.6186%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.4235%" y="133" width="0.0979%" height="15" fill="rgb(233,84,52)" fg:x="4481" fg:w="16"/><text x="27.7165%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="27.3256%" y="149" width="0.3488%" height="15" fill="rgb(207,117,47)" fg:x="4465" fg:w="57"/><text x="27.6186%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.6744%" y="149" width="0.1102%" height="15" fill="rgb(249,43,39)" fg:x="4522" fg:w="18"/><text x="27.9674%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.7846%" y="133" width="0.0979%" height="15" fill="rgb(209,38,44)" fg:x="4540" fg:w="16"/><text x="28.0775%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.8825%" y="133" width="0.0979%" height="15" fill="rgb(236,212,23)" fg:x="4556" fg:w="16"/><text x="28.1755%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="27.9804%" y="133" width="0.0979%" height="15" fill="rgb(242,79,21)" fg:x="4572" fg:w="16"/><text x="28.2734%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="28.0783%" y="133" width="0.0979%" height="15" fill="rgb(211,96,35)" fg:x="4588" fg:w="16"/><text x="28.3713%" y="143.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.16%)</title><rect x="28.1763%" y="117" width="4.1554%" height="15" fill="rgb(253,215,40)" fg:x="4604" fg:w="679"/><text x="28.4692%" y="127.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.17%)</title><rect x="28.1763%" y="133" width="4.1738%" height="15" fill="rgb(211,81,21)" fg:x="4604" fg:w="682"/><text x="28.4692%" y="143.50">equa..</text></g><g><title>anon-func-192.5 (781 instructions, 4.78%)</title><rect x="27.7846%" y="149" width="4.7797%" height="15" fill="rgb(208,190,38)" fg:x="4540" fg:w="781"/><text x="28.0775%" y="159.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="32.5643%" y="149" width="0.1102%" height="15" fill="rgb(235,213,38)" fg:x="5321" fg:w="18"/><text x="32.8572%" y="159.50"></text></g><g><title>rec.2 (1,208 instructions, 7.39%)</title><rect x="26.1995%" y="165" width="7.3929%" height="15" fill="rgb(237,122,38)" fg:x="4281" fg:w="1208"/><text x="26.4925%" y="175.50">rec.2</text></g><g><title>get.2 (1,271 instructions, 7.78%)</title><rect x="25.9486%" y="181" width="7.7785%" height="15" fill="rgb(244,218,35)" fg:x="4240" fg:w="1271"/><text x="26.2416%" y="191.50">get.2</text></g><g><title>account_get (2,108 instructions, 12.90%)</title><rect x="20.8629%" y="197" width="12.9009%" height="15" fill="rgb(240,68,47)" fg:x="3409" fg:w="2108"/><text x="21.1559%" y="207.50">account_get</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="33.7638%" y="197" width="0.1102%" height="15" fill="rgb(210,16,53)" fg:x="5517" fg:w="18"/><text x="34.0567%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.8739%" y="197" width="0.0979%" height="15" fill="rgb(235,124,12)" fg:x="5535" fg:w="16"/><text x="34.1669%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.9718%" y="197" width="0.0979%" height="15" fill="rgb(224,169,11)" fg:x="5551" fg:w="16"/><text x="34.2648%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="34.0698%" y="197" width="0.0979%" height="15" fill="rgb(250,166,2)" fg:x="5567" fg:w="16"/><text x="34.3627%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.1677%" y="197" width="0.0979%" height="15" fill="rgb(242,216,29)" fg:x="5583" fg:w="16"/><text x="34.4607%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.2656%" y="197" width="0.0979%" height="15" fill="rgb(230,116,27)" fg:x="5599" fg:w="16"/><text x="34.5586%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="34.3635%" y="197" width="0.1469%" height="15" fill="rgb(228,99,48)" fg:x="5615" fg:w="24"/><text x="34.6565%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="34.5104%" y="133" width="0.2264%" height="15" fill="rgb(253,11,6)" fg:x="5639" fg:w="37"/><text x="34.8034%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="34.7368%" y="133" width="0.6059%" height="15" fill="rgb(247,143,39)" fg:x="5676" fg:w="99"/><text x="35.0298%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="34.5104%" y="149" width="0.9853%" height="15" fill="rgb(236,97,10)" fg:x="5639" fg:w="161"/><text x="34.8034%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="34.5104%" y="165" width="1.0771%" height="15" fill="rgb(233,208,19)" fg:x="5639" fg:w="176"/><text x="34.8034%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.59%)</title><rect x="35.5875%" y="165" width="0.5936%" height="15" fill="rgb(216,164,2)" fg:x="5815" fg:w="97"/><text x="35.8805%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="36.1812%" y="165" width="0.1836%" height="15" fill="rgb(220,129,5)" fg:x="5912" fg:w="30"/><text x="36.4741%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.15%)</title><rect x="34.5104%" y="181" width="2.1542%" height="15" fill="rgb(242,17,10)" fg:x="5639" fg:w="352"/><text x="34.8034%" y="191.50">b..</text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="36.6646%" y="165" width="0.0673%" height="15" fill="rgb(242,107,0)" fg:x="5991" fg:w="11"/><text x="36.9576%" y="175.50"></text></g><g><title>mp_cmp (25 instructions, 0.15%)</title><rect x="36.6646%" y="181" width="0.1530%" height="15" fill="rgb(251,28,31)" fg:x="5991" fg:w="25"/><text x="36.9576%" y="191.50"></text></g><g><title>B_lt (417 instructions, 2.55%)</title><rect x="34.5104%" y="197" width="2.5520%" height="15" fill="rgb(233,223,10)" fg:x="5639" fg:w="417"/><text x="34.8034%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="37.0624%" y="197" width="0.0979%" height="15" fill="rgb(215,21,27)" fg:x="6056" fg:w="16"/><text x="37.3554%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="37.1603%" y="133" width="0.2264%" height="15" fill="rgb(232,23,21)" fg:x="6072" fg:w="37"/><text x="37.4533%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="37.3868%" y="133" width="0.6059%" height="15" fill="rgb(244,5,23)" fg:x="6109" fg:w="99"/><text x="37.6797%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="37.1603%" y="149" width="0.9853%" height="15" fill="rgb(226,81,46)" fg:x="6072" fg:w="161"/><text x="37.4533%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="37.1603%" y="165" width="1.0771%" height="15" fill="rgb(247,70,30)" fg:x="6072" fg:w="176"/><text x="37.4533%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.59%)</title><rect x="38.2375%" y="165" width="0.5936%" height="15" fill="rgb(212,68,19)" fg:x="6248" fg:w="97"/><text x="38.5304%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="38.8311%" y="165" width="0.1836%" height="15" fill="rgb(240,187,13)" fg:x="6345" fg:w="30"/><text x="39.1241%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.15%)</title><rect x="37.1603%" y="181" width="2.1542%" height="15" fill="rgb(223,113,26)" fg:x="6072" fg:w="352"/><text x="37.4533%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="39.3146%" y="149" width="0.2264%" height="15" fill="rgb(206,192,2)" fg:x="6424" fg:w="37"/><text x="39.6075%" y="159.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="39.5410%" y="149" width="0.6059%" height="15" fill="rgb(241,108,4)" fg:x="6461" fg:w="99"/><text x="39.8340%" y="159.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="39.3146%" y="165" width="0.9853%" height="15" fill="rgb(247,173,49)" fg:x="6424" fg:w="161"/><text x="39.6075%" y="175.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="39.3146%" y="181" width="1.0771%" height="15" fill="rgb(224,114,35)" fg:x="6424" fg:w="176"/><text x="39.6075%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="40.3917%" y="165" width="0.0673%" height="15" fill="rgb(245,159,27)" fg:x="6600" fg:w="11"/><text x="40.6846%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.13%)</title><rect x="40.4590%" y="149" width="0.1346%" height="15" fill="rgb(245,172,44)" fg:x="6611" fg:w="22"/><text x="40.7520%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.81%)</title><rect x="40.4590%" y="165" width="0.8140%" height="15" fill="rgb(236,23,11)" fg:x="6611" fg:w="133"/><text x="40.7520%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="40.3917%" y="181" width="1.0098%" height="15" fill="rgb(205,117,38)" fg:x="6600" fg:w="165"/><text x="40.6846%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="41.4015%" y="181" width="0.1836%" height="15" fill="rgb(237,72,25)" fg:x="6765" fg:w="30"/><text x="41.6944%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="41.5851%" y="165" width="1.0159%" height="15" fill="rgb(244,70,9)" fg:x="6795" fg:w="166"/><text x="41.8780%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="41.5851%" y="181" width="1.2179%" height="15" fill="rgb(217,125,39)" fg:x="6795" fg:w="199"/><text x="41.8780%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="43.3905%" y="133" width="0.2264%" height="15" fill="rgb(235,36,10)" fg:x="7090" fg:w="37"/><text x="43.6834%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="43.6169%" y="133" width="0.6059%" height="15" fill="rgb(251,123,47)" fg:x="7127" fg:w="99"/><text x="43.9099%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="43.3905%" y="149" width="0.9853%" height="15" fill="rgb(221,13,13)" fg:x="7090" fg:w="161"/><text x="43.6834%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="43.3905%" y="165" width="1.0771%" height="15" fill="rgb(238,131,9)" fg:x="7090" fg:w="176"/><text x="43.6834%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.59%)</title><rect x="44.4676%" y="165" width="0.5936%" height="15" fill="rgb(211,50,8)" fg:x="7266" fg:w="97"/><text x="44.7605%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="45.0612%" y="165" width="0.1836%" height="15" fill="rgb(245,182,24)" fg:x="7363" fg:w="30"/><text x="45.3542%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.15%)</title><rect x="43.3905%" y="181" width="2.1542%" height="15" fill="rgb(242,14,37)" fg:x="7090" fg:w="352"/><text x="43.6834%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="45.5447%" y="149" width="0.2264%" height="15" fill="rgb(246,228,12)" fg:x="7442" fg:w="37"/><text x="45.8376%" y="159.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="45.7711%" y="149" width="0.6059%" height="15" fill="rgb(213,55,15)" fg:x="7479" fg:w="99"/><text x="46.0641%" y="159.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="45.5447%" y="165" width="0.9853%" height="15" fill="rgb(209,9,3)" fg:x="7442" fg:w="161"/><text x="45.8376%" y="175.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="45.5447%" y="181" width="1.0771%" height="15" fill="rgb(230,59,30)" fg:x="7442" fg:w="176"/><text x="45.8376%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="46.6218%" y="165" width="0.0673%" height="15" fill="rgb(209,121,21)" fg:x="7618" fg:w="11"/><text x="46.9148%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.13%)</title><rect x="46.6891%" y="149" width="0.1346%" height="15" fill="rgb(220,109,13)" fg:x="7629" fg:w="22"/><text x="46.9821%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.81%)</title><rect x="46.6891%" y="165" width="0.8140%" height="15" fill="rgb(232,18,1)" fg:x="7629" fg:w="133"/><text x="46.9821%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="46.6218%" y="181" width="1.0098%" height="15" fill="rgb(215,41,42)" fg:x="7618" fg:w="165"/><text x="46.9148%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="47.6316%" y="181" width="0.1836%" height="15" fill="rgb(224,123,36)" fg:x="7783" fg:w="30"/><text x="47.9245%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="47.8152%" y="165" width="1.0159%" height="15" fill="rgb(240,125,3)" fg:x="7813" fg:w="166"/><text x="48.1081%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="47.8152%" y="181" width="1.2179%" height="15" fill="rgb(205,98,50)" fg:x="7813" fg:w="199"/><text x="48.1081%" y="191.50"></text></g><g><title>B_sub (2,036 instructions, 12.46%)</title><rect x="37.1603%" y="197" width="12.4602%" height="15" fill="rgb(205,185,37)" fg:x="6072" fg:w="2036"/><text x="37.4533%" y="207.50">B_sub</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="49.6206%" y="197" width="0.0918%" height="15" fill="rgb(238,207,15)" fg:x="8108" fg:w="15"/><text x="49.9135%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="49.7124%" y="165" width="4.5655%" height="15" fill="rgb(213,199,42)" fg:x="8123" fg:w="746"/><text x="50.0053%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="54.2778%" y="165" width="0.1408%" height="15" fill="rgb(235,201,11)" fg:x="8869" fg:w="23"/><text x="54.5708%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="54.4186%" y="165" width="0.0918%" height="15" fill="rgb(207,46,11)" fg:x="8892" fg:w="15"/><text x="54.7116%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="54.5104%" y="165" width="0.1408%" height="15" fill="rgb(241,35,35)" fg:x="8907" fg:w="23"/><text x="54.8034%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="49.7124%" y="181" width="5.0857%" height="15" fill="rgb(243,32,47)" fg:x="8123" fg:w="831"/><text x="50.0053%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="54.7980%" y="165" width="0.1102%" height="15" fill="rgb(247,202,23)" fg:x="8954" fg:w="18"/><text x="55.0910%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="54.9082%" y="165" width="0.0918%" height="15" fill="rgb(219,102,11)" fg:x="8972" fg:w="15"/><text x="55.2012%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.0000%" y="165" width="0.0918%" height="15" fill="rgb(243,110,44)" fg:x="8987" fg:w="15"/><text x="55.2930%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.0918%" y="149" width="0.0918%" height="15" fill="rgb(222,74,54)" fg:x="9002" fg:w="15"/><text x="55.3848%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="55.0918%" y="165" width="0.1591%" height="15" fill="rgb(216,99,12)" fg:x="9002" fg:w="26"/><text x="55.3848%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="55.2509%" y="149" width="0.0979%" height="15" fill="rgb(226,22,26)" fg:x="9028" fg:w="16"/><text x="55.5439%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.3488%" y="133" width="0.0918%" height="15" fill="rgb(217,163,10)" fg:x="9044" fg:w="15"/><text x="55.6418%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.4406%" y="133" width="0.0918%" height="15" fill="rgb(213,25,53)" fg:x="9059" fg:w="15"/><text x="55.7336%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.5324%" y="133" width="0.0918%" height="15" fill="rgb(252,105,26)" fg:x="9074" fg:w="15"/><text x="55.8254%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="55.6242%" y="117" width="0.1102%" height="15" fill="rgb(220,39,43)" fg:x="9089" fg:w="18"/><text x="55.9172%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.7344%" y="101" width="0.0979%" height="15" fill="rgb(229,68,48)" fg:x="9107" fg:w="16"/><text x="56.0274%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.8323%" y="101" width="0.0979%" height="15" fill="rgb(252,8,32)" fg:x="9123" fg:w="16"/><text x="56.1253%" y="111.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="55.7344%" y="117" width="0.3488%" height="15" fill="rgb(223,20,43)" fg:x="9107" fg:w="57"/><text x="56.0274%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.0832%" y="101" width="0.1102%" height="15" fill="rgb(229,81,49)" fg:x="9164" fg:w="18"/><text x="56.3762%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.1934%" y="85" width="0.0979%" height="15" fill="rgb(236,28,36)" fg:x="9182" fg:w="16"/><text x="56.4864%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.2913%" y="85" width="0.0979%" height="15" fill="rgb(249,185,26)" fg:x="9198" fg:w="16"/><text x="56.5843%" y="95.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="56.1934%" y="101" width="0.3488%" height="15" fill="rgb(249,174,33)" fg:x="9182" fg:w="57"/><text x="56.4864%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.5422%" y="85" width="0.1102%" height="15" fill="rgb(233,201,37)" fg:x="9239" fg:w="18"/><text x="56.8352%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.6524%" y="69" width="0.0979%" height="15" fill="rgb(221,78,26)" fg:x="9257" fg:w="16"/><text x="56.9454%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.7503%" y="69" width="0.0979%" height="15" fill="rgb(250,127,30)" fg:x="9273" fg:w="16"/><text x="57.0433%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="56.6524%" y="85" width="0.3488%" height="15" fill="rgb(230,49,44)" fg:x="9257" fg:w="57"/><text x="56.9454%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="57.0012%" y="69" width="0.1102%" height="15" fill="rgb(229,67,23)" fg:x="9314" fg:w="18"/><text x="57.2942%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.1114%" y="53" width="0.0979%" height="15" fill="rgb(249,83,47)" fg:x="9332" fg:w="16"/><text x="57.4044%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.2093%" y="53" width="0.0979%" height="15" fill="rgb(215,43,3)" fg:x="9348" fg:w="16"/><text x="57.5023%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.3072%" y="53" width="0.0979%" height="15" fill="rgb(238,154,13)" fg:x="9364" fg:w="16"/><text x="57.6002%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.4051%" y="53" width="0.0979%" height="15" fill="rgb(219,56,2)" fg:x="9380" fg:w="16"/><text x="57.6981%" y="63.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.16%)</title><rect x="57.5031%" y="37" width="4.1554%" height="15" fill="rgb(233,0,4)" fg:x="9396" fg:w="679"/><text x="57.7960%" y="47.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.17%)</title><rect x="57.5031%" y="53" width="4.1738%" height="15" fill="rgb(235,30,7)" fg:x="9396" fg:w="682"/><text x="57.7960%" y="63.50">equa..</text></g><g><title>anon-func-192.5 (781 instructions, 4.78%)</title><rect x="57.1114%" y="69" width="4.7797%" height="15" fill="rgb(250,79,13)" fg:x="9332" fg:w="781"/><text x="57.4044%" y="79.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="61.8911%" y="69" width="0.1102%" height="15" fill="rgb(211,146,34)" fg:x="10113" fg:w="18"/><text x="62.1840%" y="79.50"></text></g><g><title>del (858 instructions, 5.25%)</title><rect x="57.0012%" y="85" width="5.2509%" height="15" fill="rgb(228,22,38)" fg:x="9314" fg:w="858"/><text x="57.2942%" y="95.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.2521%" y="85" width="0.1408%" height="15" fill="rgb(235,168,5)" fg:x="10172" fg:w="23"/><text x="62.5451%" y="95.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.3929%" y="85" width="0.1102%" height="15" fill="rgb(221,155,16)" fg:x="10195" fg:w="18"/><text x="62.6859%" y="95.50"></text></g><g><title>del (1,036 instructions, 6.34%)</title><rect x="56.5422%" y="101" width="6.3403%" height="15" fill="rgb(215,215,53)" fg:x="9239" fg:w="1036"/><text x="56.8352%" y="111.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.8825%" y="101" width="0.1408%" height="15" fill="rgb(223,4,10)" fg:x="10275" fg:w="23"/><text x="63.1755%" y="111.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.0233%" y="101" width="0.1102%" height="15" fill="rgb(234,103,6)" fg:x="10298" fg:w="18"/><text x="63.3162%" y="111.50"></text></g><g><title>del (1,214 instructions, 7.43%)</title><rect x="56.0832%" y="117" width="7.4296%" height="15" fill="rgb(227,97,0)" fg:x="9164" fg:w="1214"/><text x="56.3762%" y="127.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="63.5129%" y="117" width="0.1408%" height="15" fill="rgb(234,150,53)" fg:x="10378" fg:w="23"/><text x="63.8058%" y="127.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.6536%" y="117" width="0.1102%" height="15" fill="rgb(228,201,54)" fg:x="10401" fg:w="18"/><text x="63.9466%" y="127.50"></text></g><g><title>del (1,392 instructions, 8.52%)</title><rect x="55.6242%" y="133" width="8.5190%" height="15" fill="rgb(222,22,37)" fg:x="9089" fg:w="1392"/><text x="55.9172%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="64.1432%" y="133" width="0.1102%" height="15" fill="rgb(237,53,32)" fg:x="10481" fg:w="18"/><text x="64.4362%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.2534%" y="133" width="0.1408%" height="15" fill="rgb(233,25,53)" fg:x="10499" fg:w="23"/><text x="64.5463%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.3941%" y="133" width="0.1408%" height="15" fill="rgb(210,40,34)" fg:x="10522" fg:w="23"/><text x="64.6871%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="64.5349%" y="133" width="0.1102%" height="15" fill="rgb(241,220,44)" fg:x="10545" fg:w="18"/><text x="64.8279%" y="143.50"></text></g><g><title>replace (1,578 instructions, 9.66%)</title><rect x="55.3488%" y="149" width="9.6573%" height="15" fill="rgb(235,28,35)" fg:x="9044" fg:w="1578"/><text x="55.6418%" y="159.50">replace</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.0061%" y="117" width="0.1102%" height="15" fill="rgb(210,56,17)" fg:x="10622" fg:w="18"/><text x="65.2991%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.1163%" y="117" width="0.0612%" height="15" fill="rgb(224,130,29)" fg:x="10640" fg:w="10"/><text x="65.4092%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.1775%" y="117" width="0.1469%" height="15" fill="rgb(235,212,8)" fg:x="10650" fg:w="24"/><text x="65.4704%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.3244%" y="117" width="0.1102%" height="15" fill="rgb(223,33,50)" fg:x="10674" fg:w="18"/><text x="65.6173%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.4345%" y="117" width="0.0612%" height="15" fill="rgb(219,149,13)" fg:x="10692" fg:w="10"/><text x="65.7275%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.4957%" y="117" width="0.1469%" height="15" fill="rgb(250,156,29)" fg:x="10702" fg:w="24"/><text x="65.7887%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.6426%" y="117" width="0.1102%" height="15" fill="rgb(216,193,19)" fg:x="10726" fg:w="18"/><text x="65.9356%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.7528%" y="117" width="0.0612%" height="15" fill="rgb(216,135,14)" fg:x="10744" fg:w="10"/><text x="66.0457%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.8140%" y="117" width="0.1469%" height="15" fill="rgb(241,47,5)" fg:x="10754" fg:w="24"/><text x="66.1069%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.9608%" y="117" width="0.1102%" height="15" fill="rgb(233,42,35)" fg:x="10778" fg:w="18"/><text x="66.2538%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="66.0710%" y="117" width="0.0612%" height="15" fill="rgb(231,13,6)" fg:x="10796" fg:w="10"/><text x="66.3640%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="66.1322%" y="117" width="0.1469%" height="15" fill="rgb(207,181,40)" fg:x="10806" fg:w="24"/><text x="66.4252%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="66.2791%" y="117" width="0.0245%" height="15" fill="rgb(254,173,49)" fg:x="10830" fg:w="4"/><text x="66.5720%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="66.3035%" y="117" width="0.0245%" height="15" fill="rgb(221,1,38)" fg:x="10834" fg:w="4"/><text x="66.5965%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="66.3280%" y="117" width="0.0918%" height="15" fill="rgb(206,124,46)" fg:x="10838" fg:w="15"/><text x="66.6210%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="66.4198%" y="117" width="0.0918%" height="15" fill="rgb(249,21,11)" fg:x="10853" fg:w="15"/><text x="66.7128%" y="127.50"></text></g><g><title>rec (417 instructions, 2.55%)</title><rect x="65.0061%" y="133" width="2.5520%" height="15" fill="rgb(222,201,40)" fg:x="10622" fg:w="417"/><text x="65.2991%" y="143.50">r..</text></g><g><title>leaf (421 instructions, 2.58%)</title><rect x="65.0061%" y="149" width="2.5765%" height="15" fill="rgb(235,61,29)" fg:x="10622" fg:w="421"/><text x="65.2991%" y="159.50">l..</text></g><g><title>recursiveReplace (2,068 instructions, 12.66%)</title><rect x="55.2509%" y="165" width="12.6561%" height="15" fill="rgb(219,207,3)" fg:x="9028" fg:w="2068"/><text x="55.5439%" y="175.50">recursiveReplace</text></g><g><title>put.1 (2,208 instructions, 13.51%)</title><rect x="54.7980%" y="181" width="13.5129%" height="15" fill="rgb(222,56,46)" fg:x="8954" fg:w="2208"/><text x="55.0910%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="68.3109%" y="181" width="0.1408%" height="15" fill="rgb(239,76,54)" fg:x="11162" fg:w="23"/><text x="68.6039%" y="191.50"></text></g><g><title>account_put (3,075 instructions, 18.82%)</title><rect x="49.7124%" y="197" width="18.8188%" height="15" fill="rgb(231,124,27)" fg:x="8123" fg:w="3075"/><text x="50.0053%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="68.5312%" y="197" width="0.0979%" height="15" fill="rgb(249,195,6)" fg:x="11198" fg:w="16"/><text x="68.8242%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="68.6291%" y="165" width="4.5655%" height="15" fill="rgb(237,174,47)" fg:x="11214" fg:w="746"/><text x="68.9221%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="73.1946%" y="165" width="0.1408%" height="15" fill="rgb(206,201,31)" fg:x="11960" fg:w="23"/><text x="73.4876%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="73.3354%" y="165" width="0.0918%" height="15" fill="rgb(231,57,52)" fg:x="11983" fg:w="15"/><text x="73.6283%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="73.4272%" y="165" width="0.1408%" height="15" fill="rgb(248,177,22)" fg:x="11998" fg:w="23"/><text x="73.7201%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="68.6291%" y="181" width="5.0857%" height="15" fill="rgb(215,211,37)" fg:x="11214" fg:w="831"/><text x="68.9221%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.7148%" y="149" width="0.0918%" height="15" fill="rgb(241,128,51)" fg:x="12045" fg:w="15"/><text x="74.0078%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="73.7148%" y="165" width="0.1591%" height="15" fill="rgb(227,165,31)" fg:x="12045" fg:w="26"/><text x="74.0078%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.8739%" y="165" width="0.0918%" height="15" fill="rgb(228,167,24)" fg:x="12071" fg:w="15"/><text x="74.1669%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="73.9657%" y="149" width="0.0979%" height="15" fill="rgb(228,143,12)" fg:x="12086" fg:w="16"/><text x="74.2587%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.0636%" y="149" width="0.1102%" height="15" fill="rgb(249,149,8)" fg:x="12102" fg:w="18"/><text x="74.3566%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.1738%" y="133" width="0.0979%" height="15" fill="rgb(243,35,44)" fg:x="12120" fg:w="16"/><text x="74.4668%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.2717%" y="133" width="0.0979%" height="15" fill="rgb(246,89,9)" fg:x="12136" fg:w="16"/><text x="74.5647%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="74.1738%" y="149" width="0.3427%" height="15" fill="rgb(233,213,13)" fg:x="12120" fg:w="56"/><text x="74.4668%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.5165%" y="149" width="0.1102%" height="15" fill="rgb(233,141,41)" fg:x="12176" fg:w="18"/><text x="74.8095%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.6267%" y="133" width="0.0979%" height="15" fill="rgb(239,167,4)" fg:x="12194" fg:w="16"/><text x="74.9197%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.7246%" y="133" width="0.0979%" height="15" fill="rgb(209,217,16)" fg:x="12210" fg:w="16"/><text x="75.0176%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="74.6267%" y="149" width="0.3488%" height="15" fill="rgb(219,88,35)" fg:x="12194" fg:w="57"/><text x="74.9197%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.9755%" y="149" width="0.1102%" height="15" fill="rgb(220,193,23)" fg:x="12251" fg:w="18"/><text x="75.2685%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.0857%" y="133" width="0.0979%" height="15" fill="rgb(230,90,52)" fg:x="12269" fg:w="16"/><text x="75.3786%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.1836%" y="133" width="0.0979%" height="15" fill="rgb(252,106,19)" fg:x="12285" fg:w="16"/><text x="75.4766%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="75.0857%" y="149" width="0.3488%" height="15" fill="rgb(206,74,20)" fg:x="12269" fg:w="57"/><text x="75.3786%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="75.4345%" y="149" width="0.1102%" height="15" fill="rgb(230,138,44)" fg:x="12326" fg:w="18"/><text x="75.7275%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.5447%" y="133" width="0.0979%" height="15" fill="rgb(235,182,43)" fg:x="12344" fg:w="16"/><text x="75.8376%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.6426%" y="133" width="0.0979%" height="15" fill="rgb(242,16,51)" fg:x="12360" fg:w="16"/><text x="75.9356%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="75.5447%" y="149" width="0.3488%" height="15" fill="rgb(248,9,4)" fg:x="12344" fg:w="57"/><text x="75.8376%" y="159.50"></text></g><g><title>rec.2 (481 instructions, 2.94%)</title><rect x="73.9657%" y="165" width="2.9437%" height="15" fill="rgb(210,31,22)" fg:x="12086" fg:w="481"/><text x="74.2587%" y="175.50">re..</text></g><g><title>get.2 (544 instructions, 3.33%)</title><rect x="73.7148%" y="181" width="3.3293%" height="15" fill="rgb(239,54,39)" fg:x="12045" fg:w="544"/><text x="74.0078%" y="191.50">ge..</text></g><g><title>account_get (1,381 instructions, 8.45%)</title><rect x="68.6291%" y="197" width="8.4517%" height="15" fill="rgb(230,99,41)" fg:x="11214" fg:w="1381"/><text x="68.9221%" y="207.50">account_get</text></g><g><title>get.1 (7 instructions, 0.04%)</title><rect x="77.0808%" y="197" width="0.0428%" height="15" fill="rgb(253,106,12)" fg:x="12595" fg:w="7"/><text x="77.3738%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.1236%" y="197" width="0.0979%" height="15" fill="rgb(213,46,41)" fg:x="12602" fg:w="16"/><text x="77.4166%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="77.2215%" y="197" width="0.1469%" height="15" fill="rgb(215,133,35)" fg:x="12618" fg:w="24"/><text x="77.5145%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.3684%" y="197" width="0.0979%" height="15" fill="rgb(213,28,5)" fg:x="12642" fg:w="16"/><text x="77.6614%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="77.4663%" y="197" width="0.0918%" height="15" fill="rgb(215,77,49)" fg:x="12658" fg:w="15"/><text x="77.7593%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="77.5581%" y="165" width="4.5655%" height="15" fill="rgb(248,100,22)" fg:x="12673" fg:w="746"/><text x="77.8511%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="82.1236%" y="165" width="0.1408%" height="15" fill="rgb(208,67,9)" fg:x="13419" fg:w="23"/><text x="82.4166%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="82.2644%" y="165" width="0.0918%" height="15" fill="rgb(219,133,21)" fg:x="13442" fg:w="15"/><text x="82.5574%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="82.3562%" y="165" width="0.1408%" height="15" fill="rgb(246,46,29)" fg:x="13457" fg:w="23"/><text x="82.6491%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="77.5581%" y="181" width="5.0857%" height="15" fill="rgb(246,185,52)" fg:x="12673" fg:w="831"/><text x="77.8511%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="82.6438%" y="165" width="0.1102%" height="15" fill="rgb(252,136,11)" fg:x="13504" fg:w="18"/><text x="82.9368%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.7540%" y="165" width="0.0918%" height="15" fill="rgb(219,138,53)" fg:x="13522" fg:w="15"/><text x="83.0469%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.8458%" y="165" width="0.0918%" height="15" fill="rgb(211,51,23)" fg:x="13537" fg:w="15"/><text x="83.1387%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="82.9376%" y="149" width="0.0918%" height="15" fill="rgb(247,221,28)" fg:x="13552" fg:w="15"/><text x="83.2305%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="82.9376%" y="165" width="0.1591%" height="15" fill="rgb(251,222,45)" fg:x="13552" fg:w="26"/><text x="83.2305%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="83.0967%" y="149" width="0.0979%" height="15" fill="rgb(217,162,53)" fg:x="13578" fg:w="16"/><text x="83.3897%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.1946%" y="133" width="0.0918%" height="15" fill="rgb(229,93,14)" fg:x="13594" fg:w="15"/><text x="83.4876%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.2864%" y="133" width="0.0918%" height="15" fill="rgb(209,67,49)" fg:x="13609" fg:w="15"/><text x="83.5794%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="83.3782%" y="133" width="0.0918%" height="15" fill="rgb(213,87,29)" fg:x="13624" fg:w="15"/><text x="83.6712%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.4700%" y="117" width="0.1102%" height="15" fill="rgb(205,151,52)" fg:x="13639" fg:w="18"/><text x="83.7630%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.5802%" y="101" width="0.0979%" height="15" fill="rgb(253,215,39)" fg:x="13657" fg:w="16"/><text x="83.8731%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.6781%" y="101" width="0.0979%" height="15" fill="rgb(221,220,41)" fg:x="13673" fg:w="16"/><text x="83.9711%" y="111.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="83.5802%" y="117" width="0.3427%" height="15" fill="rgb(218,133,21)" fg:x="13657" fg:w="56"/><text x="83.8731%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.9229%" y="101" width="0.1102%" height="15" fill="rgb(221,193,43)" fg:x="13713" fg:w="18"/><text x="84.2159%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.0330%" y="85" width="0.0979%" height="15" fill="rgb(240,128,52)" fg:x="13731" fg:w="16"/><text x="84.3260%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.1310%" y="85" width="0.0979%" height="15" fill="rgb(253,114,12)" fg:x="13747" fg:w="16"/><text x="84.4239%" y="95.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="84.0330%" y="101" width="0.3488%" height="15" fill="rgb(215,223,47)" fg:x="13731" fg:w="57"/><text x="84.3260%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.3819%" y="85" width="0.1102%" height="15" fill="rgb(248,225,23)" fg:x="13788" fg:w="18"/><text x="84.6749%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.4920%" y="69" width="0.0979%" height="15" fill="rgb(250,108,0)" fg:x="13806" fg:w="16"/><text x="84.7850%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.5900%" y="69" width="0.0979%" height="15" fill="rgb(228,208,7)" fg:x="13822" fg:w="16"/><text x="84.8829%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="84.4920%" y="85" width="0.3488%" height="15" fill="rgb(244,45,10)" fg:x="13806" fg:w="57"/><text x="84.7850%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.8409%" y="69" width="0.1102%" height="15" fill="rgb(207,125,25)" fg:x="13863" fg:w="18"/><text x="85.1339%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.9510%" y="53" width="0.0979%" height="15" fill="rgb(210,195,18)" fg:x="13881" fg:w="16"/><text x="85.2440%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="85.0490%" y="53" width="0.0979%" height="15" fill="rgb(249,80,12)" fg:x="13897" fg:w="16"/><text x="85.3419%" y="63.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="84.9510%" y="69" width="0.3488%" height="15" fill="rgb(221,65,9)" fg:x="13881" fg:w="57"/><text x="85.2440%" y="79.50"></text></g><g><title>del (27 instructions, 0.17%)</title><rect x="85.2999%" y="69" width="0.1652%" height="15" fill="rgb(235,49,36)" fg:x="13938" fg:w="27"/><text x="85.5928%" y="79.50"></text></g><g><title>del (154 instructions, 0.94%)</title><rect x="84.8409%" y="85" width="0.9425%" height="15" fill="rgb(225,32,20)" fg:x="13863" fg:w="154"/><text x="85.1339%" y="95.50"></text></g><g><title>del (281 instructions, 1.72%)</title><rect x="84.3819%" y="101" width="1.7197%" height="15" fill="rgb(215,141,46)" fg:x="13788" fg:w="281"/><text x="84.6749%" y="111.50"></text></g><g><title>del (408 instructions, 2.50%)</title><rect x="83.9229%" y="117" width="2.4969%" height="15" fill="rgb(250,160,47)" fg:x="13713" fg:w="408"/><text x="84.2159%" y="127.50">d..</text></g><g><title>del (534 instructions, 3.27%)</title><rect x="83.4700%" y="133" width="3.2681%" height="15" fill="rgb(216,222,40)" fg:x="13639" fg:w="534"/><text x="83.7630%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="86.7381%" y="133" width="0.1102%" height="15" fill="rgb(234,217,39)" fg:x="14173" fg:w="18"/><text x="87.0310%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.8482%" y="133" width="0.1408%" height="15" fill="rgb(207,178,40)" fg:x="14191" fg:w="23"/><text x="87.1412%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.9890%" y="133" width="0.1408%" height="15" fill="rgb(221,136,13)" fg:x="14214" fg:w="23"/><text x="87.2820%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="87.1297%" y="133" width="0.1102%" height="15" fill="rgb(249,199,10)" fg:x="14237" fg:w="18"/><text x="87.4227%" y="143.50"></text></g><g><title>replace (720 instructions, 4.41%)</title><rect x="83.1946%" y="149" width="4.4064%" height="15" fill="rgb(249,222,13)" fg:x="13594" fg:w="720"/><text x="83.4876%" y="159.50">repl..</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.6010%" y="117" width="0.1102%" height="15" fill="rgb(244,185,38)" fg:x="14314" fg:w="18"/><text x="87.8939%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.7111%" y="117" width="0.0612%" height="15" fill="rgb(236,202,9)" fg:x="14332" fg:w="10"/><text x="88.0041%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="87.7723%" y="117" width="0.1469%" height="15" fill="rgb(250,229,37)" fg:x="14342" fg:w="24"/><text x="88.0653%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.9192%" y="117" width="0.1102%" height="15" fill="rgb(206,174,23)" fg:x="14366" fg:w="18"/><text x="88.2122%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.0294%" y="117" width="0.0612%" height="15" fill="rgb(211,33,43)" fg:x="14384" fg:w="10"/><text x="88.3223%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.0906%" y="117" width="0.1469%" height="15" fill="rgb(245,58,50)" fg:x="14394" fg:w="24"/><text x="88.3835%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.2375%" y="117" width="0.1102%" height="15" fill="rgb(244,68,36)" fg:x="14418" fg:w="18"/><text x="88.5304%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.3476%" y="117" width="0.0612%" height="15" fill="rgb(232,229,15)" fg:x="14436" fg:w="10"/><text x="88.6406%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.4088%" y="117" width="0.1469%" height="15" fill="rgb(254,30,23)" fg:x="14446" fg:w="24"/><text x="88.7018%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.5557%" y="117" width="0.1102%" height="15" fill="rgb(235,160,14)" fg:x="14470" fg:w="18"/><text x="88.8487%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.6659%" y="117" width="0.0612%" height="15" fill="rgb(212,155,44)" fg:x="14488" fg:w="10"/><text x="88.9588%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.7271%" y="117" width="0.1469%" height="15" fill="rgb(226,2,50)" fg:x="14498" fg:w="24"/><text x="89.0200%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.8739%" y="117" width="0.1102%" height="15" fill="rgb(234,177,6)" fg:x="14522" fg:w="18"/><text x="89.1669%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.9841%" y="117" width="0.0612%" height="15" fill="rgb(217,24,9)" fg:x="14540" fg:w="10"/><text x="89.2771%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="89.0453%" y="117" width="0.1469%" height="15" fill="rgb(220,13,46)" fg:x="14550" fg:w="24"/><text x="89.3383%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="89.1922%" y="117" width="0.0245%" height="15" fill="rgb(239,221,27)" fg:x="14574" fg:w="4"/><text x="89.4851%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="89.2166%" y="117" width="0.0245%" height="15" fill="rgb(222,198,25)" fg:x="14578" fg:w="4"/><text x="89.5096%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="89.2411%" y="117" width="0.0918%" height="15" fill="rgb(211,99,13)" fg:x="14582" fg:w="15"/><text x="89.5341%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="89.3329%" y="117" width="0.0918%" height="15" fill="rgb(232,111,31)" fg:x="14597" fg:w="15"/><text x="89.6259%" y="127.50"></text></g><g><title>rec (498 instructions, 3.05%)</title><rect x="87.6010%" y="133" width="3.0477%" height="15" fill="rgb(245,82,37)" fg:x="14314" fg:w="498"/><text x="87.8939%" y="143.50">rec</text></g><g><title>leaf (502 instructions, 3.07%)</title><rect x="87.6010%" y="149" width="3.0722%" height="15" fill="rgb(227,149,46)" fg:x="14314" fg:w="502"/><text x="87.8939%" y="159.50">le..</text></g><g><title>recursiveReplace (1,291 instructions, 7.90%)</title><rect x="83.0967%" y="165" width="7.9009%" height="15" fill="rgb(218,36,50)" fg:x="13578" fg:w="1291"/><text x="83.3897%" y="175.50">recursive..</text></g><g><title>put.1 (1,431 instructions, 8.76%)</title><rect x="82.6438%" y="181" width="8.7576%" height="15" fill="rgb(226,80,48)" fg:x="13504" fg:w="1431"/><text x="82.9368%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="91.4015%" y="181" width="0.1408%" height="15" fill="rgb(238,224,15)" fg:x="14935" fg:w="23"/><text x="91.6944%" y="191.50"></text></g><g><title>account_put (2,298 instructions, 14.06%)</title><rect x="77.5581%" y="197" width="14.0636%" height="15" fill="rgb(241,136,10)" fg:x="12673" fg:w="2298"/><text x="77.8511%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="91.6218%" y="181" width="0.2020%" height="15" fill="rgb(208,32,45)" fg:x="14971" fg:w="33"/><text x="91.9148%" y="191.50"></text></g><g><title>memcpy (76 instructions, 0.47%)</title><rect x="91.8237%" y="181" width="0.4651%" height="15" fill="rgb(207,135,9)" fg:x="15004" fg:w="76"/><text x="92.1167%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="92.2889%" y="181" width="0.2020%" height="15" fill="rgb(206,86,44)" fg:x="15080" fg:w="33"/><text x="92.5818%" y="191.50"></text></g><g><title>leb128_encode (9 instructions, 0.06%)</title><rect x="92.4908%" y="181" width="0.0551%" height="15" fill="rgb(245,177,15)" fg:x="15113" fg:w="9"/><text x="92.7838%" y="191.50"></text></g><g><title>reply_with_data (43 instructions, 0.26%)</title><rect x="92.5459%" y="181" width="0.2632%" height="15" fill="rgb(206,64,50)" fg:x="15122" fg:w="43"/><text x="92.8389%" y="191.50"></text></g><g><title>$lambda.35 (300 instructions, 1.84%)</title><rect x="91.6218%" y="197" width="1.8360%" height="15" fill="rgb(234,36,40)" fg:x="14971" fg:w="300"/><text x="91.9148%" y="207.50"></text></g><g><title>$lambda.2 (12,052 instructions, 73.76%)</title><rect x="20.4712%" y="213" width="73.7576%" height="15" fill="rgb(213,64,8)" fg:x="3345" fg:w="12052"/><text x="20.7642%" y="223.50">$lambda.2</text></g><g><title>schedule_copying_gc (45 instructions, 0.28%)</title><rect x="94.2289%" y="213" width="0.2754%" height="15" fill="rgb(210,75,36)" fg:x="15397" fg:w="45"/><text x="94.5219%" y="223.50"></text></g><g><title>trans_state4 (13 instructions, 0.08%)</title><rect x="94.5043%" y="213" width="0.0796%" height="15" fill="rgb(229,88,21)" fg:x="15442" fg:w="13"/><text x="94.7973%" y="223.50"></text></g><g><title>all (16,340 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(252,204,47)" fg:x="0" fg:w="16340"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (16,340 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(208,77,27)" fg:x="0" fg:w="16340"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>