<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="16252"><g><title>trans_state5 (8 instructions, 0.05%)</title><rect x="0.0000%" y="213" width="0.0492%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="0.0492%" y="213" width="0.2031%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="33"/><text x="0.3422%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="0.2523%" y="197" width="0.2830%" height="15" fill="rgb(221,193,54)" fg:x="41" fg:w="46"/><text x="0.5452%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="0.5353%" y="197" width="0.2031%" height="15" fill="rgb(248,212,6)" fg:x="87" fg:w="33"/><text x="0.8283%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="0.7384%" y="197" width="0.3692%" height="15" fill="rgb(208,68,35)" fg:x="120" fg:w="60"/><text x="1.0313%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="1.1076%" y="197" width="0.2830%" height="15" fill="rgb(232,128,0)" fg:x="180" fg:w="46"/><text x="1.4005%" y="207.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="1.3906%" y="197" width="0.7507%" height="15" fill="rgb(207,160,47)" fg:x="226" fg:w="122"/><text x="1.6836%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="2.1413%" y="197" width="0.3692%" height="15" fill="rgb(228,23,34)" fg:x="348" fg:w="60"/><text x="2.4342%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (17 instructions, 0.10%)</title><rect x="2.5105%" y="197" width="0.1046%" height="15" fill="rgb(218,30,26)" fg:x="408" fg:w="17"/><text x="2.8034%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="2.6151%" y="197" width="1.2183%" height="15" fill="rgb(220,122,19)" fg:x="425" fg:w="198"/><text x="2.9080%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="3.8334%" y="197" width="0.3692%" height="15" fill="rgb(250,228,42)" fg:x="623" fg:w="60"/><text x="4.1263%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (9 instructions, 0.06%)</title><rect x="4.2026%" y="197" width="0.0554%" height="15" fill="rgb(240,193,28)" fg:x="683" fg:w="9"/><text x="4.4955%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="4.2579%" y="197" width="0.3692%" height="15" fill="rgb(216,20,37)" fg:x="692" fg:w="60"/><text x="4.5509%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="4.6271%" y="197" width="0.2830%" height="15" fill="rgb(206,188,39)" fg:x="752" fg:w="46"/><text x="4.9201%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="4.9102%" y="197" width="1.2183%" height="15" fill="rgb(217,207,13)" fg:x="798" fg:w="198"/><text x="5.2031%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.1285%" y="197" width="0.3692%" height="15" fill="rgb(231,73,38)" fg:x="996" fg:w="60"/><text x="6.4214%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (9 instructions, 0.06%)</title><rect x="6.4977%" y="197" width="0.0554%" height="15" fill="rgb(225,20,46)" fg:x="1056" fg:w="9"/><text x="6.7906%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.5530%" y="197" width="0.3692%" height="15" fill="rgb(210,31,41)" fg:x="1065" fg:w="60"/><text x="6.8460%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.9222%" y="197" width="0.3692%" height="15" fill="rgb(221,200,47)" fg:x="1125" fg:w="60"/><text x="7.2152%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="7.2914%" y="197" width="0.2830%" height="15" fill="rgb(226,26,5)" fg:x="1185" fg:w="46"/><text x="7.5844%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="7.5745%" y="197" width="0.3692%" height="15" fill="rgb(249,33,26)" fg:x="1231" fg:w="60"/><text x="7.8674%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (9 instructions, 0.06%)</title><rect x="7.9436%" y="197" width="0.0554%" height="15" fill="rgb(235,183,28)" fg:x="1291" fg:w="9"/><text x="8.2366%" y="207.50"></text></g><g><title>parse_idl_header (1,580 instructions, 9.72%)</title><rect x="0.2523%" y="213" width="9.7219%" height="15" fill="rgb(221,5,38)" fg:x="41" fg:w="1580"/><text x="0.5452%" y="223.50">parse_idl_he..</text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="9.9742%" y="197" width="0.0246%" height="15" fill="rgb(247,18,42)" fg:x="1621" fg:w="4"/><text x="10.2671%" y="207.50"></text></g><g><title>idl_sub_buf_init (8 instructions, 0.05%)</title><rect x="9.9742%" y="213" width="0.0492%" height="15" fill="rgb(241,131,45)" fg:x="1621" fg:w="8"/><text x="10.2671%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="10.0234%" y="213" width="0.2830%" height="15" fill="rgb(249,31,29)" fg:x="1629" fg:w="46"/><text x="10.3164%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.3064%" y="213" width="0.3692%" height="15" fill="rgb(225,111,53)" fg:x="1675" fg:w="60"/><text x="10.5994%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.6756%" y="213" width="0.3692%" height="15" fill="rgb(238,160,17)" fg:x="1735" fg:w="60"/><text x="10.9686%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="11.0448%" y="213" width="0.2830%" height="15" fill="rgb(214,148,48)" fg:x="1795" fg:w="46"/><text x="11.3378%" y="223.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="11.3278%" y="213" width="0.0923%" height="15" fill="rgb(232,36,49)" fg:x="1841" fg:w="15"/><text x="11.6208%" y="223.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="11.4201%" y="197" width="0.7507%" height="15" fill="rgb(209,103,24)" fg:x="1856" fg:w="122"/><text x="11.7131%" y="207.50"></text></g><g><title>find_field (149 instructions, 0.92%)</title><rect x="11.4201%" y="213" width="0.9168%" height="15" fill="rgb(229,88,8)" fg:x="1856" fg:w="149"/><text x="11.7131%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="12.3369%" y="213" width="0.3692%" height="15" fill="rgb(213,181,19)" fg:x="2005" fg:w="60"/><text x="12.6299%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="12.7061%" y="197" width="0.2830%" height="15" fill="rgb(254,191,54)" fg:x="2065" fg:w="46"/><text x="12.9991%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="12.9892%" y="197" width="0.2031%" height="15" fill="rgb(241,83,37)" fg:x="2111" fg:w="33"/><text x="13.2821%" y="207.50"></text></g><g><title>memcpy (181 instructions, 1.11%)</title><rect x="13.1922%" y="197" width="1.1137%" height="15" fill="rgb(233,36,39)" fg:x="2144" fg:w="181"/><text x="13.4852%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (335 instructions, 2.06%)</title><rect x="12.7061%" y="213" width="2.0613%" height="15" fill="rgb(226,3,54)" fg:x="2065" fg:w="335"/><text x="12.9991%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="14.7674%" y="197" width="1.2183%" height="15" fill="rgb(245,192,40)" fg:x="2400" fg:w="198"/><text x="15.0604%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="14.7674%" y="213" width="1.3844%" height="15" fill="rgb(238,167,29)" fg:x="2400" fg:w="225"/><text x="15.0604%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.1519%" y="213" width="0.3692%" height="15" fill="rgb(232,182,51)" fg:x="2625" fg:w="60"/><text x="16.4448%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.5210%" y="197" width="0.3692%" height="15" fill="rgb(231,60,39)" fg:x="2685" fg:w="60"/><text x="16.8140%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="16.8902%" y="197" width="0.2830%" height="15" fill="rgb(208,69,12)" fg:x="2745" fg:w="46"/><text x="17.1832%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="17.1733%" y="197" width="0.0923%" height="15" fill="rgb(235,93,37)" fg:x="2791" fg:w="15"/><text x="17.4662%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="17.2656%" y="181" width="1.2183%" height="15" fill="rgb(213,116,39)" fg:x="2806" fg:w="198"/><text x="17.5585%" y="191.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="17.2656%" y="197" width="1.3844%" height="15" fill="rgb(222,207,29)" fg:x="2806" fg:w="225"/><text x="17.5585%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="18.6500%" y="197" width="0.3692%" height="15" fill="rgb(206,96,30)" fg:x="3031" fg:w="60"/><text x="18.9430%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (55 instructions, 0.34%)</title><rect x="19.0192%" y="181" width="0.3384%" height="15" fill="rgb(218,138,4)" fg:x="3091" fg:w="55"/><text x="19.3122%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (99 instructions, 0.61%)</title><rect x="19.0192%" y="197" width="0.6092%" height="15" fill="rgb(250,191,14)" fg:x="3091" fg:w="99"/><text x="19.3122%" y="207.50"></text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="19.6284%" y="197" width="0.0246%" height="15" fill="rgb(239,60,40)" fg:x="3190" fg:w="4"/><text x="19.9213%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (641 instructions, 3.94%)</title><rect x="16.5210%" y="213" width="3.9441%" height="15" fill="rgb(206,27,48)" fg:x="2685" fg:w="641"/><text x="16.8140%" y="223.50">@de..</text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="20.4652%" y="213" width="0.0246%" height="15" fill="rgb(225,35,8)" fg:x="3326" fg:w="4"/><text x="20.7581%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="20.4898%" y="213" width="0.0923%" height="15" fill="rgb(250,213,24)" fg:x="3330" fg:w="15"/><text x="20.7828%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="20.5821%" y="197" width="0.2031%" height="15" fill="rgb(247,123,22)" fg:x="3345" fg:w="33"/><text x="20.8751%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="20.7851%" y="197" width="0.0923%" height="15" fill="rgb(231,138,38)" fg:x="3378" fg:w="15"/><text x="21.0781%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="20.8774%" y="197" width="0.0984%" height="15" fill="rgb(231,145,46)" fg:x="3393" fg:w="16"/><text x="21.1704%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.59%)</title><rect x="20.9759%" y="165" width="4.5902%" height="15" fill="rgb(251,118,11)" fg:x="3409" fg:w="746"/><text x="21.2688%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="25.5661%" y="165" width="0.0554%" height="15" fill="rgb(217,147,25)" fg:x="4155" fg:w="9"/><text x="25.8591%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="25.6215%" y="165" width="0.0923%" height="15" fill="rgb(247,81,37)" fg:x="4164" fg:w="15"/><text x="25.9144%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="25.7138%" y="165" width="0.0554%" height="15" fill="rgb(209,12,38)" fg:x="4179" fg:w="9"/><text x="26.0067%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.95%)</title><rect x="20.9759%" y="181" width="4.9471%" height="15" fill="rgb(227,1,9)" fg:x="3409" fg:w="804"/><text x="21.2688%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="25.9230%" y="149" width="0.0923%" height="15" fill="rgb(248,47,43)" fg:x="4213" fg:w="15"/><text x="26.2159%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="25.9230%" y="165" width="0.1600%" height="15" fill="rgb(221,10,30)" fg:x="4213" fg:w="26"/><text x="26.2159%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="26.0829%" y="165" width="0.0923%" height="15" fill="rgb(210,229,1)" fg:x="4239" fg:w="15"/><text x="26.3759%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="26.1752%" y="149" width="0.0984%" height="15" fill="rgb(222,148,37)" fg:x="4254" fg:w="16"/><text x="26.4682%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.2737%" y="149" width="0.1108%" height="15" fill="rgb(234,67,33)" fg:x="4270" fg:w="18"/><text x="26.5667%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.3844%" y="133" width="0.0984%" height="15" fill="rgb(247,98,35)" fg:x="4288" fg:w="16"/><text x="26.6774%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.4829%" y="133" width="0.0984%" height="15" fill="rgb(247,138,52)" fg:x="4304" fg:w="16"/><text x="26.7759%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="26.3844%" y="149" width="0.3569%" height="15" fill="rgb(213,79,30)" fg:x="4288" fg:w="58"/><text x="26.6774%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.7413%" y="149" width="0.1108%" height="15" fill="rgb(246,177,23)" fg:x="4346" fg:w="18"/><text x="27.0343%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.8521%" y="133" width="0.0984%" height="15" fill="rgb(230,62,27)" fg:x="4364" fg:w="16"/><text x="27.1450%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.9505%" y="133" width="0.0984%" height="15" fill="rgb(216,154,8)" fg:x="4380" fg:w="16"/><text x="27.2435%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="26.8521%" y="149" width="0.3569%" height="15" fill="rgb(244,35,45)" fg:x="4364" fg:w="58"/><text x="27.1450%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.2090%" y="149" width="0.1108%" height="15" fill="rgb(251,115,12)" fg:x="4422" fg:w="18"/><text x="27.5019%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.3197%" y="133" width="0.0984%" height="15" fill="rgb(240,54,50)" fg:x="4440" fg:w="16"/><text x="27.6127%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.4182%" y="133" width="0.0984%" height="15" fill="rgb(233,84,52)" fg:x="4456" fg:w="16"/><text x="27.7111%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="27.3197%" y="149" width="0.3569%" height="15" fill="rgb(207,117,47)" fg:x="4440" fg:w="58"/><text x="27.6127%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.6766%" y="149" width="0.1108%" height="15" fill="rgb(249,43,39)" fg:x="4498" fg:w="18"/><text x="27.9696%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.7873%" y="133" width="0.0984%" height="15" fill="rgb(209,38,44)" fg:x="4516" fg:w="16"/><text x="28.0803%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.8858%" y="133" width="0.0984%" height="15" fill="rgb(236,212,23)" fg:x="4532" fg:w="16"/><text x="28.1788%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="27.9842%" y="133" width="0.0984%" height="15" fill="rgb(242,79,21)" fg:x="4548" fg:w="16"/><text x="28.2772%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="28.0827%" y="133" width="0.0984%" height="15" fill="rgb(211,96,35)" fg:x="4564" fg:w="16"/><text x="28.3757%" y="143.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.18%)</title><rect x="28.1811%" y="117" width="4.1779%" height="15" fill="rgb(253,215,40)" fg:x="4580" fg:w="679"/><text x="28.4741%" y="127.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.20%)</title><rect x="28.1811%" y="133" width="4.1964%" height="15" fill="rgb(211,81,21)" fg:x="4580" fg:w="682"/><text x="28.4741%" y="143.50">equa..</text></g><g><title>anon-func-192.5 (783 instructions, 4.82%)</title><rect x="27.7873%" y="149" width="4.8179%" height="15" fill="rgb(208,190,38)" fg:x="4516" fg:w="783"/><text x="28.0803%" y="159.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="32.6052%" y="149" width="0.1108%" height="15" fill="rgb(235,213,38)" fg:x="5299" fg:w="18"/><text x="32.8982%" y="159.50"></text></g><g><title>rec.2 (1,213 instructions, 7.46%)</title><rect x="26.1752%" y="165" width="7.4637%" height="15" fill="rgb(237,122,38)" fg:x="4254" fg:w="1213"/><text x="26.4682%" y="175.50">rec.2</text></g><g><title>get.2 (1,276 instructions, 7.85%)</title><rect x="25.9230%" y="181" width="7.8513%" height="15" fill="rgb(244,218,35)" fg:x="4213" fg:w="1276"/><text x="26.2159%" y="191.50">get.2</text></g><g><title>account_get (2,086 instructions, 12.84%)</title><rect x="20.9759%" y="197" width="12.8353%" height="15" fill="rgb(240,68,47)" fg:x="3409" fg:w="2086"/><text x="21.2688%" y="207.50">account_get</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="33.8112%" y="197" width="0.1108%" height="15" fill="rgb(210,16,53)" fg:x="5495" fg:w="18"/><text x="34.1042%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.9220%" y="197" width="0.0984%" height="15" fill="rgb(235,124,12)" fg:x="5513" fg:w="16"/><text x="34.2149%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.0204%" y="197" width="0.0984%" height="15" fill="rgb(224,169,11)" fg:x="5529" fg:w="16"/><text x="34.3134%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="34.1189%" y="197" width="0.0984%" height="15" fill="rgb(250,166,2)" fg:x="5545" fg:w="16"/><text x="34.4118%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.2173%" y="197" width="0.0984%" height="15" fill="rgb(242,216,29)" fg:x="5561" fg:w="16"/><text x="34.5103%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.3158%" y="197" width="0.0984%" height="15" fill="rgb(230,116,27)" fg:x="5577" fg:w="16"/><text x="34.6087%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="34.4142%" y="197" width="0.1477%" height="15" fill="rgb(228,99,48)" fg:x="5593" fg:w="24"/><text x="34.7072%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (37 instructions, 0.23%)</title><rect x="34.5619%" y="133" width="0.2277%" height="15" fill="rgb(253,11,6)" fg:x="5617" fg:w="37"/><text x="34.8549%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="34.7896%" y="133" width="0.6092%" height="15" fill="rgb(247,143,39)" fg:x="5654" fg:w="99"/><text x="35.0825%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="34.5619%" y="149" width="0.9906%" height="15" fill="rgb(236,97,10)" fg:x="5617" fg:w="161"/><text x="34.8549%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="34.5619%" y="165" width="1.0829%" height="15" fill="rgb(233,208,19)" fg:x="5617" fg:w="176"/><text x="34.8549%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="35.6448%" y="165" width="0.5968%" height="15" fill="rgb(216,164,2)" fg:x="5793" fg:w="97"/><text x="35.9378%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (30 instructions, 0.18%)</title><rect x="36.2417%" y="165" width="0.1846%" height="15" fill="rgb(220,129,5)" fg:x="5890" fg:w="30"/><text x="36.5347%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.17%)</title><rect x="34.5619%" y="181" width="2.1659%" height="15" fill="rgb(242,17,10)" fg:x="5617" fg:w="352"/><text x="34.8549%" y="191.50">b..</text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="36.7278%" y="165" width="0.0677%" height="15" fill="rgb(242,107,0)" fg:x="5969" fg:w="11"/><text x="37.0208%" y="175.50"></text></g><g><title>mp_cmp (25 instructions, 0.15%)</title><rect x="36.7278%" y="181" width="0.1538%" height="15" fill="rgb(251,28,31)" fg:x="5969" fg:w="25"/><text x="37.0208%" y="191.50"></text></g><g><title>B_lt (417 instructions, 2.57%)</title><rect x="34.5619%" y="197" width="2.5658%" height="15" fill="rgb(233,223,10)" fg:x="5617" fg:w="417"/><text x="34.8549%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="37.1277%" y="197" width="0.0984%" height="15" fill="rgb(215,21,27)" fg:x="6034" fg:w="16"/><text x="37.4207%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (37 instructions, 0.23%)</title><rect x="37.2262%" y="133" width="0.2277%" height="15" fill="rgb(232,23,21)" fg:x="6050" fg:w="37"/><text x="37.5192%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="37.4539%" y="133" width="0.6092%" height="15" fill="rgb(244,5,23)" fg:x="6087" fg:w="99"/><text x="37.7468%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="37.2262%" y="149" width="0.9906%" height="15" fill="rgb(226,81,46)" fg:x="6050" fg:w="161"/><text x="37.5192%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="37.2262%" y="165" width="1.0829%" height="15" fill="rgb(247,70,30)" fg:x="6050" fg:w="176"/><text x="37.5192%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="38.3091%" y="165" width="0.5968%" height="15" fill="rgb(212,68,19)" fg:x="6226" fg:w="97"/><text x="38.6021%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (30 instructions, 0.18%)</title><rect x="38.9060%" y="165" width="0.1846%" height="15" fill="rgb(240,187,13)" fg:x="6323" fg:w="30"/><text x="39.1989%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.17%)</title><rect x="37.2262%" y="181" width="2.1659%" height="15" fill="rgb(223,113,26)" fg:x="6050" fg:w="352"/><text x="37.5192%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (37 instructions, 0.23%)</title><rect x="39.3921%" y="149" width="0.2277%" height="15" fill="rgb(206,192,2)" fg:x="6402" fg:w="37"/><text x="39.6850%" y="159.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="39.6197%" y="149" width="0.6092%" height="15" fill="rgb(241,108,4)" fg:x="6439" fg:w="99"/><text x="39.9127%" y="159.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="39.3921%" y="165" width="0.9906%" height="15" fill="rgb(247,173,49)" fg:x="6402" fg:w="161"/><text x="39.6850%" y="175.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="39.3921%" y="181" width="1.0829%" height="15" fill="rgb(224,114,35)" fg:x="6402" fg:w="176"/><text x="39.6850%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="40.4750%" y="165" width="0.0677%" height="15" fill="rgb(245,159,27)" fg:x="6578" fg:w="11"/><text x="40.7680%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.14%)</title><rect x="40.5427%" y="149" width="0.1354%" height="15" fill="rgb(245,172,44)" fg:x="6589" fg:w="22"/><text x="40.8357%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="40.5427%" y="165" width="0.8184%" height="15" fill="rgb(236,23,11)" fg:x="6589" fg:w="133"/><text x="40.8357%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.02%)</title><rect x="40.4750%" y="181" width="1.0153%" height="15" fill="rgb(205,117,38)" fg:x="6578" fg:w="165"/><text x="40.7680%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (30 instructions, 0.18%)</title><rect x="41.4903%" y="181" width="0.1846%" height="15" fill="rgb(237,72,25)" fg:x="6743" fg:w="30"/><text x="41.7832%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="41.6749%" y="165" width="1.0214%" height="15" fill="rgb(244,70,9)" fg:x="6773" fg:w="166"/><text x="41.9678%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="41.6749%" y="181" width="1.2245%" height="15" fill="rgb(217,125,39)" fg:x="6773" fg:w="199"/><text x="41.9678%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (37 instructions, 0.23%)</title><rect x="43.4900%" y="133" width="0.2277%" height="15" fill="rgb(235,36,10)" fg:x="7068" fg:w="37"/><text x="43.7830%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="43.7177%" y="133" width="0.6092%" height="15" fill="rgb(251,123,47)" fg:x="7105" fg:w="99"/><text x="44.0107%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="43.4900%" y="149" width="0.9906%" height="15" fill="rgb(221,13,13)" fg:x="7068" fg:w="161"/><text x="43.7830%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="43.4900%" y="165" width="1.0829%" height="15" fill="rgb(238,131,9)" fg:x="7068" fg:w="176"/><text x="43.7830%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="44.5730%" y="165" width="0.5968%" height="15" fill="rgb(211,50,8)" fg:x="7244" fg:w="97"/><text x="44.8659%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (30 instructions, 0.18%)</title><rect x="45.1698%" y="165" width="0.1846%" height="15" fill="rgb(245,182,24)" fg:x="7341" fg:w="30"/><text x="45.4628%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.17%)</title><rect x="43.4900%" y="181" width="2.1659%" height="15" fill="rgb(242,14,37)" fg:x="7068" fg:w="352"/><text x="43.7830%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (37 instructions, 0.23%)</title><rect x="45.6559%" y="149" width="0.2277%" height="15" fill="rgb(246,228,12)" fg:x="7420" fg:w="37"/><text x="45.9489%" y="159.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="45.8836%" y="149" width="0.6092%" height="15" fill="rgb(213,55,15)" fg:x="7457" fg:w="99"/><text x="46.1766%" y="159.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="45.6559%" y="165" width="0.9906%" height="15" fill="rgb(209,9,3)" fg:x="7420" fg:w="161"/><text x="45.9489%" y="175.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="45.6559%" y="181" width="1.0829%" height="15" fill="rgb(230,59,30)" fg:x="7420" fg:w="176"/><text x="45.9489%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="46.7389%" y="165" width="0.0677%" height="15" fill="rgb(209,121,21)" fg:x="7596" fg:w="11"/><text x="47.0318%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.14%)</title><rect x="46.8065%" y="149" width="0.1354%" height="15" fill="rgb(220,109,13)" fg:x="7607" fg:w="22"/><text x="47.0995%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="46.8065%" y="165" width="0.8184%" height="15" fill="rgb(232,18,1)" fg:x="7607" fg:w="133"/><text x="47.0995%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.02%)</title><rect x="46.7389%" y="181" width="1.0153%" height="15" fill="rgb(215,41,42)" fg:x="7596" fg:w="165"/><text x="47.0318%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (30 instructions, 0.18%)</title><rect x="47.7541%" y="181" width="0.1846%" height="15" fill="rgb(224,123,36)" fg:x="7761" fg:w="30"/><text x="48.0471%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="47.9387%" y="165" width="1.0214%" height="15" fill="rgb(240,125,3)" fg:x="7791" fg:w="166"/><text x="48.2317%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="47.9387%" y="181" width="1.2245%" height="15" fill="rgb(205,98,50)" fg:x="7791" fg:w="199"/><text x="48.2317%" y="191.50"></text></g><g><title>B_sub (2,036 instructions, 12.53%)</title><rect x="37.2262%" y="197" width="12.5277%" height="15" fill="rgb(205,185,37)" fg:x="6050" fg:w="2036"/><text x="37.5192%" y="207.50">B_sub</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="49.7539%" y="197" width="0.0923%" height="15" fill="rgb(238,207,15)" fg:x="8086" fg:w="15"/><text x="50.0468%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.59%)</title><rect x="49.8462%" y="165" width="4.5902%" height="15" fill="rgb(213,199,42)" fg:x="8101" fg:w="746"/><text x="50.1391%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="54.4364%" y="165" width="0.0554%" height="15" fill="rgb(235,201,11)" fg:x="8847" fg:w="9"/><text x="54.7293%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="54.4918%" y="165" width="0.0923%" height="15" fill="rgb(207,46,11)" fg:x="8856" fg:w="15"/><text x="54.7847%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="54.5841%" y="165" width="0.0554%" height="15" fill="rgb(241,35,35)" fg:x="8871" fg:w="9"/><text x="54.8770%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.95%)</title><rect x="49.8462%" y="181" width="4.9471%" height="15" fill="rgb(243,32,47)" fg:x="8101" fg:w="804"/><text x="50.1391%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="54.7933%" y="165" width="0.1108%" height="15" fill="rgb(247,202,23)" fg:x="8905" fg:w="18"/><text x="55.0862%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="54.9040%" y="165" width="0.0923%" height="15" fill="rgb(219,102,11)" fg:x="8923" fg:w="15"/><text x="55.1970%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="54.9963%" y="165" width="0.0923%" height="15" fill="rgb(243,110,44)" fg:x="8938" fg:w="15"/><text x="55.2893%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.0886%" y="149" width="0.0923%" height="15" fill="rgb(222,74,54)" fg:x="8953" fg:w="15"/><text x="55.3816%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="55.0886%" y="165" width="0.1600%" height="15" fill="rgb(216,99,12)" fg:x="8953" fg:w="26"/><text x="55.3816%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="55.2486%" y="149" width="0.0984%" height="15" fill="rgb(226,22,26)" fg:x="8979" fg:w="16"/><text x="55.5416%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.3470%" y="133" width="0.0923%" height="15" fill="rgb(217,163,10)" fg:x="8995" fg:w="15"/><text x="55.6400%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.4393%" y="133" width="0.0923%" height="15" fill="rgb(213,25,53)" fg:x="9010" fg:w="15"/><text x="55.7323%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.5316%" y="133" width="0.0923%" height="15" fill="rgb(252,105,26)" fg:x="9025" fg:w="15"/><text x="55.8246%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="55.6239%" y="117" width="0.1108%" height="15" fill="rgb(220,39,43)" fg:x="9040" fg:w="18"/><text x="55.9169%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.7347%" y="101" width="0.0984%" height="15" fill="rgb(229,68,48)" fg:x="9058" fg:w="16"/><text x="56.0276%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.8331%" y="101" width="0.0984%" height="15" fill="rgb(252,8,32)" fg:x="9074" fg:w="16"/><text x="56.1261%" y="111.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="55.7347%" y="117" width="0.3569%" height="15" fill="rgb(223,20,43)" fg:x="9058" fg:w="58"/><text x="56.0276%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.0916%" y="101" width="0.1108%" height="15" fill="rgb(229,81,49)" fg:x="9116" fg:w="18"/><text x="56.3845%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.2023%" y="85" width="0.0984%" height="15" fill="rgb(236,28,36)" fg:x="9134" fg:w="16"/><text x="56.4953%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.3008%" y="85" width="0.0984%" height="15" fill="rgb(249,185,26)" fg:x="9150" fg:w="16"/><text x="56.5937%" y="95.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="56.2023%" y="101" width="0.3569%" height="15" fill="rgb(249,174,33)" fg:x="9134" fg:w="58"/><text x="56.4953%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.5592%" y="85" width="0.1108%" height="15" fill="rgb(233,201,37)" fg:x="9192" fg:w="18"/><text x="56.8522%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.6699%" y="69" width="0.0984%" height="15" fill="rgb(221,78,26)" fg:x="9210" fg:w="16"/><text x="56.9629%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.7684%" y="69" width="0.0984%" height="15" fill="rgb(250,127,30)" fg:x="9226" fg:w="16"/><text x="57.0614%" y="79.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="56.6699%" y="85" width="0.3569%" height="15" fill="rgb(230,49,44)" fg:x="9210" fg:w="58"/><text x="56.9629%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="57.0268%" y="69" width="0.1108%" height="15" fill="rgb(229,67,23)" fg:x="9268" fg:w="18"/><text x="57.3198%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.1376%" y="53" width="0.0984%" height="15" fill="rgb(249,83,47)" fg:x="9286" fg:w="16"/><text x="57.4306%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.2360%" y="53" width="0.0984%" height="15" fill="rgb(215,43,3)" fg:x="9302" fg:w="16"/><text x="57.5290%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.3345%" y="53" width="0.0984%" height="15" fill="rgb(238,154,13)" fg:x="9318" fg:w="16"/><text x="57.6275%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.4329%" y="53" width="0.0984%" height="15" fill="rgb(219,56,2)" fg:x="9334" fg:w="16"/><text x="57.7259%" y="63.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.18%)</title><rect x="57.5314%" y="37" width="4.1779%" height="15" fill="rgb(233,0,4)" fg:x="9350" fg:w="679"/><text x="57.8243%" y="47.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.20%)</title><rect x="57.5314%" y="53" width="4.1964%" height="15" fill="rgb(235,30,7)" fg:x="9350" fg:w="682"/><text x="57.8243%" y="63.50">equa..</text></g><g><title>anon-func-192.5 (783 instructions, 4.82%)</title><rect x="57.1376%" y="69" width="4.8179%" height="15" fill="rgb(250,79,13)" fg:x="9286" fg:w="783"/><text x="57.4306%" y="79.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="61.9555%" y="69" width="0.1108%" height="15" fill="rgb(211,146,34)" fg:x="10069" fg:w="18"/><text x="62.2484%" y="79.50"></text></g><g><title>del (860 instructions, 5.29%)</title><rect x="57.0268%" y="85" width="5.2917%" height="15" fill="rgb(228,22,38)" fg:x="9268" fg:w="860"/><text x="57.3198%" y="95.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.3185%" y="85" width="0.1415%" height="15" fill="rgb(235,168,5)" fg:x="10128" fg:w="23"/><text x="62.6115%" y="95.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.4600%" y="85" width="0.1108%" height="15" fill="rgb(221,155,16)" fg:x="10151" fg:w="18"/><text x="62.7530%" y="95.50"></text></g><g><title>del (1,039 instructions, 6.39%)</title><rect x="56.5592%" y="101" width="6.3931%" height="15" fill="rgb(215,215,53)" fg:x="9192" fg:w="1039"/><text x="56.8522%" y="111.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.9523%" y="101" width="0.1415%" height="15" fill="rgb(223,4,10)" fg:x="10231" fg:w="23"/><text x="63.2452%" y="111.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.0938%" y="101" width="0.1108%" height="15" fill="rgb(234,103,6)" fg:x="10254" fg:w="18"/><text x="63.3867%" y="111.50"></text></g><g><title>del (1,218 instructions, 7.49%)</title><rect x="56.0916%" y="117" width="7.4945%" height="15" fill="rgb(227,97,0)" fg:x="9116" fg:w="1218"/><text x="56.3845%" y="127.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="63.5860%" y="117" width="0.1415%" height="15" fill="rgb(234,150,53)" fg:x="10334" fg:w="23"/><text x="63.8790%" y="127.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.7275%" y="117" width="0.1108%" height="15" fill="rgb(228,201,54)" fg:x="10357" fg:w="18"/><text x="64.0205%" y="127.50"></text></g><g><title>del (1,397 instructions, 8.60%)</title><rect x="55.6239%" y="133" width="8.5959%" height="15" fill="rgb(222,22,37)" fg:x="9040" fg:w="1397"/><text x="55.9169%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="64.2198%" y="133" width="0.1108%" height="15" fill="rgb(237,53,32)" fg:x="10437" fg:w="18"/><text x="64.5128%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.3305%" y="133" width="0.1415%" height="15" fill="rgb(233,25,53)" fg:x="10455" fg:w="23"/><text x="64.6235%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.4721%" y="133" width="0.1415%" height="15" fill="rgb(210,40,34)" fg:x="10478" fg:w="23"/><text x="64.7650%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="64.6136%" y="133" width="0.1108%" height="15" fill="rgb(241,220,44)" fg:x="10501" fg:w="18"/><text x="64.9066%" y="143.50"></text></g><g><title>replace (1,583 instructions, 9.74%)</title><rect x="55.3470%" y="149" width="9.7403%" height="15" fill="rgb(235,28,35)" fg:x="8995" fg:w="1583"/><text x="55.6400%" y="159.50">replace</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.0874%" y="117" width="0.1108%" height="15" fill="rgb(210,56,17)" fg:x="10578" fg:w="18"/><text x="65.3803%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.1981%" y="117" width="0.0615%" height="15" fill="rgb(224,130,29)" fg:x="10596" fg:w="10"/><text x="65.4911%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.2597%" y="117" width="0.1477%" height="15" fill="rgb(235,212,8)" fg:x="10606" fg:w="24"/><text x="65.5526%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.4073%" y="117" width="0.1108%" height="15" fill="rgb(223,33,50)" fg:x="10630" fg:w="18"/><text x="65.7003%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.5181%" y="117" width="0.0615%" height="15" fill="rgb(219,149,13)" fg:x="10648" fg:w="10"/><text x="65.8111%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.5796%" y="117" width="0.1477%" height="15" fill="rgb(250,156,29)" fg:x="10658" fg:w="24"/><text x="65.8726%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.7273%" y="117" width="0.1108%" height="15" fill="rgb(216,193,19)" fg:x="10682" fg:w="18"/><text x="66.0203%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.8381%" y="117" width="0.0615%" height="15" fill="rgb(216,135,14)" fg:x="10700" fg:w="10"/><text x="66.1310%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.8996%" y="117" width="0.1477%" height="15" fill="rgb(241,47,5)" fg:x="10710" fg:w="24"/><text x="66.1926%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="66.0473%" y="117" width="0.1108%" height="15" fill="rgb(233,42,35)" fg:x="10734" fg:w="18"/><text x="66.3402%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="66.1580%" y="117" width="0.0615%" height="15" fill="rgb(231,13,6)" fg:x="10752" fg:w="10"/><text x="66.4510%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="66.2195%" y="117" width="0.1477%" height="15" fill="rgb(207,181,40)" fg:x="10762" fg:w="24"/><text x="66.5125%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="66.3672%" y="117" width="0.0246%" height="15" fill="rgb(254,173,49)" fg:x="10786" fg:w="4"/><text x="66.6602%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="66.3918%" y="117" width="0.0246%" height="15" fill="rgb(221,1,38)" fg:x="10790" fg:w="4"/><text x="66.6848%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="66.4164%" y="117" width="0.0923%" height="15" fill="rgb(206,124,46)" fg:x="10794" fg:w="15"/><text x="66.7094%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="66.5087%" y="117" width="0.0923%" height="15" fill="rgb(249,21,11)" fg:x="10809" fg:w="15"/><text x="66.8017%" y="127.50"></text></g><g><title>rec (417 instructions, 2.57%)</title><rect x="65.0874%" y="133" width="2.5658%" height="15" fill="rgb(222,201,40)" fg:x="10578" fg:w="417"/><text x="65.3803%" y="143.50">r..</text></g><g><title>leaf (421 instructions, 2.59%)</title><rect x="65.0874%" y="149" width="2.5905%" height="15" fill="rgb(235,61,29)" fg:x="10578" fg:w="421"/><text x="65.3803%" y="159.50">l..</text></g><g><title>recursiveReplace (2,073 instructions, 12.76%)</title><rect x="55.2486%" y="165" width="12.7554%" height="15" fill="rgb(219,207,3)" fg:x="8979" fg:w="2073"/><text x="55.5416%" y="175.50">recursiveReplace</text></g><g><title>put.1 (2,213 instructions, 13.62%)</title><rect x="54.7933%" y="181" width="13.6168%" height="15" fill="rgb(222,56,46)" fg:x="8905" fg:w="2213"/><text x="55.0862%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="68.4100%" y="181" width="0.1415%" height="15" fill="rgb(239,76,54)" fg:x="11118" fg:w="23"/><text x="68.7030%" y="191.50"></text></g><g><title>account_put (3,053 instructions, 18.79%)</title><rect x="49.8462%" y="197" width="18.7854%" height="15" fill="rgb(231,124,27)" fg:x="8101" fg:w="3053"/><text x="50.1391%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="68.6316%" y="197" width="0.0984%" height="15" fill="rgb(249,195,6)" fg:x="11154" fg:w="16"/><text x="68.9245%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.59%)</title><rect x="68.7300%" y="165" width="4.5902%" height="15" fill="rgb(237,174,47)" fg:x="11170" fg:w="746"/><text x="69.0230%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="73.3202%" y="165" width="0.0554%" height="15" fill="rgb(206,201,31)" fg:x="11916" fg:w="9"/><text x="73.6132%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="73.3756%" y="165" width="0.0923%" height="15" fill="rgb(231,57,52)" fg:x="11925" fg:w="15"/><text x="73.6686%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="73.4679%" y="165" width="0.0554%" height="15" fill="rgb(248,177,22)" fg:x="11940" fg:w="9"/><text x="73.7608%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.95%)</title><rect x="68.7300%" y="181" width="4.9471%" height="15" fill="rgb(215,211,37)" fg:x="11170" fg:w="804"/><text x="69.0230%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.6771%" y="149" width="0.0923%" height="15" fill="rgb(241,128,51)" fg:x="11974" fg:w="15"/><text x="73.9701%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="73.6771%" y="165" width="0.1600%" height="15" fill="rgb(227,165,31)" fg:x="11974" fg:w="26"/><text x="73.9701%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.8371%" y="165" width="0.0923%" height="15" fill="rgb(228,167,24)" fg:x="12000" fg:w="15"/><text x="74.1300%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="73.9294%" y="149" width="0.0984%" height="15" fill="rgb(228,143,12)" fg:x="12015" fg:w="16"/><text x="74.2223%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.0278%" y="149" width="0.1108%" height="15" fill="rgb(249,149,8)" fg:x="12031" fg:w="18"/><text x="74.3208%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.1386%" y="133" width="0.0984%" height="15" fill="rgb(243,35,44)" fg:x="12049" fg:w="16"/><text x="74.4315%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.2370%" y="133" width="0.0984%" height="15" fill="rgb(246,89,9)" fg:x="12065" fg:w="16"/><text x="74.5300%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="74.1386%" y="149" width="0.3569%" height="15" fill="rgb(233,213,13)" fg:x="12049" fg:w="58"/><text x="74.4315%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.4954%" y="149" width="0.1108%" height="15" fill="rgb(233,141,41)" fg:x="12107" fg:w="18"/><text x="74.7884%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.6062%" y="133" width="0.0984%" height="15" fill="rgb(239,167,4)" fg:x="12125" fg:w="16"/><text x="74.8992%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.7047%" y="133" width="0.0984%" height="15" fill="rgb(209,217,16)" fg:x="12141" fg:w="16"/><text x="74.9976%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="74.6062%" y="149" width="0.3569%" height="15" fill="rgb(219,88,35)" fg:x="12125" fg:w="58"/><text x="74.8992%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.9631%" y="149" width="0.1108%" height="15" fill="rgb(220,193,23)" fg:x="12183" fg:w="18"/><text x="75.2561%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.0738%" y="133" width="0.0984%" height="15" fill="rgb(230,90,52)" fg:x="12201" fg:w="16"/><text x="75.3668%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.1723%" y="133" width="0.0984%" height="15" fill="rgb(252,106,19)" fg:x="12217" fg:w="16"/><text x="75.4653%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="75.0738%" y="149" width="0.3569%" height="15" fill="rgb(206,74,20)" fg:x="12201" fg:w="58"/><text x="75.3668%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="75.4307%" y="149" width="0.1108%" height="15" fill="rgb(230,138,44)" fg:x="12259" fg:w="18"/><text x="75.7237%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.5415%" y="133" width="0.0984%" height="15" fill="rgb(235,182,43)" fg:x="12277" fg:w="16"/><text x="75.8344%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.6399%" y="133" width="0.0984%" height="15" fill="rgb(242,16,51)" fg:x="12293" fg:w="16"/><text x="75.9329%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="75.5415%" y="149" width="0.3569%" height="15" fill="rgb(248,9,4)" fg:x="12277" fg:w="58"/><text x="75.8344%" y="159.50"></text></g><g><title>rec.2 (486 instructions, 2.99%)</title><rect x="73.9294%" y="165" width="2.9904%" height="15" fill="rgb(210,31,22)" fg:x="12015" fg:w="486"/><text x="74.2223%" y="175.50">re..</text></g><g><title>get.2 (549 instructions, 3.38%)</title><rect x="73.6771%" y="181" width="3.3780%" height="15" fill="rgb(239,54,39)" fg:x="11974" fg:w="549"/><text x="73.9701%" y="191.50">ge..</text></g><g><title>account_get (1,359 instructions, 8.36%)</title><rect x="68.7300%" y="197" width="8.3620%" height="15" fill="rgb(230,99,41)" fg:x="11170" fg:w="1359"/><text x="69.0230%" y="207.50">account_get</text></g><g><title>get.1 (7 instructions, 0.04%)</title><rect x="77.0921%" y="197" width="0.0431%" height="15" fill="rgb(253,106,12)" fg:x="12529" fg:w="7"/><text x="77.3850%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.1351%" y="197" width="0.0984%" height="15" fill="rgb(213,46,41)" fg:x="12536" fg:w="16"/><text x="77.4281%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="77.2336%" y="197" width="0.1477%" height="15" fill="rgb(215,133,35)" fg:x="12552" fg:w="24"/><text x="77.5265%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.3812%" y="197" width="0.0984%" height="15" fill="rgb(213,28,5)" fg:x="12576" fg:w="16"/><text x="77.6742%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="77.4797%" y="197" width="0.0923%" height="15" fill="rgb(215,77,49)" fg:x="12592" fg:w="15"/><text x="77.7727%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.59%)</title><rect x="77.5720%" y="165" width="4.5902%" height="15" fill="rgb(248,100,22)" fg:x="12607" fg:w="746"/><text x="77.8650%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="82.1622%" y="165" width="0.0554%" height="15" fill="rgb(208,67,9)" fg:x="13353" fg:w="9"/><text x="82.4552%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="82.2176%" y="165" width="0.0923%" height="15" fill="rgb(219,133,21)" fg:x="13362" fg:w="15"/><text x="82.5105%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="82.3099%" y="165" width="0.0554%" height="15" fill="rgb(246,46,29)" fg:x="13377" fg:w="9"/><text x="82.6028%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.95%)</title><rect x="77.5720%" y="181" width="4.9471%" height="15" fill="rgb(246,185,52)" fg:x="12607" fg:w="804"/><text x="77.8650%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="82.5191%" y="165" width="0.1108%" height="15" fill="rgb(252,136,11)" fg:x="13411" fg:w="18"/><text x="82.8120%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.6298%" y="165" width="0.0923%" height="15" fill="rgb(219,138,53)" fg:x="13429" fg:w="15"/><text x="82.9228%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.7221%" y="165" width="0.0923%" height="15" fill="rgb(211,51,23)" fg:x="13444" fg:w="15"/><text x="83.0151%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="82.8144%" y="149" width="0.0923%" height="15" fill="rgb(247,221,28)" fg:x="13459" fg:w="15"/><text x="83.1074%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="82.8144%" y="165" width="0.1600%" height="15" fill="rgb(251,222,45)" fg:x="13459" fg:w="26"/><text x="83.1074%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="82.9744%" y="149" width="0.0984%" height="15" fill="rgb(217,162,53)" fg:x="13485" fg:w="16"/><text x="83.2674%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.0729%" y="133" width="0.0923%" height="15" fill="rgb(229,93,14)" fg:x="13501" fg:w="15"/><text x="83.3658%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.1651%" y="133" width="0.0923%" height="15" fill="rgb(209,67,49)" fg:x="13516" fg:w="15"/><text x="83.4581%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="83.2574%" y="133" width="0.0923%" height="15" fill="rgb(213,87,29)" fg:x="13531" fg:w="15"/><text x="83.5504%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.3497%" y="117" width="0.1108%" height="15" fill="rgb(205,151,52)" fg:x="13546" fg:w="18"/><text x="83.6427%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.4605%" y="101" width="0.0984%" height="15" fill="rgb(253,215,39)" fg:x="13564" fg:w="16"/><text x="83.7535%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.5589%" y="101" width="0.0984%" height="15" fill="rgb(221,220,41)" fg:x="13580" fg:w="16"/><text x="83.8519%" y="111.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="83.4605%" y="117" width="0.3569%" height="15" fill="rgb(218,133,21)" fg:x="13564" fg:w="58"/><text x="83.7535%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.8174%" y="101" width="0.1108%" height="15" fill="rgb(221,193,43)" fg:x="13622" fg:w="18"/><text x="84.1103%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.9281%" y="85" width="0.0984%" height="15" fill="rgb(240,128,52)" fg:x="13640" fg:w="16"/><text x="84.2211%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.0266%" y="85" width="0.0984%" height="15" fill="rgb(253,114,12)" fg:x="13656" fg:w="16"/><text x="84.3196%" y="95.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="83.9281%" y="101" width="0.3569%" height="15" fill="rgb(215,223,47)" fg:x="13640" fg:w="58"/><text x="84.2211%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.2850%" y="85" width="0.1108%" height="15" fill="rgb(248,225,23)" fg:x="13698" fg:w="18"/><text x="84.5780%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.3958%" y="69" width="0.0984%" height="15" fill="rgb(250,108,0)" fg:x="13716" fg:w="16"/><text x="84.6887%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.4942%" y="69" width="0.0984%" height="15" fill="rgb(228,208,7)" fg:x="13732" fg:w="16"/><text x="84.7872%" y="79.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="84.3958%" y="85" width="0.3569%" height="15" fill="rgb(244,45,10)" fg:x="13716" fg:w="58"/><text x="84.6887%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.7526%" y="69" width="0.1108%" height="15" fill="rgb(207,125,25)" fg:x="13774" fg:w="18"/><text x="85.0456%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.8634%" y="53" width="0.0984%" height="15" fill="rgb(210,195,18)" fg:x="13792" fg:w="16"/><text x="85.1564%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.9619%" y="53" width="0.0984%" height="15" fill="rgb(249,80,12)" fg:x="13808" fg:w="16"/><text x="85.2548%" y="63.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="84.8634%" y="69" width="0.3569%" height="15" fill="rgb(221,65,9)" fg:x="13792" fg:w="58"/><text x="85.1564%" y="79.50"></text></g><g><title>del (27 instructions, 0.17%)</title><rect x="85.2203%" y="69" width="0.1661%" height="15" fill="rgb(235,49,36)" fg:x="13850" fg:w="27"/><text x="85.5132%" y="79.50"></text></g><g><title>del (155 instructions, 0.95%)</title><rect x="84.7526%" y="85" width="0.9537%" height="15" fill="rgb(225,32,20)" fg:x="13774" fg:w="155"/><text x="85.0456%" y="95.50"></text></g><g><title>del (283 instructions, 1.74%)</title><rect x="84.2850%" y="101" width="1.7413%" height="15" fill="rgb(215,141,46)" fg:x="13698" fg:w="283"/><text x="84.5780%" y="111.50"></text></g><g><title>del (411 instructions, 2.53%)</title><rect x="83.8174%" y="117" width="2.5289%" height="15" fill="rgb(250,160,47)" fg:x="13622" fg:w="411"/><text x="84.1103%" y="127.50">d..</text></g><g><title>del (539 instructions, 3.32%)</title><rect x="83.3497%" y="133" width="3.3165%" height="15" fill="rgb(216,222,40)" fg:x="13546" fg:w="539"/><text x="83.6427%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="86.6663%" y="133" width="0.1108%" height="15" fill="rgb(234,217,39)" fg:x="14085" fg:w="18"/><text x="86.9592%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.7770%" y="133" width="0.1415%" height="15" fill="rgb(207,178,40)" fg:x="14103" fg:w="23"/><text x="87.0700%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.9185%" y="133" width="0.1415%" height="15" fill="rgb(221,136,13)" fg:x="14126" fg:w="23"/><text x="87.2115%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="87.0601%" y="133" width="0.1108%" height="15" fill="rgb(249,199,10)" fg:x="14149" fg:w="18"/><text x="87.3530%" y="143.50"></text></g><g><title>replace (725 instructions, 4.46%)</title><rect x="83.0729%" y="149" width="4.4610%" height="15" fill="rgb(249,222,13)" fg:x="13501" fg:w="725"/><text x="83.3658%" y="159.50">repl..</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.5338%" y="117" width="0.1108%" height="15" fill="rgb(244,185,38)" fg:x="14226" fg:w="18"/><text x="87.8268%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.6446%" y="117" width="0.0615%" height="15" fill="rgb(236,202,9)" fg:x="14244" fg:w="10"/><text x="87.9376%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="87.7061%" y="117" width="0.1477%" height="15" fill="rgb(250,229,37)" fg:x="14254" fg:w="24"/><text x="87.9991%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.8538%" y="117" width="0.1108%" height="15" fill="rgb(206,174,23)" fg:x="14278" fg:w="18"/><text x="88.1468%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.9646%" y="117" width="0.0615%" height="15" fill="rgb(211,33,43)" fg:x="14296" fg:w="10"/><text x="88.2575%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.0261%" y="117" width="0.1477%" height="15" fill="rgb(245,58,50)" fg:x="14306" fg:w="24"/><text x="88.3191%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.1738%" y="117" width="0.1108%" height="15" fill="rgb(244,68,36)" fg:x="14330" fg:w="18"/><text x="88.4667%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.2845%" y="117" width="0.0615%" height="15" fill="rgb(232,229,15)" fg:x="14348" fg:w="10"/><text x="88.5775%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.3460%" y="117" width="0.1477%" height="15" fill="rgb(254,30,23)" fg:x="14358" fg:w="24"/><text x="88.6390%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.4937%" y="117" width="0.1108%" height="15" fill="rgb(235,160,14)" fg:x="14382" fg:w="18"/><text x="88.7867%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.6045%" y="117" width="0.0615%" height="15" fill="rgb(212,155,44)" fg:x="14400" fg:w="10"/><text x="88.8974%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.6660%" y="117" width="0.1477%" height="15" fill="rgb(226,2,50)" fg:x="14410" fg:w="24"/><text x="88.9590%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.8137%" y="117" width="0.1108%" height="15" fill="rgb(234,177,6)" fg:x="14434" fg:w="18"/><text x="89.1067%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.9244%" y="117" width="0.0615%" height="15" fill="rgb(217,24,9)" fg:x="14452" fg:w="10"/><text x="89.2174%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.9860%" y="117" width="0.1477%" height="15" fill="rgb(220,13,46)" fg:x="14462" fg:w="24"/><text x="89.2789%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="89.1336%" y="117" width="0.0246%" height="15" fill="rgb(239,221,27)" fg:x="14486" fg:w="4"/><text x="89.4266%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="89.1583%" y="117" width="0.0246%" height="15" fill="rgb(222,198,25)" fg:x="14490" fg:w="4"/><text x="89.4512%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="89.1829%" y="117" width="0.0923%" height="15" fill="rgb(211,99,13)" fg:x="14494" fg:w="15"/><text x="89.4758%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="89.2752%" y="117" width="0.0923%" height="15" fill="rgb(232,111,31)" fg:x="14509" fg:w="15"/><text x="89.5681%" y="127.50"></text></g><g><title>rec (498 instructions, 3.06%)</title><rect x="87.5338%" y="133" width="3.0642%" height="15" fill="rgb(245,82,37)" fg:x="14226" fg:w="498"/><text x="87.8268%" y="143.50">rec</text></g><g><title>leaf (502 instructions, 3.09%)</title><rect x="87.5338%" y="149" width="3.0889%" height="15" fill="rgb(227,149,46)" fg:x="14226" fg:w="502"/><text x="87.8268%" y="159.50">le..</text></g><g><title>recursiveReplace (1,296 instructions, 7.97%)</title><rect x="82.9744%" y="165" width="7.9744%" height="15" fill="rgb(218,36,50)" fg:x="13485" fg:w="1296"/><text x="83.2674%" y="175.50">recursive..</text></g><g><title>put.1 (1,436 instructions, 8.84%)</title><rect x="82.5191%" y="181" width="8.8358%" height="15" fill="rgb(226,80,48)" fg:x="13411" fg:w="1436"/><text x="82.8120%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="91.3549%" y="181" width="0.1415%" height="15" fill="rgb(238,224,15)" fg:x="14847" fg:w="23"/><text x="91.6479%" y="191.50"></text></g><g><title>account_put (2,276 instructions, 14.00%)</title><rect x="77.5720%" y="197" width="14.0044%" height="15" fill="rgb(241,136,10)" fg:x="12607" fg:w="2276"/><text x="77.8650%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="91.5764%" y="181" width="0.2031%" height="15" fill="rgb(208,32,45)" fg:x="14883" fg:w="33"/><text x="91.8694%" y="191.50"></text></g><g><title>memcpy (76 instructions, 0.47%)</title><rect x="91.7795%" y="181" width="0.4676%" height="15" fill="rgb(207,135,9)" fg:x="14916" fg:w="76"/><text x="92.0724%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="92.2471%" y="181" width="0.2031%" height="15" fill="rgb(206,86,44)" fg:x="14992" fg:w="33"/><text x="92.5401%" y="191.50"></text></g><g><title>leb128_encode (9 instructions, 0.06%)</title><rect x="92.4502%" y="181" width="0.0554%" height="15" fill="rgb(245,177,15)" fg:x="15025" fg:w="9"/><text x="92.7431%" y="191.50"></text></g><g><title>reply_with_data (43 instructions, 0.26%)</title><rect x="92.5055%" y="181" width="0.2646%" height="15" fill="rgb(206,64,50)" fg:x="15034" fg:w="43"/><text x="92.7985%" y="191.50"></text></g><g><title>$lambda.35 (300 instructions, 1.85%)</title><rect x="91.5764%" y="197" width="1.8459%" height="15" fill="rgb(234,36,40)" fg:x="14883" fg:w="300"/><text x="91.8694%" y="207.50"></text></g><g><title>$lambda.2 (11,964 instructions, 73.62%)</title><rect x="20.5821%" y="213" width="73.6156%" height="15" fill="rgb(213,64,8)" fg:x="3345" fg:w="11964"/><text x="20.8751%" y="223.50">$lambda.2</text></g><g><title>schedule_copying_gc (45 instructions, 0.28%)</title><rect x="94.1976%" y="213" width="0.2769%" height="15" fill="rgb(210,75,36)" fg:x="15309" fg:w="45"/><text x="94.4906%" y="223.50"></text></g><g><title>trans_state4 (13 instructions, 0.08%)</title><rect x="94.4745%" y="213" width="0.0800%" height="15" fill="rgb(229,88,21)" fg:x="15354" fg:w="13"/><text x="94.7675%" y="223.50"></text></g><g><title>all (16,252 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(252,204,47)" fg:x="0" fg:w="16252"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (16,252 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(208,77,27)" fg:x="0" fg:w="16252"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>