<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="16228"><g><title>trans_state5 (8 instructions, 0.05%)</title><rect x="0.0000%" y="213" width="0.0493%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="0.0493%" y="213" width="0.2034%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="33"/><text x="0.3423%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="0.2526%" y="197" width="0.2835%" height="15" fill="rgb(221,193,54)" fg:x="41" fg:w="46"/><text x="0.5456%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="0.5361%" y="197" width="0.2034%" height="15" fill="rgb(248,212,6)" fg:x="87" fg:w="33"/><text x="0.8291%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="0.7395%" y="197" width="0.3697%" height="15" fill="rgb(208,68,35)" fg:x="120" fg:w="60"/><text x="1.0324%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="1.1092%" y="197" width="0.2835%" height="15" fill="rgb(232,128,0)" fg:x="180" fg:w="46"/><text x="1.4022%" y="207.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="1.3927%" y="197" width="0.7518%" height="15" fill="rgb(207,160,47)" fg:x="226" fg:w="122"/><text x="1.6856%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="2.1444%" y="197" width="0.3697%" height="15" fill="rgb(228,23,34)" fg:x="348" fg:w="60"/><text x="2.4374%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="2.5142%" y="197" width="1.2201%" height="15" fill="rgb(218,30,26)" fg:x="408" fg:w="198"/><text x="2.8071%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="3.7343%" y="197" width="0.3697%" height="15" fill="rgb(220,122,19)" fg:x="606" fg:w="60"/><text x="4.0273%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="4.1040%" y="197" width="0.3697%" height="15" fill="rgb(250,228,42)" fg:x="666" fg:w="60"/><text x="4.3970%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="4.4737%" y="197" width="0.2835%" height="15" fill="rgb(240,193,28)" fg:x="726" fg:w="46"/><text x="4.7667%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="4.7572%" y="197" width="1.2201%" height="15" fill="rgb(216,20,37)" fg:x="772" fg:w="198"/><text x="5.0502%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="5.9773%" y="197" width="0.3697%" height="15" fill="rgb(206,188,39)" fg:x="970" fg:w="60"/><text x="6.2703%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.3471%" y="197" width="0.3697%" height="15" fill="rgb(217,207,13)" fg:x="1030" fg:w="60"/><text x="6.6400%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.7168%" y="197" width="0.3697%" height="15" fill="rgb(231,73,38)" fg:x="1090" fg:w="60"/><text x="7.0098%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="7.0865%" y="197" width="0.2835%" height="15" fill="rgb(225,20,46)" fg:x="1150" fg:w="46"/><text x="7.3795%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="7.3700%" y="197" width="0.3697%" height="15" fill="rgb(210,31,41)" fg:x="1196" fg:w="60"/><text x="7.6629%" y="207.50"></text></g><g><title>parse_idl_header (1,572 instructions, 9.69%)</title><rect x="0.2526%" y="213" width="9.6870%" height="15" fill="rgb(221,200,47)" fg:x="41" fg:w="1572"/><text x="0.5456%" y="223.50">parse_idl_he..</text></g><g><title>memset (3 instructions, 0.02%)</title><rect x="9.9396%" y="197" width="0.0185%" height="15" fill="rgb(226,26,5)" fg:x="1613" fg:w="3"/><text x="10.2326%" y="207.50"></text></g><g><title>idl_sub_buf_init (6 instructions, 0.04%)</title><rect x="9.9396%" y="213" width="0.0370%" height="15" fill="rgb(249,33,26)" fg:x="1613" fg:w="6"/><text x="10.2326%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="9.9766%" y="213" width="0.2835%" height="15" fill="rgb(235,183,28)" fg:x="1619" fg:w="46"/><text x="10.2696%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.2600%" y="213" width="0.3697%" height="15" fill="rgb(221,5,38)" fg:x="1665" fg:w="60"/><text x="10.5530%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.6298%" y="213" width="0.3697%" height="15" fill="rgb(247,18,42)" fg:x="1725" fg:w="60"/><text x="10.9227%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="10.9995%" y="213" width="0.2835%" height="15" fill="rgb(241,131,45)" fg:x="1785" fg:w="46"/><text x="11.2925%" y="223.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="11.2830%" y="213" width="0.0924%" height="15" fill="rgb(249,31,29)" fg:x="1831" fg:w="15"/><text x="11.5759%" y="223.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="11.3754%" y="197" width="0.7518%" height="15" fill="rgb(225,111,53)" fg:x="1846" fg:w="122"/><text x="11.6684%" y="207.50"></text></g><g><title>find_field (149 instructions, 0.92%)</title><rect x="11.3754%" y="213" width="0.9182%" height="15" fill="rgb(238,160,17)" fg:x="1846" fg:w="149"/><text x="11.6684%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="12.2936%" y="213" width="0.3697%" height="15" fill="rgb(214,148,48)" fg:x="1995" fg:w="60"/><text x="12.5865%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="12.6633%" y="197" width="0.2835%" height="15" fill="rgb(232,36,49)" fg:x="2055" fg:w="46"/><text x="12.9563%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="12.9468%" y="197" width="0.2034%" height="15" fill="rgb(209,103,24)" fg:x="2101" fg:w="33"/><text x="13.2397%" y="207.50"></text></g><g><title>memcpy (181 instructions, 1.12%)</title><rect x="13.1501%" y="197" width="1.1154%" height="15" fill="rgb(229,88,8)" fg:x="2134" fg:w="181"/><text x="13.4431%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (335 instructions, 2.06%)</title><rect x="12.6633%" y="213" width="2.0643%" height="15" fill="rgb(213,181,19)" fg:x="2055" fg:w="335"/><text x="12.9563%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="14.7276%" y="197" width="1.2201%" height="15" fill="rgb(254,191,54)" fg:x="2390" fg:w="198"/><text x="15.0206%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.39%)</title><rect x="14.7276%" y="213" width="1.3865%" height="15" fill="rgb(241,83,37)" fg:x="2390" fg:w="225"/><text x="15.0206%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.1141%" y="213" width="0.3697%" height="15" fill="rgb(233,36,39)" fg:x="2615" fg:w="60"/><text x="16.4071%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.4839%" y="197" width="0.3697%" height="15" fill="rgb(226,3,54)" fg:x="2675" fg:w="60"/><text x="16.7768%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="16.8536%" y="197" width="0.2835%" height="15" fill="rgb(245,192,40)" fg:x="2735" fg:w="46"/><text x="17.1466%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="17.1370%" y="197" width="0.0924%" height="15" fill="rgb(238,167,29)" fg:x="2781" fg:w="15"/><text x="17.4300%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="17.2295%" y="181" width="1.2201%" height="15" fill="rgb(232,182,51)" fg:x="2796" fg:w="198"/><text x="17.5224%" y="191.50"></text></g><g><title>find_field (225 instructions, 1.39%)</title><rect x="17.2295%" y="197" width="1.3865%" height="15" fill="rgb(231,60,39)" fg:x="2796" fg:w="225"/><text x="17.5224%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="18.6160%" y="197" width="0.3697%" height="15" fill="rgb(208,69,12)" fg:x="3021" fg:w="60"/><text x="18.9089%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (55 instructions, 0.34%)</title><rect x="18.9857%" y="181" width="0.3389%" height="15" fill="rgb(235,93,37)" fg:x="3081" fg:w="55"/><text x="19.2787%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (99 instructions, 0.61%)</title><rect x="18.9857%" y="197" width="0.6101%" height="15" fill="rgb(213,116,39)" fg:x="3081" fg:w="99"/><text x="19.2787%" y="207.50"></text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="19.5958%" y="197" width="0.0246%" height="15" fill="rgb(222,207,29)" fg:x="3180" fg:w="4"/><text x="19.8887%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (641 instructions, 3.95%)</title><rect x="16.4839%" y="213" width="3.9500%" height="15" fill="rgb(206,96,30)" fg:x="2675" fg:w="641"/><text x="16.7768%" y="223.50">@de..</text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="20.4338%" y="213" width="0.0246%" height="15" fill="rgb(218,138,4)" fg:x="3316" fg:w="4"/><text x="20.7268%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="20.4585%" y="213" width="0.0924%" height="15" fill="rgb(250,191,14)" fg:x="3320" fg:w="15"/><text x="20.7514%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="20.5509%" y="197" width="0.2034%" height="15" fill="rgb(239,60,40)" fg:x="3335" fg:w="33"/><text x="20.8439%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="20.7543%" y="197" width="0.0924%" height="15" fill="rgb(206,27,48)" fg:x="3368" fg:w="15"/><text x="21.0472%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="20.8467%" y="197" width="0.0986%" height="15" fill="rgb(225,35,8)" fg:x="3383" fg:w="16"/><text x="21.1397%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.60%)</title><rect x="20.9453%" y="165" width="4.5970%" height="15" fill="rgb(250,213,24)" fg:x="3399" fg:w="746"/><text x="21.2382%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="25.5423%" y="165" width="0.0555%" height="15" fill="rgb(247,123,22)" fg:x="4145" fg:w="9"/><text x="25.8352%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="25.5977%" y="165" width="0.0924%" height="15" fill="rgb(231,138,38)" fg:x="4154" fg:w="15"/><text x="25.8907%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="25.6902%" y="165" width="0.0555%" height="15" fill="rgb(231,145,46)" fg:x="4169" fg:w="9"/><text x="25.9831%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.95%)</title><rect x="20.9453%" y="181" width="4.9544%" height="15" fill="rgb(251,118,11)" fg:x="3399" fg:w="804"/><text x="21.2382%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="25.8997%" y="149" width="0.0924%" height="15" fill="rgb(217,147,25)" fg:x="4203" fg:w="15"/><text x="26.1926%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="25.8997%" y="165" width="0.1602%" height="15" fill="rgb(247,81,37)" fg:x="4203" fg:w="26"/><text x="26.1926%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="26.0599%" y="165" width="0.0924%" height="15" fill="rgb(209,12,38)" fg:x="4229" fg:w="15"/><text x="26.3529%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="26.1523%" y="149" width="0.0986%" height="15" fill="rgb(227,1,9)" fg:x="4244" fg:w="16"/><text x="26.4453%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.2509%" y="149" width="0.1109%" height="15" fill="rgb(248,47,43)" fg:x="4260" fg:w="18"/><text x="26.5439%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.3618%" y="133" width="0.0986%" height="15" fill="rgb(221,10,30)" fg:x="4278" fg:w="16"/><text x="26.6548%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.4604%" y="133" width="0.0986%" height="15" fill="rgb(210,229,1)" fg:x="4294" fg:w="16"/><text x="26.7534%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="26.3618%" y="149" width="0.3574%" height="15" fill="rgb(222,148,37)" fg:x="4278" fg:w="58"/><text x="26.6548%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.7193%" y="149" width="0.1109%" height="15" fill="rgb(234,67,33)" fg:x="4336" fg:w="18"/><text x="27.0122%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.8302%" y="133" width="0.0986%" height="15" fill="rgb(247,98,35)" fg:x="4354" fg:w="16"/><text x="27.1231%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.9288%" y="133" width="0.0986%" height="15" fill="rgb(247,138,52)" fg:x="4370" fg:w="16"/><text x="27.2217%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="26.8302%" y="149" width="0.3574%" height="15" fill="rgb(213,79,30)" fg:x="4354" fg:w="58"/><text x="27.1231%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.1876%" y="149" width="0.1109%" height="15" fill="rgb(246,177,23)" fg:x="4412" fg:w="18"/><text x="27.4805%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.2985%" y="133" width="0.0986%" height="15" fill="rgb(230,62,27)" fg:x="4430" fg:w="16"/><text x="27.5915%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.3971%" y="133" width="0.0986%" height="15" fill="rgb(216,154,8)" fg:x="4446" fg:w="16"/><text x="27.6901%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="27.2985%" y="149" width="0.3512%" height="15" fill="rgb(244,35,45)" fg:x="4430" fg:w="57"/><text x="27.5915%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.6497%" y="149" width="0.1109%" height="15" fill="rgb(251,115,12)" fg:x="4487" fg:w="18"/><text x="27.9427%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.7607%" y="133" width="0.0986%" height="15" fill="rgb(240,54,50)" fg:x="4505" fg:w="16"/><text x="28.0536%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.8593%" y="133" width="0.0986%" height="15" fill="rgb(233,84,52)" fg:x="4521" fg:w="16"/><text x="28.1522%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="27.9579%" y="133" width="0.0986%" height="15" fill="rgb(207,117,47)" fg:x="4537" fg:w="16"/><text x="28.2508%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="28.0564%" y="133" width="0.0986%" height="15" fill="rgb(249,43,39)" fg:x="4553" fg:w="16"/><text x="28.3494%" y="143.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.18%)</title><rect x="28.1550%" y="117" width="4.1841%" height="15" fill="rgb(209,38,44)" fg:x="4569" fg:w="679"/><text x="28.4480%" y="127.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.20%)</title><rect x="28.1550%" y="133" width="4.2026%" height="15" fill="rgb(236,212,23)" fg:x="4569" fg:w="682"/><text x="28.4480%" y="143.50">equa..</text></g><g><title>anon-func-192.5 (783 instructions, 4.82%)</title><rect x="27.7607%" y="149" width="4.8250%" height="15" fill="rgb(242,79,21)" fg:x="4505" fg:w="783"/><text x="28.0536%" y="159.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="32.5857%" y="149" width="0.1109%" height="15" fill="rgb(211,96,35)" fg:x="5288" fg:w="18"/><text x="32.8786%" y="159.50"></text></g><g><title>rec.2 (1,212 instructions, 7.47%)</title><rect x="26.1523%" y="165" width="7.4686%" height="15" fill="rgb(253,215,40)" fg:x="4244" fg:w="1212"/><text x="26.4453%" y="175.50">rec.2</text></g><g><title>get.2 (1,275 instructions, 7.86%)</title><rect x="25.8997%" y="181" width="7.8568%" height="15" fill="rgb(211,81,21)" fg:x="4203" fg:w="1275"/><text x="26.1926%" y="191.50">get.2</text></g><g><title>account_get (2,085 instructions, 12.85%)</title><rect x="20.9453%" y="197" width="12.8482%" height="15" fill="rgb(208,190,38)" fg:x="3399" fg:w="2085"/><text x="21.2382%" y="207.50">account_get</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="33.7934%" y="197" width="0.1109%" height="15" fill="rgb(235,213,38)" fg:x="5484" fg:w="18"/><text x="34.0864%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.9044%" y="197" width="0.0986%" height="15" fill="rgb(237,122,38)" fg:x="5502" fg:w="16"/><text x="34.1973%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.0030%" y="197" width="0.0986%" height="15" fill="rgb(244,218,35)" fg:x="5518" fg:w="16"/><text x="34.2959%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="34.1016%" y="197" width="0.0986%" height="15" fill="rgb(240,68,47)" fg:x="5534" fg:w="16"/><text x="34.3945%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.2001%" y="197" width="0.0986%" height="15" fill="rgb(210,16,53)" fg:x="5550" fg:w="16"/><text x="34.4931%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.2987%" y="197" width="0.0986%" height="15" fill="rgb(235,124,12)" fg:x="5566" fg:w="16"/><text x="34.5917%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="34.3973%" y="197" width="0.1479%" height="15" fill="rgb(224,169,11)" fg:x="5582" fg:w="24"/><text x="34.6903%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="34.5452%" y="133" width="0.2280%" height="15" fill="rgb(250,166,2)" fg:x="5606" fg:w="37"/><text x="34.8382%" y="143.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="34.7732%" y="133" width="0.6039%" height="15" fill="rgb(242,216,29)" fg:x="5643" fg:w="98"/><text x="35.0662%" y="143.50"></text></g><g><title>mp_calloc (159 instructions, 0.98%)</title><rect x="34.5452%" y="149" width="0.9798%" height="15" fill="rgb(230,116,27)" fg:x="5606" fg:w="159"/><text x="34.8382%" y="159.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="34.5452%" y="165" width="1.0722%" height="15" fill="rgb(228,99,48)" fg:x="5606" fg:w="174"/><text x="34.8382%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="35.6175%" y="165" width="0.5977%" height="15" fill="rgb(253,11,6)" fg:x="5780" fg:w="97"/><text x="35.9104%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="36.2152%" y="165" width="0.1849%" height="15" fill="rgb(247,143,39)" fg:x="5877" fg:w="30"/><text x="36.5082%" y="175.50"></text></g><g><title>bigint_of_int64 (350 instructions, 2.16%)</title><rect x="34.5452%" y="181" width="2.1568%" height="15" fill="rgb(236,97,10)" fg:x="5606" fg:w="350"/><text x="34.8382%" y="191.50">b..</text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="36.7020%" y="165" width="0.0678%" height="15" fill="rgb(233,208,19)" fg:x="5956" fg:w="11"/><text x="36.9950%" y="175.50"></text></g><g><title>mp_cmp (25 instructions, 0.15%)</title><rect x="36.7020%" y="181" width="0.1541%" height="15" fill="rgb(216,164,2)" fg:x="5956" fg:w="25"/><text x="36.9950%" y="191.50"></text></g><g><title>B_lt (415 instructions, 2.56%)</title><rect x="34.5452%" y="197" width="2.5573%" height="15" fill="rgb(220,129,5)" fg:x="5606" fg:w="415"/><text x="34.8382%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="37.1025%" y="197" width="0.0986%" height="15" fill="rgb(242,17,10)" fg:x="6021" fg:w="16"/><text x="37.3955%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="37.2011%" y="133" width="0.2280%" height="15" fill="rgb(242,107,0)" fg:x="6037" fg:w="37"/><text x="37.4941%" y="143.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="37.4291%" y="133" width="0.6039%" height="15" fill="rgb(251,28,31)" fg:x="6074" fg:w="98"/><text x="37.7221%" y="143.50"></text></g><g><title>mp_calloc (159 instructions, 0.98%)</title><rect x="37.2011%" y="149" width="0.9798%" height="15" fill="rgb(233,223,10)" fg:x="6037" fg:w="159"/><text x="37.4941%" y="159.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="37.2011%" y="165" width="1.0722%" height="15" fill="rgb(215,21,27)" fg:x="6037" fg:w="174"/><text x="37.4941%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="38.2734%" y="165" width="0.5977%" height="15" fill="rgb(232,23,21)" fg:x="6211" fg:w="97"/><text x="38.5663%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="38.8711%" y="165" width="0.1849%" height="15" fill="rgb(244,5,23)" fg:x="6308" fg:w="30"/><text x="39.1641%" y="175.50"></text></g><g><title>bigint_of_int64 (350 instructions, 2.16%)</title><rect x="37.2011%" y="181" width="2.1568%" height="15" fill="rgb(226,81,46)" fg:x="6037" fg:w="350"/><text x="37.4941%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="39.3579%" y="149" width="0.2280%" height="15" fill="rgb(247,70,30)" fg:x="6387" fg:w="37"/><text x="39.6509%" y="159.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="39.5859%" y="149" width="0.6039%" height="15" fill="rgb(212,68,19)" fg:x="6424" fg:w="98"/><text x="39.8789%" y="159.50"></text></g><g><title>mp_calloc (159 instructions, 0.98%)</title><rect x="39.3579%" y="165" width="0.9798%" height="15" fill="rgb(240,187,13)" fg:x="6387" fg:w="159"/><text x="39.6509%" y="175.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="39.3579%" y="181" width="1.0722%" height="15" fill="rgb(223,113,26)" fg:x="6387" fg:w="174"/><text x="39.6509%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="40.4301%" y="165" width="0.0678%" height="15" fill="rgb(206,192,2)" fg:x="6561" fg:w="11"/><text x="40.7231%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.14%)</title><rect x="40.4979%" y="149" width="0.1356%" height="15" fill="rgb(241,108,4)" fg:x="6572" fg:w="22"/><text x="40.7909%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="40.4979%" y="165" width="0.8196%" height="15" fill="rgb(247,173,49)" fg:x="6572" fg:w="133"/><text x="40.7909%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.02%)</title><rect x="40.4301%" y="181" width="1.0168%" height="15" fill="rgb(224,114,35)" fg:x="6561" fg:w="165"/><text x="40.7231%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="41.4469%" y="181" width="0.1849%" height="15" fill="rgb(245,159,27)" fg:x="6726" fg:w="30"/><text x="41.7399%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="41.6317%" y="165" width="1.0229%" height="15" fill="rgb(245,172,44)" fg:x="6756" fg:w="166"/><text x="41.9247%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.23%)</title><rect x="41.6317%" y="181" width="1.2263%" height="15" fill="rgb(236,23,11)" fg:x="6756" fg:w="199"/><text x="41.9247%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="43.4496%" y="133" width="0.2280%" height="15" fill="rgb(205,117,38)" fg:x="7051" fg:w="37"/><text x="43.7426%" y="143.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="43.6776%" y="133" width="0.6039%" height="15" fill="rgb(237,72,25)" fg:x="7088" fg:w="98"/><text x="43.9706%" y="143.50"></text></g><g><title>mp_calloc (159 instructions, 0.98%)</title><rect x="43.4496%" y="149" width="0.9798%" height="15" fill="rgb(244,70,9)" fg:x="7051" fg:w="159"/><text x="43.7426%" y="159.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="43.4496%" y="165" width="1.0722%" height="15" fill="rgb(217,125,39)" fg:x="7051" fg:w="174"/><text x="43.7426%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="44.5218%" y="165" width="0.5977%" height="15" fill="rgb(235,36,10)" fg:x="7225" fg:w="97"/><text x="44.8148%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="45.1195%" y="165" width="0.1849%" height="15" fill="rgb(251,123,47)" fg:x="7322" fg:w="30"/><text x="45.4125%" y="175.50"></text></g><g><title>bigint_of_int64 (350 instructions, 2.16%)</title><rect x="43.4496%" y="181" width="2.1568%" height="15" fill="rgb(221,13,13)" fg:x="7051" fg:w="350"/><text x="43.7426%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="45.6064%" y="149" width="0.2280%" height="15" fill="rgb(238,131,9)" fg:x="7401" fg:w="37"/><text x="45.8993%" y="159.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="45.8344%" y="149" width="0.6039%" height="15" fill="rgb(211,50,8)" fg:x="7438" fg:w="98"/><text x="46.1273%" y="159.50"></text></g><g><title>mp_calloc (159 instructions, 0.98%)</title><rect x="45.6064%" y="165" width="0.9798%" height="15" fill="rgb(245,182,24)" fg:x="7401" fg:w="159"/><text x="45.8993%" y="175.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="45.6064%" y="181" width="1.0722%" height="15" fill="rgb(242,14,37)" fg:x="7401" fg:w="174"/><text x="45.8993%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="46.6786%" y="165" width="0.0678%" height="15" fill="rgb(246,228,12)" fg:x="7575" fg:w="11"/><text x="46.9715%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.14%)</title><rect x="46.7464%" y="149" width="0.1356%" height="15" fill="rgb(213,55,15)" fg:x="7586" fg:w="22"/><text x="47.0393%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="46.7464%" y="165" width="0.8196%" height="15" fill="rgb(209,9,3)" fg:x="7586" fg:w="133"/><text x="47.0393%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.02%)</title><rect x="46.6786%" y="181" width="1.0168%" height="15" fill="rgb(230,59,30)" fg:x="7575" fg:w="165"/><text x="46.9715%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="47.6953%" y="181" width="0.1849%" height="15" fill="rgb(209,121,21)" fg:x="7740" fg:w="30"/><text x="47.9883%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="47.8802%" y="165" width="1.0229%" height="15" fill="rgb(220,109,13)" fg:x="7770" fg:w="166"/><text x="48.1732%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.23%)</title><rect x="47.8802%" y="181" width="1.2263%" height="15" fill="rgb(232,18,1)" fg:x="7770" fg:w="199"/><text x="48.1732%" y="191.50"></text></g><g><title>B_sub (2,028 instructions, 12.50%)</title><rect x="37.2011%" y="197" width="12.4969%" height="15" fill="rgb(215,41,42)" fg:x="6037" fg:w="2028"/><text x="37.4941%" y="207.50">B_sub</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="49.6981%" y="197" width="0.0924%" height="15" fill="rgb(224,123,36)" fg:x="8065" fg:w="15"/><text x="49.9910%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.60%)</title><rect x="49.7905%" y="165" width="4.5970%" height="15" fill="rgb(240,125,3)" fg:x="8080" fg:w="746"/><text x="50.0835%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="54.3875%" y="165" width="0.0555%" height="15" fill="rgb(205,98,50)" fg:x="8826" fg:w="9"/><text x="54.6804%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="54.4429%" y="165" width="0.0924%" height="15" fill="rgb(205,185,37)" fg:x="8835" fg:w="15"/><text x="54.7359%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="54.5354%" y="165" width="0.0555%" height="15" fill="rgb(238,207,15)" fg:x="8850" fg:w="9"/><text x="54.8283%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.95%)</title><rect x="49.7905%" y="181" width="4.9544%" height="15" fill="rgb(213,199,42)" fg:x="8080" fg:w="804"/><text x="50.0835%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="54.7449%" y="165" width="0.1109%" height="15" fill="rgb(235,201,11)" fg:x="8884" fg:w="18"/><text x="55.0379%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="54.8558%" y="165" width="0.0924%" height="15" fill="rgb(207,46,11)" fg:x="8902" fg:w="15"/><text x="55.1488%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="54.9482%" y="165" width="0.0924%" height="15" fill="rgb(241,35,35)" fg:x="8917" fg:w="15"/><text x="55.2412%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.0407%" y="149" width="0.0924%" height="15" fill="rgb(243,32,47)" fg:x="8932" fg:w="15"/><text x="55.3336%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="55.0407%" y="165" width="0.1602%" height="15" fill="rgb(247,202,23)" fg:x="8932" fg:w="26"/><text x="55.3336%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="55.2009%" y="149" width="0.0986%" height="15" fill="rgb(219,102,11)" fg:x="8958" fg:w="16"/><text x="55.4939%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.2995%" y="133" width="0.0924%" height="15" fill="rgb(243,110,44)" fg:x="8974" fg:w="15"/><text x="55.5925%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.3919%" y="133" width="0.0924%" height="15" fill="rgb(222,74,54)" fg:x="8989" fg:w="15"/><text x="55.6849%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.4843%" y="133" width="0.0924%" height="15" fill="rgb(216,99,12)" fg:x="9004" fg:w="15"/><text x="55.7773%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="55.5768%" y="117" width="0.1109%" height="15" fill="rgb(226,22,26)" fg:x="9019" fg:w="18"/><text x="55.8697%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.6877%" y="101" width="0.0986%" height="15" fill="rgb(217,163,10)" fg:x="9037" fg:w="16"/><text x="55.9807%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.7863%" y="101" width="0.0986%" height="15" fill="rgb(213,25,53)" fg:x="9053" fg:w="16"/><text x="56.0793%" y="111.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="55.6877%" y="117" width="0.3574%" height="15" fill="rgb(252,105,26)" fg:x="9037" fg:w="58"/><text x="55.9807%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.0451%" y="101" width="0.1109%" height="15" fill="rgb(220,39,43)" fg:x="9095" fg:w="18"/><text x="56.3381%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.1560%" y="85" width="0.0986%" height="15" fill="rgb(229,68,48)" fg:x="9113" fg:w="16"/><text x="56.4490%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.2546%" y="85" width="0.0986%" height="15" fill="rgb(252,8,32)" fg:x="9129" fg:w="16"/><text x="56.5476%" y="95.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="56.1560%" y="101" width="0.3574%" height="15" fill="rgb(223,20,43)" fg:x="9113" fg:w="58"/><text x="56.4490%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.5134%" y="85" width="0.1109%" height="15" fill="rgb(229,81,49)" fg:x="9171" fg:w="18"/><text x="56.8064%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.6244%" y="69" width="0.0986%" height="15" fill="rgb(236,28,36)" fg:x="9189" fg:w="16"/><text x="56.9173%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.7229%" y="69" width="0.0986%" height="15" fill="rgb(249,185,26)" fg:x="9205" fg:w="16"/><text x="57.0159%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="56.6244%" y="85" width="0.3512%" height="15" fill="rgb(249,174,33)" fg:x="9189" fg:w="57"/><text x="56.9173%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.9756%" y="69" width="0.1109%" height="15" fill="rgb(233,201,37)" fg:x="9246" fg:w="18"/><text x="57.2686%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.0865%" y="53" width="0.0986%" height="15" fill="rgb(221,78,26)" fg:x="9264" fg:w="16"/><text x="57.3795%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.1851%" y="53" width="0.0986%" height="15" fill="rgb(250,127,30)" fg:x="9280" fg:w="16"/><text x="57.4781%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.2837%" y="53" width="0.0986%" height="15" fill="rgb(230,49,44)" fg:x="9296" fg:w="16"/><text x="57.5767%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.3823%" y="53" width="0.0986%" height="15" fill="rgb(229,67,23)" fg:x="9312" fg:w="16"/><text x="57.6753%" y="63.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.18%)</title><rect x="57.4809%" y="37" width="4.1841%" height="15" fill="rgb(249,83,47)" fg:x="9328" fg:w="679"/><text x="57.7739%" y="47.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.20%)</title><rect x="57.4809%" y="53" width="4.2026%" height="15" fill="rgb(215,43,3)" fg:x="9328" fg:w="682"/><text x="57.7739%" y="63.50">equa..</text></g><g><title>anon-func-192.5 (783 instructions, 4.82%)</title><rect x="57.0865%" y="69" width="4.8250%" height="15" fill="rgb(238,154,13)" fg:x="9264" fg:w="783"/><text x="57.3795%" y="79.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="61.9115%" y="69" width="0.1109%" height="15" fill="rgb(219,56,2)" fg:x="10047" fg:w="18"/><text x="62.2045%" y="79.50"></text></g><g><title>del (860 instructions, 5.30%)</title><rect x="56.9756%" y="85" width="5.2995%" height="15" fill="rgb(233,0,4)" fg:x="9246" fg:w="860"/><text x="57.2686%" y="95.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.2751%" y="85" width="0.1417%" height="15" fill="rgb(235,30,7)" fg:x="10106" fg:w="23"/><text x="62.5680%" y="95.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.4168%" y="85" width="0.1109%" height="15" fill="rgb(250,79,13)" fg:x="10129" fg:w="18"/><text x="62.7098%" y="95.50"></text></g><g><title>del (1,038 instructions, 6.40%)</title><rect x="56.5134%" y="101" width="6.3964%" height="15" fill="rgb(211,146,34)" fg:x="9171" fg:w="1038"/><text x="56.8064%" y="111.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.9098%" y="101" width="0.1417%" height="15" fill="rgb(228,22,38)" fg:x="10209" fg:w="23"/><text x="63.2028%" y="111.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.0515%" y="101" width="0.1109%" height="15" fill="rgb(235,168,5)" fg:x="10232" fg:w="18"/><text x="63.3445%" y="111.50"></text></g><g><title>del (1,217 instructions, 7.50%)</title><rect x="56.0451%" y="117" width="7.4994%" height="15" fill="rgb(221,155,16)" fg:x="9095" fg:w="1217"/><text x="56.3381%" y="127.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="63.5445%" y="117" width="0.1417%" height="15" fill="rgb(215,215,53)" fg:x="10312" fg:w="23"/><text x="63.8375%" y="127.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.6862%" y="117" width="0.1109%" height="15" fill="rgb(223,4,10)" fg:x="10335" fg:w="18"/><text x="63.9792%" y="127.50"></text></g><g><title>del (1,396 instructions, 8.60%)</title><rect x="55.5768%" y="133" width="8.6024%" height="15" fill="rgb(234,103,6)" fg:x="9019" fg:w="1396"/><text x="55.8697%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="64.1792%" y="133" width="0.1109%" height="15" fill="rgb(227,97,0)" fg:x="10415" fg:w="18"/><text x="64.4722%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.2901%" y="133" width="0.1417%" height="15" fill="rgb(234,150,53)" fg:x="10433" fg:w="23"/><text x="64.5831%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.4318%" y="133" width="0.1417%" height="15" fill="rgb(228,201,54)" fg:x="10456" fg:w="23"/><text x="64.7248%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="64.5736%" y="133" width="0.1109%" height="15" fill="rgb(222,22,37)" fg:x="10479" fg:w="18"/><text x="64.8665%" y="143.50"></text></g><g><title>replace (1,582 instructions, 9.75%)</title><rect x="55.2995%" y="149" width="9.7486%" height="15" fill="rgb(237,53,32)" fg:x="8974" fg:w="1582"/><text x="55.5925%" y="159.50">replace</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.0481%" y="117" width="0.1109%" height="15" fill="rgb(233,25,53)" fg:x="10556" fg:w="18"/><text x="65.3410%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.1590%" y="117" width="0.0616%" height="15" fill="rgb(210,40,34)" fg:x="10574" fg:w="10"/><text x="65.4520%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.2206%" y="117" width="0.1479%" height="15" fill="rgb(241,220,44)" fg:x="10584" fg:w="24"/><text x="65.5136%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.3685%" y="117" width="0.1109%" height="15" fill="rgb(235,28,35)" fg:x="10608" fg:w="18"/><text x="65.6615%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.4794%" y="117" width="0.0616%" height="15" fill="rgb(210,56,17)" fg:x="10626" fg:w="10"/><text x="65.7724%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.5410%" y="117" width="0.1479%" height="15" fill="rgb(224,130,29)" fg:x="10636" fg:w="24"/><text x="65.8340%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.6889%" y="117" width="0.1109%" height="15" fill="rgb(235,212,8)" fg:x="10660" fg:w="18"/><text x="65.9819%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.7999%" y="117" width="0.0616%" height="15" fill="rgb(223,33,50)" fg:x="10678" fg:w="10"/><text x="66.0928%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.8615%" y="117" width="0.1479%" height="15" fill="rgb(219,149,13)" fg:x="10688" fg:w="24"/><text x="66.1544%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="66.0094%" y="117" width="0.1109%" height="15" fill="rgb(250,156,29)" fg:x="10712" fg:w="18"/><text x="66.3023%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="66.1203%" y="117" width="0.0616%" height="15" fill="rgb(216,193,19)" fg:x="10730" fg:w="10"/><text x="66.4133%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="66.1819%" y="117" width="0.1479%" height="15" fill="rgb(216,135,14)" fg:x="10740" fg:w="24"/><text x="66.4749%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="66.3298%" y="117" width="0.0246%" height="15" fill="rgb(241,47,5)" fg:x="10764" fg:w="4"/><text x="66.6228%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="66.3544%" y="117" width="0.0246%" height="15" fill="rgb(233,42,35)" fg:x="10768" fg:w="4"/><text x="66.6474%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="66.3791%" y="117" width="0.0924%" height="15" fill="rgb(231,13,6)" fg:x="10772" fg:w="15"/><text x="66.6721%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="66.4715%" y="117" width="0.0924%" height="15" fill="rgb(207,181,40)" fg:x="10787" fg:w="15"/><text x="66.7645%" y="127.50"></text></g><g><title>rec (417 instructions, 2.57%)</title><rect x="65.0481%" y="133" width="2.5696%" height="15" fill="rgb(254,173,49)" fg:x="10556" fg:w="417"/><text x="65.3410%" y="143.50">r..</text></g><g><title>leaf (421 instructions, 2.59%)</title><rect x="65.0481%" y="149" width="2.5943%" height="15" fill="rgb(221,1,38)" fg:x="10556" fg:w="421"/><text x="65.3410%" y="159.50">l..</text></g><g><title>recursiveReplace (2,072 instructions, 12.77%)</title><rect x="55.2009%" y="165" width="12.7681%" height="15" fill="rgb(206,124,46)" fg:x="8958" fg:w="2072"/><text x="55.4939%" y="175.50">recursiveReplace</text></g><g><title>put.1 (2,212 instructions, 13.63%)</title><rect x="54.7449%" y="181" width="13.6308%" height="15" fill="rgb(249,21,11)" fg:x="8884" fg:w="2212"/><text x="55.0379%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="68.3756%" y="181" width="0.1417%" height="15" fill="rgb(222,201,40)" fg:x="11096" fg:w="23"/><text x="68.6686%" y="191.50"></text></g><g><title>account_put (3,052 instructions, 18.81%)</title><rect x="49.7905%" y="197" width="18.8070%" height="15" fill="rgb(235,61,29)" fg:x="8080" fg:w="3052"/><text x="50.0835%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="68.5975%" y="197" width="0.0986%" height="15" fill="rgb(219,207,3)" fg:x="11132" fg:w="16"/><text x="68.8905%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.60%)</title><rect x="68.6961%" y="165" width="4.5970%" height="15" fill="rgb(222,56,46)" fg:x="11148" fg:w="746"/><text x="68.9890%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="73.2931%" y="165" width="0.0555%" height="15" fill="rgb(239,76,54)" fg:x="11894" fg:w="9"/><text x="73.5860%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="73.3485%" y="165" width="0.0924%" height="15" fill="rgb(231,124,27)" fg:x="11903" fg:w="15"/><text x="73.6415%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="73.4410%" y="165" width="0.0555%" height="15" fill="rgb(249,195,6)" fg:x="11918" fg:w="9"/><text x="73.7339%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.95%)</title><rect x="68.6961%" y="181" width="4.9544%" height="15" fill="rgb(237,174,47)" fg:x="11148" fg:w="804"/><text x="68.9890%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.6505%" y="149" width="0.0924%" height="15" fill="rgb(206,201,31)" fg:x="11952" fg:w="15"/><text x="73.9434%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="73.6505%" y="165" width="0.1602%" height="15" fill="rgb(231,57,52)" fg:x="11952" fg:w="26"/><text x="73.9434%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.8107%" y="165" width="0.0924%" height="15" fill="rgb(248,177,22)" fg:x="11978" fg:w="15"/><text x="74.1037%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="73.9031%" y="149" width="0.0986%" height="15" fill="rgb(215,211,37)" fg:x="11993" fg:w="16"/><text x="74.1961%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.0017%" y="149" width="0.1109%" height="15" fill="rgb(241,128,51)" fg:x="12009" fg:w="18"/><text x="74.2947%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.1126%" y="133" width="0.0986%" height="15" fill="rgb(227,165,31)" fg:x="12027" fg:w="16"/><text x="74.4056%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.2112%" y="133" width="0.0986%" height="15" fill="rgb(228,167,24)" fg:x="12043" fg:w="16"/><text x="74.5042%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="74.1126%" y="149" width="0.3574%" height="15" fill="rgb(228,143,12)" fg:x="12027" fg:w="58"/><text x="74.4056%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.4701%" y="149" width="0.1109%" height="15" fill="rgb(249,149,8)" fg:x="12085" fg:w="18"/><text x="74.7630%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.5810%" y="133" width="0.0986%" height="15" fill="rgb(243,35,44)" fg:x="12103" fg:w="16"/><text x="74.8739%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.6796%" y="133" width="0.0986%" height="15" fill="rgb(246,89,9)" fg:x="12119" fg:w="16"/><text x="74.9725%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="74.5810%" y="149" width="0.3574%" height="15" fill="rgb(233,213,13)" fg:x="12103" fg:w="58"/><text x="74.8739%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.9384%" y="149" width="0.1109%" height="15" fill="rgb(233,141,41)" fg:x="12161" fg:w="18"/><text x="75.2313%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.0493%" y="133" width="0.0986%" height="15" fill="rgb(239,167,4)" fg:x="12179" fg:w="16"/><text x="75.3423%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.1479%" y="133" width="0.0986%" height="15" fill="rgb(209,217,16)" fg:x="12195" fg:w="16"/><text x="75.4409%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="75.0493%" y="149" width="0.3574%" height="15" fill="rgb(219,88,35)" fg:x="12179" fg:w="58"/><text x="75.3423%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="75.4067%" y="149" width="0.1109%" height="15" fill="rgb(220,193,23)" fg:x="12237" fg:w="18"/><text x="75.6997%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.5176%" y="133" width="0.0986%" height="15" fill="rgb(230,90,52)" fg:x="12255" fg:w="16"/><text x="75.8106%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.6162%" y="133" width="0.0986%" height="15" fill="rgb(252,106,19)" fg:x="12271" fg:w="16"/><text x="75.9092%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="75.5176%" y="149" width="0.3512%" height="15" fill="rgb(206,74,20)" fg:x="12255" fg:w="57"/><text x="75.8106%" y="159.50"></text></g><g><title>rec.2 (485 instructions, 2.99%)</title><rect x="73.9031%" y="165" width="2.9887%" height="15" fill="rgb(230,138,44)" fg:x="11993" fg:w="485"/><text x="74.1961%" y="175.50">re..</text></g><g><title>get.2 (548 instructions, 3.38%)</title><rect x="73.6505%" y="181" width="3.3769%" height="15" fill="rgb(235,182,43)" fg:x="11952" fg:w="548"/><text x="73.9434%" y="191.50">ge..</text></g><g><title>account_get (1,358 instructions, 8.37%)</title><rect x="68.6961%" y="197" width="8.3683%" height="15" fill="rgb(242,16,51)" fg:x="11148" fg:w="1358"/><text x="68.9890%" y="207.50">account_get</text></g><g><title>get.1 (7 instructions, 0.04%)</title><rect x="77.0643%" y="197" width="0.0431%" height="15" fill="rgb(248,9,4)" fg:x="12506" fg:w="7"/><text x="77.3573%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.1075%" y="197" width="0.0986%" height="15" fill="rgb(210,31,22)" fg:x="12513" fg:w="16"/><text x="77.4004%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="77.2061%" y="197" width="0.1479%" height="15" fill="rgb(239,54,39)" fg:x="12529" fg:w="24"/><text x="77.4990%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.3540%" y="197" width="0.0986%" height="15" fill="rgb(230,99,41)" fg:x="12553" fg:w="16"/><text x="77.6469%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="77.4526%" y="197" width="0.0924%" height="15" fill="rgb(253,106,12)" fg:x="12569" fg:w="15"/><text x="77.7455%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.60%)</title><rect x="77.5450%" y="165" width="4.5970%" height="15" fill="rgb(213,46,41)" fg:x="12584" fg:w="746"/><text x="77.8380%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="82.1420%" y="165" width="0.0555%" height="15" fill="rgb(215,133,35)" fg:x="13330" fg:w="9"/><text x="82.4349%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="82.1974%" y="165" width="0.0924%" height="15" fill="rgb(213,28,5)" fg:x="13339" fg:w="15"/><text x="82.4904%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="82.2899%" y="165" width="0.0555%" height="15" fill="rgb(215,77,49)" fg:x="13354" fg:w="9"/><text x="82.5828%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.95%)</title><rect x="77.5450%" y="181" width="4.9544%" height="15" fill="rgb(248,100,22)" fg:x="12584" fg:w="804"/><text x="77.8380%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="82.4994%" y="165" width="0.1109%" height="15" fill="rgb(208,67,9)" fg:x="13388" fg:w="18"/><text x="82.7924%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.6103%" y="165" width="0.0924%" height="15" fill="rgb(219,133,21)" fg:x="13406" fg:w="15"/><text x="82.9033%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.7027%" y="165" width="0.0924%" height="15" fill="rgb(246,46,29)" fg:x="13421" fg:w="15"/><text x="82.9957%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="82.7952%" y="149" width="0.0924%" height="15" fill="rgb(246,185,52)" fg:x="13436" fg:w="15"/><text x="83.0881%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="82.7952%" y="165" width="0.1602%" height="15" fill="rgb(252,136,11)" fg:x="13436" fg:w="26"/><text x="83.0881%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="82.9554%" y="149" width="0.0986%" height="15" fill="rgb(219,138,53)" fg:x="13462" fg:w="16"/><text x="83.2484%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.0540%" y="133" width="0.0924%" height="15" fill="rgb(211,51,23)" fg:x="13478" fg:w="15"/><text x="83.3469%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.1464%" y="133" width="0.0924%" height="15" fill="rgb(247,221,28)" fg:x="13493" fg:w="15"/><text x="83.4394%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="83.2388%" y="133" width="0.0924%" height="15" fill="rgb(251,222,45)" fg:x="13508" fg:w="15"/><text x="83.5318%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.3313%" y="117" width="0.1109%" height="15" fill="rgb(217,162,53)" fg:x="13523" fg:w="18"/><text x="83.6242%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.4422%" y="101" width="0.0986%" height="15" fill="rgb(229,93,14)" fg:x="13541" fg:w="16"/><text x="83.7352%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.5408%" y="101" width="0.0986%" height="15" fill="rgb(209,67,49)" fg:x="13557" fg:w="16"/><text x="83.8338%" y="111.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="83.4422%" y="117" width="0.3574%" height="15" fill="rgb(213,87,29)" fg:x="13541" fg:w="58"/><text x="83.7352%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.7996%" y="101" width="0.1109%" height="15" fill="rgb(205,151,52)" fg:x="13599" fg:w="18"/><text x="84.0926%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.9105%" y="85" width="0.0986%" height="15" fill="rgb(253,215,39)" fg:x="13617" fg:w="16"/><text x="84.2035%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.0091%" y="85" width="0.0986%" height="15" fill="rgb(221,220,41)" fg:x="13633" fg:w="16"/><text x="84.3021%" y="95.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="83.9105%" y="101" width="0.3574%" height="15" fill="rgb(218,133,21)" fg:x="13617" fg:w="58"/><text x="84.2035%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.2679%" y="85" width="0.1109%" height="15" fill="rgb(221,193,43)" fg:x="13675" fg:w="18"/><text x="84.5609%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.3789%" y="69" width="0.0986%" height="15" fill="rgb(240,128,52)" fg:x="13693" fg:w="16"/><text x="84.6718%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.4774%" y="69" width="0.0986%" height="15" fill="rgb(253,114,12)" fg:x="13709" fg:w="16"/><text x="84.7704%" y="79.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="84.3789%" y="85" width="0.3574%" height="15" fill="rgb(215,223,47)" fg:x="13693" fg:w="58"/><text x="84.6718%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.7363%" y="69" width="0.1109%" height="15" fill="rgb(248,225,23)" fg:x="13751" fg:w="18"/><text x="85.0292%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.8472%" y="53" width="0.0986%" height="15" fill="rgb(250,108,0)" fg:x="13769" fg:w="16"/><text x="85.1401%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.9458%" y="53" width="0.0986%" height="15" fill="rgb(228,208,7)" fg:x="13785" fg:w="16"/><text x="85.2387%" y="63.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="84.8472%" y="69" width="0.3512%" height="15" fill="rgb(244,45,10)" fg:x="13769" fg:w="57"/><text x="85.1401%" y="79.50"></text></g><g><title>del (27 instructions, 0.17%)</title><rect x="85.1984%" y="69" width="0.1664%" height="15" fill="rgb(207,125,25)" fg:x="13826" fg:w="27"/><text x="85.4914%" y="79.50"></text></g><g><title>del (154 instructions, 0.95%)</title><rect x="84.7363%" y="85" width="0.9490%" height="15" fill="rgb(210,195,18)" fg:x="13751" fg:w="154"/><text x="85.0292%" y="95.50"></text></g><g><title>del (282 instructions, 1.74%)</title><rect x="84.2679%" y="101" width="1.7377%" height="15" fill="rgb(249,80,12)" fg:x="13675" fg:w="282"/><text x="84.5609%" y="111.50"></text></g><g><title>del (410 instructions, 2.53%)</title><rect x="83.7996%" y="117" width="2.5265%" height="15" fill="rgb(221,65,9)" fg:x="13599" fg:w="410"/><text x="84.0926%" y="127.50">d..</text></g><g><title>del (538 instructions, 3.32%)</title><rect x="83.3313%" y="133" width="3.3153%" height="15" fill="rgb(235,49,36)" fg:x="13523" fg:w="538"/><text x="83.6242%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="86.6465%" y="133" width="0.1109%" height="15" fill="rgb(225,32,20)" fg:x="14061" fg:w="18"/><text x="86.9395%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.7575%" y="133" width="0.1417%" height="15" fill="rgb(215,141,46)" fg:x="14079" fg:w="23"/><text x="87.0504%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.8992%" y="133" width="0.1417%" height="15" fill="rgb(250,160,47)" fg:x="14102" fg:w="23"/><text x="87.1922%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="87.0409%" y="133" width="0.1109%" height="15" fill="rgb(216,222,40)" fg:x="14125" fg:w="18"/><text x="87.3339%" y="143.50"></text></g><g><title>replace (724 instructions, 4.46%)</title><rect x="83.0540%" y="149" width="4.4614%" height="15" fill="rgb(234,217,39)" fg:x="13478" fg:w="724"/><text x="83.3469%" y="159.50">repl..</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.5154%" y="117" width="0.1109%" height="15" fill="rgb(207,178,40)" fg:x="14202" fg:w="18"/><text x="87.8084%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.6263%" y="117" width="0.0616%" height="15" fill="rgb(221,136,13)" fg:x="14220" fg:w="10"/><text x="87.9193%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="87.6879%" y="117" width="0.1479%" height="15" fill="rgb(249,199,10)" fg:x="14230" fg:w="24"/><text x="87.9809%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.8358%" y="117" width="0.1109%" height="15" fill="rgb(249,222,13)" fg:x="14254" fg:w="18"/><text x="88.1288%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.9468%" y="117" width="0.0616%" height="15" fill="rgb(244,185,38)" fg:x="14272" fg:w="10"/><text x="88.2397%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.0084%" y="117" width="0.1479%" height="15" fill="rgb(236,202,9)" fg:x="14282" fg:w="24"/><text x="88.3013%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.1563%" y="117" width="0.1109%" height="15" fill="rgb(250,229,37)" fg:x="14306" fg:w="18"/><text x="88.4492%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.2672%" y="117" width="0.0616%" height="15" fill="rgb(206,174,23)" fg:x="14324" fg:w="10"/><text x="88.5602%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.3288%" y="117" width="0.1479%" height="15" fill="rgb(211,33,43)" fg:x="14334" fg:w="24"/><text x="88.6218%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.4767%" y="117" width="0.1109%" height="15" fill="rgb(245,58,50)" fg:x="14358" fg:w="18"/><text x="88.7697%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.5876%" y="117" width="0.0616%" height="15" fill="rgb(244,68,36)" fg:x="14376" fg:w="10"/><text x="88.8806%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.6492%" y="117" width="0.1479%" height="15" fill="rgb(232,229,15)" fg:x="14386" fg:w="24"/><text x="88.9422%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.7971%" y="117" width="0.1109%" height="15" fill="rgb(254,30,23)" fg:x="14410" fg:w="18"/><text x="89.0901%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.9081%" y="117" width="0.0616%" height="15" fill="rgb(235,160,14)" fg:x="14428" fg:w="10"/><text x="89.2010%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.9697%" y="117" width="0.1479%" height="15" fill="rgb(212,155,44)" fg:x="14438" fg:w="24"/><text x="89.2627%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="89.1176%" y="117" width="0.0246%" height="15" fill="rgb(226,2,50)" fg:x="14462" fg:w="4"/><text x="89.4105%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="89.1422%" y="117" width="0.0246%" height="15" fill="rgb(234,177,6)" fg:x="14466" fg:w="4"/><text x="89.4352%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="89.1669%" y="117" width="0.0924%" height="15" fill="rgb(217,24,9)" fg:x="14470" fg:w="15"/><text x="89.4598%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="89.2593%" y="117" width="0.0924%" height="15" fill="rgb(220,13,46)" fg:x="14485" fg:w="15"/><text x="89.5523%" y="127.50"></text></g><g><title>rec (498 instructions, 3.07%)</title><rect x="87.5154%" y="133" width="3.0688%" height="15" fill="rgb(239,221,27)" fg:x="14202" fg:w="498"/><text x="87.8084%" y="143.50">rec</text></g><g><title>leaf (502 instructions, 3.09%)</title><rect x="87.5154%" y="149" width="3.0934%" height="15" fill="rgb(222,198,25)" fg:x="14202" fg:w="502"/><text x="87.8084%" y="159.50">le..</text></g><g><title>recursiveReplace (1,295 instructions, 7.98%)</title><rect x="82.9554%" y="165" width="7.9800%" height="15" fill="rgb(211,99,13)" fg:x="13462" fg:w="1295"/><text x="83.2484%" y="175.50">recursive..</text></g><g><title>put.1 (1,435 instructions, 8.84%)</title><rect x="82.4994%" y="181" width="8.8427%" height="15" fill="rgb(232,111,31)" fg:x="13388" fg:w="1435"/><text x="82.7924%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="91.3421%" y="181" width="0.1417%" height="15" fill="rgb(245,82,37)" fg:x="14823" fg:w="23"/><text x="91.6351%" y="191.50"></text></g><g><title>account_put (2,275 instructions, 14.02%)</title><rect x="77.5450%" y="197" width="14.0190%" height="15" fill="rgb(227,149,46)" fg:x="12584" fg:w="2275"/><text x="77.8380%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="91.5640%" y="181" width="0.2034%" height="15" fill="rgb(218,36,50)" fg:x="14859" fg:w="33"/><text x="91.8569%" y="191.50"></text></g><g><title>memcpy (76 instructions, 0.47%)</title><rect x="91.7673%" y="181" width="0.4683%" height="15" fill="rgb(226,80,48)" fg:x="14892" fg:w="76"/><text x="92.0603%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="92.2356%" y="181" width="0.2034%" height="15" fill="rgb(238,224,15)" fg:x="14968" fg:w="33"/><text x="92.5286%" y="191.50"></text></g><g><title>leb128_encode (9 instructions, 0.06%)</title><rect x="92.4390%" y="181" width="0.0555%" height="15" fill="rgb(241,136,10)" fg:x="15001" fg:w="9"/><text x="92.7320%" y="191.50"></text></g><g><title>reply_with_data (43 instructions, 0.26%)</title><rect x="92.4945%" y="181" width="0.2650%" height="15" fill="rgb(208,32,45)" fg:x="15010" fg:w="43"/><text x="92.7874%" y="191.50"></text></g><g><title>$lambda.35 (300 instructions, 1.85%)</title><rect x="91.5640%" y="197" width="1.8487%" height="15" fill="rgb(207,135,9)" fg:x="14859" fg:w="300"/><text x="91.8569%" y="207.50"></text></g><g><title>$lambda.2 (11,950 instructions, 73.64%)</title><rect x="20.5509%" y="213" width="73.6382%" height="15" fill="rgb(206,86,44)" fg:x="3335" fg:w="11950"/><text x="20.8439%" y="223.50">$lambda.2</text></g><g><title>schedule_copying_gc (45 instructions, 0.28%)</title><rect x="94.1891%" y="213" width="0.2773%" height="15" fill="rgb(245,177,15)" fg:x="15285" fg:w="45"/><text x="94.4820%" y="223.50"></text></g><g><title>trans_state4 (13 instructions, 0.08%)</title><rect x="94.4664%" y="213" width="0.0801%" height="15" fill="rgb(206,64,50)" fg:x="15330" fg:w="13"/><text x="94.7593%" y="223.50"></text></g><g><title>all (16,228 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(234,36,40)" fg:x="0" fg:w="16228"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (16,228 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(213,64,8)" fg:x="0" fg:w="16228"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>