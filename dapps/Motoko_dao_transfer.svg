<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="22328"><g><title>trans_state5 (10 instructions, 0.04%)</title><rect x="0.0000%" y="213" width="0.0448%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="10"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h87fa1d046288d69e (56 instructions, 0.25%)</title><rect x="0.0448%" y="213" width="0.2508%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="56"/><text x="0.3378%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="0.2956%" y="197" width="0.2239%" height="15" fill="rgb(221,193,54)" fg:x="66" fg:w="50"/><text x="0.5886%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h87fa1d046288d69e (56 instructions, 0.25%)</title><rect x="0.5195%" y="197" width="0.2508%" height="15" fill="rgb(248,212,6)" fg:x="116" fg:w="56"/><text x="0.8125%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="0.7703%" y="197" width="0.2866%" height="15" fill="rgb(208,68,35)" fg:x="172" fg:w="64"/><text x="1.0633%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="1.0570%" y="197" width="0.2239%" height="15" fill="rgb(232,128,0)" fg:x="236" fg:w="50"/><text x="1.3499%" y="207.50"></text></g><g><title>leb128_decode (132 instructions, 0.59%)</title><rect x="1.2809%" y="197" width="0.5912%" height="15" fill="rgb(207,160,47)" fg:x="286" fg:w="132"/><text x="1.5739%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="1.8721%" y="197" width="0.2866%" height="15" fill="rgb(228,23,34)" fg:x="418" fg:w="64"/><text x="2.1651%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53f71f4a4e97da09 (17 instructions, 0.08%)</title><rect x="2.1587%" y="197" width="0.0761%" height="15" fill="rgb(218,30,26)" fg:x="482" fg:w="17"/><text x="2.4517%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="2.2349%" y="197" width="0.9584%" height="15" fill="rgb(220,122,19)" fg:x="499" fg:w="214"/><text x="2.5278%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="3.1933%" y="197" width="0.2866%" height="15" fill="rgb(250,228,42)" fg:x="713" fg:w="64"/><text x="3.4863%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53f71f4a4e97da09 (12 instructions, 0.05%)</title><rect x="3.4799%" y="197" width="0.0537%" height="15" fill="rgb(240,193,28)" fg:x="777" fg:w="12"/><text x="3.7729%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="3.5337%" y="197" width="0.2866%" height="15" fill="rgb(216,20,37)" fg:x="789" fg:w="64"/><text x="3.8266%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="3.8203%" y="197" width="0.2239%" height="15" fill="rgb(206,188,39)" fg:x="853" fg:w="50"/><text x="4.1133%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="4.0442%" y="197" width="0.9584%" height="15" fill="rgb(217,207,13)" fg:x="903" fg:w="214"/><text x="4.3372%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="5.0027%" y="197" width="0.2866%" height="15" fill="rgb(231,73,38)" fg:x="1117" fg:w="64"/><text x="5.2957%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53f71f4a4e97da09 (12 instructions, 0.05%)</title><rect x="5.2893%" y="197" width="0.0537%" height="15" fill="rgb(225,20,46)" fg:x="1181" fg:w="12"/><text x="5.5823%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="5.3431%" y="197" width="0.2866%" height="15" fill="rgb(210,31,41)" fg:x="1193" fg:w="64"/><text x="5.6360%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="5.6297%" y="197" width="0.2866%" height="15" fill="rgb(221,200,47)" fg:x="1257" fg:w="64"/><text x="5.9227%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="5.9163%" y="197" width="0.2239%" height="15" fill="rgb(226,26,5)" fg:x="1321" fg:w="50"/><text x="6.2093%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="6.1403%" y="197" width="0.2866%" height="15" fill="rgb(249,33,26)" fg:x="1371" fg:w="64"/><text x="6.4332%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53f71f4a4e97da09 (12 instructions, 0.05%)</title><rect x="6.4269%" y="197" width="0.0537%" height="15" fill="rgb(235,183,28)" fg:x="1435" fg:w="12"/><text x="6.7199%" y="207.50"></text></g><g><title>parse_idl_header (1,850 instructions, 8.29%)</title><rect x="0.2956%" y="213" width="8.2856%" height="15" fill="rgb(221,5,38)" fg:x="66" fg:w="1850"/><text x="0.5886%" y="223.50">parse_idl..</text></g><g><title>memset (6 instructions, 0.03%)</title><rect x="8.5812%" y="197" width="0.0269%" height="15" fill="rgb(247,18,42)" fg:x="1916" fg:w="6"/><text x="8.8741%" y="207.50"></text></g><g><title>idl_sub_buf_init (15 instructions, 0.07%)</title><rect x="8.5812%" y="213" width="0.0672%" height="15" fill="rgb(241,131,45)" fg:x="1916" fg:w="15"/><text x="8.8741%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="8.6483%" y="213" width="0.2239%" height="15" fill="rgb(249,31,29)" fg:x="1931" fg:w="50"/><text x="8.9413%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="8.8723%" y="213" width="0.2866%" height="15" fill="rgb(225,111,53)" fg:x="1981" fg:w="64"/><text x="9.1652%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="9.1589%" y="213" width="0.2866%" height="15" fill="rgb(238,160,17)" fg:x="2045" fg:w="64"/><text x="9.4519%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="9.4455%" y="213" width="0.2239%" height="15" fill="rgb(214,148,48)" fg:x="2109" fg:w="50"/><text x="9.7385%" y="223.50"></text></g><g><title>leb128_decode (132 instructions, 0.59%)</title><rect x="9.6695%" y="197" width="0.5912%" height="15" fill="rgb(232,36,49)" fg:x="2159" fg:w="132"/><text x="9.9624%" y="207.50"></text></g><g><title>find_field (168 instructions, 0.75%)</title><rect x="9.6695%" y="213" width="0.7524%" height="15" fill="rgb(209,103,24)" fg:x="2159" fg:w="168"/><text x="9.9624%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="10.4219%" y="213" width="0.2866%" height="15" fill="rgb(229,88,8)" fg:x="2327" fg:w="64"/><text x="10.7149%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="10.7085%" y="197" width="0.2239%" height="15" fill="rgb(213,181,19)" fg:x="2391" fg:w="50"/><text x="11.0015%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h87fa1d046288d69e (56 instructions, 0.25%)</title><rect x="10.9325%" y="197" width="0.2508%" height="15" fill="rgb(254,191,54)" fg:x="2441" fg:w="56"/><text x="11.2254%" y="207.50"></text></g><g><title>memcpy (196 instructions, 0.88%)</title><rect x="11.1833%" y="197" width="0.8778%" height="15" fill="rgb(241,83,37)" fg:x="2497" fg:w="196"/><text x="11.4762%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (409 instructions, 1.83%)</title><rect x="10.7085%" y="213" width="1.8318%" height="15" fill="rgb(233,36,39)" fg:x="2391" fg:w="409"/><text x="11.0015%" y="223.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="12.5403%" y="197" width="0.9584%" height="15" fill="rgb(226,3,54)" fg:x="2800" fg:w="214"/><text x="12.8333%" y="207.50"></text></g><g><title>find_field (250 instructions, 1.12%)</title><rect x="12.5403%" y="213" width="1.1197%" height="15" fill="rgb(245,192,40)" fg:x="2800" fg:w="250"/><text x="12.8333%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="13.6600%" y="213" width="0.2866%" height="15" fill="rgb(238,167,29)" fg:x="3050" fg:w="64"/><text x="13.9529%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="13.9466%" y="197" width="0.2866%" height="15" fill="rgb(232,182,51)" fg:x="3114" fg:w="64"/><text x="14.2396%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="14.2332%" y="197" width="0.2239%" height="15" fill="rgb(231,60,39)" fg:x="3178" fg:w="50"/><text x="14.5262%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="14.4572%" y="181" width="0.9584%" height="15" fill="rgb(208,69,12)" fg:x="3228" fg:w="214"/><text x="14.7502%" y="191.50"></text></g><g><title>find_field (250 instructions, 1.12%)</title><rect x="14.4572%" y="197" width="1.1197%" height="15" fill="rgb(235,93,37)" fg:x="3228" fg:w="250"/><text x="14.7502%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="15.5769%" y="197" width="0.2866%" height="15" fill="rgb(213,116,39)" fg:x="3478" fg:w="64"/><text x="15.8698%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (60 instructions, 0.27%)</title><rect x="15.8635%" y="181" width="0.2687%" height="15" fill="rgb(222,207,29)" fg:x="3542" fg:w="60"/><text x="16.1565%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (121 instructions, 0.54%)</title><rect x="15.8635%" y="197" width="0.5419%" height="15" fill="rgb(206,96,30)" fg:x="3542" fg:w="121"/><text x="16.1565%" y="207.50"></text></g><g><title>skip_fields (6 instructions, 0.03%)</title><rect x="16.4054%" y="197" width="0.0269%" height="15" fill="rgb(218,138,4)" fg:x="3663" fg:w="6"/><text x="16.6984%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (774 instructions, 3.47%)</title><rect x="13.9466%" y="213" width="3.4665%" height="15" fill="rgb(250,191,14)" fg:x="3114" fg:w="774"/><text x="14.2396%" y="223.50">@de..</text></g><g><title>skip_fields (6 instructions, 0.03%)</title><rect x="17.4131%" y="213" width="0.0269%" height="15" fill="rgb(239,60,40)" fg:x="3888" fg:w="6"/><text x="17.7061%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h87fa1d046288d69e (56 instructions, 0.25%)</title><rect x="17.4400%" y="197" width="0.2508%" height="15" fill="rgb(206,27,48)" fg:x="3894" fg:w="56"/><text x="17.7330%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="17.6908%" y="197" width="0.0761%" height="15" fill="rgb(225,35,8)" fg:x="3950" fg:w="17"/><text x="17.9838%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.48%)</title><rect x="17.7669%" y="165" width="3.4844%" height="15" fill="rgb(250,213,24)" fg:x="3967" fg:w="778"/><text x="18.0599%" y="175.50">com..</text></g><g><title>account_key (842 instructions, 3.77%)</title><rect x="17.7669%" y="181" width="3.7710%" height="15" fill="rgb(247,123,22)" fg:x="3967" fg:w="842"/><text x="18.0599%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="21.5380%" y="165" width="0.1254%" height="15" fill="rgb(231,138,38)" fg:x="4809" fg:w="28"/><text x="21.8309%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="21.6634%" y="149" width="0.0761%" height="15" fill="rgb(231,145,46)" fg:x="4837" fg:w="17"/><text x="21.9564%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="21.7395%" y="133" width="0.0761%" height="15" fill="rgb(251,118,11)" fg:x="4854" fg:w="17"/><text x="22.0325%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="21.8157%" y="133" width="0.0761%" height="15" fill="rgb(217,147,25)" fg:x="4871" fg:w="17"/><text x="22.1086%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.0620%" y="133" width="0.0761%" height="15" fill="rgb(247,81,37)" fg:x="4926" fg:w="17"/><text x="22.3550%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.1381%" y="133" width="0.0761%" height="15" fill="rgb(209,12,38)" fg:x="4943" fg:w="17"/><text x="22.4311%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.3845%" y="133" width="0.0761%" height="15" fill="rgb(227,1,9)" fg:x="4998" fg:w="17"/><text x="22.6774%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.4606%" y="133" width="0.0761%" height="15" fill="rgb(248,47,43)" fg:x="5015" fg:w="17"/><text x="22.7536%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.7069%" y="133" width="0.0761%" height="15" fill="rgb(221,10,30)" fg:x="5070" fg:w="17"/><text x="22.9999%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.7831%" y="133" width="0.0761%" height="15" fill="rgb(210,229,1)" fg:x="5087" fg:w="17"/><text x="23.0760%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="22.8592%" y="133" width="0.0761%" height="15" fill="rgb(222,148,37)" fg:x="5104" fg:w="17"/><text x="23.1522%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="22.9353%" y="133" width="0.0761%" height="15" fill="rgb(234,67,33)" fg:x="5121" fg:w="17"/><text x="23.2283%" y="143.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.44%)</title><rect x="23.0115%" y="117" width="3.4441%" height="15" fill="rgb(247,98,35)" fg:x="5138" fg:w="769"/><text x="23.3044%" y="127.50">Bl..</text></g><g><title>equal.1 (777 instructions, 3.48%)</title><rect x="23.0115%" y="133" width="3.4799%" height="15" fill="rgb(247,138,52)" fg:x="5138" fg:w="777"/><text x="23.3044%" y="143.50">equ..</text></g><g><title>anon-func-192.5 (1,127 instructions, 5.05%)</title><rect x="21.7395%" y="149" width="5.0475%" height="15" fill="rgb(213,79,30)" fg:x="4854" fg:w="1127"/><text x="22.0325%" y="159.50">anon-..</text></g><g><title>rec.4 (1,448 instructions, 6.49%)</title><rect x="21.6634%" y="165" width="6.4851%" height="15" fill="rgb(246,177,23)" fg:x="4837" fg:w="1448"/><text x="21.9564%" y="175.50">rec.4</text></g><g><title>get.2 (1,528 instructions, 6.84%)</title><rect x="21.5380%" y="181" width="6.8434%" height="15" fill="rgb(230,62,27)" fg:x="4809" fg:w="1528"/><text x="21.8309%" y="191.50">get.2</text></g><g><title>account_get (2,385 instructions, 10.68%)</title><rect x="17.7669%" y="197" width="10.6817%" height="15" fill="rgb(216,154,8)" fg:x="3967" fg:w="2385"/><text x="18.0599%" y="207.50">account_get</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.4486%" y="197" width="0.0761%" height="15" fill="rgb(244,35,45)" fg:x="6352" fg:w="17"/><text x="28.7416%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.5247%" y="197" width="0.0761%" height="15" fill="rgb(251,115,12)" fg:x="6369" fg:w="17"/><text x="28.8177%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="28.6009%" y="197" width="0.0761%" height="15" fill="rgb(240,54,50)" fg:x="6386" fg:w="17"/><text x="28.8938%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.6770%" y="197" width="0.0761%" height="15" fill="rgb(233,84,52)" fg:x="6403" fg:w="17"/><text x="28.9700%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.7531%" y="197" width="0.0761%" height="15" fill="rgb(207,117,47)" fg:x="6420" fg:w="17"/><text x="29.0461%" y="207.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="28.8293%" y="197" width="0.1209%" height="15" fill="rgb(249,43,39)" fg:x="6437" fg:w="27"/><text x="29.1222%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h622d43df21b9d4cc (60 instructions, 0.27%)</title><rect x="28.9502%" y="133" width="0.2687%" height="15" fill="rgb(209,38,44)" fg:x="6464" fg:w="60"/><text x="29.2432%" y="143.50"></text></g><g><title>memset (106 instructions, 0.47%)</title><rect x="29.2189%" y="133" width="0.4747%" height="15" fill="rgb(236,212,23)" fg:x="6524" fg:w="106"/><text x="29.5119%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.90%)</title><rect x="28.9502%" y="149" width="0.9047%" height="15" fill="rgb(242,79,21)" fg:x="6464" fg:w="202"/><text x="29.2432%" y="159.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="28.9502%" y="165" width="0.9987%" height="15" fill="rgb(211,96,35)" fg:x="6464" fg:w="223"/><text x="29.2432%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.47%)</title><rect x="29.9489%" y="165" width="0.4658%" height="15" fill="rgb(253,215,40)" fg:x="6687" fg:w="104"/><text x="30.2419%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hc33d6a341e358b40 (33 instructions, 0.15%)</title><rect x="30.4147%" y="165" width="0.1478%" height="15" fill="rgb(211,81,21)" fg:x="6791" fg:w="33"/><text x="30.7077%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.91%)</title><rect x="28.9502%" y="181" width="1.9124%" height="15" fill="rgb(208,190,38)" fg:x="6464" fg:w="427"/><text x="29.2432%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="30.8626%" y="165" width="0.0582%" height="15" fill="rgb(235,213,38)" fg:x="6891" fg:w="13"/><text x="31.1556%" y="175.50"></text></g><g><title>mp_cmp (34 instructions, 0.15%)</title><rect x="30.8626%" y="181" width="0.1523%" height="15" fill="rgb(237,122,38)" fg:x="6891" fg:w="34"/><text x="31.1556%" y="191.50"></text></g><g><title>B_lt (513 instructions, 2.30%)</title><rect x="28.9502%" y="197" width="2.2976%" height="15" fill="rgb(244,218,35)" fg:x="6464" fg:w="513"/><text x="29.2432%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="31.2478%" y="197" width="0.0761%" height="15" fill="rgb(240,68,47)" fg:x="6977" fg:w="17"/><text x="31.5407%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h622d43df21b9d4cc (60 instructions, 0.27%)</title><rect x="31.3239%" y="133" width="0.2687%" height="15" fill="rgb(210,16,53)" fg:x="6994" fg:w="60"/><text x="31.6169%" y="143.50"></text></g><g><title>memset (106 instructions, 0.47%)</title><rect x="31.5926%" y="133" width="0.4747%" height="15" fill="rgb(235,124,12)" fg:x="7054" fg:w="106"/><text x="31.8856%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.90%)</title><rect x="31.3239%" y="149" width="0.9047%" height="15" fill="rgb(224,169,11)" fg:x="6994" fg:w="202"/><text x="31.6169%" y="159.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="31.3239%" y="165" width="0.9987%" height="15" fill="rgb(250,166,2)" fg:x="6994" fg:w="223"/><text x="31.6169%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.47%)</title><rect x="32.3226%" y="165" width="0.4658%" height="15" fill="rgb(242,216,29)" fg:x="7217" fg:w="104"/><text x="32.6156%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hc33d6a341e358b40 (33 instructions, 0.15%)</title><rect x="32.7884%" y="165" width="0.1478%" height="15" fill="rgb(230,116,27)" fg:x="7321" fg:w="33"/><text x="33.0814%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.91%)</title><rect x="31.3239%" y="181" width="1.9124%" height="15" fill="rgb(228,99,48)" fg:x="6994" fg:w="427"/><text x="31.6169%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h622d43df21b9d4cc (60 instructions, 0.27%)</title><rect x="33.2363%" y="149" width="0.2687%" height="15" fill="rgb(253,11,6)" fg:x="7421" fg:w="60"/><text x="33.5293%" y="159.50"></text></g><g><title>memset (106 instructions, 0.47%)</title><rect x="33.5050%" y="149" width="0.4747%" height="15" fill="rgb(247,143,39)" fg:x="7481" fg:w="106"/><text x="33.7980%" y="159.50"></text></g><g><title>mp_calloc (202 instructions, 0.90%)</title><rect x="33.2363%" y="165" width="0.9047%" height="15" fill="rgb(236,97,10)" fg:x="7421" fg:w="202"/><text x="33.5293%" y="175.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="33.2363%" y="181" width="0.9987%" height="15" fill="rgb(233,208,19)" fg:x="7421" fg:w="223"/><text x="33.5293%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="34.2350%" y="165" width="0.0582%" height="15" fill="rgb(216,164,2)" fg:x="7644" fg:w="13"/><text x="34.5280%" y="175.50"></text></g><g><title>mp_clamp (25 instructions, 0.11%)</title><rect x="34.2933%" y="149" width="0.1120%" height="15" fill="rgb(220,129,5)" fg:x="7657" fg:w="25"/><text x="34.5862%" y="159.50"></text></g><g><title>s_mp_sub (147 instructions, 0.66%)</title><rect x="34.2933%" y="165" width="0.6584%" height="15" fill="rgb(242,17,10)" fg:x="7657" fg:w="147"/><text x="34.5862%" y="175.50"></text></g><g><title>mp_sub (192 instructions, 0.86%)</title><rect x="34.2350%" y="181" width="0.8599%" height="15" fill="rgb(242,107,0)" fg:x="7644" fg:w="192"/><text x="34.5280%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hc33d6a341e358b40 (33 instructions, 0.15%)</title><rect x="35.0949%" y="181" width="0.1478%" height="15" fill="rgb(251,28,31)" fg:x="7836" fg:w="33"/><text x="35.3879%" y="191.50"></text></g><g><title>mp_count_bits (181 instructions, 0.81%)</title><rect x="35.2427%" y="165" width="0.8106%" height="15" fill="rgb(233,223,10)" fg:x="7869" fg:w="181"/><text x="35.5357%" y="175.50"></text></g><g><title>bigint_2complement_bits (223 instructions, 1.00%)</title><rect x="35.2427%" y="181" width="0.9987%" height="15" fill="rgb(215,21,27)" fg:x="7869" fg:w="223"/><text x="35.5357%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h622d43df21b9d4cc (60 instructions, 0.27%)</title><rect x="36.8103%" y="133" width="0.2687%" height="15" fill="rgb(232,23,21)" fg:x="8219" fg:w="60"/><text x="37.1033%" y="143.50"></text></g><g><title>memset (106 instructions, 0.47%)</title><rect x="37.0790%" y="133" width="0.4747%" height="15" fill="rgb(244,5,23)" fg:x="8279" fg:w="106"/><text x="37.3720%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.90%)</title><rect x="36.8103%" y="149" width="0.9047%" height="15" fill="rgb(226,81,46)" fg:x="8219" fg:w="202"/><text x="37.1033%" y="159.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="36.8103%" y="165" width="0.9987%" height="15" fill="rgb(247,70,30)" fg:x="8219" fg:w="223"/><text x="37.1033%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.47%)</title><rect x="37.8090%" y="165" width="0.4658%" height="15" fill="rgb(212,68,19)" fg:x="8442" fg:w="104"/><text x="38.1020%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hc33d6a341e358b40 (33 instructions, 0.15%)</title><rect x="38.2748%" y="165" width="0.1478%" height="15" fill="rgb(240,187,13)" fg:x="8546" fg:w="33"/><text x="38.5678%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.91%)</title><rect x="36.8103%" y="181" width="1.9124%" height="15" fill="rgb(223,113,26)" fg:x="8219" fg:w="427"/><text x="37.1033%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h622d43df21b9d4cc (60 instructions, 0.27%)</title><rect x="38.7227%" y="149" width="0.2687%" height="15" fill="rgb(206,192,2)" fg:x="8646" fg:w="60"/><text x="39.0156%" y="159.50"></text></g><g><title>memset (106 instructions, 0.47%)</title><rect x="38.9914%" y="149" width="0.4747%" height="15" fill="rgb(241,108,4)" fg:x="8706" fg:w="106"/><text x="39.2844%" y="159.50"></text></g><g><title>mp_calloc (202 instructions, 0.90%)</title><rect x="38.7227%" y="165" width="0.9047%" height="15" fill="rgb(247,173,49)" fg:x="8646" fg:w="202"/><text x="39.0156%" y="175.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="38.7227%" y="181" width="0.9987%" height="15" fill="rgb(224,114,35)" fg:x="8646" fg:w="223"/><text x="39.0156%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="39.7214%" y="165" width="0.0582%" height="15" fill="rgb(245,159,27)" fg:x="8869" fg:w="13"/><text x="40.0144%" y="175.50"></text></g><g><title>mp_clamp (25 instructions, 0.11%)</title><rect x="39.7796%" y="149" width="0.1120%" height="15" fill="rgb(245,172,44)" fg:x="8882" fg:w="25"/><text x="40.0726%" y="159.50"></text></g><g><title>s_mp_sub (147 instructions, 0.66%)</title><rect x="39.7796%" y="165" width="0.6584%" height="15" fill="rgb(236,23,11)" fg:x="8882" fg:w="147"/><text x="40.0726%" y="175.50"></text></g><g><title>mp_sub (192 instructions, 0.86%)</title><rect x="39.7214%" y="181" width="0.8599%" height="15" fill="rgb(205,117,38)" fg:x="8869" fg:w="192"/><text x="40.0144%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hc33d6a341e358b40 (33 instructions, 0.15%)</title><rect x="40.5813%" y="181" width="0.1478%" height="15" fill="rgb(237,72,25)" fg:x="9061" fg:w="33"/><text x="40.8743%" y="191.50"></text></g><g><title>mp_count_bits (181 instructions, 0.81%)</title><rect x="40.7291%" y="165" width="0.8106%" height="15" fill="rgb(244,70,9)" fg:x="9094" fg:w="181"/><text x="41.0221%" y="175.50"></text></g><g><title>bigint_2complement_bits (223 instructions, 1.00%)</title><rect x="40.7291%" y="181" width="0.9987%" height="15" fill="rgb(217,125,39)" fg:x="9094" fg:w="223"/><text x="41.0221%" y="191.50"></text></g><g><title>B_sub (2,450 instructions, 10.97%)</title><rect x="31.3239%" y="197" width="10.9728%" height="15" fill="rgb(235,36,10)" fg:x="6994" fg:w="2450"/><text x="31.6169%" y="207.50">B_sub</text></g><g><title>compute_crc32 (778 instructions, 3.48%)</title><rect x="42.2967%" y="165" width="3.4844%" height="15" fill="rgb(251,123,47)" fg:x="9444" fg:w="778"/><text x="42.5896%" y="175.50">com..</text></g><g><title>account_key (842 instructions, 3.77%)</title><rect x="42.2967%" y="181" width="3.7710%" height="15" fill="rgb(221,13,13)" fg:x="9444" fg:w="842"/><text x="42.5896%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="46.0677%" y="165" width="0.1254%" height="15" fill="rgb(238,131,9)" fg:x="10286" fg:w="28"/><text x="46.3607%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="46.1931%" y="149" width="0.0761%" height="15" fill="rgb(211,50,8)" fg:x="10314" fg:w="17"/><text x="46.4861%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.2693%" y="101" width="0.0761%" height="15" fill="rgb(245,182,24)" fg:x="10331" fg:w="17"/><text x="46.5622%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.3454%" y="101" width="0.0761%" height="15" fill="rgb(242,14,37)" fg:x="10348" fg:w="17"/><text x="46.6384%" y="111.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="46.2693%" y="117" width="0.3225%" height="15" fill="rgb(246,228,12)" fg:x="10331" fg:w="72"/><text x="46.5622%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.5917%" y="85" width="0.0761%" height="15" fill="rgb(213,55,15)" fg:x="10403" fg:w="17"/><text x="46.8847%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.6679%" y="85" width="0.0761%" height="15" fill="rgb(209,9,3)" fg:x="10420" fg:w="17"/><text x="46.9608%" y="95.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="46.5917%" y="101" width="0.3225%" height="15" fill="rgb(230,59,30)" fg:x="10403" fg:w="72"/><text x="46.8847%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.9142%" y="69" width="0.0761%" height="15" fill="rgb(209,121,21)" fg:x="10475" fg:w="17"/><text x="47.2072%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.9903%" y="69" width="0.0761%" height="15" fill="rgb(220,109,13)" fg:x="10492" fg:w="17"/><text x="47.2833%" y="79.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="46.9142%" y="85" width="0.3225%" height="15" fill="rgb(232,18,1)" fg:x="10475" fg:w="72"/><text x="47.2072%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="47.2367%" y="53" width="0.0761%" height="15" fill="rgb(215,41,42)" fg:x="10547" fg:w="17"/><text x="47.5296%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="47.3128%" y="53" width="0.0761%" height="15" fill="rgb(224,123,36)" fg:x="10564" fg:w="17"/><text x="47.6058%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="47.3889%" y="53" width="0.0761%" height="15" fill="rgb(240,125,3)" fg:x="10581" fg:w="17"/><text x="47.6819%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="47.4651%" y="53" width="0.0761%" height="15" fill="rgb(205,98,50)" fg:x="10598" fg:w="17"/><text x="47.7580%" y="63.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.44%)</title><rect x="47.5412%" y="37" width="3.4441%" height="15" fill="rgb(205,185,37)" fg:x="10615" fg:w="769"/><text x="47.8342%" y="47.50">Bl..</text></g><g><title>equal.1 (777 instructions, 3.48%)</title><rect x="47.5412%" y="53" width="3.4799%" height="15" fill="rgb(238,207,15)" fg:x="10615" fg:w="777"/><text x="47.8342%" y="63.50">equ..</text></g><g><title>anon-func-192.5 (911 instructions, 4.08%)</title><rect x="47.2367%" y="69" width="4.0801%" height="15" fill="rgb(213,199,42)" fg:x="10547" fg:w="911"/><text x="47.5296%" y="79.50">ano..</text></g><g><title>del (1,007 instructions, 4.51%)</title><rect x="47.2367%" y="85" width="4.5100%" height="15" fill="rgb(235,201,11)" fg:x="10547" fg:w="1007"/><text x="47.5296%" y="95.50">del</text></g><g><title>del (1,234 instructions, 5.53%)</title><rect x="46.9142%" y="101" width="5.5267%" height="15" fill="rgb(207,46,11)" fg:x="10475" fg:w="1234"/><text x="47.2072%" y="111.50">del</text></g><g><title>del (1,461 instructions, 6.54%)</title><rect x="46.5917%" y="117" width="6.5434%" height="15" fill="rgb(241,35,35)" fg:x="10403" fg:w="1461"/><text x="46.8847%" y="127.50">del</text></g><g><title>del (1,688 instructions, 7.56%)</title><rect x="46.2693%" y="133" width="7.5600%" height="15" fill="rgb(243,32,47)" fg:x="10331" fg:w="1688"/><text x="46.5622%" y="143.50">del</text></g><g><title>replace (1,902 instructions, 8.52%)</title><rect x="46.2693%" y="149" width="8.5185%" height="15" fill="rgb(247,202,23)" fg:x="10331" fg:w="1902"/><text x="46.5622%" y="159.50">replace</text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="54.7877%" y="117" width="0.0537%" height="15" fill="rgb(219,102,11)" fg:x="12233" fg:w="12"/><text x="55.0807%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="54.8415%" y="117" width="0.1209%" height="15" fill="rgb(243,110,44)" fg:x="12245" fg:w="27"/><text x="55.1344%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="54.9624%" y="117" width="0.0537%" height="15" fill="rgb(222,74,54)" fg:x="12272" fg:w="12"/><text x="55.2553%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.0161%" y="117" width="0.1209%" height="15" fill="rgb(216,99,12)" fg:x="12284" fg:w="27"/><text x="55.3091%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="55.1370%" y="117" width="0.0537%" height="15" fill="rgb(226,22,26)" fg:x="12311" fg:w="12"/><text x="55.4300%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.1908%" y="117" width="0.1209%" height="15" fill="rgb(217,163,10)" fg:x="12323" fg:w="27"/><text x="55.4838%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="55.3117%" y="117" width="0.0537%" height="15" fill="rgb(213,25,53)" fg:x="12350" fg:w="12"/><text x="55.6047%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.3655%" y="117" width="0.1209%" height="15" fill="rgb(252,105,26)" fg:x="12362" fg:w="27"/><text x="55.6584%" y="127.50"></text></g><g><title>rec (501 instructions, 2.24%)</title><rect x="54.7877%" y="133" width="2.2438%" height="15" fill="rgb(220,39,43)" fg:x="12233" fg:w="501"/><text x="55.0807%" y="143.50">r..</text></g><g><title>leaf (510 instructions, 2.28%)</title><rect x="54.7877%" y="149" width="2.2841%" height="15" fill="rgb(229,68,48)" fg:x="12233" fg:w="510"/><text x="55.0807%" y="159.50">l..</text></g><g><title>recursiveReplace (2,502 instructions, 11.21%)</title><rect x="46.1931%" y="165" width="11.2057%" height="15" fill="rgb(252,8,32)" fg:x="10314" fg:w="2502"/><text x="46.4861%" y="175.50">recursiveRepla..</text></g><g><title>put.1 (2,669 instructions, 11.95%)</title><rect x="46.0677%" y="181" width="11.9536%" height="15" fill="rgb(223,20,43)" fg:x="10286" fg:w="2669"/><text x="46.3607%" y="191.50">put.1</text></g><g><title>account_put (3,563 instructions, 15.96%)</title><rect x="42.2967%" y="197" width="15.9575%" height="15" fill="rgb(229,81,49)" fg:x="9444" fg:w="3563"/><text x="42.5896%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="58.2542%" y="197" width="0.0761%" height="15" fill="rgb(236,28,36)" fg:x="13007" fg:w="17"/><text x="58.5472%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.48%)</title><rect x="58.3303%" y="165" width="3.4844%" height="15" fill="rgb(249,185,26)" fg:x="13024" fg:w="778"/><text x="58.6233%" y="175.50">com..</text></g><g><title>account_key (877 instructions, 3.93%)</title><rect x="58.3303%" y="181" width="3.9278%" height="15" fill="rgb(249,174,33)" fg:x="13024" fg:w="877"/><text x="58.6233%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="62.2582%" y="165" width="0.1254%" height="15" fill="rgb(233,201,37)" fg:x="13901" fg:w="28"/><text x="62.5511%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="62.3836%" y="149" width="0.0761%" height="15" fill="rgb(221,78,26)" fg:x="13929" fg:w="17"/><text x="62.6765%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.4597%" y="133" width="0.0761%" height="15" fill="rgb(250,127,30)" fg:x="13946" fg:w="17"/><text x="62.7527%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.5358%" y="133" width="0.0761%" height="15" fill="rgb(230,49,44)" fg:x="13963" fg:w="17"/><text x="62.8288%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.7777%" y="133" width="0.0761%" height="15" fill="rgb(229,67,23)" fg:x="14017" fg:w="17"/><text x="63.0706%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.8538%" y="133" width="0.0761%" height="15" fill="rgb(249,83,47)" fg:x="14034" fg:w="17"/><text x="63.1468%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.0957%" y="133" width="0.0761%" height="15" fill="rgb(215,43,3)" fg:x="14088" fg:w="17"/><text x="63.3886%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.1718%" y="133" width="0.0761%" height="15" fill="rgb(238,154,13)" fg:x="14105" fg:w="17"/><text x="63.4648%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.4137%" y="133" width="0.0761%" height="15" fill="rgb(219,56,2)" fg:x="14159" fg:w="17"/><text x="63.7066%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.4898%" y="133" width="0.0761%" height="15" fill="rgb(233,0,4)" fg:x="14176" fg:w="17"/><text x="63.7828%" y="143.50"></text></g><g><title>anon-func-192.5 (284 instructions, 1.27%)</title><rect x="62.4597%" y="149" width="1.2719%" height="15" fill="rgb(235,30,7)" fg:x="13946" fg:w="284"/><text x="62.7527%" y="159.50"></text></g><g><title>rec.4 (604 instructions, 2.71%)</title><rect x="62.3836%" y="165" width="2.7051%" height="15" fill="rgb(250,79,13)" fg:x="13929" fg:w="604"/><text x="62.6765%" y="175.50">r..</text></g><g><title>get.2 (684 instructions, 3.06%)</title><rect x="62.2582%" y="181" width="3.0634%" height="15" fill="rgb(211,146,34)" fg:x="13901" fg:w="684"/><text x="62.5511%" y="191.50">ge..</text></g><g><title>account_get (1,576 instructions, 7.06%)</title><rect x="58.3303%" y="197" width="7.0584%" height="15" fill="rgb(228,22,38)" fg:x="13024" fg:w="1576"/><text x="58.6233%" y="207.50">account_..</text></g><g><title>get.1 (9 instructions, 0.04%)</title><rect x="65.3887%" y="197" width="0.0403%" height="15" fill="rgb(235,168,5)" fg:x="14600" fg:w="9"/><text x="65.6817%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="65.4291%" y="197" width="0.0761%" height="15" fill="rgb(221,155,16)" fg:x="14609" fg:w="17"/><text x="65.7220%" y="207.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="65.5052%" y="197" width="0.1209%" height="15" fill="rgb(215,215,53)" fg:x="14626" fg:w="27"/><text x="65.7982%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="65.6261%" y="197" width="0.0761%" height="15" fill="rgb(223,4,10)" fg:x="14653" fg:w="17"/><text x="65.9191%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.48%)</title><rect x="65.7023%" y="165" width="3.4844%" height="15" fill="rgb(234,103,6)" fg:x="14670" fg:w="778"/><text x="65.9952%" y="175.50">com..</text></g><g><title>account_key (877 instructions, 3.93%)</title><rect x="65.7023%" y="181" width="3.9278%" height="15" fill="rgb(227,97,0)" fg:x="14670" fg:w="877"/><text x="65.9952%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="69.6301%" y="165" width="0.1254%" height="15" fill="rgb(234,150,53)" fg:x="15547" fg:w="28"/><text x="69.9230%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="69.7555%" y="149" width="0.0761%" height="15" fill="rgb(228,201,54)" fg:x="15575" fg:w="17"/><text x="70.0484%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="69.8316%" y="101" width="0.0761%" height="15" fill="rgb(222,22,37)" fg:x="15592" fg:w="17"/><text x="70.1246%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="69.9077%" y="101" width="0.0761%" height="15" fill="rgb(237,53,32)" fg:x="15609" fg:w="17"/><text x="70.2007%" y="111.50"></text></g><g><title>anon-func-192.5 (71 instructions, 0.32%)</title><rect x="69.8316%" y="117" width="0.3180%" height="15" fill="rgb(233,25,53)" fg:x="15592" fg:w="71"/><text x="70.1246%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.1496%" y="85" width="0.0761%" height="15" fill="rgb(210,40,34)" fg:x="15663" fg:w="17"/><text x="70.4426%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.2257%" y="85" width="0.0761%" height="15" fill="rgb(241,220,44)" fg:x="15680" fg:w="17"/><text x="70.5187%" y="95.50"></text></g><g><title>anon-func-192.5 (71 instructions, 0.32%)</title><rect x="70.1496%" y="101" width="0.3180%" height="15" fill="rgb(235,28,35)" fg:x="15663" fg:w="71"/><text x="70.4426%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.4676%" y="69" width="0.0761%" height="15" fill="rgb(210,56,17)" fg:x="15734" fg:w="17"/><text x="70.7605%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.5437%" y="69" width="0.0761%" height="15" fill="rgb(224,130,29)" fg:x="15751" fg:w="17"/><text x="70.8367%" y="79.50"></text></g><g><title>anon-func-192.5 (71 instructions, 0.32%)</title><rect x="70.4676%" y="85" width="0.3180%" height="15" fill="rgb(235,212,8)" fg:x="15734" fg:w="71"/><text x="70.7605%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.7856%" y="53" width="0.0761%" height="15" fill="rgb(223,33,50)" fg:x="15805" fg:w="17"/><text x="71.0785%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.8617%" y="53" width="0.0761%" height="15" fill="rgb(219,149,13)" fg:x="15822" fg:w="17"/><text x="71.1547%" y="63.50"></text></g><g><title>anon-func-192.5 (71 instructions, 0.32%)</title><rect x="70.7856%" y="69" width="0.3180%" height="15" fill="rgb(250,156,29)" fg:x="15805" fg:w="71"/><text x="71.0785%" y="79.50"></text></g><g><title>del (31 instructions, 0.14%)</title><rect x="71.1035%" y="69" width="0.1388%" height="15" fill="rgb(216,193,19)" fg:x="15876" fg:w="31"/><text x="71.3965%" y="79.50"></text></g><g><title>del (198 instructions, 0.89%)</title><rect x="70.7856%" y="85" width="0.8868%" height="15" fill="rgb(216,135,14)" fg:x="15805" fg:w="198"/><text x="71.0785%" y="95.50"></text></g><g><title>del (365 instructions, 1.63%)</title><rect x="70.4676%" y="101" width="1.6347%" height="15" fill="rgb(241,47,5)" fg:x="15734" fg:w="365"/><text x="70.7605%" y="111.50"></text></g><g><title>del (532 instructions, 2.38%)</title><rect x="70.1496%" y="117" width="2.3827%" height="15" fill="rgb(233,42,35)" fg:x="15663" fg:w="532"/><text x="70.4426%" y="127.50">d..</text></g><g><title>del (699 instructions, 3.13%)</title><rect x="69.8316%" y="133" width="3.1306%" height="15" fill="rgb(231,13,6)" fg:x="15592" fg:w="699"/><text x="70.1246%" y="143.50">del</text></g><g><title>replace (913 instructions, 4.09%)</title><rect x="69.8316%" y="149" width="4.0890%" height="15" fill="rgb(207,181,40)" fg:x="15592" fg:w="913"/><text x="70.1246%" y="159.50">rep..</text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="73.9206%" y="117" width="0.0537%" height="15" fill="rgb(254,173,49)" fg:x="16505" fg:w="12"/><text x="74.2136%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="73.9744%" y="117" width="0.1209%" height="15" fill="rgb(221,1,38)" fg:x="16517" fg:w="27"/><text x="74.2674%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.0953%" y="117" width="0.0537%" height="15" fill="rgb(206,124,46)" fg:x="16544" fg:w="12"/><text x="74.3883%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.1491%" y="117" width="0.1209%" height="15" fill="rgb(249,21,11)" fg:x="16556" fg:w="27"/><text x="74.4420%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.2700%" y="117" width="0.0537%" height="15" fill="rgb(222,201,40)" fg:x="16583" fg:w="12"/><text x="74.5629%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.3237%" y="117" width="0.1209%" height="15" fill="rgb(235,61,29)" fg:x="16595" fg:w="27"/><text x="74.6167%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.4446%" y="117" width="0.0537%" height="15" fill="rgb(219,207,3)" fg:x="16622" fg:w="12"/><text x="74.7376%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.4984%" y="117" width="0.1209%" height="15" fill="rgb(222,56,46)" fg:x="16634" fg:w="27"/><text x="74.7914%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.6193%" y="117" width="0.0537%" height="15" fill="rgb(239,76,54)" fg:x="16661" fg:w="12"/><text x="74.9123%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.6731%" y="117" width="0.1209%" height="15" fill="rgb(231,124,27)" fg:x="16673" fg:w="27"/><text x="74.9660%" y="127.50"></text></g><g><title>rec (601 instructions, 2.69%)</title><rect x="73.9206%" y="133" width="2.6917%" height="15" fill="rgb(249,195,6)" fg:x="16505" fg:w="601"/><text x="74.2136%" y="143.50">r..</text></g><g><title>leaf (610 instructions, 2.73%)</title><rect x="73.9206%" y="149" width="2.7320%" height="15" fill="rgb(237,174,47)" fg:x="16505" fg:w="610"/><text x="74.2136%" y="159.50">l..</text></g><g><title>recursiveReplace (1,613 instructions, 7.22%)</title><rect x="69.7555%" y="165" width="7.2241%" height="15" fill="rgb(206,201,31)" fg:x="15575" fg:w="1613"/><text x="70.0484%" y="175.50">recursiv..</text></g><g><title>put.1 (1,780 instructions, 7.97%)</title><rect x="69.6301%" y="181" width="7.9721%" height="15" fill="rgb(231,57,52)" fg:x="15547" fg:w="1780"/><text x="69.9230%" y="191.50">put.1</text></g><g><title>account_put (2,709 instructions, 12.13%)</title><rect x="65.7023%" y="197" width="12.1327%" height="15" fill="rgb(248,177,22)" fg:x="14670" fg:w="2709"/><text x="65.9952%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::h87fa1d046288d69e (56 instructions, 0.25%)</title><rect x="77.8350%" y="181" width="0.2508%" height="15" fill="rgb(215,211,37)" fg:x="17379" fg:w="56"/><text x="78.1280%" y="191.50"></text></g><g><title>memcpy (86 instructions, 0.39%)</title><rect x="78.0858%" y="181" width="0.3852%" height="15" fill="rgb(241,128,51)" fg:x="17435" fg:w="86"/><text x="78.3788%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h87fa1d046288d69e (56 instructions, 0.25%)</title><rect x="78.4710%" y="181" width="0.2508%" height="15" fill="rgb(227,165,31)" fg:x="17521" fg:w="56"/><text x="78.7639%" y="191.50"></text></g><g><title>leb128_encode (11 instructions, 0.05%)</title><rect x="78.7218%" y="181" width="0.0493%" height="15" fill="rgb(228,167,24)" fg:x="17577" fg:w="11"/><text x="79.0148%" y="191.50"></text></g><g><title>$lambda.31 (1,385 instructions, 6.20%)</title><rect x="77.8350%" y="197" width="6.2030%" height="15" fill="rgb(228,143,12)" fg:x="17379" fg:w="1385"/><text x="78.1280%" y="207.50">$lambd..</text></g><g><title>$lambda.3 (16,199 instructions, 72.55%)</title><rect x="17.4400%" y="213" width="72.5502%" height="15" fill="rgb(249,149,8)" fg:x="3894" fg:w="16199"/><text x="17.7330%" y="223.50">$lambda.3</text></g><g><title>schedule_copying_gc (108 instructions, 0.48%)</title><rect x="89.9901%" y="213" width="0.4837%" height="15" fill="rgb(243,35,44)" fg:x="20093" fg:w="108"/><text x="90.2831%" y="223.50"></text></g><g><title>trans_state4 (16 instructions, 0.07%)</title><rect x="90.4738%" y="213" width="0.0717%" height="15" fill="rgb(246,89,9)" fg:x="20201" fg:w="16"/><text x="90.7668%" y="223.50"></text></g><g><title>all (22,328 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(233,213,13)" fg:x="0" fg:w="22328"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (22,328 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(233,141,41)" fg:x="0" fg:w="22328"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>