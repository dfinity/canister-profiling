<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="22262"><g><title>trans_state5 (10 instructions, 0.04%)</title><rect x="0.0000%" y="213" width="0.0449%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="10"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="0.0449%" y="213" width="0.2515%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="56"/><text x="0.3379%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="0.2965%" y="197" width="0.2246%" height="15" fill="rgb(221,193,54)" fg:x="66" fg:w="50"/><text x="0.5894%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="0.5211%" y="197" width="0.2515%" height="15" fill="rgb(248,212,6)" fg:x="116" fg:w="56"/><text x="0.8140%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="0.7726%" y="197" width="0.2875%" height="15" fill="rgb(208,68,35)" fg:x="172" fg:w="64"/><text x="1.0656%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="1.0601%" y="197" width="0.2246%" height="15" fill="rgb(232,128,0)" fg:x="236" fg:w="50"/><text x="1.3531%" y="207.50"></text></g><g><title>leb128_decode (132 instructions, 0.59%)</title><rect x="1.2847%" y="197" width="0.5929%" height="15" fill="rgb(207,160,47)" fg:x="286" fg:w="132"/><text x="1.5777%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="1.8776%" y="197" width="0.2875%" height="15" fill="rgb(228,23,34)" fg:x="418" fg:w="64"/><text x="2.1706%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (17 instructions, 0.08%)</title><rect x="2.1651%" y="197" width="0.0764%" height="15" fill="rgb(218,30,26)" fg:x="482" fg:w="17"/><text x="2.4581%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="2.2415%" y="197" width="0.9613%" height="15" fill="rgb(220,122,19)" fg:x="499" fg:w="214"/><text x="2.5345%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="3.2028%" y="197" width="0.2875%" height="15" fill="rgb(250,228,42)" fg:x="713" fg:w="64"/><text x="3.4957%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (12 instructions, 0.05%)</title><rect x="3.4903%" y="197" width="0.0539%" height="15" fill="rgb(240,193,28)" fg:x="777" fg:w="12"/><text x="3.7832%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="3.5442%" y="197" width="0.2875%" height="15" fill="rgb(216,20,37)" fg:x="789" fg:w="64"/><text x="3.8371%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="3.8316%" y="197" width="0.2246%" height="15" fill="rgb(206,188,39)" fg:x="853" fg:w="50"/><text x="4.1246%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="4.0562%" y="197" width="0.9613%" height="15" fill="rgb(217,207,13)" fg:x="903" fg:w="214"/><text x="4.3492%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="5.0175%" y="197" width="0.2875%" height="15" fill="rgb(231,73,38)" fg:x="1117" fg:w="64"/><text x="5.3105%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (12 instructions, 0.05%)</title><rect x="5.3050%" y="197" width="0.0539%" height="15" fill="rgb(225,20,46)" fg:x="1181" fg:w="12"/><text x="5.5980%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="5.3589%" y="197" width="0.2875%" height="15" fill="rgb(210,31,41)" fg:x="1193" fg:w="64"/><text x="5.6519%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="5.6464%" y="197" width="0.2875%" height="15" fill="rgb(221,200,47)" fg:x="1257" fg:w="64"/><text x="5.9394%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="5.9339%" y="197" width="0.2246%" height="15" fill="rgb(226,26,5)" fg:x="1321" fg:w="50"/><text x="6.2268%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="6.1585%" y="197" width="0.2875%" height="15" fill="rgb(249,33,26)" fg:x="1371" fg:w="64"/><text x="6.4514%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (12 instructions, 0.05%)</title><rect x="6.4460%" y="197" width="0.0539%" height="15" fill="rgb(235,183,28)" fg:x="1435" fg:w="12"/><text x="6.7389%" y="207.50"></text></g><g><title>parse_idl_header (1,850 instructions, 8.31%)</title><rect x="0.2965%" y="213" width="8.3101%" height="15" fill="rgb(221,5,38)" fg:x="66" fg:w="1850"/><text x="0.5894%" y="223.50">parse_idl_..</text></g><g><title>memset (6 instructions, 0.03%)</title><rect x="8.6066%" y="197" width="0.0270%" height="15" fill="rgb(247,18,42)" fg:x="1916" fg:w="6"/><text x="8.8996%" y="207.50"></text></g><g><title>idl_sub_buf_init (15 instructions, 0.07%)</title><rect x="8.6066%" y="213" width="0.0674%" height="15" fill="rgb(241,131,45)" fg:x="1916" fg:w="15"/><text x="8.8996%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="8.6740%" y="213" width="0.2246%" height="15" fill="rgb(249,31,29)" fg:x="1931" fg:w="50"/><text x="8.9669%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="8.8986%" y="213" width="0.2875%" height="15" fill="rgb(225,111,53)" fg:x="1981" fg:w="64"/><text x="9.1915%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="9.1861%" y="213" width="0.2875%" height="15" fill="rgb(238,160,17)" fg:x="2045" fg:w="64"/><text x="9.4790%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="9.4735%" y="213" width="0.2246%" height="15" fill="rgb(214,148,48)" fg:x="2109" fg:w="50"/><text x="9.7665%" y="223.50"></text></g><g><title>leb128_decode (132 instructions, 0.59%)</title><rect x="9.6981%" y="197" width="0.5929%" height="15" fill="rgb(232,36,49)" fg:x="2159" fg:w="132"/><text x="9.9911%" y="207.50"></text></g><g><title>find_field (168 instructions, 0.75%)</title><rect x="9.6981%" y="213" width="0.7546%" height="15" fill="rgb(209,103,24)" fg:x="2159" fg:w="168"/><text x="9.9911%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="10.4528%" y="213" width="0.2875%" height="15" fill="rgb(229,88,8)" fg:x="2327" fg:w="64"/><text x="10.7458%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="10.7403%" y="197" width="0.2246%" height="15" fill="rgb(213,181,19)" fg:x="2391" fg:w="50"/><text x="11.0332%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="10.9649%" y="197" width="0.2515%" height="15" fill="rgb(254,191,54)" fg:x="2441" fg:w="56"/><text x="11.2578%" y="207.50"></text></g><g><title>memcpy (196 instructions, 0.88%)</title><rect x="11.2164%" y="197" width="0.8804%" height="15" fill="rgb(241,83,37)" fg:x="2497" fg:w="196"/><text x="11.5094%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (409 instructions, 1.84%)</title><rect x="10.7403%" y="213" width="1.8372%" height="15" fill="rgb(233,36,39)" fg:x="2391" fg:w="409"/><text x="11.0332%" y="223.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="12.5775%" y="197" width="0.9613%" height="15" fill="rgb(226,3,54)" fg:x="2800" fg:w="214"/><text x="12.8705%" y="207.50"></text></g><g><title>find_field (250 instructions, 1.12%)</title><rect x="12.5775%" y="213" width="1.1230%" height="15" fill="rgb(245,192,40)" fg:x="2800" fg:w="250"/><text x="12.8705%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="13.7005%" y="213" width="0.2875%" height="15" fill="rgb(238,167,29)" fg:x="3050" fg:w="64"/><text x="13.9934%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="13.9880%" y="197" width="0.2875%" height="15" fill="rgb(232,182,51)" fg:x="3114" fg:w="64"/><text x="14.2809%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="14.2754%" y="197" width="0.2246%" height="15" fill="rgb(231,60,39)" fg:x="3178" fg:w="50"/><text x="14.5684%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="14.5000%" y="181" width="0.9613%" height="15" fill="rgb(208,69,12)" fg:x="3228" fg:w="214"/><text x="14.7930%" y="191.50"></text></g><g><title>find_field (250 instructions, 1.12%)</title><rect x="14.5000%" y="197" width="1.1230%" height="15" fill="rgb(235,93,37)" fg:x="3228" fg:w="250"/><text x="14.7930%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="15.6230%" y="197" width="0.2875%" height="15" fill="rgb(213,116,39)" fg:x="3478" fg:w="64"/><text x="15.9160%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (60 instructions, 0.27%)</title><rect x="15.9105%" y="181" width="0.2695%" height="15" fill="rgb(222,207,29)" fg:x="3542" fg:w="60"/><text x="16.2035%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (121 instructions, 0.54%)</title><rect x="15.9105%" y="197" width="0.5435%" height="15" fill="rgb(206,96,30)" fg:x="3542" fg:w="121"/><text x="16.2035%" y="207.50"></text></g><g><title>skip_fields (6 instructions, 0.03%)</title><rect x="16.4540%" y="197" width="0.0270%" height="15" fill="rgb(218,138,4)" fg:x="3663" fg:w="6"/><text x="16.7470%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (774 instructions, 3.48%)</title><rect x="13.9880%" y="213" width="3.4768%" height="15" fill="rgb(250,191,14)" fg:x="3114" fg:w="774"/><text x="14.2809%" y="223.50">@de..</text></g><g><title>skip_fields (6 instructions, 0.03%)</title><rect x="17.4647%" y="213" width="0.0270%" height="15" fill="rgb(239,60,40)" fg:x="3888" fg:w="6"/><text x="17.7577%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="17.4917%" y="197" width="0.2515%" height="15" fill="rgb(206,27,48)" fg:x="3894" fg:w="56"/><text x="17.7847%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="17.7432%" y="197" width="0.0764%" height="15" fill="rgb(225,35,8)" fg:x="3950" fg:w="17"/><text x="18.0362%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.49%)</title><rect x="17.8196%" y="165" width="3.4947%" height="15" fill="rgb(250,213,24)" fg:x="3967" fg:w="778"/><text x="18.1126%" y="175.50">com..</text></g><g><title>account_key (842 instructions, 3.78%)</title><rect x="17.8196%" y="181" width="3.7822%" height="15" fill="rgb(247,123,22)" fg:x="3967" fg:w="842"/><text x="18.1126%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="21.6018%" y="165" width="0.1258%" height="15" fill="rgb(231,138,38)" fg:x="4809" fg:w="28"/><text x="21.8948%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="21.7276%" y="149" width="0.0764%" height="15" fill="rgb(231,145,46)" fg:x="4837" fg:w="17"/><text x="22.0206%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="21.8040%" y="133" width="0.0764%" height="15" fill="rgb(251,118,11)" fg:x="4854" fg:w="17"/><text x="22.0969%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="21.8803%" y="133" width="0.0764%" height="15" fill="rgb(217,147,25)" fg:x="4871" fg:w="17"/><text x="22.1733%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.1274%" y="133" width="0.0764%" height="15" fill="rgb(247,81,37)" fg:x="4926" fg:w="17"/><text x="22.4204%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.2038%" y="133" width="0.0764%" height="15" fill="rgb(209,12,38)" fg:x="4943" fg:w="17"/><text x="22.4967%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.4508%" y="133" width="0.0764%" height="15" fill="rgb(227,1,9)" fg:x="4998" fg:w="17"/><text x="22.7438%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.5272%" y="133" width="0.0764%" height="15" fill="rgb(248,47,43)" fg:x="5015" fg:w="17"/><text x="22.8201%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.7697%" y="133" width="0.0764%" height="15" fill="rgb(221,10,30)" fg:x="5069" fg:w="17"/><text x="23.0627%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.8461%" y="133" width="0.0764%" height="15" fill="rgb(210,229,1)" fg:x="5086" fg:w="17"/><text x="23.1391%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="22.9225%" y="133" width="0.0764%" height="15" fill="rgb(222,148,37)" fg:x="5103" fg:w="17"/><text x="23.2154%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="22.9988%" y="133" width="0.0764%" height="15" fill="rgb(234,67,33)" fg:x="5120" fg:w="17"/><text x="23.2918%" y="143.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.45%)</title><rect x="23.0752%" y="117" width="3.4543%" height="15" fill="rgb(247,98,35)" fg:x="5137" fg:w="769"/><text x="23.3682%" y="127.50">Bl..</text></g><g><title>equal.1 (777 instructions, 3.49%)</title><rect x="23.0752%" y="133" width="3.4903%" height="15" fill="rgb(247,138,52)" fg:x="5137" fg:w="777"/><text x="23.3682%" y="143.50">equ..</text></g><g><title>anon-func-192.5 (1,126 instructions, 5.06%)</title><rect x="21.8040%" y="149" width="5.0579%" height="15" fill="rgb(213,79,30)" fg:x="4854" fg:w="1126"/><text x="22.0969%" y="159.50">anon-..</text></g><g><title>rec.4 (1,447 instructions, 6.50%)</title><rect x="21.7276%" y="165" width="6.4999%" height="15" fill="rgb(246,177,23)" fg:x="4837" fg:w="1447"/><text x="22.0206%" y="175.50">rec.4</text></g><g><title>get.2 (1,527 instructions, 6.86%)</title><rect x="21.6018%" y="181" width="6.8592%" height="15" fill="rgb(230,62,27)" fg:x="4809" fg:w="1527"/><text x="21.8948%" y="191.50">get.2</text></g><g><title>account_get (2,384 instructions, 10.71%)</title><rect x="17.8196%" y="197" width="10.7088%" height="15" fill="rgb(216,154,8)" fg:x="3967" fg:w="2384"/><text x="18.1126%" y="207.50">account_get</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.5284%" y="197" width="0.0764%" height="15" fill="rgb(244,35,45)" fg:x="6351" fg:w="17"/><text x="28.8214%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.6048%" y="197" width="0.0764%" height="15" fill="rgb(251,115,12)" fg:x="6368" fg:w="17"/><text x="28.8978%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="28.6812%" y="197" width="0.0764%" height="15" fill="rgb(240,54,50)" fg:x="6385" fg:w="17"/><text x="28.9741%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.7575%" y="197" width="0.0764%" height="15" fill="rgb(233,84,52)" fg:x="6402" fg:w="17"/><text x="29.0505%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.8339%" y="197" width="0.0764%" height="15" fill="rgb(207,117,47)" fg:x="6419" fg:w="17"/><text x="29.1269%" y="207.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="28.9103%" y="197" width="0.1213%" height="15" fill="rgb(249,43,39)" fg:x="6436" fg:w="27"/><text x="29.2032%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::ha70fa06d6a655c68 (60 instructions, 0.27%)</title><rect x="29.0315%" y="133" width="0.2695%" height="15" fill="rgb(209,38,44)" fg:x="6463" fg:w="60"/><text x="29.3245%" y="143.50"></text></g><g><title>memset (106 instructions, 0.48%)</title><rect x="29.3011%" y="133" width="0.4761%" height="15" fill="rgb(236,212,23)" fg:x="6523" fg:w="106"/><text x="29.5940%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.91%)</title><rect x="29.0315%" y="149" width="0.9074%" height="15" fill="rgb(242,79,21)" fg:x="6463" fg:w="202"/><text x="29.3245%" y="159.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="29.0315%" y="165" width="1.0017%" height="15" fill="rgb(211,96,35)" fg:x="6463" fg:w="223"/><text x="29.3245%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.47%)</title><rect x="30.0332%" y="165" width="0.4672%" height="15" fill="rgb(253,215,40)" fg:x="6686" fg:w="104"/><text x="30.3262%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6cd8440281f10e41 (33 instructions, 0.15%)</title><rect x="30.5004%" y="165" width="0.1482%" height="15" fill="rgb(211,81,21)" fg:x="6790" fg:w="33"/><text x="30.7934%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.92%)</title><rect x="29.0315%" y="181" width="1.9181%" height="15" fill="rgb(208,190,38)" fg:x="6463" fg:w="427"/><text x="29.3245%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="30.9496%" y="165" width="0.0584%" height="15" fill="rgb(235,213,38)" fg:x="6890" fg:w="13"/><text x="31.2426%" y="175.50"></text></g><g><title>mp_cmp (34 instructions, 0.15%)</title><rect x="30.9496%" y="181" width="0.1527%" height="15" fill="rgb(237,122,38)" fg:x="6890" fg:w="34"/><text x="31.2426%" y="191.50"></text></g><g><title>B_lt (513 instructions, 2.30%)</title><rect x="29.0315%" y="197" width="2.3044%" height="15" fill="rgb(244,218,35)" fg:x="6463" fg:w="513"/><text x="29.3245%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="31.3359%" y="197" width="0.0764%" height="15" fill="rgb(240,68,47)" fg:x="6976" fg:w="17"/><text x="31.6289%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::ha70fa06d6a655c68 (60 instructions, 0.27%)</title><rect x="31.4123%" y="133" width="0.2695%" height="15" fill="rgb(210,16,53)" fg:x="6993" fg:w="60"/><text x="31.7052%" y="143.50"></text></g><g><title>memset (106 instructions, 0.48%)</title><rect x="31.6818%" y="133" width="0.4761%" height="15" fill="rgb(235,124,12)" fg:x="7053" fg:w="106"/><text x="31.9748%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.91%)</title><rect x="31.4123%" y="149" width="0.9074%" height="15" fill="rgb(224,169,11)" fg:x="6993" fg:w="202"/><text x="31.7052%" y="159.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="31.4123%" y="165" width="1.0017%" height="15" fill="rgb(250,166,2)" fg:x="6993" fg:w="223"/><text x="31.7052%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.47%)</title><rect x="32.4140%" y="165" width="0.4672%" height="15" fill="rgb(242,216,29)" fg:x="7216" fg:w="104"/><text x="32.7069%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6cd8440281f10e41 (33 instructions, 0.15%)</title><rect x="32.8811%" y="165" width="0.1482%" height="15" fill="rgb(230,116,27)" fg:x="7320" fg:w="33"/><text x="33.1741%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.92%)</title><rect x="31.4123%" y="181" width="1.9181%" height="15" fill="rgb(228,99,48)" fg:x="6993" fg:w="427"/><text x="31.7052%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::ha70fa06d6a655c68 (60 instructions, 0.27%)</title><rect x="33.3303%" y="149" width="0.2695%" height="15" fill="rgb(253,11,6)" fg:x="7420" fg:w="60"/><text x="33.6233%" y="159.50"></text></g><g><title>memset (106 instructions, 0.48%)</title><rect x="33.5999%" y="149" width="0.4761%" height="15" fill="rgb(247,143,39)" fg:x="7480" fg:w="106"/><text x="33.8928%" y="159.50"></text></g><g><title>mp_calloc (202 instructions, 0.91%)</title><rect x="33.3303%" y="165" width="0.9074%" height="15" fill="rgb(236,97,10)" fg:x="7420" fg:w="202"/><text x="33.6233%" y="175.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="33.3303%" y="181" width="1.0017%" height="15" fill="rgb(233,208,19)" fg:x="7420" fg:w="223"/><text x="33.6233%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="34.3320%" y="165" width="0.0584%" height="15" fill="rgb(216,164,2)" fg:x="7643" fg:w="13"/><text x="34.6250%" y="175.50"></text></g><g><title>mp_clamp (25 instructions, 0.11%)</title><rect x="34.3904%" y="149" width="0.1123%" height="15" fill="rgb(220,129,5)" fg:x="7656" fg:w="25"/><text x="34.6834%" y="159.50"></text></g><g><title>s_mp_sub (147 instructions, 0.66%)</title><rect x="34.3904%" y="165" width="0.6603%" height="15" fill="rgb(242,17,10)" fg:x="7656" fg:w="147"/><text x="34.6834%" y="175.50"></text></g><g><title>mp_sub (192 instructions, 0.86%)</title><rect x="34.3320%" y="181" width="0.8625%" height="15" fill="rgb(242,107,0)" fg:x="7643" fg:w="192"/><text x="34.6250%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6cd8440281f10e41 (33 instructions, 0.15%)</title><rect x="35.1945%" y="181" width="0.1482%" height="15" fill="rgb(251,28,31)" fg:x="7835" fg:w="33"/><text x="35.4875%" y="191.50"></text></g><g><title>mp_count_bits (181 instructions, 0.81%)</title><rect x="35.3427%" y="165" width="0.8130%" height="15" fill="rgb(233,223,10)" fg:x="7868" fg:w="181"/><text x="35.6357%" y="175.50"></text></g><g><title>bigint_2complement_bits (223 instructions, 1.00%)</title><rect x="35.3427%" y="181" width="1.0017%" height="15" fill="rgb(215,21,27)" fg:x="7868" fg:w="223"/><text x="35.6357%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::ha70fa06d6a655c68 (60 instructions, 0.27%)</title><rect x="36.9149%" y="133" width="0.2695%" height="15" fill="rgb(232,23,21)" fg:x="8218" fg:w="60"/><text x="37.2079%" y="143.50"></text></g><g><title>memset (106 instructions, 0.48%)</title><rect x="37.1844%" y="133" width="0.4761%" height="15" fill="rgb(244,5,23)" fg:x="8278" fg:w="106"/><text x="37.4774%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.91%)</title><rect x="36.9149%" y="149" width="0.9074%" height="15" fill="rgb(226,81,46)" fg:x="8218" fg:w="202"/><text x="37.2079%" y="159.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="36.9149%" y="165" width="1.0017%" height="15" fill="rgb(247,70,30)" fg:x="8218" fg:w="223"/><text x="37.2079%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.47%)</title><rect x="37.9166%" y="165" width="0.4672%" height="15" fill="rgb(212,68,19)" fg:x="8441" fg:w="104"/><text x="38.2096%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6cd8440281f10e41 (33 instructions, 0.15%)</title><rect x="38.3838%" y="165" width="0.1482%" height="15" fill="rgb(240,187,13)" fg:x="8545" fg:w="33"/><text x="38.6768%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.92%)</title><rect x="36.9149%" y="181" width="1.9181%" height="15" fill="rgb(223,113,26)" fg:x="8218" fg:w="427"/><text x="37.2079%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::ha70fa06d6a655c68 (60 instructions, 0.27%)</title><rect x="38.8330%" y="149" width="0.2695%" height="15" fill="rgb(206,192,2)" fg:x="8645" fg:w="60"/><text x="39.1260%" y="159.50"></text></g><g><title>memset (106 instructions, 0.48%)</title><rect x="39.1025%" y="149" width="0.4761%" height="15" fill="rgb(241,108,4)" fg:x="8705" fg:w="106"/><text x="39.3955%" y="159.50"></text></g><g><title>mp_calloc (202 instructions, 0.91%)</title><rect x="38.8330%" y="165" width="0.9074%" height="15" fill="rgb(247,173,49)" fg:x="8645" fg:w="202"/><text x="39.1260%" y="175.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="38.8330%" y="181" width="1.0017%" height="15" fill="rgb(224,114,35)" fg:x="8645" fg:w="223"/><text x="39.1260%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="39.8347%" y="165" width="0.0584%" height="15" fill="rgb(245,159,27)" fg:x="8868" fg:w="13"/><text x="40.1277%" y="175.50"></text></g><g><title>mp_clamp (25 instructions, 0.11%)</title><rect x="39.8931%" y="149" width="0.1123%" height="15" fill="rgb(245,172,44)" fg:x="8881" fg:w="25"/><text x="40.1861%" y="159.50"></text></g><g><title>s_mp_sub (147 instructions, 0.66%)</title><rect x="39.8931%" y="165" width="0.6603%" height="15" fill="rgb(236,23,11)" fg:x="8881" fg:w="147"/><text x="40.1861%" y="175.50"></text></g><g><title>mp_sub (192 instructions, 0.86%)</title><rect x="39.8347%" y="181" width="0.8625%" height="15" fill="rgb(205,117,38)" fg:x="8868" fg:w="192"/><text x="40.1277%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6cd8440281f10e41 (33 instructions, 0.15%)</title><rect x="40.6972%" y="181" width="0.1482%" height="15" fill="rgb(237,72,25)" fg:x="9060" fg:w="33"/><text x="40.9901%" y="191.50"></text></g><g><title>mp_count_bits (181 instructions, 0.81%)</title><rect x="40.8454%" y="165" width="0.8130%" height="15" fill="rgb(244,70,9)" fg:x="9093" fg:w="181"/><text x="41.1384%" y="175.50"></text></g><g><title>bigint_2complement_bits (223 instructions, 1.00%)</title><rect x="40.8454%" y="181" width="1.0017%" height="15" fill="rgb(217,125,39)" fg:x="9093" fg:w="223"/><text x="41.1384%" y="191.50"></text></g><g><title>B_sub (2,450 instructions, 11.01%)</title><rect x="31.4123%" y="197" width="11.0053%" height="15" fill="rgb(235,36,10)" fg:x="6993" fg:w="2450"/><text x="31.7052%" y="207.50">B_sub</text></g><g><title>compute_crc32 (778 instructions, 3.49%)</title><rect x="42.4176%" y="165" width="3.4947%" height="15" fill="rgb(251,123,47)" fg:x="9443" fg:w="778"/><text x="42.7105%" y="175.50">com..</text></g><g><title>account_key (842 instructions, 3.78%)</title><rect x="42.4176%" y="181" width="3.7822%" height="15" fill="rgb(221,13,13)" fg:x="9443" fg:w="842"/><text x="42.7105%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="46.1998%" y="165" width="0.1258%" height="15" fill="rgb(238,131,9)" fg:x="10285" fg:w="28"/><text x="46.4928%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="46.3256%" y="149" width="0.0764%" height="15" fill="rgb(211,50,8)" fg:x="10313" fg:w="17"/><text x="46.6185%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.4019%" y="101" width="0.0764%" height="15" fill="rgb(245,182,24)" fg:x="10330" fg:w="17"/><text x="46.6949%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.4783%" y="101" width="0.0764%" height="15" fill="rgb(242,14,37)" fg:x="10347" fg:w="17"/><text x="46.7713%" y="111.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="46.4019%" y="117" width="0.3234%" height="15" fill="rgb(246,228,12)" fg:x="10330" fg:w="72"/><text x="46.6949%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.7254%" y="85" width="0.0764%" height="15" fill="rgb(213,55,15)" fg:x="10402" fg:w="17"/><text x="47.0183%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.8017%" y="85" width="0.0764%" height="15" fill="rgb(209,9,3)" fg:x="10419" fg:w="17"/><text x="47.0947%" y="95.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="46.7254%" y="101" width="0.3234%" height="15" fill="rgb(230,59,30)" fg:x="10402" fg:w="72"/><text x="47.0183%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="47.0488%" y="69" width="0.0764%" height="15" fill="rgb(209,121,21)" fg:x="10474" fg:w="17"/><text x="47.3418%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="47.1251%" y="69" width="0.0764%" height="15" fill="rgb(220,109,13)" fg:x="10491" fg:w="17"/><text x="47.4181%" y="79.50"></text></g><g><title>anon-func-192.5 (71 instructions, 0.32%)</title><rect x="47.0488%" y="85" width="0.3189%" height="15" fill="rgb(232,18,1)" fg:x="10474" fg:w="71"/><text x="47.3418%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="47.3677%" y="53" width="0.0764%" height="15" fill="rgb(215,41,42)" fg:x="10545" fg:w="17"/><text x="47.6607%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="47.4441%" y="53" width="0.0764%" height="15" fill="rgb(224,123,36)" fg:x="10562" fg:w="17"/><text x="47.7370%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="47.5204%" y="53" width="0.0764%" height="15" fill="rgb(240,125,3)" fg:x="10579" fg:w="17"/><text x="47.8134%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="47.5968%" y="53" width="0.0764%" height="15" fill="rgb(205,98,50)" fg:x="10596" fg:w="17"/><text x="47.8898%" y="63.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.45%)</title><rect x="47.6732%" y="37" width="3.4543%" height="15" fill="rgb(205,185,37)" fg:x="10613" fg:w="769"/><text x="47.9661%" y="47.50">Bl..</text></g><g><title>equal.1 (777 instructions, 3.49%)</title><rect x="47.6732%" y="53" width="3.4903%" height="15" fill="rgb(238,207,15)" fg:x="10613" fg:w="777"/><text x="47.9661%" y="63.50">equ..</text></g><g><title>anon-func-192.5 (911 instructions, 4.09%)</title><rect x="47.3677%" y="69" width="4.0922%" height="15" fill="rgb(213,199,42)" fg:x="10545" fg:w="911"/><text x="47.6607%" y="79.50">ano..</text></g><g><title>del (1,007 instructions, 4.52%)</title><rect x="47.3677%" y="85" width="4.5234%" height="15" fill="rgb(235,201,11)" fg:x="10545" fg:w="1007"/><text x="47.6607%" y="95.50">del</text></g><g><title>del (1,233 instructions, 5.54%)</title><rect x="47.0488%" y="101" width="5.5386%" height="15" fill="rgb(207,46,11)" fg:x="10474" fg:w="1233"/><text x="47.3418%" y="111.50">del</text></g><g><title>del (1,460 instructions, 6.56%)</title><rect x="46.7254%" y="117" width="6.5583%" height="15" fill="rgb(241,35,35)" fg:x="10402" fg:w="1460"/><text x="47.0183%" y="127.50">del</text></g><g><title>del (1,687 instructions, 7.58%)</title><rect x="46.4019%" y="133" width="7.5779%" height="15" fill="rgb(243,32,47)" fg:x="10330" fg:w="1687"/><text x="46.6949%" y="143.50">del</text></g><g><title>replace (1,901 instructions, 8.54%)</title><rect x="46.4019%" y="149" width="8.5392%" height="15" fill="rgb(247,202,23)" fg:x="10330" fg:w="1901"/><text x="46.6949%" y="159.50">replace</text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="54.9412%" y="117" width="0.0539%" height="15" fill="rgb(219,102,11)" fg:x="12231" fg:w="12"/><text x="55.2341%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="54.9951%" y="117" width="0.1213%" height="15" fill="rgb(243,110,44)" fg:x="12243" fg:w="27"/><text x="55.2880%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="55.1163%" y="117" width="0.0539%" height="15" fill="rgb(222,74,54)" fg:x="12270" fg:w="12"/><text x="55.4093%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.1702%" y="117" width="0.1213%" height="15" fill="rgb(216,99,12)" fg:x="12282" fg:w="27"/><text x="55.4632%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="55.2915%" y="117" width="0.0539%" height="15" fill="rgb(226,22,26)" fg:x="12309" fg:w="12"/><text x="55.5845%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.3454%" y="117" width="0.1213%" height="15" fill="rgb(217,163,10)" fg:x="12321" fg:w="27"/><text x="55.6384%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="55.4667%" y="117" width="0.0539%" height="15" fill="rgb(213,25,53)" fg:x="12348" fg:w="12"/><text x="55.7597%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.5206%" y="117" width="0.1213%" height="15" fill="rgb(252,105,26)" fg:x="12360" fg:w="27"/><text x="55.8136%" y="127.50"></text></g><g><title>rec (501 instructions, 2.25%)</title><rect x="54.9412%" y="133" width="2.2505%" height="15" fill="rgb(220,39,43)" fg:x="12231" fg:w="501"/><text x="55.2341%" y="143.50">r..</text></g><g><title>leaf (510 instructions, 2.29%)</title><rect x="54.9412%" y="149" width="2.2909%" height="15" fill="rgb(229,68,48)" fg:x="12231" fg:w="510"/><text x="55.2341%" y="159.50">l..</text></g><g><title>recursiveReplace (2,501 instructions, 11.23%)</title><rect x="46.3256%" y="165" width="11.2344%" height="15" fill="rgb(252,8,32)" fg:x="10313" fg:w="2501"/><text x="46.6185%" y="175.50">recursiveRepla..</text></g><g><title>put.1 (2,668 instructions, 11.98%)</title><rect x="46.1998%" y="181" width="11.9845%" height="15" fill="rgb(223,20,43)" fg:x="10285" fg:w="2668"/><text x="46.4928%" y="191.50">put.1</text></g><g><title>account_put (3,562 instructions, 16.00%)</title><rect x="42.4176%" y="197" width="16.0004%" height="15" fill="rgb(229,81,49)" fg:x="9443" fg:w="3562"/><text x="42.7105%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="58.4179%" y="197" width="0.0764%" height="15" fill="rgb(236,28,36)" fg:x="13005" fg:w="17"/><text x="58.7109%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.49%)</title><rect x="58.4943%" y="165" width="3.4947%" height="15" fill="rgb(249,185,26)" fg:x="13022" fg:w="778"/><text x="58.7873%" y="175.50">com..</text></g><g><title>account_key (842 instructions, 3.78%)</title><rect x="58.4943%" y="181" width="3.7822%" height="15" fill="rgb(249,174,33)" fg:x="13022" fg:w="842"/><text x="58.7873%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="62.2765%" y="165" width="0.1258%" height="15" fill="rgb(233,201,37)" fg:x="13864" fg:w="28"/><text x="62.5695%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="62.4023%" y="149" width="0.0764%" height="15" fill="rgb(221,78,26)" fg:x="13892" fg:w="17"/><text x="62.6953%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.4787%" y="133" width="0.0764%" height="15" fill="rgb(250,127,30)" fg:x="13909" fg:w="17"/><text x="62.7716%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.5550%" y="133" width="0.0764%" height="15" fill="rgb(230,49,44)" fg:x="13926" fg:w="17"/><text x="62.8480%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.8021%" y="133" width="0.0764%" height="15" fill="rgb(229,67,23)" fg:x="13981" fg:w="17"/><text x="63.0951%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.8784%" y="133" width="0.0764%" height="15" fill="rgb(249,83,47)" fg:x="13998" fg:w="17"/><text x="63.1714%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.1255%" y="133" width="0.0764%" height="15" fill="rgb(215,43,3)" fg:x="14053" fg:w="17"/><text x="63.4185%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.2019%" y="133" width="0.0764%" height="15" fill="rgb(238,154,13)" fg:x="14070" fg:w="17"/><text x="63.4948%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.4489%" y="133" width="0.0764%" height="15" fill="rgb(219,56,2)" fg:x="14125" fg:w="17"/><text x="63.7419%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.5253%" y="133" width="0.0764%" height="15" fill="rgb(233,0,4)" fg:x="14142" fg:w="17"/><text x="63.8183%" y="143.50"></text></g><g><title>anon-func-192.5 (287 instructions, 1.29%)</title><rect x="62.4787%" y="149" width="1.2892%" height="15" fill="rgb(235,30,7)" fg:x="13909" fg:w="287"/><text x="62.7716%" y="159.50"></text></g><g><title>rec.4 (607 instructions, 2.73%)</title><rect x="62.4023%" y="165" width="2.7266%" height="15" fill="rgb(250,79,13)" fg:x="13892" fg:w="607"/><text x="62.6953%" y="175.50">r..</text></g><g><title>get.2 (687 instructions, 3.09%)</title><rect x="62.2765%" y="181" width="3.0860%" height="15" fill="rgb(211,146,34)" fg:x="13864" fg:w="687"/><text x="62.5695%" y="191.50">ge..</text></g><g><title>account_get (1,544 instructions, 6.94%)</title><rect x="58.4943%" y="197" width="6.9356%" height="15" fill="rgb(228,22,38)" fg:x="13022" fg:w="1544"/><text x="58.7873%" y="207.50">account_..</text></g><g><title>get.1 (9 instructions, 0.04%)</title><rect x="65.4299%" y="197" width="0.0404%" height="15" fill="rgb(235,168,5)" fg:x="14566" fg:w="9"/><text x="65.7228%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="65.4703%" y="197" width="0.0764%" height="15" fill="rgb(221,155,16)" fg:x="14575" fg:w="17"/><text x="65.7633%" y="207.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="65.5467%" y="197" width="0.1213%" height="15" fill="rgb(215,215,53)" fg:x="14592" fg:w="27"/><text x="65.8396%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="65.6680%" y="197" width="0.0764%" height="15" fill="rgb(223,4,10)" fg:x="14619" fg:w="17"/><text x="65.9609%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.49%)</title><rect x="65.7443%" y="165" width="3.4947%" height="15" fill="rgb(234,103,6)" fg:x="14636" fg:w="778"/><text x="66.0373%" y="175.50">com..</text></g><g><title>account_key (842 instructions, 3.78%)</title><rect x="65.7443%" y="181" width="3.7822%" height="15" fill="rgb(227,97,0)" fg:x="14636" fg:w="842"/><text x="66.0373%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="69.5265%" y="165" width="0.1258%" height="15" fill="rgb(234,150,53)" fg:x="15478" fg:w="28"/><text x="69.8195%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="69.6523%" y="149" width="0.0764%" height="15" fill="rgb(228,201,54)" fg:x="15506" fg:w="17"/><text x="69.9453%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="69.7287%" y="101" width="0.0764%" height="15" fill="rgb(222,22,37)" fg:x="15523" fg:w="17"/><text x="70.0217%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="69.8050%" y="101" width="0.0764%" height="15" fill="rgb(237,53,32)" fg:x="15540" fg:w="17"/><text x="70.0980%" y="111.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="69.7287%" y="117" width="0.3234%" height="15" fill="rgb(233,25,53)" fg:x="15523" fg:w="72"/><text x="70.0217%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.0521%" y="85" width="0.0764%" height="15" fill="rgb(210,40,34)" fg:x="15595" fg:w="17"/><text x="70.3451%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.1285%" y="85" width="0.0764%" height="15" fill="rgb(241,220,44)" fg:x="15612" fg:w="17"/><text x="70.4214%" y="95.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="70.0521%" y="101" width="0.3234%" height="15" fill="rgb(235,28,35)" fg:x="15595" fg:w="72"/><text x="70.3451%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.3755%" y="69" width="0.0764%" height="15" fill="rgb(210,56,17)" fg:x="15667" fg:w="17"/><text x="70.6685%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.4519%" y="69" width="0.0764%" height="15" fill="rgb(224,130,29)" fg:x="15684" fg:w="17"/><text x="70.7449%" y="79.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="70.3755%" y="85" width="0.3234%" height="15" fill="rgb(235,212,8)" fg:x="15667" fg:w="72"/><text x="70.6685%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.6989%" y="53" width="0.0764%" height="15" fill="rgb(223,33,50)" fg:x="15739" fg:w="17"/><text x="70.9919%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.7753%" y="53" width="0.0764%" height="15" fill="rgb(219,149,13)" fg:x="15756" fg:w="17"/><text x="71.0683%" y="63.50"></text></g><g><title>anon-func-192.5 (71 instructions, 0.32%)</title><rect x="70.6989%" y="69" width="0.3189%" height="15" fill="rgb(250,156,29)" fg:x="15739" fg:w="71"/><text x="70.9919%" y="79.50"></text></g><g><title>del (31 instructions, 0.14%)</title><rect x="71.0179%" y="69" width="0.1393%" height="15" fill="rgb(216,193,19)" fg:x="15810" fg:w="31"/><text x="71.3108%" y="79.50"></text></g><g><title>del (198 instructions, 0.89%)</title><rect x="70.6989%" y="85" width="0.8894%" height="15" fill="rgb(216,135,14)" fg:x="15739" fg:w="198"/><text x="70.9919%" y="95.50"></text></g><g><title>del (366 instructions, 1.64%)</title><rect x="70.3755%" y="101" width="1.6441%" height="15" fill="rgb(241,47,5)" fg:x="15667" fg:w="366"/><text x="70.6685%" y="111.50"></text></g><g><title>del (534 instructions, 2.40%)</title><rect x="70.0521%" y="117" width="2.3987%" height="15" fill="rgb(233,42,35)" fg:x="15595" fg:w="534"/><text x="70.3451%" y="127.50">d..</text></g><g><title>del (702 instructions, 3.15%)</title><rect x="69.7287%" y="133" width="3.1534%" height="15" fill="rgb(231,13,6)" fg:x="15523" fg:w="702"/><text x="70.0217%" y="143.50">del</text></g><g><title>replace (916 instructions, 4.11%)</title><rect x="69.7287%" y="149" width="4.1146%" height="15" fill="rgb(207,181,40)" fg:x="15523" fg:w="916"/><text x="70.0217%" y="159.50">rep..</text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="73.8433%" y="117" width="0.0539%" height="15" fill="rgb(254,173,49)" fg:x="16439" fg:w="12"/><text x="74.1363%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="73.8972%" y="117" width="0.1213%" height="15" fill="rgb(221,1,38)" fg:x="16451" fg:w="27"/><text x="74.1902%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.0185%" y="117" width="0.0539%" height="15" fill="rgb(206,124,46)" fg:x="16478" fg:w="12"/><text x="74.3115%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.0724%" y="117" width="0.1213%" height="15" fill="rgb(249,21,11)" fg:x="16490" fg:w="27"/><text x="74.3654%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.1937%" y="117" width="0.0539%" height="15" fill="rgb(222,201,40)" fg:x="16517" fg:w="12"/><text x="74.4867%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.2476%" y="117" width="0.1213%" height="15" fill="rgb(235,61,29)" fg:x="16529" fg:w="27"/><text x="74.5406%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.3689%" y="117" width="0.0539%" height="15" fill="rgb(219,207,3)" fg:x="16556" fg:w="12"/><text x="74.6618%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.4228%" y="117" width="0.1213%" height="15" fill="rgb(222,56,46)" fg:x="16568" fg:w="27"/><text x="74.7158%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.5441%" y="117" width="0.0539%" height="15" fill="rgb(239,76,54)" fg:x="16595" fg:w="12"/><text x="74.8370%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.5980%" y="117" width="0.1213%" height="15" fill="rgb(231,124,27)" fg:x="16607" fg:w="27"/><text x="74.8909%" y="127.50"></text></g><g><title>rec (601 instructions, 2.70%)</title><rect x="73.8433%" y="133" width="2.6997%" height="15" fill="rgb(249,195,6)" fg:x="16439" fg:w="601"/><text x="74.1363%" y="143.50">r..</text></g><g><title>leaf (610 instructions, 2.74%)</title><rect x="73.8433%" y="149" width="2.7401%" height="15" fill="rgb(237,174,47)" fg:x="16439" fg:w="610"/><text x="74.1363%" y="159.50">l..</text></g><g><title>recursiveReplace (1,616 instructions, 7.26%)</title><rect x="69.6523%" y="165" width="7.2590%" height="15" fill="rgb(206,201,31)" fg:x="15506" fg:w="1616"/><text x="69.9453%" y="175.50">recursiv..</text></g><g><title>put.1 (1,783 instructions, 8.01%)</title><rect x="69.5265%" y="181" width="8.0092%" height="15" fill="rgb(231,57,52)" fg:x="15478" fg:w="1783"/><text x="69.8195%" y="191.50">put.1</text></g><g><title>account_put (2,677 instructions, 12.02%)</title><rect x="65.7443%" y="197" width="12.0250%" height="15" fill="rgb(248,177,22)" fg:x="14636" fg:w="2677"/><text x="66.0373%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="77.7693%" y="181" width="0.2515%" height="15" fill="rgb(215,211,37)" fg:x="17313" fg:w="56"/><text x="78.0623%" y="191.50"></text></g><g><title>memcpy (86 instructions, 0.39%)</title><rect x="78.0208%" y="181" width="0.3863%" height="15" fill="rgb(241,128,51)" fg:x="17369" fg:w="86"/><text x="78.3138%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="78.4072%" y="181" width="0.2515%" height="15" fill="rgb(227,165,31)" fg:x="17455" fg:w="56"/><text x="78.7001%" y="191.50"></text></g><g><title>leb128_encode (11 instructions, 0.05%)</title><rect x="78.6587%" y="181" width="0.0494%" height="15" fill="rgb(228,167,24)" fg:x="17511" fg:w="11"/><text x="78.9517%" y="191.50"></text></g><g><title>$lambda.31 (1,385 instructions, 6.22%)</title><rect x="77.7693%" y="197" width="6.2214%" height="15" fill="rgb(228,143,12)" fg:x="17313" fg:w="1385"/><text x="78.0623%" y="207.50">$lambd..</text></g><g><title>$lambda.3 (16,133 instructions, 72.47%)</title><rect x="17.4917%" y="213" width="72.4688%" height="15" fill="rgb(249,149,8)" fg:x="3894" fg:w="16133"/><text x="17.7847%" y="223.50">$lambda.3</text></g><g><title>schedule_copying_gc (108 instructions, 0.49%)</title><rect x="89.9605%" y="213" width="0.4851%" height="15" fill="rgb(243,35,44)" fg:x="20027" fg:w="108"/><text x="90.2534%" y="223.50"></text></g><g><title>trans_state4 (16 instructions, 0.07%)</title><rect x="90.4456%" y="213" width="0.0719%" height="15" fill="rgb(246,89,9)" fg:x="20135" fg:w="16"/><text x="90.7386%" y="223.50"></text></g><g><title>all (22,262 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(233,213,13)" fg:x="0" fg:w="22262"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (22,262 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(233,141,41)" fg:x="0" fg:w="22262"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>