<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="16290"><g><title>trans_state5 (8 instructions, 0.05%)</title><rect x="0.0000%" y="213" width="0.0491%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="0.0491%" y="213" width="0.2026%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="33"/><text x="0.3421%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="0.2517%" y="197" width="0.2824%" height="15" fill="rgb(221,193,54)" fg:x="41" fg:w="46"/><text x="0.5447%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="0.5341%" y="197" width="0.2026%" height="15" fill="rgb(248,212,6)" fg:x="87" fg:w="33"/><text x="0.8270%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="0.7366%" y="197" width="0.3683%" height="15" fill="rgb(208,68,35)" fg:x="120" fg:w="60"/><text x="1.0296%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="1.1050%" y="197" width="0.2824%" height="15" fill="rgb(232,128,0)" fg:x="180" fg:w="46"/><text x="1.3979%" y="207.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="1.3874%" y="197" width="0.7489%" height="15" fill="rgb(207,160,47)" fg:x="226" fg:w="122"/><text x="1.6803%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="2.1363%" y="197" width="0.3683%" height="15" fill="rgb(228,23,34)" fg:x="348" fg:w="60"/><text x="2.4292%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (17 instructions, 0.10%)</title><rect x="2.5046%" y="197" width="0.1044%" height="15" fill="rgb(218,30,26)" fg:x="408" fg:w="17"/><text x="2.7976%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="2.6090%" y="197" width="1.2155%" height="15" fill="rgb(220,122,19)" fg:x="425" fg:w="198"/><text x="2.9019%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="3.8244%" y="197" width="0.3683%" height="15" fill="rgb(250,228,42)" fg:x="623" fg:w="60"/><text x="4.1174%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.06%)</title><rect x="4.1928%" y="197" width="0.0552%" height="15" fill="rgb(240,193,28)" fg:x="683" fg:w="9"/><text x="4.4857%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="4.2480%" y="197" width="0.3683%" height="15" fill="rgb(216,20,37)" fg:x="692" fg:w="60"/><text x="4.5410%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="4.6163%" y="197" width="0.2824%" height="15" fill="rgb(206,188,39)" fg:x="752" fg:w="46"/><text x="4.9093%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="4.8987%" y="197" width="1.2155%" height="15" fill="rgb(217,207,13)" fg:x="798" fg:w="198"/><text x="5.1917%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.1142%" y="197" width="0.3683%" height="15" fill="rgb(231,73,38)" fg:x="996" fg:w="60"/><text x="6.4071%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.06%)</title><rect x="6.4825%" y="197" width="0.0552%" height="15" fill="rgb(225,20,46)" fg:x="1056" fg:w="9"/><text x="6.7755%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.5378%" y="197" width="0.3683%" height="15" fill="rgb(210,31,41)" fg:x="1065" fg:w="60"/><text x="6.8307%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.9061%" y="197" width="0.3683%" height="15" fill="rgb(221,200,47)" fg:x="1125" fg:w="60"/><text x="7.1990%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="7.2744%" y="197" width="0.2824%" height="15" fill="rgb(226,26,5)" fg:x="1185" fg:w="46"/><text x="7.5674%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="7.5568%" y="197" width="0.3683%" height="15" fill="rgb(249,33,26)" fg:x="1231" fg:w="60"/><text x="7.8498%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::hb778a94d65f37c57 (9 instructions, 0.06%)</title><rect x="7.9251%" y="197" width="0.0552%" height="15" fill="rgb(235,183,28)" fg:x="1291" fg:w="9"/><text x="8.2181%" y="207.50"></text></g><g><title>parse_idl_header (1,580 instructions, 9.70%)</title><rect x="0.2517%" y="213" width="9.6992%" height="15" fill="rgb(221,5,38)" fg:x="41" fg:w="1580"/><text x="0.5447%" y="223.50">parse_idl_he..</text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="9.9509%" y="197" width="0.0246%" height="15" fill="rgb(247,18,42)" fg:x="1621" fg:w="4"/><text x="10.2439%" y="207.50"></text></g><g><title>idl_sub_buf_init (8 instructions, 0.05%)</title><rect x="9.9509%" y="213" width="0.0491%" height="15" fill="rgb(241,131,45)" fg:x="1621" fg:w="8"/><text x="10.2439%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="10.0000%" y="213" width="0.2824%" height="15" fill="rgb(249,31,29)" fg:x="1629" fg:w="46"/><text x="10.2930%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.2824%" y="213" width="0.3683%" height="15" fill="rgb(225,111,53)" fg:x="1675" fg:w="60"/><text x="10.5754%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.6507%" y="213" width="0.3683%" height="15" fill="rgb(238,160,17)" fg:x="1735" fg:w="60"/><text x="10.9437%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="11.0190%" y="213" width="0.2824%" height="15" fill="rgb(214,148,48)" fg:x="1795" fg:w="46"/><text x="11.3120%" y="223.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="11.3014%" y="213" width="0.0921%" height="15" fill="rgb(232,36,49)" fg:x="1841" fg:w="15"/><text x="11.5944%" y="223.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="11.3935%" y="197" width="0.7489%" height="15" fill="rgb(209,103,24)" fg:x="1856" fg:w="122"/><text x="11.6865%" y="207.50"></text></g><g><title>find_field (149 instructions, 0.91%)</title><rect x="11.3935%" y="213" width="0.9147%" height="15" fill="rgb(229,88,8)" fg:x="1856" fg:w="149"/><text x="11.6865%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="12.3082%" y="213" width="0.3683%" height="15" fill="rgb(213,181,19)" fg:x="2005" fg:w="60"/><text x="12.6011%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="12.6765%" y="197" width="0.2824%" height="15" fill="rgb(254,191,54)" fg:x="2065" fg:w="46"/><text x="12.9695%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="12.9589%" y="197" width="0.2026%" height="15" fill="rgb(241,83,37)" fg:x="2111" fg:w="33"/><text x="13.2518%" y="207.50"></text></g><g><title>memcpy (181 instructions, 1.11%)</title><rect x="13.1614%" y="197" width="1.1111%" height="15" fill="rgb(233,36,39)" fg:x="2144" fg:w="181"/><text x="13.4544%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (335 instructions, 2.06%)</title><rect x="12.6765%" y="213" width="2.0565%" height="15" fill="rgb(226,3,54)" fg:x="2065" fg:w="335"/><text x="12.9695%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="14.7330%" y="197" width="1.2155%" height="15" fill="rgb(245,192,40)" fg:x="2400" fg:w="198"/><text x="15.0259%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="14.7330%" y="213" width="1.3812%" height="15" fill="rgb(238,167,29)" fg:x="2400" fg:w="225"/><text x="15.0259%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.1142%" y="213" width="0.3683%" height="15" fill="rgb(232,182,51)" fg:x="2625" fg:w="60"/><text x="16.4071%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.4825%" y="197" width="0.3683%" height="15" fill="rgb(231,60,39)" fg:x="2685" fg:w="60"/><text x="16.7755%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="16.8508%" y="197" width="0.2824%" height="15" fill="rgb(208,69,12)" fg:x="2745" fg:w="46"/><text x="17.1438%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="17.1332%" y="197" width="0.0921%" height="15" fill="rgb(235,93,37)" fg:x="2791" fg:w="15"/><text x="17.4262%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.22%)</title><rect x="17.2253%" y="181" width="1.2155%" height="15" fill="rgb(213,116,39)" fg:x="2806" fg:w="198"/><text x="17.5183%" y="191.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="17.2253%" y="197" width="1.3812%" height="15" fill="rgb(222,207,29)" fg:x="2806" fg:w="225"/><text x="17.5183%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="18.6065%" y="197" width="0.3683%" height="15" fill="rgb(206,96,30)" fg:x="3031" fg:w="60"/><text x="18.8995%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (55 instructions, 0.34%)</title><rect x="18.9748%" y="181" width="0.3376%" height="15" fill="rgb(218,138,4)" fg:x="3091" fg:w="55"/><text x="19.2678%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (99 instructions, 0.61%)</title><rect x="18.9748%" y="197" width="0.6077%" height="15" fill="rgb(250,191,14)" fg:x="3091" fg:w="99"/><text x="19.2678%" y="207.50"></text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="19.5826%" y="197" width="0.0246%" height="15" fill="rgb(239,60,40)" fg:x="3190" fg:w="4"/><text x="19.8755%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (641 instructions, 3.93%)</title><rect x="16.4825%" y="213" width="3.9349%" height="15" fill="rgb(206,27,48)" fg:x="2685" fg:w="641"/><text x="16.7755%" y="223.50">@de..</text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="20.4174%" y="213" width="0.0246%" height="15" fill="rgb(225,35,8)" fg:x="3326" fg:w="4"/><text x="20.7104%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="20.4420%" y="213" width="0.0921%" height="15" fill="rgb(250,213,24)" fg:x="3330" fg:w="15"/><text x="20.7350%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="20.5341%" y="197" width="0.2026%" height="15" fill="rgb(247,123,22)" fg:x="3345" fg:w="33"/><text x="20.8270%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="20.7366%" y="197" width="0.0921%" height="15" fill="rgb(231,138,38)" fg:x="3378" fg:w="15"/><text x="21.0296%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="20.8287%" y="197" width="0.0982%" height="15" fill="rgb(231,145,46)" fg:x="3393" fg:w="16"/><text x="21.1217%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.58%)</title><rect x="20.9269%" y="165" width="4.5795%" height="15" fill="rgb(251,118,11)" fg:x="3409" fg:w="746"/><text x="21.2199%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="25.5064%" y="165" width="0.1412%" height="15" fill="rgb(217,147,25)" fg:x="4155" fg:w="23"/><text x="25.7994%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="25.6476%" y="165" width="0.0921%" height="15" fill="rgb(247,81,37)" fg:x="4178" fg:w="15"/><text x="25.9406%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="25.7397%" y="165" width="0.1412%" height="15" fill="rgb(209,12,38)" fg:x="4193" fg:w="23"/><text x="26.0327%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.10%)</title><rect x="20.9269%" y="181" width="5.1013%" height="15" fill="rgb(227,1,9)" fg:x="3409" fg:w="831"/><text x="21.2199%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="26.0282%" y="149" width="0.0921%" height="15" fill="rgb(248,47,43)" fg:x="4240" fg:w="15"/><text x="26.3212%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="26.0282%" y="165" width="0.1596%" height="15" fill="rgb(221,10,30)" fg:x="4240" fg:w="26"/><text x="26.3212%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="26.1878%" y="165" width="0.0921%" height="15" fill="rgb(210,229,1)" fg:x="4266" fg:w="15"/><text x="26.4808%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="26.2799%" y="149" width="0.0982%" height="15" fill="rgb(222,148,37)" fg:x="4281" fg:w="16"/><text x="26.5729%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.3781%" y="149" width="0.1105%" height="15" fill="rgb(234,67,33)" fg:x="4297" fg:w="18"/><text x="26.6711%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.4886%" y="133" width="0.0982%" height="15" fill="rgb(247,98,35)" fg:x="4315" fg:w="16"/><text x="26.7816%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.5869%" y="133" width="0.0982%" height="15" fill="rgb(247,138,52)" fg:x="4331" fg:w="16"/><text x="26.8798%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="26.4886%" y="149" width="0.3499%" height="15" fill="rgb(213,79,30)" fg:x="4315" fg:w="57"/><text x="26.7816%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.8386%" y="149" width="0.1105%" height="15" fill="rgb(246,177,23)" fg:x="4372" fg:w="18"/><text x="27.1315%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.9490%" y="133" width="0.0982%" height="15" fill="rgb(230,62,27)" fg:x="4390" fg:w="16"/><text x="27.2420%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.0473%" y="133" width="0.0982%" height="15" fill="rgb(216,154,8)" fg:x="4406" fg:w="16"/><text x="27.3402%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="26.9490%" y="149" width="0.3438%" height="15" fill="rgb(244,35,45)" fg:x="4390" fg:w="56"/><text x="27.2420%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.2928%" y="149" width="0.1105%" height="15" fill="rgb(251,115,12)" fg:x="4446" fg:w="18"/><text x="27.5858%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.4033%" y="133" width="0.0982%" height="15" fill="rgb(240,54,50)" fg:x="4464" fg:w="16"/><text x="27.6963%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.5015%" y="133" width="0.0982%" height="15" fill="rgb(233,84,52)" fg:x="4480" fg:w="16"/><text x="27.7945%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="27.4033%" y="149" width="0.3499%" height="15" fill="rgb(207,117,47)" fg:x="4464" fg:w="57"/><text x="27.6963%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.7532%" y="149" width="0.1105%" height="15" fill="rgb(249,43,39)" fg:x="4521" fg:w="18"/><text x="28.0462%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.8637%" y="133" width="0.0982%" height="15" fill="rgb(209,38,44)" fg:x="4539" fg:w="16"/><text x="28.1567%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.9619%" y="133" width="0.0982%" height="15" fill="rgb(236,212,23)" fg:x="4555" fg:w="16"/><text x="28.2549%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="28.0602%" y="133" width="0.0982%" height="15" fill="rgb(242,79,21)" fg:x="4571" fg:w="16"/><text x="28.3531%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="28.1584%" y="133" width="0.0982%" height="15" fill="rgb(211,96,35)" fg:x="4587" fg:w="16"/><text x="28.4513%" y="143.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.17%)</title><rect x="28.2566%" y="117" width="4.1682%" height="15" fill="rgb(253,215,40)" fg:x="4603" fg:w="679"/><text x="28.5496%" y="127.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.19%)</title><rect x="28.2566%" y="133" width="4.1866%" height="15" fill="rgb(211,81,21)" fg:x="4603" fg:w="682"/><text x="28.5496%" y="143.50">equa..</text></g><g><title>anon-func-192.5 (781 instructions, 4.79%)</title><rect x="27.8637%" y="149" width="4.7944%" height="15" fill="rgb(208,190,38)" fg:x="4539" fg:w="781"/><text x="28.1567%" y="159.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="32.6581%" y="149" width="0.1105%" height="15" fill="rgb(235,213,38)" fg:x="5320" fg:w="18"/><text x="32.9510%" y="159.50"></text></g><g><title>rec.2 (1,207 instructions, 7.41%)</title><rect x="26.2799%" y="165" width="7.4095%" height="15" fill="rgb(237,122,38)" fg:x="4281" fg:w="1207"/><text x="26.5729%" y="175.50">rec.2</text></g><g><title>get.2 (1,270 instructions, 7.80%)</title><rect x="26.0282%" y="181" width="7.7962%" height="15" fill="rgb(244,218,35)" fg:x="4240" fg:w="1270"/><text x="26.3212%" y="191.50">get.2</text></g><g><title>account_get (2,107 instructions, 12.93%)</title><rect x="20.9269%" y="197" width="12.9343%" height="15" fill="rgb(240,68,47)" fg:x="3409" fg:w="2107"/><text x="21.2199%" y="207.50">account_get</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="33.8613%" y="197" width="0.1105%" height="15" fill="rgb(210,16,53)" fg:x="5516" fg:w="18"/><text x="34.1542%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.9718%" y="197" width="0.0982%" height="15" fill="rgb(235,124,12)" fg:x="5534" fg:w="16"/><text x="34.2647%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.0700%" y="197" width="0.0982%" height="15" fill="rgb(224,169,11)" fg:x="5550" fg:w="16"/><text x="34.3630%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="34.1682%" y="197" width="0.0982%" height="15" fill="rgb(250,166,2)" fg:x="5566" fg:w="16"/><text x="34.4612%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.2664%" y="197" width="0.0982%" height="15" fill="rgb(242,216,29)" fg:x="5582" fg:w="16"/><text x="34.5594%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.3646%" y="197" width="0.0982%" height="15" fill="rgb(230,116,27)" fg:x="5598" fg:w="16"/><text x="34.6576%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="34.4629%" y="197" width="0.1473%" height="15" fill="rgb(228,99,48)" fg:x="5614" fg:w="24"/><text x="34.7558%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="34.6102%" y="133" width="0.2271%" height="15" fill="rgb(253,11,6)" fg:x="5638" fg:w="37"/><text x="34.9032%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="34.8373%" y="133" width="0.6077%" height="15" fill="rgb(247,143,39)" fg:x="5675" fg:w="99"/><text x="35.1303%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="34.6102%" y="149" width="0.9883%" height="15" fill="rgb(236,97,10)" fg:x="5638" fg:w="161"/><text x="34.9032%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="34.6102%" y="165" width="1.0804%" height="15" fill="rgb(233,208,19)" fg:x="5638" fg:w="176"/><text x="34.9032%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="35.6906%" y="165" width="0.5955%" height="15" fill="rgb(216,164,2)" fg:x="5814" fg:w="97"/><text x="35.9836%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="36.2861%" y="165" width="0.1842%" height="15" fill="rgb(220,129,5)" fg:x="5911" fg:w="30"/><text x="36.5790%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.16%)</title><rect x="34.6102%" y="181" width="2.1608%" height="15" fill="rgb(242,17,10)" fg:x="5638" fg:w="352"/><text x="34.9032%" y="191.50">b..</text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="36.7710%" y="165" width="0.0675%" height="15" fill="rgb(242,107,0)" fg:x="5990" fg:w="11"/><text x="37.0640%" y="175.50"></text></g><g><title>mp_cmp (25 instructions, 0.15%)</title><rect x="36.7710%" y="181" width="0.1535%" height="15" fill="rgb(251,28,31)" fg:x="5990" fg:w="25"/><text x="37.0640%" y="191.50"></text></g><g><title>B_lt (417 instructions, 2.56%)</title><rect x="34.6102%" y="197" width="2.5599%" height="15" fill="rgb(233,223,10)" fg:x="5638" fg:w="417"/><text x="34.9032%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="37.1700%" y="197" width="0.0982%" height="15" fill="rgb(215,21,27)" fg:x="6055" fg:w="16"/><text x="37.4630%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="37.2683%" y="133" width="0.2271%" height="15" fill="rgb(232,23,21)" fg:x="6071" fg:w="37"/><text x="37.5612%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="37.4954%" y="133" width="0.6077%" height="15" fill="rgb(244,5,23)" fg:x="6108" fg:w="99"/><text x="37.7884%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="37.2683%" y="149" width="0.9883%" height="15" fill="rgb(226,81,46)" fg:x="6071" fg:w="161"/><text x="37.5612%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="37.2683%" y="165" width="1.0804%" height="15" fill="rgb(247,70,30)" fg:x="6071" fg:w="176"/><text x="37.5612%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="38.3487%" y="165" width="0.5955%" height="15" fill="rgb(212,68,19)" fg:x="6247" fg:w="97"/><text x="38.6416%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="38.9441%" y="165" width="0.1842%" height="15" fill="rgb(240,187,13)" fg:x="6344" fg:w="30"/><text x="39.2371%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.16%)</title><rect x="37.2683%" y="181" width="2.1608%" height="15" fill="rgb(223,113,26)" fg:x="6071" fg:w="352"/><text x="37.5612%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="39.4291%" y="149" width="0.2271%" height="15" fill="rgb(206,192,2)" fg:x="6423" fg:w="37"/><text x="39.7221%" y="159.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="39.6562%" y="149" width="0.6077%" height="15" fill="rgb(241,108,4)" fg:x="6460" fg:w="99"/><text x="39.9492%" y="159.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="39.4291%" y="165" width="0.9883%" height="15" fill="rgb(247,173,49)" fg:x="6423" fg:w="161"/><text x="39.7221%" y="175.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="39.4291%" y="181" width="1.0804%" height="15" fill="rgb(224,114,35)" fg:x="6423" fg:w="176"/><text x="39.7221%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="40.5095%" y="165" width="0.0675%" height="15" fill="rgb(245,159,27)" fg:x="6599" fg:w="11"/><text x="40.8025%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.14%)</title><rect x="40.5770%" y="149" width="0.1351%" height="15" fill="rgb(245,172,44)" fg:x="6610" fg:w="22"/><text x="40.8700%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="40.5770%" y="165" width="0.8165%" height="15" fill="rgb(236,23,11)" fg:x="6610" fg:w="133"/><text x="40.8700%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="40.5095%" y="181" width="1.0129%" height="15" fill="rgb(205,117,38)" fg:x="6599" fg:w="165"/><text x="40.8025%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="41.5224%" y="181" width="0.1842%" height="15" fill="rgb(237,72,25)" fg:x="6764" fg:w="30"/><text x="41.8154%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="41.7066%" y="165" width="1.0190%" height="15" fill="rgb(244,70,9)" fg:x="6794" fg:w="166"/><text x="41.9995%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="41.7066%" y="181" width="1.2216%" height="15" fill="rgb(217,125,39)" fg:x="6794" fg:w="199"/><text x="41.9995%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="43.5175%" y="133" width="0.2271%" height="15" fill="rgb(235,36,10)" fg:x="7089" fg:w="37"/><text x="43.8105%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="43.7446%" y="133" width="0.6077%" height="15" fill="rgb(251,123,47)" fg:x="7126" fg:w="99"/><text x="44.0376%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="43.5175%" y="149" width="0.9883%" height="15" fill="rgb(221,13,13)" fg:x="7089" fg:w="161"/><text x="43.8105%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="43.5175%" y="165" width="1.0804%" height="15" fill="rgb(238,131,9)" fg:x="7089" fg:w="176"/><text x="43.8105%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.60%)</title><rect x="44.5979%" y="165" width="0.5955%" height="15" fill="rgb(211,50,8)" fg:x="7265" fg:w="97"/><text x="44.8909%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="45.1934%" y="165" width="0.1842%" height="15" fill="rgb(245,182,24)" fg:x="7362" fg:w="30"/><text x="45.4863%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.16%)</title><rect x="43.5175%" y="181" width="2.1608%" height="15" fill="rgb(242,14,37)" fg:x="7089" fg:w="352"/><text x="43.8105%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::h853a8d8853664855 (37 instructions, 0.23%)</title><rect x="45.6783%" y="149" width="0.2271%" height="15" fill="rgb(246,228,12)" fg:x="7441" fg:w="37"/><text x="45.9713%" y="159.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="45.9055%" y="149" width="0.6077%" height="15" fill="rgb(213,55,15)" fg:x="7478" fg:w="99"/><text x="46.1984%" y="159.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="45.6783%" y="165" width="0.9883%" height="15" fill="rgb(209,9,3)" fg:x="7441" fg:w="161"/><text x="45.9713%" y="175.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="45.6783%" y="181" width="1.0804%" height="15" fill="rgb(230,59,30)" fg:x="7441" fg:w="176"/><text x="45.9713%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="46.7587%" y="165" width="0.0675%" height="15" fill="rgb(209,121,21)" fg:x="7617" fg:w="11"/><text x="47.0517%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.14%)</title><rect x="46.8263%" y="149" width="0.1351%" height="15" fill="rgb(220,109,13)" fg:x="7628" fg:w="22"/><text x="47.1192%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="46.8263%" y="165" width="0.8165%" height="15" fill="rgb(232,18,1)" fg:x="7628" fg:w="133"/><text x="47.1192%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="46.7587%" y="181" width="1.0129%" height="15" fill="rgb(215,41,42)" fg:x="7617" fg:w="165"/><text x="47.0517%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6beec28a77e825b3 (30 instructions, 0.18%)</title><rect x="47.7716%" y="181" width="0.1842%" height="15" fill="rgb(224,123,36)" fg:x="7782" fg:w="30"/><text x="48.0646%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="47.9558%" y="165" width="1.0190%" height="15" fill="rgb(240,125,3)" fg:x="7812" fg:w="166"/><text x="48.2488%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="47.9558%" y="181" width="1.2216%" height="15" fill="rgb(205,98,50)" fg:x="7812" fg:w="199"/><text x="48.2488%" y="191.50"></text></g><g><title>B_sub (2,036 instructions, 12.50%)</title><rect x="37.2683%" y="197" width="12.4985%" height="15" fill="rgb(205,185,37)" fg:x="6071" fg:w="2036"/><text x="37.5612%" y="207.50">B_sub</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="49.7667%" y="197" width="0.0921%" height="15" fill="rgb(238,207,15)" fg:x="8107" fg:w="15"/><text x="50.0597%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.58%)</title><rect x="49.8588%" y="165" width="4.5795%" height="15" fill="rgb(213,199,42)" fg:x="8122" fg:w="746"/><text x="50.1518%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="54.4383%" y="165" width="0.1412%" height="15" fill="rgb(235,201,11)" fg:x="8868" fg:w="23"/><text x="54.7313%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="54.5795%" y="165" width="0.0921%" height="15" fill="rgb(207,46,11)" fg:x="8891" fg:w="15"/><text x="54.8725%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="54.6716%" y="165" width="0.1412%" height="15" fill="rgb(241,35,35)" fg:x="8906" fg:w="23"/><text x="54.9645%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.10%)</title><rect x="49.8588%" y="181" width="5.1013%" height="15" fill="rgb(243,32,47)" fg:x="8122" fg:w="831"/><text x="50.1518%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="54.9601%" y="165" width="0.1105%" height="15" fill="rgb(247,202,23)" fg:x="8953" fg:w="18"/><text x="55.2531%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.0706%" y="165" width="0.0921%" height="15" fill="rgb(219,102,11)" fg:x="8971" fg:w="15"/><text x="55.3636%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.1627%" y="165" width="0.0921%" height="15" fill="rgb(243,110,44)" fg:x="8986" fg:w="15"/><text x="55.4556%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.2548%" y="149" width="0.0921%" height="15" fill="rgb(222,74,54)" fg:x="9001" fg:w="15"/><text x="55.5477%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="55.2548%" y="165" width="0.1596%" height="15" fill="rgb(216,99,12)" fg:x="9001" fg:w="26"/><text x="55.5477%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="55.4144%" y="149" width="0.0982%" height="15" fill="rgb(226,22,26)" fg:x="9027" fg:w="16"/><text x="55.7073%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.5126%" y="133" width="0.0921%" height="15" fill="rgb(217,163,10)" fg:x="9043" fg:w="15"/><text x="55.8056%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.6047%" y="133" width="0.0921%" height="15" fill="rgb(213,25,53)" fg:x="9058" fg:w="15"/><text x="55.8976%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.6967%" y="133" width="0.0921%" height="15" fill="rgb(252,105,26)" fg:x="9073" fg:w="15"/><text x="55.9897%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="55.7888%" y="117" width="0.1105%" height="15" fill="rgb(220,39,43)" fg:x="9088" fg:w="18"/><text x="56.0818%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.8993%" y="101" width="0.0982%" height="15" fill="rgb(229,68,48)" fg:x="9106" fg:w="16"/><text x="56.1923%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.9975%" y="101" width="0.0982%" height="15" fill="rgb(252,8,32)" fg:x="9122" fg:w="16"/><text x="56.2905%" y="111.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="55.8993%" y="117" width="0.3499%" height="15" fill="rgb(223,20,43)" fg:x="9106" fg:w="57"/><text x="56.1923%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.2492%" y="101" width="0.1105%" height="15" fill="rgb(229,81,49)" fg:x="9163" fg:w="18"/><text x="56.5422%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.3597%" y="85" width="0.0982%" height="15" fill="rgb(236,28,36)" fg:x="9181" fg:w="16"/><text x="56.6527%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.4579%" y="85" width="0.0982%" height="15" fill="rgb(249,185,26)" fg:x="9197" fg:w="16"/><text x="56.7509%" y="95.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="56.3597%" y="101" width="0.3438%" height="15" fill="rgb(249,174,33)" fg:x="9181" fg:w="56"/><text x="56.6527%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.7035%" y="85" width="0.1105%" height="15" fill="rgb(233,201,37)" fg:x="9237" fg:w="18"/><text x="56.9965%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.8140%" y="69" width="0.0982%" height="15" fill="rgb(221,78,26)" fg:x="9255" fg:w="16"/><text x="57.1070%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.9122%" y="69" width="0.0982%" height="15" fill="rgb(250,127,30)" fg:x="9271" fg:w="16"/><text x="57.2052%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="56.8140%" y="85" width="0.3499%" height="15" fill="rgb(230,49,44)" fg:x="9255" fg:w="57"/><text x="57.1070%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="57.1639%" y="69" width="0.1105%" height="15" fill="rgb(229,67,23)" fg:x="9312" fg:w="18"/><text x="57.4569%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.2744%" y="53" width="0.0982%" height="15" fill="rgb(249,83,47)" fg:x="9330" fg:w="16"/><text x="57.5674%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.3726%" y="53" width="0.0982%" height="15" fill="rgb(215,43,3)" fg:x="9346" fg:w="16"/><text x="57.6656%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.4708%" y="53" width="0.0982%" height="15" fill="rgb(238,154,13)" fg:x="9362" fg:w="16"/><text x="57.7638%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.5691%" y="53" width="0.0982%" height="15" fill="rgb(219,56,2)" fg:x="9378" fg:w="16"/><text x="57.8620%" y="63.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.17%)</title><rect x="57.6673%" y="37" width="4.1682%" height="15" fill="rgb(233,0,4)" fg:x="9394" fg:w="679"/><text x="57.9602%" y="47.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.19%)</title><rect x="57.6673%" y="53" width="4.1866%" height="15" fill="rgb(235,30,7)" fg:x="9394" fg:w="682"/><text x="57.9602%" y="63.50">equa..</text></g><g><title>anon-func-192.5 (781 instructions, 4.79%)</title><rect x="57.2744%" y="69" width="4.7944%" height="15" fill="rgb(250,79,13)" fg:x="9330" fg:w="781"/><text x="57.5674%" y="79.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.0688%" y="69" width="0.1105%" height="15" fill="rgb(211,146,34)" fg:x="10111" fg:w="18"/><text x="62.3617%" y="79.50"></text></g><g><title>del (858 instructions, 5.27%)</title><rect x="57.1639%" y="85" width="5.2670%" height="15" fill="rgb(228,22,38)" fg:x="9312" fg:w="858"/><text x="57.4569%" y="95.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.4309%" y="85" width="0.1412%" height="15" fill="rgb(235,168,5)" fg:x="10170" fg:w="23"/><text x="62.7239%" y="95.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.5721%" y="85" width="0.1105%" height="15" fill="rgb(221,155,16)" fg:x="10193" fg:w="18"/><text x="62.8651%" y="95.50"></text></g><g><title>del (1,036 instructions, 6.36%)</title><rect x="56.7035%" y="101" width="6.3597%" height="15" fill="rgb(215,215,53)" fg:x="9237" fg:w="1036"/><text x="56.9965%" y="111.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="63.0632%" y="101" width="0.1412%" height="15" fill="rgb(223,4,10)" fg:x="10273" fg:w="23"/><text x="63.3562%" y="111.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.2044%" y="101" width="0.1105%" height="15" fill="rgb(234,103,6)" fg:x="10296" fg:w="18"/><text x="63.4974%" y="111.50"></text></g><g><title>del (1,213 instructions, 7.45%)</title><rect x="56.2492%" y="117" width="7.4463%" height="15" fill="rgb(227,97,0)" fg:x="9163" fg:w="1213"/><text x="56.5422%" y="127.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="63.6955%" y="117" width="0.1412%" height="15" fill="rgb(234,150,53)" fg:x="10376" fg:w="23"/><text x="63.9885%" y="127.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.8367%" y="117" width="0.1105%" height="15" fill="rgb(228,201,54)" fg:x="10399" fg:w="18"/><text x="64.1297%" y="127.50"></text></g><g><title>del (1,391 instructions, 8.54%)</title><rect x="55.7888%" y="133" width="8.5390%" height="15" fill="rgb(222,22,37)" fg:x="9088" fg:w="1391"/><text x="56.0818%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="64.3278%" y="133" width="0.1105%" height="15" fill="rgb(237,53,32)" fg:x="10479" fg:w="18"/><text x="64.6208%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.4383%" y="133" width="0.1412%" height="15" fill="rgb(233,25,53)" fg:x="10497" fg:w="23"/><text x="64.7313%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.5795%" y="133" width="0.1412%" height="15" fill="rgb(210,40,34)" fg:x="10520" fg:w="23"/><text x="64.8725%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="64.7207%" y="133" width="0.1105%" height="15" fill="rgb(241,220,44)" fg:x="10543" fg:w="18"/><text x="65.0137%" y="143.50"></text></g><g><title>replace (1,577 instructions, 9.68%)</title><rect x="55.5126%" y="149" width="9.6808%" height="15" fill="rgb(235,28,35)" fg:x="9043" fg:w="1577"/><text x="55.8056%" y="159.50">replace</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.1934%" y="117" width="0.1105%" height="15" fill="rgb(210,56,17)" fg:x="10620" fg:w="18"/><text x="65.4863%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.3039%" y="117" width="0.0614%" height="15" fill="rgb(224,130,29)" fg:x="10638" fg:w="10"/><text x="65.5968%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.3653%" y="117" width="0.1473%" height="15" fill="rgb(235,212,8)" fg:x="10648" fg:w="24"/><text x="65.6582%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.5126%" y="117" width="0.1105%" height="15" fill="rgb(223,33,50)" fg:x="10672" fg:w="18"/><text x="65.8056%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.6231%" y="117" width="0.0614%" height="15" fill="rgb(219,149,13)" fg:x="10690" fg:w="10"/><text x="65.9161%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.6845%" y="117" width="0.1473%" height="15" fill="rgb(250,156,29)" fg:x="10700" fg:w="24"/><text x="65.9774%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.8318%" y="117" width="0.1105%" height="15" fill="rgb(216,193,19)" fg:x="10724" fg:w="18"/><text x="66.1248%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.9423%" y="117" width="0.0614%" height="15" fill="rgb(216,135,14)" fg:x="10742" fg:w="10"/><text x="66.2353%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="66.0037%" y="117" width="0.1473%" height="15" fill="rgb(241,47,5)" fg:x="10752" fg:w="24"/><text x="66.2967%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="66.1510%" y="117" width="0.1105%" height="15" fill="rgb(233,42,35)" fg:x="10776" fg:w="18"/><text x="66.4440%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="66.2615%" y="117" width="0.0614%" height="15" fill="rgb(231,13,6)" fg:x="10794" fg:w="10"/><text x="66.5545%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="66.3229%" y="117" width="0.1473%" height="15" fill="rgb(207,181,40)" fg:x="10804" fg:w="24"/><text x="66.6159%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="66.4702%" y="117" width="0.0246%" height="15" fill="rgb(254,173,49)" fg:x="10828" fg:w="4"/><text x="66.7632%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="66.4948%" y="117" width="0.0246%" height="15" fill="rgb(221,1,38)" fg:x="10832" fg:w="4"/><text x="66.7878%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="66.5193%" y="117" width="0.0921%" height="15" fill="rgb(206,124,46)" fg:x="10836" fg:w="15"/><text x="66.8123%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="66.6114%" y="117" width="0.0921%" height="15" fill="rgb(249,21,11)" fg:x="10851" fg:w="15"/><text x="66.9044%" y="127.50"></text></g><g><title>rec (417 instructions, 2.56%)</title><rect x="65.1934%" y="133" width="2.5599%" height="15" fill="rgb(222,201,40)" fg:x="10620" fg:w="417"/><text x="65.4863%" y="143.50">r..</text></g><g><title>leaf (421 instructions, 2.58%)</title><rect x="65.1934%" y="149" width="2.5844%" height="15" fill="rgb(235,61,29)" fg:x="10620" fg:w="421"/><text x="65.4863%" y="159.50">l..</text></g><g><title>recursiveReplace (2,067 instructions, 12.69%)</title><rect x="55.4144%" y="165" width="12.6888%" height="15" fill="rgb(219,207,3)" fg:x="9027" fg:w="2067"/><text x="55.7073%" y="175.50">recursiveReplace</text></g><g><title>put.1 (2,207 instructions, 13.55%)</title><rect x="54.9601%" y="181" width="13.5482%" height="15" fill="rgb(222,56,46)" fg:x="8953" fg:w="2207"/><text x="55.2531%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="68.5083%" y="181" width="0.1412%" height="15" fill="rgb(239,76,54)" fg:x="11160" fg:w="23"/><text x="68.8013%" y="191.50"></text></g><g><title>account_put (3,074 instructions, 18.87%)</title><rect x="49.8588%" y="197" width="18.8705%" height="15" fill="rgb(231,124,27)" fg:x="8122" fg:w="3074"/><text x="50.1518%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="68.7293%" y="197" width="0.0982%" height="15" fill="rgb(249,195,6)" fg:x="11196" fg:w="16"/><text x="69.0223%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.58%)</title><rect x="68.8275%" y="165" width="4.5795%" height="15" fill="rgb(237,174,47)" fg:x="11212" fg:w="746"/><text x="69.1205%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="73.4070%" y="165" width="0.0552%" height="15" fill="rgb(206,201,31)" fg:x="11958" fg:w="9"/><text x="73.7000%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="73.4622%" y="165" width="0.0921%" height="15" fill="rgb(231,57,52)" fg:x="11967" fg:w="15"/><text x="73.7552%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="73.5543%" y="165" width="0.0552%" height="15" fill="rgb(248,177,22)" fg:x="11982" fg:w="9"/><text x="73.8473%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.94%)</title><rect x="68.8275%" y="181" width="4.9355%" height="15" fill="rgb(215,211,37)" fg:x="11212" fg:w="804"/><text x="69.1205%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.7630%" y="149" width="0.0921%" height="15" fill="rgb(241,128,51)" fg:x="12016" fg:w="15"/><text x="74.0560%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="73.7630%" y="165" width="0.1596%" height="15" fill="rgb(227,165,31)" fg:x="12016" fg:w="26"/><text x="74.0560%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.9227%" y="165" width="0.0921%" height="15" fill="rgb(228,167,24)" fg:x="12042" fg:w="15"/><text x="74.2156%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="74.0147%" y="149" width="0.0982%" height="15" fill="rgb(228,143,12)" fg:x="12057" fg:w="16"/><text x="74.3077%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.1130%" y="149" width="0.1105%" height="15" fill="rgb(249,149,8)" fg:x="12073" fg:w="18"/><text x="74.4059%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.2234%" y="133" width="0.0982%" height="15" fill="rgb(243,35,44)" fg:x="12091" fg:w="16"/><text x="74.5164%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.3217%" y="133" width="0.0982%" height="15" fill="rgb(246,89,9)" fg:x="12107" fg:w="16"/><text x="74.6146%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="74.2234%" y="149" width="0.3499%" height="15" fill="rgb(233,213,13)" fg:x="12091" fg:w="57"/><text x="74.5164%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.5734%" y="149" width="0.1105%" height="15" fill="rgb(233,141,41)" fg:x="12148" fg:w="18"/><text x="74.8663%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.6839%" y="133" width="0.0982%" height="15" fill="rgb(239,167,4)" fg:x="12166" fg:w="16"/><text x="74.9768%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.7821%" y="133" width="0.0982%" height="15" fill="rgb(209,217,16)" fg:x="12182" fg:w="16"/><text x="75.0750%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="74.6839%" y="149" width="0.3560%" height="15" fill="rgb(219,88,35)" fg:x="12166" fg:w="58"/><text x="74.9768%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="75.0399%" y="149" width="0.1105%" height="15" fill="rgb(220,193,23)" fg:x="12224" fg:w="18"/><text x="75.3329%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.1504%" y="133" width="0.0982%" height="15" fill="rgb(230,90,52)" fg:x="12242" fg:w="16"/><text x="75.4434%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.2486%" y="133" width="0.0982%" height="15" fill="rgb(252,106,19)" fg:x="12258" fg:w="16"/><text x="75.5416%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="75.1504%" y="149" width="0.3499%" height="15" fill="rgb(206,74,20)" fg:x="12242" fg:w="57"/><text x="75.4434%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="75.5003%" y="149" width="0.1105%" height="15" fill="rgb(230,138,44)" fg:x="12299" fg:w="18"/><text x="75.7933%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.6108%" y="133" width="0.0982%" height="15" fill="rgb(235,182,43)" fg:x="12317" fg:w="16"/><text x="75.9038%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.7090%" y="133" width="0.0982%" height="15" fill="rgb(242,16,51)" fg:x="12333" fg:w="16"/><text x="76.0020%" y="143.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="75.6108%" y="149" width="0.3560%" height="15" fill="rgb(248,9,4)" fg:x="12317" fg:w="58"/><text x="75.9038%" y="159.50"></text></g><g><title>rec.2 (484 instructions, 2.97%)</title><rect x="74.0147%" y="165" width="2.9711%" height="15" fill="rgb(210,31,22)" fg:x="12057" fg:w="484"/><text x="74.3077%" y="175.50">re..</text></g><g><title>get.2 (547 instructions, 3.36%)</title><rect x="73.7630%" y="181" width="3.3579%" height="15" fill="rgb(239,54,39)" fg:x="12016" fg:w="547"/><text x="74.0560%" y="191.50">ge..</text></g><g><title>account_get (1,357 instructions, 8.33%)</title><rect x="68.8275%" y="197" width="8.3303%" height="15" fill="rgb(230,99,41)" fg:x="11212" fg:w="1357"/><text x="69.1205%" y="207.50">account_get</text></g><g><title>get.1 (7 instructions, 0.04%)</title><rect x="77.1578%" y="197" width="0.0430%" height="15" fill="rgb(253,106,12)" fg:x="12569" fg:w="7"/><text x="77.4507%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.2007%" y="197" width="0.0982%" height="15" fill="rgb(213,46,41)" fg:x="12576" fg:w="16"/><text x="77.4937%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="77.2990%" y="197" width="0.1473%" height="15" fill="rgb(215,133,35)" fg:x="12592" fg:w="24"/><text x="77.5919%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.4463%" y="197" width="0.0982%" height="15" fill="rgb(213,28,5)" fg:x="12616" fg:w="16"/><text x="77.7393%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="77.5445%" y="197" width="0.0921%" height="15" fill="rgb(215,77,49)" fg:x="12632" fg:w="15"/><text x="77.8375%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.58%)</title><rect x="77.6366%" y="165" width="4.5795%" height="15" fill="rgb(248,100,22)" fg:x="12647" fg:w="746"/><text x="77.9296%" y="175.50">comp..</text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="82.2161%" y="165" width="0.0552%" height="15" fill="rgb(208,67,9)" fg:x="13393" fg:w="9"/><text x="82.5091%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="82.2713%" y="165" width="0.0921%" height="15" fill="rgb(219,133,21)" fg:x="13402" fg:w="15"/><text x="82.5643%" y="175.50"></text></g><g><title>box_i32 (9 instructions, 0.06%)</title><rect x="82.3634%" y="165" width="0.0552%" height="15" fill="rgb(246,46,29)" fg:x="13417" fg:w="9"/><text x="82.6564%" y="175.50"></text></g><g><title>account_key (804 instructions, 4.94%)</title><rect x="77.6366%" y="181" width="4.9355%" height="15" fill="rgb(246,185,52)" fg:x="12647" fg:w="804"/><text x="77.9296%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="82.5721%" y="165" width="0.1105%" height="15" fill="rgb(252,136,11)" fg:x="13451" fg:w="18"/><text x="82.8651%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.6826%" y="165" width="0.0921%" height="15" fill="rgb(219,138,53)" fg:x="13469" fg:w="15"/><text x="82.9756%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.7747%" y="165" width="0.0921%" height="15" fill="rgb(211,51,23)" fg:x="13484" fg:w="15"/><text x="83.0677%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="82.8668%" y="149" width="0.0921%" height="15" fill="rgb(247,221,28)" fg:x="13499" fg:w="15"/><text x="83.1598%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="82.8668%" y="165" width="0.1596%" height="15" fill="rgb(251,222,45)" fg:x="13499" fg:w="26"/><text x="83.1598%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="83.0264%" y="149" width="0.0982%" height="15" fill="rgb(217,162,53)" fg:x="13525" fg:w="16"/><text x="83.3194%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.1246%" y="133" width="0.0921%" height="15" fill="rgb(229,93,14)" fg:x="13541" fg:w="15"/><text x="83.4176%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.2167%" y="133" width="0.0921%" height="15" fill="rgb(209,67,49)" fg:x="13556" fg:w="15"/><text x="83.5097%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="83.3088%" y="133" width="0.0921%" height="15" fill="rgb(213,87,29)" fg:x="13571" fg:w="15"/><text x="83.6017%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.4009%" y="117" width="0.1105%" height="15" fill="rgb(205,151,52)" fg:x="13586" fg:w="18"/><text x="83.6938%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.5114%" y="101" width="0.0982%" height="15" fill="rgb(253,215,39)" fg:x="13604" fg:w="16"/><text x="83.8043%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.6096%" y="101" width="0.0982%" height="15" fill="rgb(221,220,41)" fg:x="13620" fg:w="16"/><text x="83.9025%" y="111.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="83.5114%" y="117" width="0.3499%" height="15" fill="rgb(218,133,21)" fg:x="13604" fg:w="57"/><text x="83.8043%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.8613%" y="101" width="0.1105%" height="15" fill="rgb(221,193,43)" fg:x="13661" fg:w="18"/><text x="84.1542%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.9718%" y="85" width="0.0982%" height="15" fill="rgb(240,128,52)" fg:x="13679" fg:w="16"/><text x="84.2647%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.0700%" y="85" width="0.0982%" height="15" fill="rgb(253,114,12)" fg:x="13695" fg:w="16"/><text x="84.3630%" y="95.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="83.9718%" y="101" width="0.3560%" height="15" fill="rgb(215,223,47)" fg:x="13679" fg:w="58"/><text x="84.2647%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.3278%" y="85" width="0.1105%" height="15" fill="rgb(248,225,23)" fg:x="13737" fg:w="18"/><text x="84.6208%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.4383%" y="69" width="0.0982%" height="15" fill="rgb(250,108,0)" fg:x="13755" fg:w="16"/><text x="84.7313%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.5365%" y="69" width="0.0982%" height="15" fill="rgb(228,208,7)" fg:x="13771" fg:w="16"/><text x="84.8295%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="84.4383%" y="85" width="0.3499%" height="15" fill="rgb(244,45,10)" fg:x="13755" fg:w="57"/><text x="84.7313%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.7882%" y="69" width="0.1105%" height="15" fill="rgb(207,125,25)" fg:x="13812" fg:w="18"/><text x="85.0812%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.8987%" y="53" width="0.0982%" height="15" fill="rgb(210,195,18)" fg:x="13830" fg:w="16"/><text x="85.1917%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.9969%" y="53" width="0.0982%" height="15" fill="rgb(249,80,12)" fg:x="13846" fg:w="16"/><text x="85.2899%" y="63.50"></text></g><g><title>anon-func-192.5 (58 instructions, 0.36%)</title><rect x="84.8987%" y="69" width="0.3560%" height="15" fill="rgb(221,65,9)" fg:x="13830" fg:w="58"/><text x="85.1917%" y="79.50"></text></g><g><title>del (27 instructions, 0.17%)</title><rect x="85.2548%" y="69" width="0.1657%" height="15" fill="rgb(235,49,36)" fg:x="13888" fg:w="27"/><text x="85.5477%" y="79.50"></text></g><g><title>del (155 instructions, 0.95%)</title><rect x="84.7882%" y="85" width="0.9515%" height="15" fill="rgb(225,32,20)" fg:x="13812" fg:w="155"/><text x="85.0812%" y="95.50"></text></g><g><title>del (282 instructions, 1.73%)</title><rect x="84.3278%" y="101" width="1.7311%" height="15" fill="rgb(215,141,46)" fg:x="13737" fg:w="282"/><text x="84.6208%" y="111.50"></text></g><g><title>del (410 instructions, 2.52%)</title><rect x="83.8613%" y="117" width="2.5169%" height="15" fill="rgb(250,160,47)" fg:x="13661" fg:w="410"/><text x="84.1542%" y="127.50">d..</text></g><g><title>del (537 instructions, 3.30%)</title><rect x="83.4009%" y="133" width="3.2965%" height="15" fill="rgb(216,222,40)" fg:x="13586" fg:w="537"/><text x="83.6938%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="86.6974%" y="133" width="0.1105%" height="15" fill="rgb(234,217,39)" fg:x="14123" fg:w="18"/><text x="86.9903%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.8079%" y="133" width="0.1412%" height="15" fill="rgb(207,178,40)" fg:x="14141" fg:w="23"/><text x="87.1008%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.9490%" y="133" width="0.1412%" height="15" fill="rgb(221,136,13)" fg:x="14164" fg:w="23"/><text x="87.2420%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="87.0902%" y="133" width="0.1105%" height="15" fill="rgb(249,199,10)" fg:x="14187" fg:w="18"/><text x="87.3832%" y="143.50"></text></g><g><title>replace (723 instructions, 4.44%)</title><rect x="83.1246%" y="149" width="4.4383%" height="15" fill="rgb(249,222,13)" fg:x="13541" fg:w="723"/><text x="83.4176%" y="159.50">repl..</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.5629%" y="117" width="0.1105%" height="15" fill="rgb(244,185,38)" fg:x="14264" fg:w="18"/><text x="87.8559%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.6734%" y="117" width="0.0614%" height="15" fill="rgb(236,202,9)" fg:x="14282" fg:w="10"/><text x="87.9664%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="87.7348%" y="117" width="0.1473%" height="15" fill="rgb(250,229,37)" fg:x="14292" fg:w="24"/><text x="88.0278%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.8821%" y="117" width="0.1105%" height="15" fill="rgb(206,174,23)" fg:x="14316" fg:w="18"/><text x="88.1751%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.9926%" y="117" width="0.0614%" height="15" fill="rgb(211,33,43)" fg:x="14334" fg:w="10"/><text x="88.2856%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.0540%" y="117" width="0.1473%" height="15" fill="rgb(245,58,50)" fg:x="14344" fg:w="24"/><text x="88.3470%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.2014%" y="117" width="0.1105%" height="15" fill="rgb(244,68,36)" fg:x="14368" fg:w="18"/><text x="88.4943%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.3118%" y="117" width="0.0614%" height="15" fill="rgb(232,229,15)" fg:x="14386" fg:w="10"/><text x="88.6048%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.3732%" y="117" width="0.1473%" height="15" fill="rgb(254,30,23)" fg:x="14396" fg:w="24"/><text x="88.6662%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.5206%" y="117" width="0.1105%" height="15" fill="rgb(235,160,14)" fg:x="14420" fg:w="18"/><text x="88.8135%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.6311%" y="117" width="0.0614%" height="15" fill="rgb(212,155,44)" fg:x="14438" fg:w="10"/><text x="88.9240%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.6924%" y="117" width="0.1473%" height="15" fill="rgb(226,2,50)" fg:x="14448" fg:w="24"/><text x="88.9854%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.8398%" y="117" width="0.1105%" height="15" fill="rgb(234,177,6)" fg:x="14472" fg:w="18"/><text x="89.1327%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.9503%" y="117" width="0.0614%" height="15" fill="rgb(217,24,9)" fg:x="14490" fg:w="10"/><text x="89.2432%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="89.0117%" y="117" width="0.1473%" height="15" fill="rgb(220,13,46)" fg:x="14500" fg:w="24"/><text x="89.3046%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="89.1590%" y="117" width="0.0246%" height="15" fill="rgb(239,221,27)" fg:x="14524" fg:w="4"/><text x="89.4520%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="89.1835%" y="117" width="0.0246%" height="15" fill="rgb(222,198,25)" fg:x="14528" fg:w="4"/><text x="89.4765%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="89.2081%" y="117" width="0.0921%" height="15" fill="rgb(211,99,13)" fg:x="14532" fg:w="15"/><text x="89.5011%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="89.3002%" y="117" width="0.0921%" height="15" fill="rgb(232,111,31)" fg:x="14547" fg:w="15"/><text x="89.5932%" y="127.50"></text></g><g><title>rec (498 instructions, 3.06%)</title><rect x="87.5629%" y="133" width="3.0571%" height="15" fill="rgb(245,82,37)" fg:x="14264" fg:w="498"/><text x="87.8559%" y="143.50">rec</text></g><g><title>leaf (502 instructions, 3.08%)</title><rect x="87.5629%" y="149" width="3.0816%" height="15" fill="rgb(227,149,46)" fg:x="14264" fg:w="502"/><text x="87.8559%" y="159.50">le..</text></g><g><title>recursiveReplace (1,294 instructions, 7.94%)</title><rect x="83.0264%" y="165" width="7.9435%" height="15" fill="rgb(218,36,50)" fg:x="13525" fg:w="1294"/><text x="83.3194%" y="175.50">recursive..</text></g><g><title>put.1 (1,434 instructions, 8.80%)</title><rect x="82.5721%" y="181" width="8.8029%" height="15" fill="rgb(226,80,48)" fg:x="13451" fg:w="1434"/><text x="82.8651%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="91.3751%" y="181" width="0.1412%" height="15" fill="rgb(238,224,15)" fg:x="14885" fg:w="23"/><text x="91.6680%" y="191.50"></text></g><g><title>account_put (2,274 instructions, 13.96%)</title><rect x="77.6366%" y="197" width="13.9595%" height="15" fill="rgb(241,136,10)" fg:x="12647" fg:w="2274"/><text x="77.9296%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="91.5961%" y="181" width="0.2026%" height="15" fill="rgb(208,32,45)" fg:x="14921" fg:w="33"/><text x="91.8890%" y="191.50"></text></g><g><title>memcpy (76 instructions, 0.47%)</title><rect x="91.7986%" y="181" width="0.4665%" height="15" fill="rgb(207,135,9)" fg:x="14954" fg:w="76"/><text x="92.0916%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::heebba8198530563a (33 instructions, 0.20%)</title><rect x="92.2652%" y="181" width="0.2026%" height="15" fill="rgb(206,86,44)" fg:x="15030" fg:w="33"/><text x="92.5582%" y="191.50"></text></g><g><title>leb128_encode (9 instructions, 0.06%)</title><rect x="92.4678%" y="181" width="0.0552%" height="15" fill="rgb(245,177,15)" fg:x="15063" fg:w="9"/><text x="92.7607%" y="191.50"></text></g><g><title>reply_with_data (43 instructions, 0.26%)</title><rect x="92.5230%" y="181" width="0.2640%" height="15" fill="rgb(206,64,50)" fg:x="15072" fg:w="43"/><text x="92.8160%" y="191.50"></text></g><g><title>$lambda.35 (300 instructions, 1.84%)</title><rect x="91.5961%" y="197" width="1.8416%" height="15" fill="rgb(234,36,40)" fg:x="14921" fg:w="300"/><text x="91.8890%" y="207.50"></text></g><g><title>$lambda.2 (12,002 instructions, 73.68%)</title><rect x="20.5341%" y="213" width="73.6771%" height="15" fill="rgb(213,64,8)" fg:x="3345" fg:w="12002"/><text x="20.8270%" y="223.50">$lambda.2</text></g><g><title>schedule_copying_gc (45 instructions, 0.28%)</title><rect x="94.2112%" y="213" width="0.2762%" height="15" fill="rgb(210,75,36)" fg:x="15347" fg:w="45"/><text x="94.5041%" y="223.50"></text></g><g><title>trans_state4 (13 instructions, 0.08%)</title><rect x="94.4874%" y="213" width="0.0798%" height="15" fill="rgb(229,88,21)" fg:x="15392" fg:w="13"/><text x="94.7804%" y="223.50"></text></g><g><title>all (16,290 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(252,204,47)" fg:x="0" fg:w="16290"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (16,290 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(208,77,27)" fg:x="0" fg:w="16290"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>