<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="22378"><g><title>trans_state5 (10 instructions, 0.04%)</title><rect x="0.0000%" y="213" width="0.0447%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="10"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="0.0447%" y="213" width="0.2502%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="56"/><text x="0.3377%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="0.2949%" y="197" width="0.2234%" height="15" fill="rgb(221,193,54)" fg:x="66" fg:w="50"/><text x="0.5879%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="0.5184%" y="197" width="0.2502%" height="15" fill="rgb(248,212,6)" fg:x="116" fg:w="56"/><text x="0.8113%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="0.7686%" y="197" width="0.2860%" height="15" fill="rgb(208,68,35)" fg:x="172" fg:w="64"/><text x="1.0616%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="1.0546%" y="197" width="0.2234%" height="15" fill="rgb(232,128,0)" fg:x="236" fg:w="50"/><text x="1.3476%" y="207.50"></text></g><g><title>leb128_decode (132 instructions, 0.59%)</title><rect x="1.2780%" y="197" width="0.5899%" height="15" fill="rgb(207,160,47)" fg:x="286" fg:w="132"/><text x="1.5710%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="1.8679%" y="197" width="0.2860%" height="15" fill="rgb(228,23,34)" fg:x="418" fg:w="64"/><text x="2.1609%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (17 instructions, 0.08%)</title><rect x="2.1539%" y="197" width="0.0760%" height="15" fill="rgb(218,30,26)" fg:x="482" fg:w="17"/><text x="2.4469%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="2.2299%" y="197" width="0.9563%" height="15" fill="rgb(220,122,19)" fg:x="499" fg:w="214"/><text x="2.5228%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="3.1862%" y="197" width="0.2860%" height="15" fill="rgb(250,228,42)" fg:x="713" fg:w="64"/><text x="3.4791%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (12 instructions, 0.05%)</title><rect x="3.4722%" y="197" width="0.0536%" height="15" fill="rgb(240,193,28)" fg:x="777" fg:w="12"/><text x="3.7651%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="3.5258%" y="197" width="0.2860%" height="15" fill="rgb(216,20,37)" fg:x="789" fg:w="64"/><text x="3.8188%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="3.8118%" y="197" width="0.2234%" height="15" fill="rgb(206,188,39)" fg:x="853" fg:w="50"/><text x="4.1047%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="4.0352%" y="197" width="0.9563%" height="15" fill="rgb(217,207,13)" fg:x="903" fg:w="214"/><text x="4.3282%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="4.9915%" y="197" width="0.2860%" height="15" fill="rgb(231,73,38)" fg:x="1117" fg:w="64"/><text x="5.2845%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (12 instructions, 0.05%)</title><rect x="5.2775%" y="197" width="0.0536%" height="15" fill="rgb(225,20,46)" fg:x="1181" fg:w="12"/><text x="5.5705%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="5.3311%" y="197" width="0.2860%" height="15" fill="rgb(210,31,41)" fg:x="1193" fg:w="64"/><text x="5.6241%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="5.6171%" y="197" width="0.2860%" height="15" fill="rgb(221,200,47)" fg:x="1257" fg:w="64"/><text x="5.9101%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="5.9031%" y="197" width="0.2234%" height="15" fill="rgb(226,26,5)" fg:x="1321" fg:w="50"/><text x="6.1961%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="6.1266%" y="197" width="0.2860%" height="15" fill="rgb(249,33,26)" fg:x="1371" fg:w="64"/><text x="6.4195%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53a1429ca62777c2 (12 instructions, 0.05%)</title><rect x="6.4125%" y="197" width="0.0536%" height="15" fill="rgb(235,183,28)" fg:x="1435" fg:w="12"/><text x="6.7055%" y="207.50"></text></g><g><title>parse_idl_header (1,850 instructions, 8.27%)</title><rect x="0.2949%" y="213" width="8.2670%" height="15" fill="rgb(221,5,38)" fg:x="66" fg:w="1850"/><text x="0.5879%" y="223.50">parse_idl..</text></g><g><title>memset (6 instructions, 0.03%)</title><rect x="8.5620%" y="197" width="0.0268%" height="15" fill="rgb(247,18,42)" fg:x="1916" fg:w="6"/><text x="8.8549%" y="207.50"></text></g><g><title>idl_sub_buf_init (15 instructions, 0.07%)</title><rect x="8.5620%" y="213" width="0.0670%" height="15" fill="rgb(241,131,45)" fg:x="1916" fg:w="15"/><text x="8.8549%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="8.6290%" y="213" width="0.2234%" height="15" fill="rgb(249,31,29)" fg:x="1931" fg:w="50"/><text x="8.9220%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="8.8524%" y="213" width="0.2860%" height="15" fill="rgb(225,111,53)" fg:x="1981" fg:w="64"/><text x="9.1454%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="9.1384%" y="213" width="0.2860%" height="15" fill="rgb(238,160,17)" fg:x="2045" fg:w="64"/><text x="9.4314%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="9.4244%" y="213" width="0.2234%" height="15" fill="rgb(214,148,48)" fg:x="2109" fg:w="50"/><text x="9.7174%" y="223.50"></text></g><g><title>leb128_decode (132 instructions, 0.59%)</title><rect x="9.6479%" y="197" width="0.5899%" height="15" fill="rgb(232,36,49)" fg:x="2159" fg:w="132"/><text x="9.9408%" y="207.50"></text></g><g><title>find_field (168 instructions, 0.75%)</title><rect x="9.6479%" y="213" width="0.7507%" height="15" fill="rgb(209,103,24)" fg:x="2159" fg:w="168"/><text x="9.9408%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="10.3986%" y="213" width="0.2860%" height="15" fill="rgb(229,88,8)" fg:x="2327" fg:w="64"/><text x="10.6916%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="10.6846%" y="197" width="0.2234%" height="15" fill="rgb(213,181,19)" fg:x="2391" fg:w="50"/><text x="10.9776%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="10.9080%" y="197" width="0.2502%" height="15" fill="rgb(254,191,54)" fg:x="2441" fg:w="56"/><text x="11.2010%" y="207.50"></text></g><g><title>memcpy (196 instructions, 0.88%)</title><rect x="11.1583%" y="197" width="0.8759%" height="15" fill="rgb(241,83,37)" fg:x="2497" fg:w="196"/><text x="11.4512%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (409 instructions, 1.83%)</title><rect x="10.6846%" y="213" width="1.8277%" height="15" fill="rgb(233,36,39)" fg:x="2391" fg:w="409"/><text x="10.9776%" y="223.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="12.5123%" y="197" width="0.9563%" height="15" fill="rgb(226,3,54)" fg:x="2800" fg:w="214"/><text x="12.8053%" y="207.50"></text></g><g><title>find_field (250 instructions, 1.12%)</title><rect x="12.5123%" y="213" width="1.1172%" height="15" fill="rgb(245,192,40)" fg:x="2800" fg:w="250"/><text x="12.8053%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="13.6295%" y="213" width="0.2860%" height="15" fill="rgb(238,167,29)" fg:x="3050" fg:w="64"/><text x="13.9224%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="13.9155%" y="197" width="0.2860%" height="15" fill="rgb(232,182,51)" fg:x="3114" fg:w="64"/><text x="14.2084%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="14.2014%" y="197" width="0.2234%" height="15" fill="rgb(231,60,39)" fg:x="3178" fg:w="50"/><text x="14.4944%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.96%)</title><rect x="14.4249%" y="181" width="0.9563%" height="15" fill="rgb(208,69,12)" fg:x="3228" fg:w="214"/><text x="14.7179%" y="191.50"></text></g><g><title>find_field (250 instructions, 1.12%)</title><rect x="14.4249%" y="197" width="1.1172%" height="15" fill="rgb(235,93,37)" fg:x="3228" fg:w="250"/><text x="14.7179%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.29%)</title><rect x="15.5421%" y="197" width="0.2860%" height="15" fill="rgb(213,116,39)" fg:x="3478" fg:w="64"/><text x="15.8350%" y="207.50"></text></g><g><title>int_from_i32 (13 instructions, 0.06%)</title><rect x="15.8280%" y="165" width="0.0581%" height="15" fill="rgb(222,207,29)" fg:x="3542" fg:w="13"/><text x="16.1210%" y="175.50"></text></g><g><title>bigint_leb128_decode_word64 (76 instructions, 0.34%)</title><rect x="15.8280%" y="181" width="0.3396%" height="15" fill="rgb(206,96,30)" fg:x="3542" fg:w="76"/><text x="16.1210%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (137 instructions, 0.61%)</title><rect x="15.8280%" y="197" width="0.6122%" height="15" fill="rgb(218,138,4)" fg:x="3542" fg:w="137"/><text x="16.1210%" y="207.50"></text></g><g><title>skip_fields (6 instructions, 0.03%)</title><rect x="16.4403%" y="197" width="0.0268%" height="15" fill="rgb(250,191,14)" fg:x="3679" fg:w="6"/><text x="16.7332%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (790 instructions, 3.53%)</title><rect x="13.9155%" y="213" width="3.5303%" height="15" fill="rgb(239,60,40)" fg:x="3114" fg:w="790"/><text x="14.2084%" y="223.50">@de..</text></g><g><title>skip_fields (6 instructions, 0.03%)</title><rect x="17.4457%" y="213" width="0.0268%" height="15" fill="rgb(206,27,48)" fg:x="3904" fg:w="6"/><text x="17.7387%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="17.4725%" y="197" width="0.2502%" height="15" fill="rgb(225,35,8)" fg:x="3910" fg:w="56"/><text x="17.7655%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="17.7228%" y="197" width="0.0760%" height="15" fill="rgb(250,213,24)" fg:x="3966" fg:w="17"/><text x="18.0157%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.48%)</title><rect x="17.7987%" y="165" width="3.4766%" height="15" fill="rgb(247,123,22)" fg:x="3983" fg:w="778"/><text x="18.0917%" y="175.50">com..</text></g><g><title>account_key (873 instructions, 3.90%)</title><rect x="17.7987%" y="181" width="3.9012%" height="15" fill="rgb(231,138,38)" fg:x="3983" fg:w="873"/><text x="18.0917%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="21.6999%" y="165" width="0.1251%" height="15" fill="rgb(231,145,46)" fg:x="4856" fg:w="28"/><text x="21.9929%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="21.8250%" y="149" width="0.0760%" height="15" fill="rgb(251,118,11)" fg:x="4884" fg:w="17"/><text x="22.1180%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="21.9010%" y="133" width="0.0760%" height="15" fill="rgb(217,147,25)" fg:x="4901" fg:w="17"/><text x="22.1939%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="21.9769%" y="133" width="0.0760%" height="15" fill="rgb(247,81,37)" fg:x="4918" fg:w="17"/><text x="22.2699%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.2183%" y="133" width="0.0760%" height="15" fill="rgb(209,12,38)" fg:x="4972" fg:w="17"/><text x="22.5112%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.2942%" y="133" width="0.0760%" height="15" fill="rgb(227,1,9)" fg:x="4989" fg:w="17"/><text x="22.5872%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.5311%" y="133" width="0.0760%" height="15" fill="rgb(248,47,43)" fg:x="5042" fg:w="17"/><text x="22.8240%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.6070%" y="133" width="0.0760%" height="15" fill="rgb(221,10,30)" fg:x="5059" fg:w="17"/><text x="22.9000%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.8439%" y="133" width="0.0760%" height="15" fill="rgb(210,229,1)" fg:x="5112" fg:w="17"/><text x="23.1368%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.9198%" y="133" width="0.0760%" height="15" fill="rgb(222,148,37)" fg:x="5129" fg:w="17"/><text x="23.2128%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="22.9958%" y="133" width="0.0760%" height="15" fill="rgb(234,67,33)" fg:x="5146" fg:w="17"/><text x="23.2888%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="23.0718%" y="133" width="0.0760%" height="15" fill="rgb(247,98,35)" fg:x="5163" fg:w="17"/><text x="23.3647%" y="143.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.44%)</title><rect x="23.1477%" y="117" width="3.4364%" height="15" fill="rgb(247,138,52)" fg:x="5180" fg:w="769"/><text x="23.4407%" y="127.50">Bl..</text></g><g><title>equal.1 (777 instructions, 3.47%)</title><rect x="23.1477%" y="133" width="3.4722%" height="15" fill="rgb(213,79,30)" fg:x="5180" fg:w="777"/><text x="23.4407%" y="143.50">equ..</text></g><g><title>@anon-func-192.5 (1,120 instructions, 5.00%)</title><rect x="21.9010%" y="149" width="5.0049%" height="15" fill="rgb(246,177,23)" fg:x="4901" fg:w="1120"/><text x="22.1939%" y="159.50">@anon..</text></g><g><title>rec.4 (1,441 instructions, 6.44%)</title><rect x="21.8250%" y="165" width="6.4394%" height="15" fill="rgb(230,62,27)" fg:x="4884" fg:w="1441"/><text x="22.1180%" y="175.50">rec.4</text></g><g><title>get.2 (1,521 instructions, 6.80%)</title><rect x="21.6999%" y="181" width="6.7969%" height="15" fill="rgb(216,154,8)" fg:x="4856" fg:w="1521"/><text x="21.9929%" y="191.50">get.2</text></g><g><title>account_get (2,409 instructions, 10.77%)</title><rect x="17.7987%" y="197" width="10.7650%" height="15" fill="rgb(244,35,45)" fg:x="3983" fg:w="2409"/><text x="18.0917%" y="207.50">account_get</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.5638%" y="197" width="0.0760%" height="15" fill="rgb(251,115,12)" fg:x="6392" fg:w="17"/><text x="28.8567%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.6397%" y="197" width="0.0760%" height="15" fill="rgb(240,54,50)" fg:x="6409" fg:w="17"/><text x="28.9327%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="28.7157%" y="197" width="0.0760%" height="15" fill="rgb(233,84,52)" fg:x="6426" fg:w="17"/><text x="29.0087%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.7917%" y="197" width="0.0760%" height="15" fill="rgb(207,117,47)" fg:x="6443" fg:w="17"/><text x="29.0846%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.8676%" y="197" width="0.0760%" height="15" fill="rgb(249,43,39)" fg:x="6460" fg:w="17"/><text x="29.1606%" y="207.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="28.9436%" y="197" width="0.1207%" height="15" fill="rgb(209,38,44)" fg:x="6477" fg:w="27"/><text x="29.2366%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::ha70fa06d6a655c68 (60 instructions, 0.27%)</title><rect x="29.0643%" y="133" width="0.2681%" height="15" fill="rgb(236,212,23)" fg:x="6504" fg:w="60"/><text x="29.3572%" y="143.50"></text></g><g><title>memset (106 instructions, 0.47%)</title><rect x="29.3324%" y="133" width="0.4737%" height="15" fill="rgb(242,79,21)" fg:x="6564" fg:w="106"/><text x="29.6253%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.90%)</title><rect x="29.0643%" y="149" width="0.9027%" height="15" fill="rgb(211,96,35)" fg:x="6504" fg:w="202"/><text x="29.3572%" y="159.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="29.0643%" y="165" width="0.9965%" height="15" fill="rgb(253,215,40)" fg:x="6504" fg:w="223"/><text x="29.3572%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.46%)</title><rect x="30.0608%" y="165" width="0.4647%" height="15" fill="rgb(211,81,21)" fg:x="6727" fg:w="104"/><text x="30.3537%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6cd8440281f10e41 (33 instructions, 0.15%)</title><rect x="30.5255%" y="165" width="0.1475%" height="15" fill="rgb(208,190,38)" fg:x="6831" fg:w="33"/><text x="30.8185%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.91%)</title><rect x="29.0643%" y="181" width="1.9081%" height="15" fill="rgb(235,213,38)" fg:x="6504" fg:w="427"/><text x="29.3572%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="30.9724%" y="165" width="0.0581%" height="15" fill="rgb(237,122,38)" fg:x="6931" fg:w="13"/><text x="31.2654%" y="175.50"></text></g><g><title>mp_cmp (34 instructions, 0.15%)</title><rect x="30.9724%" y="181" width="0.1519%" height="15" fill="rgb(244,218,35)" fg:x="6931" fg:w="34"/><text x="31.2654%" y="191.50"></text></g><g><title>B_lt (513 instructions, 2.29%)</title><rect x="29.0643%" y="197" width="2.2924%" height="15" fill="rgb(240,68,47)" fg:x="6504" fg:w="513"/><text x="29.3572%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="31.3567%" y="197" width="0.0760%" height="15" fill="rgb(210,16,53)" fg:x="7017" fg:w="17"/><text x="31.6497%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::ha70fa06d6a655c68 (60 instructions, 0.27%)</title><rect x="31.4327%" y="133" width="0.2681%" height="15" fill="rgb(235,124,12)" fg:x="7034" fg:w="60"/><text x="31.7256%" y="143.50"></text></g><g><title>memset (106 instructions, 0.47%)</title><rect x="31.7008%" y="133" width="0.4737%" height="15" fill="rgb(224,169,11)" fg:x="7094" fg:w="106"/><text x="31.9937%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.90%)</title><rect x="31.4327%" y="149" width="0.9027%" height="15" fill="rgb(250,166,2)" fg:x="7034" fg:w="202"/><text x="31.7256%" y="159.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="31.4327%" y="165" width="0.9965%" height="15" fill="rgb(242,216,29)" fg:x="7034" fg:w="223"/><text x="31.7256%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.46%)</title><rect x="32.4292%" y="165" width="0.4647%" height="15" fill="rgb(230,116,27)" fg:x="7257" fg:w="104"/><text x="32.7221%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6cd8440281f10e41 (33 instructions, 0.15%)</title><rect x="32.8939%" y="165" width="0.1475%" height="15" fill="rgb(228,99,48)" fg:x="7361" fg:w="33"/><text x="33.1869%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.91%)</title><rect x="31.4327%" y="181" width="1.9081%" height="15" fill="rgb(253,11,6)" fg:x="7034" fg:w="427"/><text x="31.7256%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::ha70fa06d6a655c68 (60 instructions, 0.27%)</title><rect x="33.3408%" y="149" width="0.2681%" height="15" fill="rgb(247,143,39)" fg:x="7461" fg:w="60"/><text x="33.6337%" y="159.50"></text></g><g><title>memset (106 instructions, 0.47%)</title><rect x="33.6089%" y="149" width="0.4737%" height="15" fill="rgb(236,97,10)" fg:x="7521" fg:w="106"/><text x="33.9019%" y="159.50"></text></g><g><title>mp_calloc (202 instructions, 0.90%)</title><rect x="33.3408%" y="165" width="0.9027%" height="15" fill="rgb(233,208,19)" fg:x="7461" fg:w="202"/><text x="33.6337%" y="175.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="33.3408%" y="181" width="0.9965%" height="15" fill="rgb(216,164,2)" fg:x="7461" fg:w="223"/><text x="33.6337%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="34.3373%" y="165" width="0.0581%" height="15" fill="rgb(220,129,5)" fg:x="7684" fg:w="13"/><text x="34.6303%" y="175.50"></text></g><g><title>mp_clamp (25 instructions, 0.11%)</title><rect x="34.3954%" y="149" width="0.1117%" height="15" fill="rgb(242,17,10)" fg:x="7697" fg:w="25"/><text x="34.6884%" y="159.50"></text></g><g><title>s_mp_sub (147 instructions, 0.66%)</title><rect x="34.3954%" y="165" width="0.6569%" height="15" fill="rgb(242,107,0)" fg:x="7697" fg:w="147"/><text x="34.6884%" y="175.50"></text></g><g><title>mp_sub (192 instructions, 0.86%)</title><rect x="34.3373%" y="181" width="0.8580%" height="15" fill="rgb(251,28,31)" fg:x="7684" fg:w="192"/><text x="34.6303%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6cd8440281f10e41 (33 instructions, 0.15%)</title><rect x="35.1953%" y="181" width="0.1475%" height="15" fill="rgb(233,223,10)" fg:x="7876" fg:w="33"/><text x="35.4882%" y="191.50"></text></g><g><title>mp_count_bits (181 instructions, 0.81%)</title><rect x="35.3427%" y="165" width="0.8088%" height="15" fill="rgb(215,21,27)" fg:x="7909" fg:w="181"/><text x="35.6357%" y="175.50"></text></g><g><title>bigint_2complement_bits (223 instructions, 1.00%)</title><rect x="35.3427%" y="181" width="0.9965%" height="15" fill="rgb(232,23,21)" fg:x="7909" fg:w="223"/><text x="35.6357%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::ha70fa06d6a655c68 (60 instructions, 0.27%)</title><rect x="36.9068%" y="133" width="0.2681%" height="15" fill="rgb(244,5,23)" fg:x="8259" fg:w="60"/><text x="37.1998%" y="143.50"></text></g><g><title>memset (106 instructions, 0.47%)</title><rect x="37.1749%" y="133" width="0.4737%" height="15" fill="rgb(226,81,46)" fg:x="8319" fg:w="106"/><text x="37.4679%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.90%)</title><rect x="36.9068%" y="149" width="0.9027%" height="15" fill="rgb(247,70,30)" fg:x="8259" fg:w="202"/><text x="37.1998%" y="159.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="36.9068%" y="165" width="0.9965%" height="15" fill="rgb(212,68,19)" fg:x="8259" fg:w="223"/><text x="37.1998%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.46%)</title><rect x="37.9033%" y="165" width="0.4647%" height="15" fill="rgb(240,187,13)" fg:x="8482" fg:w="104"/><text x="38.1963%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6cd8440281f10e41 (33 instructions, 0.15%)</title><rect x="38.3680%" y="165" width="0.1475%" height="15" fill="rgb(223,113,26)" fg:x="8586" fg:w="33"/><text x="38.6610%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.91%)</title><rect x="36.9068%" y="181" width="1.9081%" height="15" fill="rgb(206,192,2)" fg:x="8259" fg:w="427"/><text x="37.1998%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::ha70fa06d6a655c68 (60 instructions, 0.27%)</title><rect x="38.8149%" y="149" width="0.2681%" height="15" fill="rgb(241,108,4)" fg:x="8686" fg:w="60"/><text x="39.1079%" y="159.50"></text></g><g><title>memset (106 instructions, 0.47%)</title><rect x="39.0830%" y="149" width="0.4737%" height="15" fill="rgb(247,173,49)" fg:x="8746" fg:w="106"/><text x="39.3760%" y="159.50"></text></g><g><title>mp_calloc (202 instructions, 0.90%)</title><rect x="38.8149%" y="165" width="0.9027%" height="15" fill="rgb(224,114,35)" fg:x="8686" fg:w="202"/><text x="39.1079%" y="175.50"></text></g><g><title>mp_init (223 instructions, 1.00%)</title><rect x="38.8149%" y="181" width="0.9965%" height="15" fill="rgb(245,159,27)" fg:x="8686" fg:w="223"/><text x="39.1079%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="39.8114%" y="165" width="0.0581%" height="15" fill="rgb(245,172,44)" fg:x="8909" fg:w="13"/><text x="40.1044%" y="175.50"></text></g><g><title>mp_clamp (25 instructions, 0.11%)</title><rect x="39.8695%" y="149" width="0.1117%" height="15" fill="rgb(236,23,11)" fg:x="8922" fg:w="25"/><text x="40.1625%" y="159.50"></text></g><g><title>s_mp_sub (147 instructions, 0.66%)</title><rect x="39.8695%" y="165" width="0.6569%" height="15" fill="rgb(205,117,38)" fg:x="8922" fg:w="147"/><text x="40.1625%" y="175.50"></text></g><g><title>mp_sub (192 instructions, 0.86%)</title><rect x="39.8114%" y="181" width="0.8580%" height="15" fill="rgb(237,72,25)" fg:x="8909" fg:w="192"/><text x="40.1044%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h6cd8440281f10e41 (33 instructions, 0.15%)</title><rect x="40.6694%" y="181" width="0.1475%" height="15" fill="rgb(244,70,9)" fg:x="9101" fg:w="33"/><text x="40.9624%" y="191.50"></text></g><g><title>mp_count_bits (181 instructions, 0.81%)</title><rect x="40.8169%" y="165" width="0.8088%" height="15" fill="rgb(217,125,39)" fg:x="9134" fg:w="181"/><text x="41.1098%" y="175.50"></text></g><g><title>bigint_2complement_bits (223 instructions, 1.00%)</title><rect x="40.8169%" y="181" width="0.9965%" height="15" fill="rgb(235,36,10)" fg:x="9134" fg:w="223"/><text x="41.1098%" y="191.50"></text></g><g><title>B_sub (2,450 instructions, 10.95%)</title><rect x="31.4327%" y="197" width="10.9483%" height="15" fill="rgb(251,123,47)" fg:x="7034" fg:w="2450"/><text x="31.7256%" y="207.50">B_sub</text></g><g><title>compute_crc32 (778 instructions, 3.48%)</title><rect x="42.3809%" y="165" width="3.4766%" height="15" fill="rgb(221,13,13)" fg:x="9484" fg:w="778"/><text x="42.6739%" y="175.50">com..</text></g><g><title>account_key (873 instructions, 3.90%)</title><rect x="42.3809%" y="181" width="3.9012%" height="15" fill="rgb(238,131,9)" fg:x="9484" fg:w="873"/><text x="42.6739%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="46.2821%" y="165" width="0.1251%" height="15" fill="rgb(211,50,8)" fg:x="10357" fg:w="28"/><text x="46.5750%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="46.4072%" y="149" width="0.0760%" height="15" fill="rgb(245,182,24)" fg:x="10385" fg:w="17"/><text x="46.7002%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.4832%" y="101" width="0.0760%" height="15" fill="rgb(242,14,37)" fg:x="10402" fg:w="17"/><text x="46.7761%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.5591%" y="101" width="0.0760%" height="15" fill="rgb(246,228,12)" fg:x="10419" fg:w="17"/><text x="46.8521%" y="111.50"></text></g><g><title>@anon-func-192.5 (71 instructions, 0.32%)</title><rect x="46.4832%" y="117" width="0.3173%" height="15" fill="rgb(213,55,15)" fg:x="10402" fg:w="71"/><text x="46.7761%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.8004%" y="85" width="0.0760%" height="15" fill="rgb(209,9,3)" fg:x="10473" fg:w="17"/><text x="47.0934%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="46.8764%" y="85" width="0.0760%" height="15" fill="rgb(230,59,30)" fg:x="10490" fg:w="17"/><text x="47.1694%" y="95.50"></text></g><g><title>@anon-func-192.5 (70 instructions, 0.31%)</title><rect x="46.8004%" y="101" width="0.3128%" height="15" fill="rgb(209,121,21)" fg:x="10473" fg:w="70"/><text x="47.0934%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="47.1132%" y="69" width="0.0760%" height="15" fill="rgb(220,109,13)" fg:x="10543" fg:w="17"/><text x="47.4062%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="47.1892%" y="69" width="0.0760%" height="15" fill="rgb(232,18,1)" fg:x="10560" fg:w="17"/><text x="47.4822%" y="79.50"></text></g><g><title>@anon-func-192.5 (70 instructions, 0.31%)</title><rect x="47.1132%" y="85" width="0.3128%" height="15" fill="rgb(215,41,42)" fg:x="10543" fg:w="70"/><text x="47.4062%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="47.4260%" y="53" width="0.0760%" height="15" fill="rgb(224,123,36)" fg:x="10613" fg:w="17"/><text x="47.7190%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="47.5020%" y="53" width="0.0760%" height="15" fill="rgb(240,125,3)" fg:x="10630" fg:w="17"/><text x="47.7950%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="47.5780%" y="53" width="0.0760%" height="15" fill="rgb(205,98,50)" fg:x="10647" fg:w="17"/><text x="47.8709%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="47.6539%" y="53" width="0.0760%" height="15" fill="rgb(205,185,37)" fg:x="10664" fg:w="17"/><text x="47.9469%" y="63.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.44%)</title><rect x="47.7299%" y="37" width="3.4364%" height="15" fill="rgb(238,207,15)" fg:x="10681" fg:w="769"/><text x="48.0229%" y="47.50">Bl..</text></g><g><title>equal.1 (777 instructions, 3.47%)</title><rect x="47.7299%" y="53" width="3.4722%" height="15" fill="rgb(213,199,42)" fg:x="10681" fg:w="777"/><text x="48.0229%" y="63.50">equ..</text></g><g><title>@anon-func-192.5 (909 instructions, 4.06%)</title><rect x="47.4260%" y="69" width="4.0620%" height="15" fill="rgb(235,201,11)" fg:x="10613" fg:w="909"/><text x="47.7190%" y="79.50">@an..</text></g><g><title>del (1,005 instructions, 4.49%)</title><rect x="47.4260%" y="85" width="4.4910%" height="15" fill="rgb(207,46,11)" fg:x="10613" fg:w="1005"/><text x="47.7190%" y="95.50">del</text></g><g><title>del (1,230 instructions, 5.50%)</title><rect x="47.1132%" y="101" width="5.4965%" height="15" fill="rgb(241,35,35)" fg:x="10543" fg:w="1230"/><text x="47.4062%" y="111.50">del</text></g><g><title>del (1,455 instructions, 6.50%)</title><rect x="46.8004%" y="117" width="6.5019%" height="15" fill="rgb(243,32,47)" fg:x="10473" fg:w="1455"/><text x="47.0934%" y="127.50">del</text></g><g><title>del (1,681 instructions, 7.51%)</title><rect x="46.4832%" y="133" width="7.5118%" height="15" fill="rgb(247,202,23)" fg:x="10402" fg:w="1681"/><text x="46.7761%" y="143.50">del</text></g><g><title>replace (1,895 instructions, 8.47%)</title><rect x="46.4832%" y="149" width="8.4681%" height="15" fill="rgb(219,102,11)" fg:x="10402" fg:w="1895"/><text x="46.7761%" y="159.50">replace</text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="54.9513%" y="117" width="0.0536%" height="15" fill="rgb(243,110,44)" fg:x="12297" fg:w="12"/><text x="55.2443%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.0049%" y="117" width="0.1207%" height="15" fill="rgb(222,74,54)" fg:x="12309" fg:w="27"/><text x="55.2979%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="55.1256%" y="117" width="0.0536%" height="15" fill="rgb(216,99,12)" fg:x="12336" fg:w="12"/><text x="55.4185%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.1792%" y="117" width="0.1207%" height="15" fill="rgb(226,22,26)" fg:x="12348" fg:w="27"/><text x="55.4722%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="55.2998%" y="117" width="0.0536%" height="15" fill="rgb(217,163,10)" fg:x="12375" fg:w="12"/><text x="55.5928%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.3535%" y="117" width="0.1207%" height="15" fill="rgb(213,25,53)" fg:x="12387" fg:w="27"/><text x="55.6464%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="55.4741%" y="117" width="0.0536%" height="15" fill="rgb(252,105,26)" fg:x="12414" fg:w="12"/><text x="55.7671%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.5278%" y="117" width="0.1207%" height="15" fill="rgb(220,39,43)" fg:x="12426" fg:w="27"/><text x="55.8207%" y="127.50"></text></g><g><title>rec (501 instructions, 2.24%)</title><rect x="54.9513%" y="133" width="2.2388%" height="15" fill="rgb(229,68,48)" fg:x="12297" fg:w="501"/><text x="55.2443%" y="143.50">r..</text></g><g><title>leaf (510 instructions, 2.28%)</title><rect x="54.9513%" y="149" width="2.2790%" height="15" fill="rgb(252,8,32)" fg:x="12297" fg:w="510"/><text x="55.2443%" y="159.50">l..</text></g><g><title>recursiveReplace (2,495 instructions, 11.15%)</title><rect x="46.4072%" y="165" width="11.1493%" height="15" fill="rgb(223,20,43)" fg:x="10385" fg:w="2495"/><text x="46.7002%" y="175.50">recursiveRepla..</text></g><g><title>put.1 (2,662 instructions, 11.90%)</title><rect x="46.2821%" y="181" width="11.8956%" height="15" fill="rgb(229,81,49)" fg:x="10357" fg:w="2662"/><text x="46.5750%" y="191.50">put.1</text></g><g><title>account_put (3,587 instructions, 16.03%)</title><rect x="42.3809%" y="197" width="16.0291%" height="15" fill="rgb(236,28,36)" fg:x="9484" fg:w="3587"/><text x="42.6739%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="58.4100%" y="197" width="0.0760%" height="15" fill="rgb(249,185,26)" fg:x="13071" fg:w="17"/><text x="58.7030%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.48%)</title><rect x="58.4860%" y="165" width="3.4766%" height="15" fill="rgb(249,174,33)" fg:x="13088" fg:w="778"/><text x="58.7790%" y="175.50">com..</text></g><g><title>account_key (873 instructions, 3.90%)</title><rect x="58.4860%" y="181" width="3.9012%" height="15" fill="rgb(233,201,37)" fg:x="13088" fg:w="873"/><text x="58.7790%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="62.3872%" y="165" width="0.1251%" height="15" fill="rgb(221,78,26)" fg:x="13961" fg:w="28"/><text x="62.6801%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="62.5123%" y="149" width="0.0760%" height="15" fill="rgb(250,127,30)" fg:x="13989" fg:w="17"/><text x="62.8053%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.5883%" y="133" width="0.0760%" height="15" fill="rgb(230,49,44)" fg:x="14006" fg:w="17"/><text x="62.8812%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.6642%" y="133" width="0.0760%" height="15" fill="rgb(229,67,23)" fg:x="14023" fg:w="17"/><text x="62.9572%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.9011%" y="133" width="0.0760%" height="15" fill="rgb(249,83,47)" fg:x="14076" fg:w="17"/><text x="63.1940%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="62.9770%" y="133" width="0.0760%" height="15" fill="rgb(215,43,3)" fg:x="14093" fg:w="17"/><text x="63.2700%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.2183%" y="133" width="0.0760%" height="15" fill="rgb(238,154,13)" fg:x="14147" fg:w="17"/><text x="63.5113%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.2943%" y="133" width="0.0760%" height="15" fill="rgb(219,56,2)" fg:x="14164" fg:w="17"/><text x="63.5873%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.5311%" y="133" width="0.0760%" height="15" fill="rgb(233,0,4)" fg:x="14217" fg:w="17"/><text x="63.8241%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="63.6071%" y="133" width="0.0760%" height="15" fill="rgb(235,30,7)" fg:x="14234" fg:w="17"/><text x="63.9001%" y="143.50"></text></g><g><title>@anon-func-192.5 (281 instructions, 1.26%)</title><rect x="62.5883%" y="149" width="1.2557%" height="15" fill="rgb(250,79,13)" fg:x="14006" fg:w="281"/><text x="62.8812%" y="159.50"></text></g><g><title>rec.4 (601 instructions, 2.69%)</title><rect x="62.5123%" y="165" width="2.6857%" height="15" fill="rgb(211,146,34)" fg:x="13989" fg:w="601"/><text x="62.8053%" y="175.50">r..</text></g><g><title>get.2 (681 instructions, 3.04%)</title><rect x="62.3872%" y="181" width="3.0432%" height="15" fill="rgb(228,22,38)" fg:x="13961" fg:w="681"/><text x="62.6801%" y="191.50">ge..</text></g><g><title>account_get (1,569 instructions, 7.01%)</title><rect x="58.4860%" y="197" width="7.0114%" height="15" fill="rgb(235,168,5)" fg:x="13088" fg:w="1569"/><text x="58.7790%" y="207.50">account_..</text></g><g><title>get.1 (9 instructions, 0.04%)</title><rect x="65.4974%" y="197" width="0.0402%" height="15" fill="rgb(221,155,16)" fg:x="14657" fg:w="9"/><text x="65.7903%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="65.5376%" y="197" width="0.0760%" height="15" fill="rgb(215,215,53)" fg:x="14666" fg:w="17"/><text x="65.8306%" y="207.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="65.6135%" y="197" width="0.1207%" height="15" fill="rgb(223,4,10)" fg:x="14683" fg:w="27"/><text x="65.9065%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="65.7342%" y="197" width="0.0760%" height="15" fill="rgb(234,103,6)" fg:x="14710" fg:w="17"/><text x="66.0272%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.48%)</title><rect x="65.8102%" y="165" width="3.4766%" height="15" fill="rgb(227,97,0)" fg:x="14727" fg:w="778"/><text x="66.1031%" y="175.50">com..</text></g><g><title>account_key (873 instructions, 3.90%)</title><rect x="65.8102%" y="181" width="3.9012%" height="15" fill="rgb(234,150,53)" fg:x="14727" fg:w="873"/><text x="66.1031%" y="191.50">acc..</text></g><g><title>equalKey (28 instructions, 0.13%)</title><rect x="69.7113%" y="165" width="0.1251%" height="15" fill="rgb(228,201,54)" fg:x="15600" fg:w="28"/><text x="70.0043%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="69.8364%" y="149" width="0.0760%" height="15" fill="rgb(222,22,37)" fg:x="15628" fg:w="17"/><text x="70.1294%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="69.9124%" y="101" width="0.0760%" height="15" fill="rgb(237,53,32)" fg:x="15645" fg:w="17"/><text x="70.2054%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="69.9884%" y="101" width="0.0760%" height="15" fill="rgb(233,25,53)" fg:x="15662" fg:w="17"/><text x="70.2814%" y="111.50"></text></g><g><title>@anon-func-192.5 (70 instructions, 0.31%)</title><rect x="69.9124%" y="117" width="0.3128%" height="15" fill="rgb(210,40,34)" fg:x="15645" fg:w="70"/><text x="70.2054%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.2252%" y="85" width="0.0760%" height="15" fill="rgb(241,220,44)" fg:x="15715" fg:w="17"/><text x="70.5182%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.3012%" y="85" width="0.0760%" height="15" fill="rgb(235,28,35)" fg:x="15732" fg:w="17"/><text x="70.5942%" y="95.50"></text></g><g><title>@anon-func-192.5 (71 instructions, 0.32%)</title><rect x="70.2252%" y="101" width="0.3173%" height="15" fill="rgb(210,56,17)" fg:x="15715" fg:w="71"/><text x="70.5182%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.5425%" y="69" width="0.0760%" height="15" fill="rgb(224,130,29)" fg:x="15786" fg:w="17"/><text x="70.8355%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.6185%" y="69" width="0.0760%" height="15" fill="rgb(235,212,8)" fg:x="15803" fg:w="17"/><text x="70.9114%" y="79.50"></text></g><g><title>@anon-func-192.5 (70 instructions, 0.31%)</title><rect x="70.5425%" y="85" width="0.3128%" height="15" fill="rgb(223,33,50)" fg:x="15786" fg:w="70"/><text x="70.8355%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.8553%" y="53" width="0.0760%" height="15" fill="rgb(219,149,13)" fg:x="15856" fg:w="17"/><text x="71.1483%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="70.9313%" y="53" width="0.0760%" height="15" fill="rgb(250,156,29)" fg:x="15873" fg:w="17"/><text x="71.2242%" y="63.50"></text></g><g><title>@anon-func-192.5 (70 instructions, 0.31%)</title><rect x="70.8553%" y="69" width="0.3128%" height="15" fill="rgb(216,193,19)" fg:x="15856" fg:w="70"/><text x="71.1483%" y="79.50"></text></g><g><title>del (31 instructions, 0.14%)</title><rect x="71.1681%" y="69" width="0.1385%" height="15" fill="rgb(216,135,14)" fg:x="15926" fg:w="31"/><text x="71.4611%" y="79.50"></text></g><g><title>del (197 instructions, 0.88%)</title><rect x="70.8553%" y="85" width="0.8803%" height="15" fill="rgb(241,47,5)" fg:x="15856" fg:w="197"/><text x="71.1483%" y="95.50"></text></g><g><title>del (363 instructions, 1.62%)</title><rect x="70.5425%" y="101" width="1.6221%" height="15" fill="rgb(233,42,35)" fg:x="15786" fg:w="363"/><text x="70.8355%" y="111.50"></text></g><g><title>del (530 instructions, 2.37%)</title><rect x="70.2252%" y="117" width="2.3684%" height="15" fill="rgb(231,13,6)" fg:x="15715" fg:w="530"/><text x="70.5182%" y="127.50">d..</text></g><g><title>del (696 instructions, 3.11%)</title><rect x="69.9124%" y="133" width="3.1102%" height="15" fill="rgb(207,181,40)" fg:x="15645" fg:w="696"/><text x="70.2054%" y="143.50">del</text></g><g><title>replace (910 instructions, 4.07%)</title><rect x="69.9124%" y="149" width="4.0665%" height="15" fill="rgb(254,173,49)" fg:x="15645" fg:w="910"/><text x="70.2054%" y="159.50">rep..</text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="73.9789%" y="117" width="0.0536%" height="15" fill="rgb(221,1,38)" fg:x="16555" fg:w="12"/><text x="74.2719%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.0325%" y="117" width="0.1207%" height="15" fill="rgb(206,124,46)" fg:x="16567" fg:w="27"/><text x="74.3255%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.1532%" y="117" width="0.0536%" height="15" fill="rgb(249,21,11)" fg:x="16594" fg:w="12"/><text x="74.4462%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.2068%" y="117" width="0.1207%" height="15" fill="rgb(222,201,40)" fg:x="16606" fg:w="27"/><text x="74.4998%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.3275%" y="117" width="0.0536%" height="15" fill="rgb(235,61,29)" fg:x="16633" fg:w="12"/><text x="74.6204%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.3811%" y="117" width="0.1207%" height="15" fill="rgb(219,207,3)" fg:x="16645" fg:w="27"/><text x="74.6741%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.5017%" y="117" width="0.0536%" height="15" fill="rgb(222,56,46)" fg:x="16672" fg:w="12"/><text x="74.7947%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.5554%" y="117" width="0.1207%" height="15" fill="rgb(239,76,54)" fg:x="16684" fg:w="27"/><text x="74.8483%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.6760%" y="117" width="0.0536%" height="15" fill="rgb(231,124,27)" fg:x="16711" fg:w="12"/><text x="74.9690%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.7296%" y="117" width="0.1207%" height="15" fill="rgb(249,195,6)" fg:x="16723" fg:w="27"/><text x="75.0226%" y="127.50"></text></g><g><title>rec (601 instructions, 2.69%)</title><rect x="73.9789%" y="133" width="2.6857%" height="15" fill="rgb(237,174,47)" fg:x="16555" fg:w="601"/><text x="74.2719%" y="143.50">r..</text></g><g><title>leaf (610 instructions, 2.73%)</title><rect x="73.9789%" y="149" width="2.7259%" height="15" fill="rgb(206,201,31)" fg:x="16555" fg:w="610"/><text x="74.2719%" y="159.50">l..</text></g><g><title>recursiveReplace (1,610 instructions, 7.19%)</title><rect x="69.8364%" y="165" width="7.1946%" height="15" fill="rgb(231,57,52)" fg:x="15628" fg:w="1610"/><text x="70.1294%" y="175.50">recursiv..</text></g><g><title>put.1 (1,777 instructions, 7.94%)</title><rect x="69.7113%" y="181" width="7.9408%" height="15" fill="rgb(248,177,22)" fg:x="15600" fg:w="1777"/><text x="70.0043%" y="191.50">put.1</text></g><g><title>account_put (2,702 instructions, 12.07%)</title><rect x="65.8102%" y="197" width="12.0744%" height="15" fill="rgb(215,211,37)" fg:x="14727" fg:w="2702"/><text x="66.1031%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="77.8845%" y="181" width="0.2502%" height="15" fill="rgb(241,128,51)" fg:x="17429" fg:w="56"/><text x="78.1775%" y="191.50"></text></g><g><title>memcpy (86 instructions, 0.38%)</title><rect x="78.1348%" y="181" width="0.3843%" height="15" fill="rgb(227,165,31)" fg:x="17485" fg:w="86"/><text x="78.4277%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb8cdbfe044f1d3b9 (56 instructions, 0.25%)</title><rect x="78.5191%" y="181" width="0.2502%" height="15" fill="rgb(228,167,24)" fg:x="17571" fg:w="56"/><text x="78.8120%" y="191.50"></text></g><g><title>leb128_encode (11 instructions, 0.05%)</title><rect x="78.7693%" y="181" width="0.0492%" height="15" fill="rgb(228,143,12)" fg:x="17627" fg:w="11"/><text x="79.0623%" y="191.50"></text></g><g><title>$lambda.30 (1,385 instructions, 6.19%)</title><rect x="77.8845%" y="197" width="6.1891%" height="15" fill="rgb(249,149,8)" fg:x="17429" fg:w="1385"/><text x="78.1775%" y="207.50">$lambd..</text></g><g><title>$lambda.3 (16,233 instructions, 72.54%)</title><rect x="17.4725%" y="213" width="72.5400%" height="15" fill="rgb(243,35,44)" fg:x="3910" fg:w="16233"/><text x="17.7655%" y="223.50">$lambda.3</text></g><g><title>schedule_copying_gc (108 instructions, 0.48%)</title><rect x="90.0125%" y="213" width="0.4826%" height="15" fill="rgb(246,89,9)" fg:x="20143" fg:w="108"/><text x="90.3055%" y="223.50"></text></g><g><title>trans_state4 (16 instructions, 0.07%)</title><rect x="90.4951%" y="213" width="0.0715%" height="15" fill="rgb(233,213,13)" fg:x="20251" fg:w="16"/><text x="90.7881%" y="223.50"></text></g><g><title>all (22,378 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(233,141,41)" fg:x="0" fg:w="22378"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (22,378 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(239,167,4)" fg:x="0" fg:w="22378"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>