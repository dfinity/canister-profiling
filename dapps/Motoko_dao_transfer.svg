<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="22841"><g><title>trans_state5 (10 instructions, 0.04%)</title><rect x="0.0000%" y="213" width="0.0438%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="10"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.25%)</title><rect x="0.0438%" y="213" width="0.2452%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="56"/><text x="0.3367%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="0.2890%" y="197" width="0.2189%" height="15" fill="rgb(221,193,54)" fg:x="66" fg:w="50"/><text x="0.5819%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.25%)</title><rect x="0.5079%" y="197" width="0.2452%" height="15" fill="rgb(248,212,6)" fg:x="116" fg:w="56"/><text x="0.8008%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="0.7530%" y="197" width="0.2802%" height="15" fill="rgb(208,68,35)" fg:x="172" fg:w="64"/><text x="1.0460%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="1.0332%" y="197" width="0.2189%" height="15" fill="rgb(232,128,0)" fg:x="236" fg:w="50"/><text x="1.3262%" y="207.50"></text></g><g><title>leb128_decode (132 instructions, 0.58%)</title><rect x="1.2521%" y="197" width="0.5779%" height="15" fill="rgb(207,160,47)" fg:x="286" fg:w="132"/><text x="1.5451%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="1.8300%" y="197" width="0.2802%" height="15" fill="rgb(228,23,34)" fg:x="418" fg:w="64"/><text x="2.1230%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (22 instructions, 0.10%)</title><rect x="2.1102%" y="197" width="0.0963%" height="15" fill="rgb(218,30,26)" fg:x="482" fg:w="22"/><text x="2.4032%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.94%)</title><rect x="2.2066%" y="197" width="0.9369%" height="15" fill="rgb(220,122,19)" fg:x="504" fg:w="214"/><text x="2.4995%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="3.1435%" y="197" width="0.2802%" height="15" fill="rgb(250,228,42)" fg:x="718" fg:w="64"/><text x="3.4364%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (12 instructions, 0.05%)</title><rect x="3.4237%" y="197" width="0.0525%" height="15" fill="rgb(240,193,28)" fg:x="782" fg:w="12"/><text x="3.7166%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="3.4762%" y="197" width="0.2802%" height="15" fill="rgb(216,20,37)" fg:x="794" fg:w="64"/><text x="3.7692%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="3.7564%" y="197" width="0.2189%" height="15" fill="rgb(206,188,39)" fg:x="858" fg:w="50"/><text x="4.0494%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.94%)</title><rect x="3.9753%" y="197" width="0.9369%" height="15" fill="rgb(217,207,13)" fg:x="908" fg:w="214"/><text x="4.2683%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="4.9122%" y="197" width="0.2802%" height="15" fill="rgb(231,73,38)" fg:x="1122" fg:w="64"/><text x="5.2052%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (12 instructions, 0.05%)</title><rect x="5.1924%" y="197" width="0.0525%" height="15" fill="rgb(225,20,46)" fg:x="1186" fg:w="12"/><text x="5.4854%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="5.2450%" y="197" width="0.2802%" height="15" fill="rgb(210,31,41)" fg:x="1198" fg:w="64"/><text x="5.5379%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="5.5252%" y="197" width="0.2802%" height="15" fill="rgb(221,200,47)" fg:x="1262" fg:w="64"/><text x="5.8181%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="5.8054%" y="197" width="0.2189%" height="15" fill="rgb(226,26,5)" fg:x="1326" fg:w="50"/><text x="6.0983%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="6.0243%" y="197" width="0.2802%" height="15" fill="rgb(249,33,26)" fg:x="1376" fg:w="64"/><text x="6.3172%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (12 instructions, 0.05%)</title><rect x="6.3045%" y="197" width="0.0525%" height="15" fill="rgb(235,183,28)" fg:x="1440" fg:w="12"/><text x="6.5974%" y="207.50"></text></g><g><title>parse_idl_header (1,827 instructions, 8.00%)</title><rect x="0.2890%" y="213" width="7.9988%" height="15" fill="rgb(221,5,38)" fg:x="66" fg:w="1827"/><text x="0.5819%" y="223.50">parse_idl..</text></g><g><title>memset (6 instructions, 0.03%)</title><rect x="8.2877%" y="197" width="0.0263%" height="15" fill="rgb(247,18,42)" fg:x="1893" fg:w="6"/><text x="8.5807%" y="207.50"></text></g><g><title>idl_sub_buf_init (15 instructions, 0.07%)</title><rect x="8.2877%" y="213" width="0.0657%" height="15" fill="rgb(241,131,45)" fg:x="1893" fg:w="15"/><text x="8.5807%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="8.3534%" y="213" width="0.2189%" height="15" fill="rgb(249,31,29)" fg:x="1908" fg:w="50"/><text x="8.6464%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="8.5723%" y="213" width="0.2802%" height="15" fill="rgb(225,111,53)" fg:x="1958" fg:w="64"/><text x="8.8653%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="8.8525%" y="213" width="0.2802%" height="15" fill="rgb(238,160,17)" fg:x="2022" fg:w="64"/><text x="9.1455%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="9.1327%" y="213" width="0.2189%" height="15" fill="rgb(214,148,48)" fg:x="2086" fg:w="50"/><text x="9.4257%" y="223.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.09%)</title><rect x="9.3516%" y="213" width="0.0876%" height="15" fill="rgb(232,36,49)" fg:x="2136" fg:w="20"/><text x="9.6446%" y="223.50"></text></g><g><title>leb128_decode (132 instructions, 0.58%)</title><rect x="9.4392%" y="197" width="0.5779%" height="15" fill="rgb(209,103,24)" fg:x="2156" fg:w="132"/><text x="9.7321%" y="207.50"></text></g><g><title>find_field (168 instructions, 0.74%)</title><rect x="9.4392%" y="213" width="0.7355%" height="15" fill="rgb(229,88,8)" fg:x="2156" fg:w="168"/><text x="9.7321%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="10.1747%" y="213" width="0.2802%" height="15" fill="rgb(213,181,19)" fg:x="2324" fg:w="64"/><text x="10.4677%" y="223.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="10.4549%" y="197" width="0.2189%" height="15" fill="rgb(254,191,54)" fg:x="2388" fg:w="50"/><text x="10.7479%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.25%)</title><rect x="10.6738%" y="197" width="0.2452%" height="15" fill="rgb(241,83,37)" fg:x="2438" fg:w="56"/><text x="10.9668%" y="207.50"></text></g><g><title>memcpy (196 instructions, 0.86%)</title><rect x="10.9190%" y="197" width="0.8581%" height="15" fill="rgb(233,36,39)" fg:x="2494" fg:w="196"/><text x="11.2119%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (409 instructions, 1.79%)</title><rect x="10.4549%" y="213" width="1.7906%" height="15" fill="rgb(226,3,54)" fg:x="2388" fg:w="409"/><text x="10.7479%" y="223.50"></text></g><g><title>leb128_decode (214 instructions, 0.94%)</title><rect x="12.2455%" y="197" width="0.9369%" height="15" fill="rgb(245,192,40)" fg:x="2797" fg:w="214"/><text x="12.5385%" y="207.50"></text></g><g><title>find_field (250 instructions, 1.09%)</title><rect x="12.2455%" y="213" width="1.0945%" height="15" fill="rgb(238,167,29)" fg:x="2797" fg:w="250"/><text x="12.5385%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="13.3400%" y="213" width="0.2802%" height="15" fill="rgb(232,182,51)" fg:x="3047" fg:w="64"/><text x="13.6330%" y="223.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="13.6202%" y="197" width="0.2802%" height="15" fill="rgb(231,60,39)" fg:x="3111" fg:w="64"/><text x="13.9132%" y="207.50"></text></g><g><title>leb128_decode (50 instructions, 0.22%)</title><rect x="13.9004%" y="197" width="0.2189%" height="15" fill="rgb(208,69,12)" fg:x="3175" fg:w="50"/><text x="14.1934%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (20 instructions, 0.09%)</title><rect x="14.1193%" y="197" width="0.0876%" height="15" fill="rgb(235,93,37)" fg:x="3225" fg:w="20"/><text x="14.4123%" y="207.50"></text></g><g><title>leb128_decode (214 instructions, 0.94%)</title><rect x="14.2069%" y="181" width="0.9369%" height="15" fill="rgb(213,116,39)" fg:x="3245" fg:w="214"/><text x="14.4999%" y="191.50"></text></g><g><title>find_field (250 instructions, 1.09%)</title><rect x="14.2069%" y="197" width="1.0945%" height="15" fill="rgb(222,207,29)" fg:x="3245" fg:w="250"/><text x="14.4999%" y="207.50"></text></g><g><title>sleb128_decode (64 instructions, 0.28%)</title><rect x="15.3014%" y="197" width="0.2802%" height="15" fill="rgb(206,96,30)" fg:x="3495" fg:w="64"/><text x="15.5944%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (60 instructions, 0.26%)</title><rect x="15.5816%" y="181" width="0.2627%" height="15" fill="rgb(218,138,4)" fg:x="3559" fg:w="60"/><text x="15.8746%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (121 instructions, 0.53%)</title><rect x="15.5816%" y="197" width="0.5297%" height="15" fill="rgb(250,191,14)" fg:x="3559" fg:w="121"/><text x="15.8746%" y="207.50"></text></g><g><title>skip_fields (6 instructions, 0.03%)</title><rect x="16.1114%" y="197" width="0.0263%" height="15" fill="rgb(239,60,40)" fg:x="3680" fg:w="6"/><text x="16.4043%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (781 instructions, 3.42%)</title><rect x="13.6202%" y="213" width="3.4193%" height="15" fill="rgb(206,27,48)" fg:x="3111" fg:w="781"/><text x="13.9132%" y="223.50">@d..</text></g><g><title>skip_fields (6 instructions, 0.03%)</title><rect x="17.0395%" y="213" width="0.0263%" height="15" fill="rgb(225,35,8)" fg:x="3892" fg:w="6"/><text x="17.3325%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (20 instructions, 0.09%)</title><rect x="17.0658%" y="213" width="0.0876%" height="15" fill="rgb(250,213,24)" fg:x="3898" fg:w="20"/><text x="17.3588%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.25%)</title><rect x="17.1534%" y="197" width="0.2452%" height="15" fill="rgb(247,123,22)" fg:x="3918" fg:w="56"/><text x="17.4463%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (20 instructions, 0.09%)</title><rect x="17.3985%" y="197" width="0.0876%" height="15" fill="rgb(231,138,38)" fg:x="3974" fg:w="20"/><text x="17.6915%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="17.4861%" y="197" width="0.0744%" height="15" fill="rgb(231,145,46)" fg:x="3994" fg:w="17"/><text x="17.7791%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.41%)</title><rect x="17.5605%" y="165" width="3.4062%" height="15" fill="rgb(251,118,11)" fg:x="4011" fg:w="778"/><text x="17.8535%" y="175.50">co..</text></g><g><title>box_i32 (11 instructions, 0.05%)</title><rect x="20.9667%" y="165" width="0.0482%" height="15" fill="rgb(217,147,25)" fg:x="4789" fg:w="11"/><text x="21.2597%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.09%)</title><rect x="21.0148%" y="165" width="0.0876%" height="15" fill="rgb(247,81,37)" fg:x="4800" fg:w="20"/><text x="21.3078%" y="175.50"></text></g><g><title>box_i32 (11 instructions, 0.05%)</title><rect x="21.1024%" y="165" width="0.0482%" height="15" fill="rgb(209,12,38)" fg:x="4820" fg:w="11"/><text x="21.3954%" y="175.50"></text></g><g><title>account_key (863 instructions, 3.78%)</title><rect x="17.5605%" y="181" width="3.7783%" height="15" fill="rgb(227,1,9)" fg:x="4011" fg:w="863"/><text x="17.8535%" y="191.50">acc..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (20 instructions, 0.09%)</title><rect x="21.3388%" y="149" width="0.0876%" height="15" fill="rgb(248,47,43)" fg:x="4874" fg:w="20"/><text x="21.6318%" y="159.50"></text></g><g><title>equalKey (36 instructions, 0.16%)</title><rect x="21.3388%" y="165" width="0.1576%" height="15" fill="rgb(221,10,30)" fg:x="4874" fg:w="36"/><text x="21.6318%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (20 instructions, 0.09%)</title><rect x="21.4964%" y="165" width="0.0876%" height="15" fill="rgb(210,229,1)" fg:x="4910" fg:w="20"/><text x="21.7894%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="21.5840%" y="149" width="0.0744%" height="15" fill="rgb(222,148,37)" fg:x="4930" fg:w="17"/><text x="21.8770%" y="159.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="21.6584%" y="149" width="0.1007%" height="15" fill="rgb(234,67,33)" fg:x="4947" fg:w="23"/><text x="21.9514%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="21.7591%" y="133" width="0.0744%" height="15" fill="rgb(247,98,35)" fg:x="4970" fg:w="17"/><text x="22.0521%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="21.8335%" y="133" width="0.0744%" height="15" fill="rgb(247,138,52)" fg:x="4987" fg:w="17"/><text x="22.1265%" y="143.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="21.7591%" y="149" width="0.3152%" height="15" fill="rgb(213,79,30)" fg:x="4970" fg:w="72"/><text x="22.0521%" y="159.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="22.0743%" y="149" width="0.1007%" height="15" fill="rgb(246,177,23)" fg:x="5042" fg:w="23"/><text x="22.3673%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="22.1750%" y="133" width="0.0744%" height="15" fill="rgb(230,62,27)" fg:x="5065" fg:w="17"/><text x="22.4680%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="22.2495%" y="133" width="0.0744%" height="15" fill="rgb(216,154,8)" fg:x="5082" fg:w="17"/><text x="22.5424%" y="143.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="22.1750%" y="149" width="0.3152%" height="15" fill="rgb(244,35,45)" fg:x="5065" fg:w="72"/><text x="22.4680%" y="159.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="22.4903%" y="149" width="0.1007%" height="15" fill="rgb(251,115,12)" fg:x="5137" fg:w="23"/><text x="22.7832%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="22.5910%" y="133" width="0.0744%" height="15" fill="rgb(240,54,50)" fg:x="5160" fg:w="17"/><text x="22.8839%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="22.6654%" y="133" width="0.0744%" height="15" fill="rgb(233,84,52)" fg:x="5177" fg:w="17"/><text x="22.9584%" y="143.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="22.5910%" y="149" width="0.3152%" height="15" fill="rgb(207,117,47)" fg:x="5160" fg:w="72"/><text x="22.8839%" y="159.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="22.9062%" y="149" width="0.1007%" height="15" fill="rgb(249,43,39)" fg:x="5232" fg:w="23"/><text x="23.1991%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="23.0069%" y="133" width="0.0744%" height="15" fill="rgb(209,38,44)" fg:x="5255" fg:w="17"/><text x="23.2998%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="23.0813%" y="133" width="0.0744%" height="15" fill="rgb(236,212,23)" fg:x="5272" fg:w="17"/><text x="23.3743%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="23.1557%" y="133" width="0.0744%" height="15" fill="rgb(242,79,21)" fg:x="5289" fg:w="17"/><text x="23.4487%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="23.2302%" y="133" width="0.0744%" height="15" fill="rgb(211,96,35)" fg:x="5306" fg:w="17"/><text x="23.5231%" y="143.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.37%)</title><rect x="23.3046%" y="117" width="3.3668%" height="15" fill="rgb(253,215,40)" fg:x="5323" fg:w="769"/><text x="23.5976%" y="127.50">Bl..</text></g><g><title>equal.1 (777 instructions, 3.40%)</title><rect x="23.3046%" y="133" width="3.4018%" height="15" fill="rgb(211,81,21)" fg:x="5323" fg:w="777"/><text x="23.5976%" y="143.50">eq..</text></g><g><title>anon-func-192.5 (911 instructions, 3.99%)</title><rect x="23.0069%" y="149" width="3.9884%" height="15" fill="rgb(208,190,38)" fg:x="5255" fg:w="911"/><text x="23.2998%" y="159.50">ano..</text></g><g><title>opt_inject (23 instructions, 0.10%)</title><rect x="26.9953%" y="149" width="0.1007%" height="15" fill="rgb(235,213,38)" fg:x="6166" fg:w="23"/><text x="27.2883%" y="159.50"></text></g><g><title>rec.2 (1,479 instructions, 6.48%)</title><rect x="21.5840%" y="165" width="6.4752%" height="15" fill="rgb(237,122,38)" fg:x="4930" fg:w="1479"/><text x="21.8770%" y="175.50">rec.2</text></g><g><title>get.2 (1,575 instructions, 6.90%)</title><rect x="21.3388%" y="181" width="6.8955%" height="15" fill="rgb(244,218,35)" fg:x="4874" fg:w="1575"/><text x="21.6318%" y="191.50">get.2</text></g><g><title>account_get (2,453 instructions, 10.74%)</title><rect x="17.5605%" y="197" width="10.7395%" height="15" fill="rgb(240,68,47)" fg:x="4011" fg:w="2453"/><text x="17.8535%" y="207.50">account_get</text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="28.3000%" y="197" width="0.1007%" height="15" fill="rgb(210,16,53)" fg:x="6464" fg:w="23"/><text x="28.5930%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="28.4007%" y="197" width="0.0744%" height="15" fill="rgb(235,124,12)" fg:x="6487" fg:w="17"/><text x="28.6937%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="28.4751%" y="197" width="0.0744%" height="15" fill="rgb(224,169,11)" fg:x="6504" fg:w="17"/><text x="28.7681%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="28.5495%" y="197" width="0.0744%" height="15" fill="rgb(250,166,2)" fg:x="6521" fg:w="17"/><text x="28.8425%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="28.6240%" y="197" width="0.0744%" height="15" fill="rgb(242,216,29)" fg:x="6538" fg:w="17"/><text x="28.9169%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="28.6984%" y="197" width="0.0744%" height="15" fill="rgb(230,116,27)" fg:x="6555" fg:w="17"/><text x="28.9914%" y="207.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="28.7728%" y="197" width="0.1182%" height="15" fill="rgb(228,99,48)" fg:x="6572" fg:w="27"/><text x="29.0658%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (60 instructions, 0.26%)</title><rect x="28.8910%" y="133" width="0.2627%" height="15" fill="rgb(253,11,6)" fg:x="6599" fg:w="60"/><text x="29.1840%" y="143.50"></text></g><g><title>memset (106 instructions, 0.46%)</title><rect x="29.1537%" y="133" width="0.4641%" height="15" fill="rgb(247,143,39)" fg:x="6659" fg:w="106"/><text x="29.4467%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.88%)</title><rect x="28.8910%" y="149" width="0.8844%" height="15" fill="rgb(236,97,10)" fg:x="6599" fg:w="202"/><text x="29.1840%" y="159.50"></text></g><g><title>mp_init (223 instructions, 0.98%)</title><rect x="28.8910%" y="165" width="0.9763%" height="15" fill="rgb(233,208,19)" fg:x="6599" fg:w="223"/><text x="29.1840%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.46%)</title><rect x="29.8673%" y="165" width="0.4553%" height="15" fill="rgb(216,164,2)" fg:x="6822" fg:w="104"/><text x="30.1603%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (33 instructions, 0.14%)</title><rect x="30.3227%" y="165" width="0.1445%" height="15" fill="rgb(220,129,5)" fg:x="6926" fg:w="33"/><text x="30.6156%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.87%)</title><rect x="28.8910%" y="181" width="1.8694%" height="15" fill="rgb(242,17,10)" fg:x="6599" fg:w="427"/><text x="29.1840%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="30.7605%" y="165" width="0.0569%" height="15" fill="rgb(242,107,0)" fg:x="7026" fg:w="13"/><text x="31.0534%" y="175.50"></text></g><g><title>mp_cmp (34 instructions, 0.15%)</title><rect x="30.7605%" y="181" width="0.1489%" height="15" fill="rgb(251,28,31)" fg:x="7026" fg:w="34"/><text x="31.0534%" y="191.50"></text></g><g><title>B_lt (513 instructions, 2.25%)</title><rect x="28.8910%" y="197" width="2.2460%" height="15" fill="rgb(233,223,10)" fg:x="6599" fg:w="513"/><text x="29.1840%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="31.1370%" y="197" width="0.0744%" height="15" fill="rgb(215,21,27)" fg:x="7112" fg:w="17"/><text x="31.4300%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (60 instructions, 0.26%)</title><rect x="31.2114%" y="133" width="0.2627%" height="15" fill="rgb(232,23,21)" fg:x="7129" fg:w="60"/><text x="31.5044%" y="143.50"></text></g><g><title>memset (106 instructions, 0.46%)</title><rect x="31.4741%" y="133" width="0.4641%" height="15" fill="rgb(244,5,23)" fg:x="7189" fg:w="106"/><text x="31.7671%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.88%)</title><rect x="31.2114%" y="149" width="0.8844%" height="15" fill="rgb(226,81,46)" fg:x="7129" fg:w="202"/><text x="31.5044%" y="159.50"></text></g><g><title>mp_init (223 instructions, 0.98%)</title><rect x="31.2114%" y="165" width="0.9763%" height="15" fill="rgb(247,70,30)" fg:x="7129" fg:w="223"/><text x="31.5044%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.46%)</title><rect x="32.1877%" y="165" width="0.4553%" height="15" fill="rgb(212,68,19)" fg:x="7352" fg:w="104"/><text x="32.4807%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (33 instructions, 0.14%)</title><rect x="32.6431%" y="165" width="0.1445%" height="15" fill="rgb(240,187,13)" fg:x="7456" fg:w="33"/><text x="32.9360%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.87%)</title><rect x="31.2114%" y="181" width="1.8694%" height="15" fill="rgb(223,113,26)" fg:x="7129" fg:w="427"/><text x="31.5044%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (60 instructions, 0.26%)</title><rect x="33.0809%" y="149" width="0.2627%" height="15" fill="rgb(206,192,2)" fg:x="7556" fg:w="60"/><text x="33.3738%" y="159.50"></text></g><g><title>memset (106 instructions, 0.46%)</title><rect x="33.3435%" y="149" width="0.4641%" height="15" fill="rgb(241,108,4)" fg:x="7616" fg:w="106"/><text x="33.6365%" y="159.50"></text></g><g><title>mp_calloc (202 instructions, 0.88%)</title><rect x="33.0809%" y="165" width="0.8844%" height="15" fill="rgb(247,173,49)" fg:x="7556" fg:w="202"/><text x="33.3738%" y="175.50"></text></g><g><title>mp_init (223 instructions, 0.98%)</title><rect x="33.0809%" y="181" width="0.9763%" height="15" fill="rgb(224,114,35)" fg:x="7556" fg:w="223"/><text x="33.3738%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="34.0572%" y="165" width="0.0569%" height="15" fill="rgb(245,159,27)" fg:x="7779" fg:w="13"/><text x="34.3501%" y="175.50"></text></g><g><title>mp_clamp (25 instructions, 0.11%)</title><rect x="34.1141%" y="149" width="0.1095%" height="15" fill="rgb(245,172,44)" fg:x="7792" fg:w="25"/><text x="34.4071%" y="159.50"></text></g><g><title>s_mp_sub (147 instructions, 0.64%)</title><rect x="34.1141%" y="165" width="0.6436%" height="15" fill="rgb(236,23,11)" fg:x="7792" fg:w="147"/><text x="34.4071%" y="175.50"></text></g><g><title>mp_sub (192 instructions, 0.84%)</title><rect x="34.0572%" y="181" width="0.8406%" height="15" fill="rgb(205,117,38)" fg:x="7779" fg:w="192"/><text x="34.3501%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (33 instructions, 0.14%)</title><rect x="34.8978%" y="181" width="0.1445%" height="15" fill="rgb(237,72,25)" fg:x="7971" fg:w="33"/><text x="35.1907%" y="191.50"></text></g><g><title>mp_count_bits (181 instructions, 0.79%)</title><rect x="35.0422%" y="165" width="0.7924%" height="15" fill="rgb(244,70,9)" fg:x="8004" fg:w="181"/><text x="35.3352%" y="175.50"></text></g><g><title>bigint_2complement_bits (223 instructions, 0.98%)</title><rect x="35.0422%" y="181" width="0.9763%" height="15" fill="rgb(217,125,39)" fg:x="8004" fg:w="223"/><text x="35.3352%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (60 instructions, 0.26%)</title><rect x="36.5746%" y="133" width="0.2627%" height="15" fill="rgb(235,36,10)" fg:x="8354" fg:w="60"/><text x="36.8675%" y="143.50"></text></g><g><title>memset (106 instructions, 0.46%)</title><rect x="36.8373%" y="133" width="0.4641%" height="15" fill="rgb(251,123,47)" fg:x="8414" fg:w="106"/><text x="37.1302%" y="143.50"></text></g><g><title>mp_calloc (202 instructions, 0.88%)</title><rect x="36.5746%" y="149" width="0.8844%" height="15" fill="rgb(221,13,13)" fg:x="8354" fg:w="202"/><text x="36.8675%" y="159.50"></text></g><g><title>mp_init (223 instructions, 0.98%)</title><rect x="36.5746%" y="165" width="0.9763%" height="15" fill="rgb(238,131,9)" fg:x="8354" fg:w="223"/><text x="36.8675%" y="175.50"></text></g><g><title>mp_set_u64 (104 instructions, 0.46%)</title><rect x="37.5509%" y="165" width="0.4553%" height="15" fill="rgb(211,50,8)" fg:x="8577" fg:w="104"/><text x="37.8439%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (33 instructions, 0.14%)</title><rect x="38.0062%" y="165" width="0.1445%" height="15" fill="rgb(245,182,24)" fg:x="8681" fg:w="33"/><text x="38.2992%" y="175.50"></text></g><g><title>bigint_of_int64 (427 instructions, 1.87%)</title><rect x="36.5746%" y="181" width="1.8694%" height="15" fill="rgb(242,14,37)" fg:x="8354" fg:w="427"/><text x="36.8675%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (60 instructions, 0.26%)</title><rect x="38.4440%" y="149" width="0.2627%" height="15" fill="rgb(246,228,12)" fg:x="8781" fg:w="60"/><text x="38.7370%" y="159.50"></text></g><g><title>memset (106 instructions, 0.46%)</title><rect x="38.7067%" y="149" width="0.4641%" height="15" fill="rgb(213,55,15)" fg:x="8841" fg:w="106"/><text x="38.9997%" y="159.50"></text></g><g><title>mp_calloc (202 instructions, 0.88%)</title><rect x="38.4440%" y="165" width="0.8844%" height="15" fill="rgb(209,9,3)" fg:x="8781" fg:w="202"/><text x="38.7370%" y="175.50"></text></g><g><title>mp_init (223 instructions, 0.98%)</title><rect x="38.4440%" y="181" width="0.9763%" height="15" fill="rgb(230,59,30)" fg:x="8781" fg:w="223"/><text x="38.7370%" y="191.50"></text></g><g><title>mp_cmp_mag (13 instructions, 0.06%)</title><rect x="39.4203%" y="165" width="0.0569%" height="15" fill="rgb(209,121,21)" fg:x="9004" fg:w="13"/><text x="39.7133%" y="175.50"></text></g><g><title>mp_clamp (25 instructions, 0.11%)</title><rect x="39.4773%" y="149" width="0.1095%" height="15" fill="rgb(220,109,13)" fg:x="9017" fg:w="25"/><text x="39.7702%" y="159.50"></text></g><g><title>s_mp_sub (147 instructions, 0.64%)</title><rect x="39.4773%" y="165" width="0.6436%" height="15" fill="rgb(232,18,1)" fg:x="9017" fg:w="147"/><text x="39.7702%" y="175.50"></text></g><g><title>mp_sub (192 instructions, 0.84%)</title><rect x="39.4203%" y="181" width="0.8406%" height="15" fill="rgb(215,41,42)" fg:x="9004" fg:w="192"/><text x="39.7133%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (33 instructions, 0.14%)</title><rect x="40.2609%" y="181" width="0.1445%" height="15" fill="rgb(224,123,36)" fg:x="9196" fg:w="33"/><text x="40.5539%" y="191.50"></text></g><g><title>mp_count_bits (181 instructions, 0.79%)</title><rect x="40.4054%" y="165" width="0.7924%" height="15" fill="rgb(240,125,3)" fg:x="9229" fg:w="181"/><text x="40.6984%" y="175.50"></text></g><g><title>bigint_2complement_bits (223 instructions, 0.98%)</title><rect x="40.4054%" y="181" width="0.9763%" height="15" fill="rgb(205,98,50)" fg:x="9229" fg:w="223"/><text x="40.6984%" y="191.50"></text></g><g><title>B_sub (2,450 instructions, 10.73%)</title><rect x="31.2114%" y="197" width="10.7263%" height="15" fill="rgb(205,185,37)" fg:x="7129" fg:w="2450"/><text x="31.5044%" y="207.50">B_sub</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (20 instructions, 0.09%)</title><rect x="41.9377%" y="197" width="0.0876%" height="15" fill="rgb(238,207,15)" fg:x="9579" fg:w="20"/><text x="42.2307%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.41%)</title><rect x="42.0253%" y="165" width="3.4062%" height="15" fill="rgb(213,199,42)" fg:x="9599" fg:w="778"/><text x="42.3183%" y="175.50">co..</text></g><g><title>box_i32 (11 instructions, 0.05%)</title><rect x="45.4315%" y="165" width="0.0482%" height="15" fill="rgb(235,201,11)" fg:x="10377" fg:w="11"/><text x="45.7244%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.09%)</title><rect x="45.4796%" y="165" width="0.0876%" height="15" fill="rgb(207,46,11)" fg:x="10388" fg:w="20"/><text x="45.7726%" y="175.50"></text></g><g><title>box_i32 (11 instructions, 0.05%)</title><rect x="45.5672%" y="165" width="0.0482%" height="15" fill="rgb(241,35,35)" fg:x="10408" fg:w="11"/><text x="45.8602%" y="175.50"></text></g><g><title>account_key (863 instructions, 3.78%)</title><rect x="42.0253%" y="181" width="3.7783%" height="15" fill="rgb(243,32,47)" fg:x="9599" fg:w="863"/><text x="42.3183%" y="191.50">acc..</text></g><g><title>opt_inject (23 instructions, 0.10%)</title><rect x="45.8036%" y="165" width="0.1007%" height="15" fill="rgb(247,202,23)" fg:x="10462" fg:w="23"/><text x="46.0966%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.09%)</title><rect x="45.9043%" y="165" width="0.0876%" height="15" fill="rgb(219,102,11)" fg:x="10485" fg:w="20"/><text x="46.1973%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.09%)</title><rect x="45.9919%" y="165" width="0.0876%" height="15" fill="rgb(243,110,44)" fg:x="10505" fg:w="20"/><text x="46.2848%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (20 instructions, 0.09%)</title><rect x="46.0794%" y="149" width="0.0876%" height="15" fill="rgb(222,74,54)" fg:x="10525" fg:w="20"/><text x="46.3724%" y="159.50"></text></g><g><title>equalKey (36 instructions, 0.16%)</title><rect x="46.0794%" y="165" width="0.1576%" height="15" fill="rgb(216,99,12)" fg:x="10525" fg:w="36"/><text x="46.3724%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="46.2370%" y="149" width="0.0744%" height="15" fill="rgb(226,22,26)" fg:x="10561" fg:w="17"/><text x="46.5300%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.09%)</title><rect x="46.3115%" y="133" width="0.0876%" height="15" fill="rgb(217,163,10)" fg:x="10578" fg:w="20"/><text x="46.6044%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.09%)</title><rect x="46.3990%" y="133" width="0.0876%" height="15" fill="rgb(213,25,53)" fg:x="10598" fg:w="20"/><text x="46.6920%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (20 instructions, 0.09%)</title><rect x="46.4866%" y="133" width="0.0876%" height="15" fill="rgb(252,105,26)" fg:x="10618" fg:w="20"/><text x="46.7795%" y="143.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="46.5741%" y="117" width="0.1007%" height="15" fill="rgb(220,39,43)" fg:x="10638" fg:w="23"/><text x="46.8671%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="46.6748%" y="101" width="0.0744%" height="15" fill="rgb(229,68,48)" fg:x="10661" fg:w="17"/><text x="46.9678%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="46.7493%" y="101" width="0.0744%" height="15" fill="rgb(252,8,32)" fg:x="10678" fg:w="17"/><text x="47.0422%" y="111.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="46.6748%" y="117" width="0.3152%" height="15" fill="rgb(223,20,43)" fg:x="10661" fg:w="72"/><text x="46.9678%" y="127.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="46.9901%" y="101" width="0.1007%" height="15" fill="rgb(229,81,49)" fg:x="10733" fg:w="23"/><text x="47.2830%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="47.0908%" y="85" width="0.0744%" height="15" fill="rgb(236,28,36)" fg:x="10756" fg:w="17"/><text x="47.3837%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="47.1652%" y="85" width="0.0744%" height="15" fill="rgb(249,185,26)" fg:x="10773" fg:w="17"/><text x="47.4582%" y="95.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="47.0908%" y="101" width="0.3152%" height="15" fill="rgb(249,174,33)" fg:x="10756" fg:w="72"/><text x="47.3837%" y="111.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="47.4060%" y="85" width="0.1007%" height="15" fill="rgb(233,201,37)" fg:x="10828" fg:w="23"/><text x="47.6989%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="47.5067%" y="69" width="0.0744%" height="15" fill="rgb(221,78,26)" fg:x="10851" fg:w="17"/><text x="47.7996%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="47.5811%" y="69" width="0.0744%" height="15" fill="rgb(250,127,30)" fg:x="10868" fg:w="17"/><text x="47.8741%" y="79.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="47.5067%" y="85" width="0.3152%" height="15" fill="rgb(230,49,44)" fg:x="10851" fg:w="72"/><text x="47.7996%" y="95.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="47.8219%" y="69" width="0.1007%" height="15" fill="rgb(229,67,23)" fg:x="10923" fg:w="23"/><text x="48.1149%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="47.9226%" y="53" width="0.0744%" height="15" fill="rgb(249,83,47)" fg:x="10946" fg:w="17"/><text x="48.2156%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="47.9970%" y="53" width="0.0744%" height="15" fill="rgb(215,43,3)" fg:x="10963" fg:w="17"/><text x="48.2900%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="48.0715%" y="53" width="0.0744%" height="15" fill="rgb(238,154,13)" fg:x="10980" fg:w="17"/><text x="48.3644%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="48.1459%" y="53" width="0.0744%" height="15" fill="rgb(219,56,2)" fg:x="10997" fg:w="17"/><text x="48.4388%" y="63.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.37%)</title><rect x="48.2203%" y="37" width="3.3668%" height="15" fill="rgb(233,0,4)" fg:x="11014" fg:w="769"/><text x="48.5133%" y="47.50">Bl..</text></g><g><title>equal.1 (777 instructions, 3.40%)</title><rect x="48.2203%" y="53" width="3.4018%" height="15" fill="rgb(235,30,7)" fg:x="11014" fg:w="777"/><text x="48.5133%" y="63.50">eq..</text></g><g><title>anon-func-192.5 (911 instructions, 3.99%)</title><rect x="47.9226%" y="69" width="3.9884%" height="15" fill="rgb(250,79,13)" fg:x="10946" fg:w="911"/><text x="48.2156%" y="79.50">ano..</text></g><g><title>opt_inject (23 instructions, 0.10%)</title><rect x="51.9110%" y="69" width="0.1007%" height="15" fill="rgb(211,146,34)" fg:x="11857" fg:w="23"/><text x="52.2040%" y="79.50"></text></g><g><title>del (1,018 instructions, 4.46%)</title><rect x="47.8219%" y="85" width="4.4569%" height="15" fill="rgb(228,22,38)" fg:x="10923" fg:w="1018"/><text x="48.1149%" y="95.50">del</text></g><g><title>to_2_tuple (28 instructions, 0.12%)</title><rect x="52.2788%" y="85" width="0.1226%" height="15" fill="rgb(235,168,5)" fg:x="11941" fg:w="28"/><text x="52.5718%" y="95.50"></text></g><g><title>opt_inject (23 instructions, 0.10%)</title><rect x="52.4014%" y="85" width="0.1007%" height="15" fill="rgb(221,155,16)" fg:x="11969" fg:w="23"/><text x="52.6944%" y="95.50"></text></g><g><title>del (1,262 instructions, 5.53%)</title><rect x="47.4060%" y="101" width="5.5252%" height="15" fill="rgb(215,215,53)" fg:x="10828" fg:w="1262"/><text x="47.6989%" y="111.50">del</text></g><g><title>to_2_tuple (28 instructions, 0.12%)</title><rect x="52.9311%" y="101" width="0.1226%" height="15" fill="rgb(223,4,10)" fg:x="12090" fg:w="28"/><text x="53.2241%" y="111.50"></text></g><g><title>opt_inject (23 instructions, 0.10%)</title><rect x="53.0537%" y="101" width="0.1007%" height="15" fill="rgb(234,103,6)" fg:x="12118" fg:w="23"/><text x="53.3467%" y="111.50"></text></g><g><title>del (1,506 instructions, 6.59%)</title><rect x="46.9901%" y="117" width="6.5934%" height="15" fill="rgb(227,97,0)" fg:x="10733" fg:w="1506"/><text x="47.2830%" y="127.50">del</text></g><g><title>to_2_tuple (28 instructions, 0.12%)</title><rect x="53.5835%" y="117" width="0.1226%" height="15" fill="rgb(234,150,53)" fg:x="12239" fg:w="28"/><text x="53.8764%" y="127.50"></text></g><g><title>opt_inject (23 instructions, 0.10%)</title><rect x="53.7061%" y="117" width="0.1007%" height="15" fill="rgb(228,201,54)" fg:x="12267" fg:w="23"/><text x="53.9990%" y="127.50"></text></g><g><title>del (1,750 instructions, 7.66%)</title><rect x="46.5741%" y="133" width="7.6617%" height="15" fill="rgb(222,22,37)" fg:x="10638" fg:w="1750"/><text x="46.8671%" y="143.50">del</text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="54.2358%" y="133" width="0.1007%" height="15" fill="rgb(237,53,32)" fg:x="12388" fg:w="23"/><text x="54.5288%" y="143.50"></text></g><g><title>to_2_tuple (28 instructions, 0.12%)</title><rect x="54.3365%" y="133" width="0.1226%" height="15" fill="rgb(233,25,53)" fg:x="12411" fg:w="28"/><text x="54.6295%" y="143.50"></text></g><g><title>to_2_tuple (28 instructions, 0.12%)</title><rect x="54.4591%" y="133" width="0.1226%" height="15" fill="rgb(210,40,34)" fg:x="12439" fg:w="28"/><text x="54.7521%" y="143.50"></text></g><g><title>opt_inject (23 instructions, 0.10%)</title><rect x="54.5817%" y="133" width="0.1007%" height="15" fill="rgb(241,220,44)" fg:x="12467" fg:w="23"/><text x="54.8746%" y="143.50"></text></g><g><title>replace (2,013 instructions, 8.81%)</title><rect x="46.3115%" y="149" width="8.8131%" height="15" fill="rgb(235,28,35)" fg:x="10578" fg:w="2013"/><text x="46.6044%" y="159.50">replace</text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="55.1246%" y="117" width="0.1007%" height="15" fill="rgb(210,56,17)" fg:x="12591" fg:w="23"/><text x="55.4175%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="55.2253%" y="117" width="0.0525%" height="15" fill="rgb(224,130,29)" fg:x="12614" fg:w="12"/><text x="55.5182%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.2778%" y="117" width="0.1182%" height="15" fill="rgb(235,212,8)" fg:x="12626" fg:w="27"/><text x="55.5708%" y="127.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="55.3960%" y="117" width="0.1007%" height="15" fill="rgb(223,33,50)" fg:x="12653" fg:w="23"/><text x="55.6890%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="55.4967%" y="117" width="0.0525%" height="15" fill="rgb(219,149,13)" fg:x="12676" fg:w="12"/><text x="55.7897%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.5492%" y="117" width="0.1182%" height="15" fill="rgb(250,156,29)" fg:x="12688" fg:w="27"/><text x="55.8422%" y="127.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="55.6674%" y="117" width="0.1007%" height="15" fill="rgb(216,193,19)" fg:x="12715" fg:w="23"/><text x="55.9604%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="55.7681%" y="117" width="0.0525%" height="15" fill="rgb(216,135,14)" fg:x="12738" fg:w="12"/><text x="56.0611%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="55.8207%" y="117" width="0.1182%" height="15" fill="rgb(241,47,5)" fg:x="12750" fg:w="27"/><text x="56.1136%" y="127.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="55.9389%" y="117" width="0.1007%" height="15" fill="rgb(233,42,35)" fg:x="12777" fg:w="23"/><text x="56.2319%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="56.0396%" y="117" width="0.0525%" height="15" fill="rgb(231,13,6)" fg:x="12800" fg:w="12"/><text x="56.3325%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="56.0921%" y="117" width="0.1182%" height="15" fill="rgb(207,181,40)" fg:x="12812" fg:w="27"/><text x="56.3851%" y="127.50"></text></g><g><title>opt_inject (6 instructions, 0.03%)</title><rect x="56.2103%" y="117" width="0.0263%" height="15" fill="rgb(254,173,49)" fg:x="12839" fg:w="6"/><text x="56.5033%" y="127.50"></text></g><g><title>opt_project (6 instructions, 0.03%)</title><rect x="56.2366%" y="117" width="0.0263%" height="15" fill="rgb(221,1,38)" fg:x="12845" fg:w="6"/><text x="56.5296%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (20 instructions, 0.09%)</title><rect x="56.2629%" y="117" width="0.0876%" height="15" fill="rgb(206,124,46)" fg:x="12851" fg:w="20"/><text x="56.5558%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.09%)</title><rect x="56.3504%" y="117" width="0.0876%" height="15" fill="rgb(249,21,11)" fg:x="12871" fg:w="20"/><text x="56.6434%" y="127.50"></text></g><g><title>rec (556 instructions, 2.43%)</title><rect x="55.1246%" y="133" width="2.4342%" height="15" fill="rgb(222,201,40)" fg:x="12591" fg:w="556"/><text x="55.4175%" y="143.50">r..</text></g><g><title>leaf (565 instructions, 2.47%)</title><rect x="55.1246%" y="149" width="2.4736%" height="15" fill="rgb(235,61,29)" fg:x="12591" fg:w="565"/><text x="55.4175%" y="159.50">l..</text></g><g><title>recursiveReplace (2,668 instructions, 11.68%)</title><rect x="46.2370%" y="165" width="11.6807%" height="15" fill="rgb(219,207,3)" fg:x="10561" fg:w="2668"/><text x="46.5300%" y="175.50">recursiveRepla..</text></g><g><title>put.1 (2,865 instructions, 12.54%)</title><rect x="45.8036%" y="181" width="12.5432%" height="15" fill="rgb(222,56,46)" fg:x="10462" fg:w="2865"/><text x="46.0966%" y="191.50">put.1</text></g><g><title>to_2_tuple (28 instructions, 0.12%)</title><rect x="58.3468%" y="181" width="0.1226%" height="15" fill="rgb(239,76,54)" fg:x="13327" fg:w="28"/><text x="58.6398%" y="191.50"></text></g><g><title>account_put (3,784 instructions, 16.57%)</title><rect x="42.0253%" y="197" width="16.5667%" height="15" fill="rgb(231,124,27)" fg:x="9599" fg:w="3784"/><text x="42.3183%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="58.5920%" y="197" width="0.0744%" height="15" fill="rgb(249,195,6)" fg:x="13383" fg:w="17"/><text x="58.8850%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.41%)</title><rect x="58.6664%" y="165" width="3.4062%" height="15" fill="rgb(237,174,47)" fg:x="13400" fg:w="778"/><text x="58.9594%" y="175.50">co..</text></g><g><title>box_i32 (11 instructions, 0.05%)</title><rect x="62.0726%" y="165" width="0.0482%" height="15" fill="rgb(206,201,31)" fg:x="14178" fg:w="11"/><text x="62.3656%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.09%)</title><rect x="62.1207%" y="165" width="0.0876%" height="15" fill="rgb(231,57,52)" fg:x="14189" fg:w="20"/><text x="62.4137%" y="175.50"></text></g><g><title>box_i32 (11 instructions, 0.05%)</title><rect x="62.2083%" y="165" width="0.0482%" height="15" fill="rgb(248,177,22)" fg:x="14209" fg:w="11"/><text x="62.5013%" y="175.50"></text></g><g><title>account_key (863 instructions, 3.78%)</title><rect x="58.6664%" y="181" width="3.7783%" height="15" fill="rgb(215,211,37)" fg:x="13400" fg:w="863"/><text x="58.9594%" y="191.50">acc..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (20 instructions, 0.09%)</title><rect x="62.4447%" y="149" width="0.0876%" height="15" fill="rgb(241,128,51)" fg:x="14263" fg:w="20"/><text x="62.7377%" y="159.50"></text></g><g><title>equalKey (36 instructions, 0.16%)</title><rect x="62.4447%" y="165" width="0.1576%" height="15" fill="rgb(227,165,31)" fg:x="14263" fg:w="36"/><text x="62.7377%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (20 instructions, 0.09%)</title><rect x="62.6023%" y="165" width="0.0876%" height="15" fill="rgb(228,167,24)" fg:x="14299" fg:w="20"/><text x="62.8953%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="62.6899%" y="149" width="0.0744%" height="15" fill="rgb(228,143,12)" fg:x="14319" fg:w="17"/><text x="62.9829%" y="159.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="62.7643%" y="149" width="0.1007%" height="15" fill="rgb(249,149,8)" fg:x="14336" fg:w="23"/><text x="63.0573%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="62.8650%" y="133" width="0.0744%" height="15" fill="rgb(243,35,44)" fg:x="14359" fg:w="17"/><text x="63.1580%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="62.9395%" y="133" width="0.0744%" height="15" fill="rgb(246,89,9)" fg:x="14376" fg:w="17"/><text x="63.2324%" y="143.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="62.8650%" y="149" width="0.3152%" height="15" fill="rgb(233,213,13)" fg:x="14359" fg:w="72"/><text x="63.1580%" y="159.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="63.1802%" y="149" width="0.1007%" height="15" fill="rgb(233,141,41)" fg:x="14431" fg:w="23"/><text x="63.4732%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="63.2809%" y="133" width="0.0744%" height="15" fill="rgb(239,167,4)" fg:x="14454" fg:w="17"/><text x="63.5739%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="63.3554%" y="133" width="0.0744%" height="15" fill="rgb(209,217,16)" fg:x="14471" fg:w="17"/><text x="63.6483%" y="143.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="63.2809%" y="149" width="0.3152%" height="15" fill="rgb(219,88,35)" fg:x="14454" fg:w="72"/><text x="63.5739%" y="159.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="63.5962%" y="149" width="0.1007%" height="15" fill="rgb(220,193,23)" fg:x="14526" fg:w="23"/><text x="63.8891%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="63.6969%" y="133" width="0.0744%" height="15" fill="rgb(230,90,52)" fg:x="14549" fg:w="17"/><text x="63.9898%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="63.7713%" y="133" width="0.0744%" height="15" fill="rgb(252,106,19)" fg:x="14566" fg:w="17"/><text x="64.0643%" y="143.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="63.6969%" y="149" width="0.3152%" height="15" fill="rgb(206,74,20)" fg:x="14549" fg:w="72"/><text x="63.9898%" y="159.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="64.0121%" y="149" width="0.1007%" height="15" fill="rgb(230,138,44)" fg:x="14621" fg:w="23"/><text x="64.3051%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="64.1128%" y="133" width="0.0744%" height="15" fill="rgb(235,182,43)" fg:x="14644" fg:w="17"/><text x="64.4057%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="64.1872%" y="133" width="0.0744%" height="15" fill="rgb(242,16,51)" fg:x="14661" fg:w="17"/><text x="64.4802%" y="143.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="64.1128%" y="149" width="0.3152%" height="15" fill="rgb(248,9,4)" fg:x="14644" fg:w="72"/><text x="64.4057%" y="159.50"></text></g><g><title>rec.2 (632 instructions, 2.77%)</title><rect x="62.6899%" y="165" width="2.7670%" height="15" fill="rgb(210,31,22)" fg:x="14319" fg:w="632"/><text x="62.9829%" y="175.50">re..</text></g><g><title>get.2 (728 instructions, 3.19%)</title><rect x="62.4447%" y="181" width="3.1873%" height="15" fill="rgb(239,54,39)" fg:x="14263" fg:w="728"/><text x="62.7377%" y="191.50">ge..</text></g><g><title>account_get (1,606 instructions, 7.03%)</title><rect x="58.6664%" y="197" width="7.0312%" height="15" fill="rgb(230,99,41)" fg:x="13400" fg:w="1606"/><text x="58.9594%" y="207.50">account_..</text></g><g><title>get.1 (9 instructions, 0.04%)</title><rect x="65.6976%" y="197" width="0.0394%" height="15" fill="rgb(253,106,12)" fg:x="15006" fg:w="9"/><text x="65.9906%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="65.7371%" y="197" width="0.0744%" height="15" fill="rgb(213,46,41)" fg:x="15015" fg:w="17"/><text x="66.0300%" y="207.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="65.8115%" y="197" width="0.1182%" height="15" fill="rgb(215,133,35)" fg:x="15032" fg:w="27"/><text x="66.1044%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="65.9297%" y="197" width="0.0744%" height="15" fill="rgb(213,28,5)" fg:x="15059" fg:w="17"/><text x="66.2227%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (20 instructions, 0.09%)</title><rect x="66.0041%" y="197" width="0.0876%" height="15" fill="rgb(215,77,49)" fg:x="15076" fg:w="20"/><text x="66.2971%" y="207.50"></text></g><g><title>compute_crc32 (778 instructions, 3.41%)</title><rect x="66.0917%" y="165" width="3.4062%" height="15" fill="rgb(248,100,22)" fg:x="15096" fg:w="778"/><text x="66.3846%" y="175.50">co..</text></g><g><title>box_i32 (11 instructions, 0.05%)</title><rect x="69.4978%" y="165" width="0.0482%" height="15" fill="rgb(208,67,9)" fg:x="15874" fg:w="11"/><text x="69.7908%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.09%)</title><rect x="69.5460%" y="165" width="0.0876%" height="15" fill="rgb(219,133,21)" fg:x="15885" fg:w="20"/><text x="69.8390%" y="175.50"></text></g><g><title>box_i32 (11 instructions, 0.05%)</title><rect x="69.6336%" y="165" width="0.0482%" height="15" fill="rgb(246,46,29)" fg:x="15905" fg:w="11"/><text x="69.9265%" y="175.50"></text></g><g><title>account_key (863 instructions, 3.78%)</title><rect x="66.0917%" y="181" width="3.7783%" height="15" fill="rgb(246,185,52)" fg:x="15096" fg:w="863"/><text x="66.3846%" y="191.50">acc..</text></g><g><title>opt_inject (23 instructions, 0.10%)</title><rect x="69.8700%" y="165" width="0.1007%" height="15" fill="rgb(252,136,11)" fg:x="15959" fg:w="23"/><text x="70.1629%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.09%)</title><rect x="69.9707%" y="165" width="0.0876%" height="15" fill="rgb(219,138,53)" fg:x="15982" fg:w="20"/><text x="70.2636%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.09%)</title><rect x="70.0582%" y="165" width="0.0876%" height="15" fill="rgb(211,51,23)" fg:x="16002" fg:w="20"/><text x="70.3512%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (20 instructions, 0.09%)</title><rect x="70.1458%" y="149" width="0.0876%" height="15" fill="rgb(247,221,28)" fg:x="16022" fg:w="20"/><text x="70.4388%" y="159.50"></text></g><g><title>equalKey (36 instructions, 0.16%)</title><rect x="70.1458%" y="165" width="0.1576%" height="15" fill="rgb(251,222,45)" fg:x="16022" fg:w="36"/><text x="70.4388%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.07%)</title><rect x="70.3034%" y="149" width="0.0744%" height="15" fill="rgb(217,162,53)" fg:x="16058" fg:w="17"/><text x="70.5964%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.09%)</title><rect x="70.3778%" y="133" width="0.0876%" height="15" fill="rgb(229,93,14)" fg:x="16075" fg:w="20"/><text x="70.6708%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (20 instructions, 0.09%)</title><rect x="70.4654%" y="133" width="0.0876%" height="15" fill="rgb(209,67,49)" fg:x="16095" fg:w="20"/><text x="70.7584%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (20 instructions, 0.09%)</title><rect x="70.5530%" y="133" width="0.0876%" height="15" fill="rgb(213,87,29)" fg:x="16115" fg:w="20"/><text x="70.8459%" y="143.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="70.6405%" y="117" width="0.1007%" height="15" fill="rgb(205,151,52)" fg:x="16135" fg:w="23"/><text x="70.9335%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="70.7412%" y="101" width="0.0744%" height="15" fill="rgb(253,215,39)" fg:x="16158" fg:w="17"/><text x="71.0342%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="70.8156%" y="101" width="0.0744%" height="15" fill="rgb(221,220,41)" fg:x="16175" fg:w="17"/><text x="71.1086%" y="111.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="70.7412%" y="117" width="0.3152%" height="15" fill="rgb(218,133,21)" fg:x="16158" fg:w="72"/><text x="71.0342%" y="127.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="71.0564%" y="101" width="0.1007%" height="15" fill="rgb(221,193,43)" fg:x="16230" fg:w="23"/><text x="71.3494%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="71.1571%" y="85" width="0.0744%" height="15" fill="rgb(240,128,52)" fg:x="16253" fg:w="17"/><text x="71.4501%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="71.2316%" y="85" width="0.0744%" height="15" fill="rgb(253,114,12)" fg:x="16270" fg:w="17"/><text x="71.5245%" y="95.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="71.1571%" y="101" width="0.3152%" height="15" fill="rgb(215,223,47)" fg:x="16253" fg:w="72"/><text x="71.4501%" y="111.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="71.4724%" y="85" width="0.1007%" height="15" fill="rgb(248,225,23)" fg:x="16325" fg:w="23"/><text x="71.7653%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="71.5730%" y="69" width="0.0744%" height="15" fill="rgb(250,108,0)" fg:x="16348" fg:w="17"/><text x="71.8660%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="71.6475%" y="69" width="0.0744%" height="15" fill="rgb(228,208,7)" fg:x="16365" fg:w="17"/><text x="71.9404%" y="79.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="71.5730%" y="85" width="0.3152%" height="15" fill="rgb(244,45,10)" fg:x="16348" fg:w="72"/><text x="71.8660%" y="95.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="71.8883%" y="69" width="0.1007%" height="15" fill="rgb(207,125,25)" fg:x="16420" fg:w="23"/><text x="72.1812%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="71.9890%" y="53" width="0.0744%" height="15" fill="rgb(210,195,18)" fg:x="16443" fg:w="17"/><text x="72.2819%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.07%)</title><rect x="72.0634%" y="53" width="0.0744%" height="15" fill="rgb(249,80,12)" fg:x="16460" fg:w="17"/><text x="72.3564%" y="63.50"></text></g><g><title>anon-func-192.5 (72 instructions, 0.32%)</title><rect x="71.9890%" y="69" width="0.3152%" height="15" fill="rgb(221,65,9)" fg:x="16443" fg:w="72"/><text x="72.2819%" y="79.50"></text></g><g><title>del (31 instructions, 0.14%)</title><rect x="72.3042%" y="69" width="0.1357%" height="15" fill="rgb(235,49,36)" fg:x="16515" fg:w="31"/><text x="72.5972%" y="79.50"></text></g><g><title>del (204 instructions, 0.89%)</title><rect x="71.8883%" y="85" width="0.8931%" height="15" fill="rgb(225,32,20)" fg:x="16420" fg:w="204"/><text x="72.1812%" y="95.50"></text></g><g><title>del (377 instructions, 1.65%)</title><rect x="71.4724%" y="101" width="1.6505%" height="15" fill="rgb(215,141,46)" fg:x="16325" fg:w="377"/><text x="71.7653%" y="111.50"></text></g><g><title>del (550 instructions, 2.41%)</title><rect x="71.0564%" y="117" width="2.4080%" height="15" fill="rgb(250,160,47)" fg:x="16230" fg:w="550"/><text x="71.3494%" y="127.50">d..</text></g><g><title>del (723 instructions, 3.17%)</title><rect x="70.6405%" y="133" width="3.1654%" height="15" fill="rgb(216,222,40)" fg:x="16135" fg:w="723"/><text x="70.9335%" y="143.50">del</text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="73.8059%" y="133" width="0.1007%" height="15" fill="rgb(234,217,39)" fg:x="16858" fg:w="23"/><text x="74.0988%" y="143.50"></text></g><g><title>to_2_tuple (28 instructions, 0.12%)</title><rect x="73.9066%" y="133" width="0.1226%" height="15" fill="rgb(207,178,40)" fg:x="16881" fg:w="28"/><text x="74.1995%" y="143.50"></text></g><g><title>to_2_tuple (28 instructions, 0.12%)</title><rect x="74.0292%" y="133" width="0.1226%" height="15" fill="rgb(221,136,13)" fg:x="16909" fg:w="28"/><text x="74.3221%" y="143.50"></text></g><g><title>opt_inject (23 instructions, 0.10%)</title><rect x="74.1517%" y="133" width="0.1007%" height="15" fill="rgb(249,199,10)" fg:x="16937" fg:w="23"/><text x="74.4447%" y="143.50"></text></g><g><title>replace (986 instructions, 4.32%)</title><rect x="70.3778%" y="149" width="4.3168%" height="15" fill="rgb(249,222,13)" fg:x="16075" fg:w="986"/><text x="70.6708%" y="159.50">repl..</text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="74.6946%" y="117" width="0.1007%" height="15" fill="rgb(244,185,38)" fg:x="17061" fg:w="23"/><text x="74.9876%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="74.7953%" y="117" width="0.0525%" height="15" fill="rgb(236,202,9)" fg:x="17084" fg:w="12"/><text x="75.0883%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="74.8479%" y="117" width="0.1182%" height="15" fill="rgb(250,229,37)" fg:x="17096" fg:w="27"/><text x="75.1408%" y="127.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="74.9661%" y="117" width="0.1007%" height="15" fill="rgb(206,174,23)" fg:x="17123" fg:w="23"/><text x="75.2590%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="75.0668%" y="117" width="0.0525%" height="15" fill="rgb(211,33,43)" fg:x="17146" fg:w="12"/><text x="75.3597%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="75.1193%" y="117" width="0.1182%" height="15" fill="rgb(245,58,50)" fg:x="17158" fg:w="27"/><text x="75.4123%" y="127.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="75.2375%" y="117" width="0.1007%" height="15" fill="rgb(244,68,36)" fg:x="17185" fg:w="23"/><text x="75.5305%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="75.3382%" y="117" width="0.0525%" height="15" fill="rgb(232,229,15)" fg:x="17208" fg:w="12"/><text x="75.6312%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="75.3907%" y="117" width="0.1182%" height="15" fill="rgb(254,30,23)" fg:x="17220" fg:w="27"/><text x="75.6837%" y="127.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="75.5090%" y="117" width="0.1007%" height="15" fill="rgb(235,160,14)" fg:x="17247" fg:w="23"/><text x="75.8019%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="75.6096%" y="117" width="0.0525%" height="15" fill="rgb(212,155,44)" fg:x="17270" fg:w="12"/><text x="75.9026%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="75.6622%" y="117" width="0.1182%" height="15" fill="rgb(226,2,50)" fg:x="17282" fg:w="27"/><text x="75.9552%" y="127.50"></text></g><g><title>opt_project (23 instructions, 0.10%)</title><rect x="75.7804%" y="117" width="0.1007%" height="15" fill="rgb(234,177,6)" fg:x="17309" fg:w="23"/><text x="76.0734%" y="127.50"></text></g><g><title>B_ge (12 instructions, 0.05%)</title><rect x="75.8811%" y="117" width="0.0525%" height="15" fill="rgb(217,24,9)" fg:x="17332" fg:w="12"/><text x="76.1741%" y="127.50"></text></g><g><title>B_add (27 instructions, 0.12%)</title><rect x="75.9336%" y="117" width="0.1182%" height="15" fill="rgb(220,13,46)" fg:x="17344" fg:w="27"/><text x="76.2266%" y="127.50"></text></g><g><title>opt_inject (6 instructions, 0.03%)</title><rect x="76.0518%" y="117" width="0.0263%" height="15" fill="rgb(239,221,27)" fg:x="17371" fg:w="6"/><text x="76.3448%" y="127.50"></text></g><g><title>opt_project (6 instructions, 0.03%)</title><rect x="76.0781%" y="117" width="0.0263%" height="15" fill="rgb(222,198,25)" fg:x="17377" fg:w="6"/><text x="76.3711%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (20 instructions, 0.09%)</title><rect x="76.1044%" y="117" width="0.0876%" height="15" fill="rgb(211,99,13)" fg:x="17383" fg:w="20"/><text x="76.3973%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (20 instructions, 0.09%)</title><rect x="76.1919%" y="117" width="0.0876%" height="15" fill="rgb(232,111,31)" fg:x="17403" fg:w="20"/><text x="76.4849%" y="127.50"></text></g><g><title>rec (663 instructions, 2.90%)</title><rect x="74.6946%" y="133" width="2.9027%" height="15" fill="rgb(245,82,37)" fg:x="17061" fg:w="663"/><text x="74.9876%" y="143.50">rec</text></g><g><title>leaf (672 instructions, 2.94%)</title><rect x="74.6946%" y="149" width="2.9421%" height="15" fill="rgb(227,149,46)" fg:x="17061" fg:w="672"/><text x="74.9876%" y="159.50">le..</text></g><g><title>recursiveReplace (1,748 instructions, 7.65%)</title><rect x="70.3034%" y="165" width="7.6529%" height="15" fill="rgb(218,36,50)" fg:x="16058" fg:w="1748"/><text x="70.5964%" y="175.50">recursive..</text></g><g><title>put.1 (1,945 instructions, 8.52%)</title><rect x="69.8700%" y="181" width="8.5154%" height="15" fill="rgb(226,80,48)" fg:x="15959" fg:w="1945"/><text x="70.1629%" y="191.50">put.1</text></g><g><title>to_2_tuple (28 instructions, 0.12%)</title><rect x="78.3854%" y="181" width="0.1226%" height="15" fill="rgb(238,224,15)" fg:x="17904" fg:w="28"/><text x="78.6783%" y="191.50"></text></g><g><title>account_put (2,864 instructions, 12.54%)</title><rect x="66.0917%" y="197" width="12.5389%" height="15" fill="rgb(241,136,10)" fg:x="15096" fg:w="2864"/><text x="66.3846%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.25%)</title><rect x="78.6305%" y="181" width="0.2452%" height="15" fill="rgb(208,32,45)" fg:x="17960" fg:w="56"/><text x="78.9235%" y="191.50"></text></g><g><title>memcpy (86 instructions, 0.38%)</title><rect x="78.8757%" y="181" width="0.3765%" height="15" fill="rgb(207,135,9)" fg:x="18016" fg:w="86"/><text x="79.1687%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (56 instructions, 0.25%)</title><rect x="79.2522%" y="181" width="0.2452%" height="15" fill="rgb(206,86,44)" fg:x="18102" fg:w="56"/><text x="79.5452%" y="191.50"></text></g><g><title>leb128_encode (11 instructions, 0.05%)</title><rect x="79.4974%" y="181" width="0.0482%" height="15" fill="rgb(245,177,15)" fg:x="18158" fg:w="11"/><text x="79.7904%" y="191.50"></text></g><g><title>reply_with_data (1,032 instructions, 4.52%)</title><rect x="79.5456%" y="181" width="4.5182%" height="15" fill="rgb(206,64,50)" fg:x="18169" fg:w="1032"/><text x="79.8385%" y="191.50">repl..</text></g><g><title>$lambda.35 (1,393 instructions, 6.10%)</title><rect x="78.6305%" y="197" width="6.0987%" height="15" fill="rgb(234,36,40)" fg:x="17960" fg:w="1393"/><text x="78.9235%" y="207.50">$lambd..</text></g><g><title>$lambda.2 (16,712 instructions, 73.17%)</title><rect x="17.1534%" y="213" width="73.1667%" height="15" fill="rgb(213,64,8)" fg:x="3918" fg:w="16712"/><text x="17.4463%" y="223.50">$lambda.2</text></g><g><title>schedule_copying_gc (108 instructions, 0.47%)</title><rect x="90.3200%" y="213" width="0.4728%" height="15" fill="rgb(210,75,36)" fg:x="20630" fg:w="108"/><text x="90.6130%" y="223.50"></text></g><g><title>trans_state4 (16 instructions, 0.07%)</title><rect x="90.7929%" y="213" width="0.0700%" height="15" fill="rgb(229,88,21)" fg:x="20738" fg:w="16"/><text x="91.0858%" y="223.50"></text></g><g><title>all (22,841 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(252,204,47)" fg:x="0" fg:w="22841"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (22,841 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(208,77,27)" fg:x="0" fg:w="22841"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>