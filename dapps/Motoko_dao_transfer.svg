<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="16336"><g><title>trans_state5 (8 instructions, 0.05%)</title><rect x="0.0000%" y="213" width="0.0490%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="0.0490%" y="213" width="0.2020%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="33"/><text x="0.3419%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="0.2510%" y="197" width="0.2816%" height="15" fill="rgb(221,193,54)" fg:x="41" fg:w="46"/><text x="0.5439%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="0.5326%" y="197" width="0.2020%" height="15" fill="rgb(248,212,6)" fg:x="87" fg:w="33"/><text x="0.8255%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="0.7346%" y="197" width="0.3673%" height="15" fill="rgb(208,68,35)" fg:x="120" fg:w="60"/><text x="1.0275%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="1.1019%" y="197" width="0.2816%" height="15" fill="rgb(232,128,0)" fg:x="180" fg:w="46"/><text x="1.3948%" y="207.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="1.3834%" y="197" width="0.7468%" height="15" fill="rgb(207,160,47)" fg:x="226" fg:w="122"/><text x="1.6764%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="2.1303%" y="197" width="0.3673%" height="15" fill="rgb(228,23,34)" fg:x="348" fg:w="60"/><text x="2.4232%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (17 instructions, 0.10%)</title><rect x="2.4976%" y="197" width="0.1041%" height="15" fill="rgb(218,30,26)" fg:x="408" fg:w="17"/><text x="2.7905%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="2.6016%" y="197" width="1.2120%" height="15" fill="rgb(220,122,19)" fg:x="425" fg:w="198"/><text x="2.8946%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="3.8137%" y="197" width="0.3673%" height="15" fill="rgb(250,228,42)" fg:x="623" fg:w="60"/><text x="4.1066%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (9 instructions, 0.06%)</title><rect x="4.1810%" y="197" width="0.0551%" height="15" fill="rgb(240,193,28)" fg:x="683" fg:w="9"/><text x="4.4739%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="4.2360%" y="197" width="0.3673%" height="15" fill="rgb(216,20,37)" fg:x="692" fg:w="60"/><text x="4.5290%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="4.6033%" y="197" width="0.2816%" height="15" fill="rgb(206,188,39)" fg:x="752" fg:w="46"/><text x="4.8963%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="4.8849%" y="197" width="1.2120%" height="15" fill="rgb(217,207,13)" fg:x="798" fg:w="198"/><text x="5.1779%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.0970%" y="197" width="0.3673%" height="15" fill="rgb(231,73,38)" fg:x="996" fg:w="60"/><text x="6.3899%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (9 instructions, 0.06%)</title><rect x="6.4643%" y="197" width="0.0551%" height="15" fill="rgb(225,20,46)" fg:x="1056" fg:w="9"/><text x="6.7572%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.5193%" y="197" width="0.3673%" height="15" fill="rgb(210,31,41)" fg:x="1065" fg:w="60"/><text x="6.8123%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.8866%" y="197" width="0.3673%" height="15" fill="rgb(221,200,47)" fg:x="1125" fg:w="60"/><text x="7.1796%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="7.2539%" y="197" width="0.2816%" height="15" fill="rgb(226,26,5)" fg:x="1185" fg:w="46"/><text x="7.5469%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="7.5355%" y="197" width="0.3673%" height="15" fill="rgb(249,33,26)" fg:x="1231" fg:w="60"/><text x="7.8285%" y="207.50"></text></g><g><title>motoko_rts::idl::check_typearg::h19d486bd76900e6f (9 instructions, 0.06%)</title><rect x="7.9028%" y="197" width="0.0551%" height="15" fill="rgb(235,183,28)" fg:x="1291" fg:w="9"/><text x="8.1958%" y="207.50"></text></g><g><title>parse_idl_header (1,580 instructions, 9.67%)</title><rect x="0.2510%" y="213" width="9.6719%" height="15" fill="rgb(221,5,38)" fg:x="41" fg:w="1580"/><text x="0.5439%" y="223.50">parse_idl_h..</text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="9.9229%" y="197" width="0.0245%" height="15" fill="rgb(247,18,42)" fg:x="1621" fg:w="4"/><text x="10.2158%" y="207.50"></text></g><g><title>idl_sub_buf_init (8 instructions, 0.05%)</title><rect x="9.9229%" y="213" width="0.0490%" height="15" fill="rgb(241,131,45)" fg:x="1621" fg:w="8"/><text x="10.2158%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="9.9718%" y="213" width="0.2816%" height="15" fill="rgb(249,31,29)" fg:x="1629" fg:w="46"/><text x="10.2648%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.2534%" y="213" width="0.3673%" height="15" fill="rgb(225,111,53)" fg:x="1675" fg:w="60"/><text x="10.5464%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.6207%" y="213" width="0.3673%" height="15" fill="rgb(238,160,17)" fg:x="1735" fg:w="60"/><text x="10.9137%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="10.9880%" y="213" width="0.2816%" height="15" fill="rgb(214,148,48)" fg:x="1795" fg:w="46"/><text x="11.2810%" y="223.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="11.2696%" y="213" width="0.0918%" height="15" fill="rgb(232,36,49)" fg:x="1841" fg:w="15"/><text x="11.5626%" y="223.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="11.3614%" y="197" width="0.7468%" height="15" fill="rgb(209,103,24)" fg:x="1856" fg:w="122"/><text x="11.6544%" y="207.50"></text></g><g><title>find_field (149 instructions, 0.91%)</title><rect x="11.3614%" y="213" width="0.9121%" height="15" fill="rgb(229,88,8)" fg:x="1856" fg:w="149"/><text x="11.6544%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="12.2735%" y="213" width="0.3673%" height="15" fill="rgb(213,181,19)" fg:x="2005" fg:w="60"/><text x="12.5665%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="12.6408%" y="197" width="0.2816%" height="15" fill="rgb(254,191,54)" fg:x="2065" fg:w="46"/><text x="12.9338%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="12.9224%" y="197" width="0.2020%" height="15" fill="rgb(241,83,37)" fg:x="2111" fg:w="33"/><text x="13.2153%" y="207.50"></text></g><g><title>memcpy (181 instructions, 1.11%)</title><rect x="13.1244%" y="197" width="1.1080%" height="15" fill="rgb(233,36,39)" fg:x="2144" fg:w="181"/><text x="13.4174%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (335 instructions, 2.05%)</title><rect x="12.6408%" y="213" width="2.0507%" height="15" fill="rgb(226,3,54)" fg:x="2065" fg:w="335"/><text x="12.9338%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="14.6915%" y="197" width="1.2120%" height="15" fill="rgb(245,192,40)" fg:x="2400" fg:w="198"/><text x="14.9844%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="14.6915%" y="213" width="1.3773%" height="15" fill="rgb(238,167,29)" fg:x="2400" fg:w="225"/><text x="14.9844%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.0688%" y="213" width="0.3673%" height="15" fill="rgb(232,182,51)" fg:x="2625" fg:w="60"/><text x="16.3618%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.4361%" y="197" width="0.3673%" height="15" fill="rgb(231,60,39)" fg:x="2685" fg:w="60"/><text x="16.7291%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="16.8034%" y="197" width="0.2816%" height="15" fill="rgb(208,69,12)" fg:x="2745" fg:w="46"/><text x="17.0963%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="17.0850%" y="197" width="0.0918%" height="15" fill="rgb(235,93,37)" fg:x="2791" fg:w="15"/><text x="17.3779%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="17.1768%" y="181" width="1.2120%" height="15" fill="rgb(213,116,39)" fg:x="2806" fg:w="198"/><text x="17.4698%" y="191.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="17.1768%" y="197" width="1.3773%" height="15" fill="rgb(222,207,29)" fg:x="2806" fg:w="225"/><text x="17.4698%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="18.5541%" y="197" width="0.3673%" height="15" fill="rgb(206,96,30)" fg:x="3031" fg:w="60"/><text x="18.8471%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (55 instructions, 0.34%)</title><rect x="18.9214%" y="181" width="0.3367%" height="15" fill="rgb(218,138,4)" fg:x="3091" fg:w="55"/><text x="19.2144%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (99 instructions, 0.61%)</title><rect x="18.9214%" y="197" width="0.6060%" height="15" fill="rgb(250,191,14)" fg:x="3091" fg:w="99"/><text x="19.2144%" y="207.50"></text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="19.5274%" y="197" width="0.0245%" height="15" fill="rgb(239,60,40)" fg:x="3190" fg:w="4"/><text x="19.8204%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (641 instructions, 3.92%)</title><rect x="16.4361%" y="213" width="3.9238%" height="15" fill="rgb(206,27,48)" fg:x="2685" fg:w="641"/><text x="16.7291%" y="223.50">@de..</text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="20.3599%" y="213" width="0.0245%" height="15" fill="rgb(225,35,8)" fg:x="3326" fg:w="4"/><text x="20.6529%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="20.3844%" y="213" width="0.0918%" height="15" fill="rgb(250,213,24)" fg:x="3330" fg:w="15"/><text x="20.6774%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="20.4762%" y="197" width="0.2020%" height="15" fill="rgb(247,123,22)" fg:x="3345" fg:w="33"/><text x="20.7692%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="20.6783%" y="197" width="0.0918%" height="15" fill="rgb(231,138,38)" fg:x="3378" fg:w="15"/><text x="20.9712%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="20.7701%" y="197" width="0.0979%" height="15" fill="rgb(231,145,46)" fg:x="3393" fg:w="16"/><text x="21.0630%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="20.8680%" y="165" width="4.5666%" height="15" fill="rgb(251,118,11)" fg:x="3409" fg:w="746"/><text x="21.1610%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="25.4346%" y="165" width="0.1408%" height="15" fill="rgb(217,147,25)" fg:x="4155" fg:w="23"/><text x="25.7276%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="25.5754%" y="165" width="0.0918%" height="15" fill="rgb(247,81,37)" fg:x="4178" fg:w="15"/><text x="25.8684%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="25.6672%" y="165" width="0.1408%" height="15" fill="rgb(209,12,38)" fg:x="4193" fg:w="23"/><text x="25.9602%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="20.8680%" y="181" width="5.0869%" height="15" fill="rgb(227,1,9)" fg:x="3409" fg:w="831"/><text x="21.1610%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="25.9549%" y="149" width="0.0918%" height="15" fill="rgb(248,47,43)" fg:x="4240" fg:w="15"/><text x="26.2479%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="25.9549%" y="165" width="0.1592%" height="15" fill="rgb(221,10,30)" fg:x="4240" fg:w="26"/><text x="26.2479%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="26.1141%" y="165" width="0.0918%" height="15" fill="rgb(210,229,1)" fg:x="4266" fg:w="15"/><text x="26.4071%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="26.2059%" y="149" width="0.0979%" height="15" fill="rgb(222,148,37)" fg:x="4281" fg:w="16"/><text x="26.4989%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.3039%" y="149" width="0.1102%" height="15" fill="rgb(234,67,33)" fg:x="4297" fg:w="18"/><text x="26.5968%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.4141%" y="133" width="0.0979%" height="15" fill="rgb(247,98,35)" fg:x="4315" fg:w="16"/><text x="26.7070%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.5120%" y="133" width="0.0979%" height="15" fill="rgb(247,138,52)" fg:x="4331" fg:w="16"/><text x="26.8050%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="26.4141%" y="149" width="0.3489%" height="15" fill="rgb(213,79,30)" fg:x="4315" fg:w="57"/><text x="26.7070%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.7630%" y="149" width="0.1102%" height="15" fill="rgb(246,177,23)" fg:x="4372" fg:w="18"/><text x="27.0559%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.8732%" y="133" width="0.0979%" height="15" fill="rgb(230,62,27)" fg:x="4390" fg:w="16"/><text x="27.1661%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.9711%" y="133" width="0.0979%" height="15" fill="rgb(216,154,8)" fg:x="4406" fg:w="16"/><text x="27.2641%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="26.8732%" y="149" width="0.3428%" height="15" fill="rgb(244,35,45)" fg:x="4390" fg:w="56"/><text x="27.1661%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.2160%" y="149" width="0.1102%" height="15" fill="rgb(251,115,12)" fg:x="4446" fg:w="18"/><text x="27.5089%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.3262%" y="133" width="0.0979%" height="15" fill="rgb(240,54,50)" fg:x="4464" fg:w="16"/><text x="27.6191%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.4241%" y="133" width="0.0979%" height="15" fill="rgb(233,84,52)" fg:x="4480" fg:w="16"/><text x="27.7171%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="27.3262%" y="149" width="0.3489%" height="15" fill="rgb(207,117,47)" fg:x="4464" fg:w="57"/><text x="27.6191%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.6751%" y="149" width="0.1102%" height="15" fill="rgb(249,43,39)" fg:x="4521" fg:w="18"/><text x="27.9680%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.7853%" y="133" width="0.0979%" height="15" fill="rgb(209,38,44)" fg:x="4539" fg:w="16"/><text x="28.0782%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.8832%" y="133" width="0.0979%" height="15" fill="rgb(236,212,23)" fg:x="4555" fg:w="16"/><text x="28.1762%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="27.9811%" y="133" width="0.0979%" height="15" fill="rgb(242,79,21)" fg:x="4571" fg:w="16"/><text x="28.2741%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="28.0791%" y="133" width="0.0979%" height="15" fill="rgb(211,96,35)" fg:x="4587" fg:w="16"/><text x="28.3721%" y="143.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.16%)</title><rect x="28.1770%" y="117" width="4.1565%" height="15" fill="rgb(253,215,40)" fg:x="4603" fg:w="679"/><text x="28.4700%" y="127.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.17%)</title><rect x="28.1770%" y="133" width="4.1748%" height="15" fill="rgb(211,81,21)" fg:x="4603" fg:w="682"/><text x="28.4700%" y="143.50">equa..</text></g><g><title>anon-func-192.5 (781 instructions, 4.78%)</title><rect x="27.7853%" y="149" width="4.7809%" height="15" fill="rgb(208,190,38)" fg:x="4539" fg:w="781"/><text x="28.0782%" y="159.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="32.5661%" y="149" width="0.1102%" height="15" fill="rgb(235,213,38)" fg:x="5320" fg:w="18"/><text x="32.8591%" y="159.50"></text></g><g><title>rec.2 (1,207 instructions, 7.39%)</title><rect x="26.2059%" y="165" width="7.3886%" height="15" fill="rgb(237,122,38)" fg:x="4281" fg:w="1207"/><text x="26.4989%" y="175.50">rec.2</text></g><g><title>get.2 (1,270 instructions, 7.77%)</title><rect x="25.9549%" y="181" width="7.7742%" height="15" fill="rgb(244,218,35)" fg:x="4240" fg:w="1270"/><text x="26.2479%" y="191.50">get.2</text></g><g><title>account_get (2,107 instructions, 12.90%)</title><rect x="20.8680%" y="197" width="12.8979%" height="15" fill="rgb(240,68,47)" fg:x="3409" fg:w="2107"/><text x="21.1610%" y="207.50">account_get</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="33.7659%" y="197" width="0.1102%" height="15" fill="rgb(210,16,53)" fg:x="5516" fg:w="18"/><text x="34.0589%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.8761%" y="197" width="0.0979%" height="15" fill="rgb(235,124,12)" fg:x="5534" fg:w="16"/><text x="34.1691%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.9740%" y="197" width="0.0979%" height="15" fill="rgb(224,169,11)" fg:x="5550" fg:w="16"/><text x="34.2670%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="34.0720%" y="197" width="0.0979%" height="15" fill="rgb(250,166,2)" fg:x="5566" fg:w="16"/><text x="34.3650%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.1699%" y="197" width="0.0979%" height="15" fill="rgb(242,216,29)" fg:x="5582" fg:w="16"/><text x="34.4629%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.2679%" y="197" width="0.0979%" height="15" fill="rgb(230,116,27)" fg:x="5598" fg:w="16"/><text x="34.5608%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="34.3658%" y="197" width="0.1469%" height="15" fill="rgb(228,99,48)" fg:x="5614" fg:w="24"/><text x="34.6588%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (37 instructions, 0.23%)</title><rect x="34.5127%" y="133" width="0.2265%" height="15" fill="rgb(253,11,6)" fg:x="5638" fg:w="37"/><text x="34.8057%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="34.7392%" y="133" width="0.6060%" height="15" fill="rgb(247,143,39)" fg:x="5675" fg:w="99"/><text x="35.0322%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="34.5127%" y="149" width="0.9856%" height="15" fill="rgb(236,97,10)" fg:x="5638" fg:w="161"/><text x="34.8057%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="34.5127%" y="165" width="1.0774%" height="15" fill="rgb(233,208,19)" fg:x="5638" fg:w="176"/><text x="34.8057%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.59%)</title><rect x="35.5901%" y="165" width="0.5938%" height="15" fill="rgb(216,164,2)" fg:x="5814" fg:w="97"/><text x="35.8831%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (30 instructions, 0.18%)</title><rect x="36.1839%" y="165" width="0.1836%" height="15" fill="rgb(220,129,5)" fg:x="5911" fg:w="30"/><text x="36.4769%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.15%)</title><rect x="34.5127%" y="181" width="2.1548%" height="15" fill="rgb(242,17,10)" fg:x="5638" fg:w="352"/><text x="34.8057%" y="191.50">b..</text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="36.6675%" y="165" width="0.0673%" height="15" fill="rgb(242,107,0)" fg:x="5990" fg:w="11"/><text x="36.9605%" y="175.50"></text></g><g><title>mp_cmp (25 instructions, 0.15%)</title><rect x="36.6675%" y="181" width="0.1530%" height="15" fill="rgb(251,28,31)" fg:x="5990" fg:w="25"/><text x="36.9605%" y="191.50"></text></g><g><title>B_lt (417 instructions, 2.55%)</title><rect x="34.5127%" y="197" width="2.5526%" height="15" fill="rgb(233,223,10)" fg:x="5638" fg:w="417"/><text x="34.8057%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="37.0654%" y="197" width="0.0979%" height="15" fill="rgb(215,21,27)" fg:x="6055" fg:w="16"/><text x="37.3583%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (37 instructions, 0.23%)</title><rect x="37.1633%" y="133" width="0.2265%" height="15" fill="rgb(232,23,21)" fg:x="6071" fg:w="37"/><text x="37.4563%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="37.3898%" y="133" width="0.6060%" height="15" fill="rgb(244,5,23)" fg:x="6108" fg:w="99"/><text x="37.6828%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="37.1633%" y="149" width="0.9856%" height="15" fill="rgb(226,81,46)" fg:x="6071" fg:w="161"/><text x="37.4563%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="37.1633%" y="165" width="1.0774%" height="15" fill="rgb(247,70,30)" fg:x="6071" fg:w="176"/><text x="37.4563%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.59%)</title><rect x="38.2407%" y="165" width="0.5938%" height="15" fill="rgb(212,68,19)" fg:x="6247" fg:w="97"/><text x="38.5337%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (30 instructions, 0.18%)</title><rect x="38.8345%" y="165" width="0.1836%" height="15" fill="rgb(240,187,13)" fg:x="6344" fg:w="30"/><text x="39.1274%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.15%)</title><rect x="37.1633%" y="181" width="2.1548%" height="15" fill="rgb(223,113,26)" fg:x="6071" fg:w="352"/><text x="37.4563%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (37 instructions, 0.23%)</title><rect x="39.3181%" y="149" width="0.2265%" height="15" fill="rgb(206,192,2)" fg:x="6423" fg:w="37"/><text x="39.6110%" y="159.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="39.5446%" y="149" width="0.6060%" height="15" fill="rgb(241,108,4)" fg:x="6460" fg:w="99"/><text x="39.8375%" y="159.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="39.3181%" y="165" width="0.9856%" height="15" fill="rgb(247,173,49)" fg:x="6423" fg:w="161"/><text x="39.6110%" y="175.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="39.3181%" y="181" width="1.0774%" height="15" fill="rgb(224,114,35)" fg:x="6423" fg:w="176"/><text x="39.6110%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="40.3954%" y="165" width="0.0673%" height="15" fill="rgb(245,159,27)" fg:x="6599" fg:w="11"/><text x="40.6884%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.13%)</title><rect x="40.4628%" y="149" width="0.1347%" height="15" fill="rgb(245,172,44)" fg:x="6610" fg:w="22"/><text x="40.7558%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.81%)</title><rect x="40.4628%" y="165" width="0.8142%" height="15" fill="rgb(236,23,11)" fg:x="6610" fg:w="133"/><text x="40.7558%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="40.3954%" y="181" width="1.0100%" height="15" fill="rgb(205,117,38)" fg:x="6599" fg:w="165"/><text x="40.6884%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (30 instructions, 0.18%)</title><rect x="41.4055%" y="181" width="0.1836%" height="15" fill="rgb(237,72,25)" fg:x="6764" fg:w="30"/><text x="41.6985%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="41.5891%" y="165" width="1.0162%" height="15" fill="rgb(244,70,9)" fg:x="6794" fg:w="166"/><text x="41.8821%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="41.5891%" y="181" width="1.2182%" height="15" fill="rgb(217,125,39)" fg:x="6794" fg:w="199"/><text x="41.8821%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (37 instructions, 0.23%)</title><rect x="43.3950%" y="133" width="0.2265%" height="15" fill="rgb(235,36,10)" fg:x="7089" fg:w="37"/><text x="43.6879%" y="143.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="43.6214%" y="133" width="0.6060%" height="15" fill="rgb(251,123,47)" fg:x="7126" fg:w="99"/><text x="43.9144%" y="143.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="43.3950%" y="149" width="0.9856%" height="15" fill="rgb(221,13,13)" fg:x="7089" fg:w="161"/><text x="43.6879%" y="159.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="43.3950%" y="165" width="1.0774%" height="15" fill="rgb(238,131,9)" fg:x="7089" fg:w="176"/><text x="43.6879%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.59%)</title><rect x="44.4723%" y="165" width="0.5938%" height="15" fill="rgb(211,50,8)" fg:x="7265" fg:w="97"/><text x="44.7653%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (30 instructions, 0.18%)</title><rect x="45.0661%" y="165" width="0.1836%" height="15" fill="rgb(245,182,24)" fg:x="7362" fg:w="30"/><text x="45.3591%" y="175.50"></text></g><g><title>bigint_of_int64 (352 instructions, 2.15%)</title><rect x="43.3950%" y="181" width="2.1548%" height="15" fill="rgb(242,14,37)" fg:x="7089" fg:w="352"/><text x="43.6879%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::h3fa8b85db842388e (37 instructions, 0.23%)</title><rect x="45.5497%" y="149" width="0.2265%" height="15" fill="rgb(246,228,12)" fg:x="7441" fg:w="37"/><text x="45.8427%" y="159.50"></text></g><g><title>memset (99 instructions, 0.61%)</title><rect x="45.7762%" y="149" width="0.6060%" height="15" fill="rgb(213,55,15)" fg:x="7478" fg:w="99"/><text x="46.0692%" y="159.50"></text></g><g><title>mp_calloc (161 instructions, 0.99%)</title><rect x="45.5497%" y="165" width="0.9856%" height="15" fill="rgb(209,9,3)" fg:x="7441" fg:w="161"/><text x="45.8427%" y="175.50"></text></g><g><title>mp_init (176 instructions, 1.08%)</title><rect x="45.5497%" y="181" width="1.0774%" height="15" fill="rgb(230,59,30)" fg:x="7441" fg:w="176"/><text x="45.8427%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="46.6271%" y="165" width="0.0673%" height="15" fill="rgb(209,121,21)" fg:x="7617" fg:w="11"/><text x="46.9201%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.13%)</title><rect x="46.6944%" y="149" width="0.1347%" height="15" fill="rgb(220,109,13)" fg:x="7628" fg:w="22"/><text x="46.9874%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.81%)</title><rect x="46.6944%" y="165" width="0.8142%" height="15" fill="rgb(232,18,1)" fg:x="7628" fg:w="133"/><text x="46.9874%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="46.6271%" y="181" width="1.0100%" height="15" fill="rgb(215,41,42)" fg:x="7617" fg:w="165"/><text x="46.9201%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::hdabf955071a235c8 (30 instructions, 0.18%)</title><rect x="47.6371%" y="181" width="0.1836%" height="15" fill="rgb(224,123,36)" fg:x="7782" fg:w="30"/><text x="47.9301%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="47.8208%" y="165" width="1.0162%" height="15" fill="rgb(240,125,3)" fg:x="7812" fg:w="166"/><text x="48.1137%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="47.8208%" y="181" width="1.2182%" height="15" fill="rgb(205,98,50)" fg:x="7812" fg:w="199"/><text x="48.1137%" y="191.50"></text></g><g><title>B_sub (2,036 instructions, 12.46%)</title><rect x="37.1633%" y="197" width="12.4633%" height="15" fill="rgb(205,185,37)" fg:x="6071" fg:w="2036"/><text x="37.4563%" y="207.50">B_sub</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="49.6266%" y="197" width="0.0918%" height="15" fill="rgb(238,207,15)" fg:x="8107" fg:w="15"/><text x="49.9196%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="49.7184%" y="165" width="4.5666%" height="15" fill="rgb(213,199,42)" fg:x="8122" fg:w="746"/><text x="50.0114%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="54.2850%" y="165" width="0.1408%" height="15" fill="rgb(235,201,11)" fg:x="8868" fg:w="23"/><text x="54.5780%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="54.4258%" y="165" width="0.0918%" height="15" fill="rgb(207,46,11)" fg:x="8891" fg:w="15"/><text x="54.7188%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="54.5176%" y="165" width="0.1408%" height="15" fill="rgb(241,35,35)" fg:x="8906" fg:w="23"/><text x="54.8106%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="49.7184%" y="181" width="5.0869%" height="15" fill="rgb(243,32,47)" fg:x="8122" fg:w="831"/><text x="50.0114%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="54.8053%" y="165" width="0.1102%" height="15" fill="rgb(247,202,23)" fg:x="8953" fg:w="18"/><text x="55.0983%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="54.9155%" y="165" width="0.0918%" height="15" fill="rgb(219,102,11)" fg:x="8971" fg:w="15"/><text x="55.2085%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.0073%" y="165" width="0.0918%" height="15" fill="rgb(243,110,44)" fg:x="8986" fg:w="15"/><text x="55.3003%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.0992%" y="149" width="0.0918%" height="15" fill="rgb(222,74,54)" fg:x="9001" fg:w="15"/><text x="55.3921%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="55.0992%" y="165" width="0.1592%" height="15" fill="rgb(216,99,12)" fg:x="9001" fg:w="26"/><text x="55.3921%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="55.2583%" y="149" width="0.0979%" height="15" fill="rgb(226,22,26)" fg:x="9027" fg:w="16"/><text x="55.5513%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.3563%" y="133" width="0.0918%" height="15" fill="rgb(217,163,10)" fg:x="9043" fg:w="15"/><text x="55.6492%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.4481%" y="133" width="0.0918%" height="15" fill="rgb(213,25,53)" fg:x="9058" fg:w="15"/><text x="55.7411%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.5399%" y="133" width="0.0918%" height="15" fill="rgb(252,105,26)" fg:x="9073" fg:w="15"/><text x="55.8329%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="55.6317%" y="117" width="0.1102%" height="15" fill="rgb(220,39,43)" fg:x="9088" fg:w="18"/><text x="55.9247%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.7419%" y="101" width="0.0979%" height="15" fill="rgb(229,68,48)" fg:x="9106" fg:w="16"/><text x="56.0349%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.8399%" y="101" width="0.0979%" height="15" fill="rgb(252,8,32)" fg:x="9122" fg:w="16"/><text x="56.1328%" y="111.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="55.7419%" y="117" width="0.3489%" height="15" fill="rgb(223,20,43)" fg:x="9106" fg:w="57"/><text x="56.0349%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.0908%" y="101" width="0.1102%" height="15" fill="rgb(229,81,49)" fg:x="9163" fg:w="18"/><text x="56.3838%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.2010%" y="85" width="0.0979%" height="15" fill="rgb(236,28,36)" fg:x="9181" fg:w="16"/><text x="56.4940%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.2990%" y="85" width="0.0979%" height="15" fill="rgb(249,185,26)" fg:x="9197" fg:w="16"/><text x="56.5919%" y="95.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="56.2010%" y="101" width="0.3428%" height="15" fill="rgb(249,174,33)" fg:x="9181" fg:w="56"/><text x="56.4940%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.5438%" y="85" width="0.1102%" height="15" fill="rgb(233,201,37)" fg:x="9237" fg:w="18"/><text x="56.8368%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.6540%" y="69" width="0.0979%" height="15" fill="rgb(221,78,26)" fg:x="9255" fg:w="16"/><text x="56.9470%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.7520%" y="69" width="0.0979%" height="15" fill="rgb(250,127,30)" fg:x="9271" fg:w="16"/><text x="57.0449%" y="79.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="56.6540%" y="85" width="0.3489%" height="15" fill="rgb(230,49,44)" fg:x="9255" fg:w="57"/><text x="56.9470%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="57.0029%" y="69" width="0.1102%" height="15" fill="rgb(229,67,23)" fg:x="9312" fg:w="18"/><text x="57.2959%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.1131%" y="53" width="0.0979%" height="15" fill="rgb(249,83,47)" fg:x="9330" fg:w="16"/><text x="57.4061%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.2111%" y="53" width="0.0979%" height="15" fill="rgb(215,43,3)" fg:x="9346" fg:w="16"/><text x="57.5040%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.3090%" y="53" width="0.0979%" height="15" fill="rgb(238,154,13)" fg:x="9362" fg:w="16"/><text x="57.6020%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.4070%" y="53" width="0.0979%" height="15" fill="rgb(219,56,2)" fg:x="9378" fg:w="16"/><text x="57.6999%" y="63.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.16%)</title><rect x="57.5049%" y="37" width="4.1565%" height="15" fill="rgb(233,0,4)" fg:x="9394" fg:w="679"/><text x="57.7979%" y="47.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.17%)</title><rect x="57.5049%" y="53" width="4.1748%" height="15" fill="rgb(235,30,7)" fg:x="9394" fg:w="682"/><text x="57.7979%" y="63.50">equa..</text></g><g><title>anon-func-192.5 (781 instructions, 4.78%)</title><rect x="57.1131%" y="69" width="4.7809%" height="15" fill="rgb(250,79,13)" fg:x="9330" fg:w="781"/><text x="57.4061%" y="79.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="61.8940%" y="69" width="0.1102%" height="15" fill="rgb(211,146,34)" fg:x="10111" fg:w="18"/><text x="62.1869%" y="79.50"></text></g><g><title>del (858 instructions, 5.25%)</title><rect x="57.0029%" y="85" width="5.2522%" height="15" fill="rgb(228,22,38)" fg:x="9312" fg:w="858"/><text x="57.2959%" y="95.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.2551%" y="85" width="0.1408%" height="15" fill="rgb(235,168,5)" fg:x="10170" fg:w="23"/><text x="62.5481%" y="95.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.3959%" y="85" width="0.1102%" height="15" fill="rgb(221,155,16)" fg:x="10193" fg:w="18"/><text x="62.6889%" y="95.50"></text></g><g><title>del (1,036 instructions, 6.34%)</title><rect x="56.5438%" y="101" width="6.3418%" height="15" fill="rgb(215,215,53)" fg:x="9237" fg:w="1036"/><text x="56.8368%" y="111.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.8857%" y="101" width="0.1408%" height="15" fill="rgb(223,4,10)" fg:x="10273" fg:w="23"/><text x="63.1786%" y="111.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.0264%" y="101" width="0.1102%" height="15" fill="rgb(234,103,6)" fg:x="10296" fg:w="18"/><text x="63.3194%" y="111.50"></text></g><g><title>del (1,213 instructions, 7.43%)</title><rect x="56.0908%" y="117" width="7.4253%" height="15" fill="rgb(227,97,0)" fg:x="9163" fg:w="1213"/><text x="56.3838%" y="127.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="63.5162%" y="117" width="0.1408%" height="15" fill="rgb(234,150,53)" fg:x="10376" fg:w="23"/><text x="63.8091%" y="127.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.6570%" y="117" width="0.1102%" height="15" fill="rgb(228,201,54)" fg:x="10399" fg:w="18"/><text x="63.9499%" y="127.50"></text></g><g><title>del (1,391 instructions, 8.51%)</title><rect x="55.6317%" y="133" width="8.5149%" height="15" fill="rgb(222,22,37)" fg:x="9088" fg:w="1391"/><text x="55.9247%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="64.1467%" y="133" width="0.1102%" height="15" fill="rgb(237,53,32)" fg:x="10479" fg:w="18"/><text x="64.4396%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.2569%" y="133" width="0.1408%" height="15" fill="rgb(233,25,53)" fg:x="10497" fg:w="23"/><text x="64.5498%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.3976%" y="133" width="0.1408%" height="15" fill="rgb(210,40,34)" fg:x="10520" fg:w="23"/><text x="64.6906%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="64.5384%" y="133" width="0.1102%" height="15" fill="rgb(241,220,44)" fg:x="10543" fg:w="18"/><text x="64.8314%" y="143.50"></text></g><g><title>replace (1,577 instructions, 9.65%)</title><rect x="55.3563%" y="149" width="9.6535%" height="15" fill="rgb(235,28,35)" fg:x="9043" fg:w="1577"/><text x="55.6492%" y="159.50">replace</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.0098%" y="117" width="0.1102%" height="15" fill="rgb(210,56,17)" fg:x="10620" fg:w="18"/><text x="65.3028%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.1200%" y="117" width="0.0612%" height="15" fill="rgb(224,130,29)" fg:x="10638" fg:w="10"/><text x="65.4129%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.1812%" y="117" width="0.1469%" height="15" fill="rgb(235,212,8)" fg:x="10648" fg:w="24"/><text x="65.4742%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.3281%" y="117" width="0.1102%" height="15" fill="rgb(223,33,50)" fg:x="10672" fg:w="18"/><text x="65.6211%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.4383%" y="117" width="0.0612%" height="15" fill="rgb(219,149,13)" fg:x="10690" fg:w="10"/><text x="65.7313%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.4995%" y="117" width="0.1469%" height="15" fill="rgb(250,156,29)" fg:x="10700" fg:w="24"/><text x="65.7925%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.6464%" y="117" width="0.1102%" height="15" fill="rgb(216,193,19)" fg:x="10724" fg:w="18"/><text x="65.9394%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.7566%" y="117" width="0.0612%" height="15" fill="rgb(216,135,14)" fg:x="10742" fg:w="10"/><text x="66.0496%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.8178%" y="117" width="0.1469%" height="15" fill="rgb(241,47,5)" fg:x="10752" fg:w="24"/><text x="66.1108%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.9647%" y="117" width="0.1102%" height="15" fill="rgb(233,42,35)" fg:x="10776" fg:w="18"/><text x="66.2577%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="66.0749%" y="117" width="0.0612%" height="15" fill="rgb(231,13,6)" fg:x="10794" fg:w="10"/><text x="66.3679%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="66.1361%" y="117" width="0.1469%" height="15" fill="rgb(207,181,40)" fg:x="10804" fg:w="24"/><text x="66.4291%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="66.2831%" y="117" width="0.0245%" height="15" fill="rgb(254,173,49)" fg:x="10828" fg:w="4"/><text x="66.5760%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="66.3075%" y="117" width="0.0245%" height="15" fill="rgb(221,1,38)" fg:x="10832" fg:w="4"/><text x="66.6005%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="66.3320%" y="117" width="0.0918%" height="15" fill="rgb(206,124,46)" fg:x="10836" fg:w="15"/><text x="66.6250%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="66.4238%" y="117" width="0.0918%" height="15" fill="rgb(249,21,11)" fg:x="10851" fg:w="15"/><text x="66.7168%" y="127.50"></text></g><g><title>rec (417 instructions, 2.55%)</title><rect x="65.0098%" y="133" width="2.5526%" height="15" fill="rgb(222,201,40)" fg:x="10620" fg:w="417"/><text x="65.3028%" y="143.50">r..</text></g><g><title>leaf (421 instructions, 2.58%)</title><rect x="65.0098%" y="149" width="2.5771%" height="15" fill="rgb(235,61,29)" fg:x="10620" fg:w="421"/><text x="65.3028%" y="159.50">l..</text></g><g><title>recursiveReplace (2,067 instructions, 12.65%)</title><rect x="55.2583%" y="165" width="12.6530%" height="15" fill="rgb(219,207,3)" fg:x="9027" fg:w="2067"/><text x="55.5513%" y="175.50">recursiveReplace</text></g><g><title>put.1 (2,207 instructions, 13.51%)</title><rect x="54.8053%" y="181" width="13.5100%" height="15" fill="rgb(222,56,46)" fg:x="8953" fg:w="2207"/><text x="55.0983%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="68.3154%" y="181" width="0.1408%" height="15" fill="rgb(239,76,54)" fg:x="11160" fg:w="23"/><text x="68.6083%" y="191.50"></text></g><g><title>account_put (3,074 instructions, 18.82%)</title><rect x="49.7184%" y="197" width="18.8173%" height="15" fill="rgb(231,124,27)" fg:x="8122" fg:w="3074"/><text x="50.0114%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="68.5357%" y="197" width="0.0979%" height="15" fill="rgb(249,195,6)" fg:x="11196" fg:w="16"/><text x="68.8287%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="68.6337%" y="165" width="4.5666%" height="15" fill="rgb(237,174,47)" fg:x="11212" fg:w="746"/><text x="68.9267%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="73.2003%" y="165" width="0.1408%" height="15" fill="rgb(206,201,31)" fg:x="11958" fg:w="23"/><text x="73.4933%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="73.3411%" y="165" width="0.0918%" height="15" fill="rgb(231,57,52)" fg:x="11981" fg:w="15"/><text x="73.6341%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="73.4329%" y="165" width="0.1408%" height="15" fill="rgb(248,177,22)" fg:x="11996" fg:w="23"/><text x="73.7259%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="68.6337%" y="181" width="5.0869%" height="15" fill="rgb(215,211,37)" fg:x="11212" fg:w="831"/><text x="68.9267%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.7206%" y="149" width="0.0918%" height="15" fill="rgb(241,128,51)" fg:x="12043" fg:w="15"/><text x="74.0136%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="73.7206%" y="165" width="0.1592%" height="15" fill="rgb(227,165,31)" fg:x="12043" fg:w="26"/><text x="74.0136%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.8798%" y="165" width="0.0918%" height="15" fill="rgb(228,167,24)" fg:x="12069" fg:w="15"/><text x="74.1727%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="73.9716%" y="149" width="0.0979%" height="15" fill="rgb(228,143,12)" fg:x="12084" fg:w="16"/><text x="74.2646%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.0695%" y="149" width="0.1102%" height="15" fill="rgb(249,149,8)" fg:x="12100" fg:w="18"/><text x="74.3625%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.1797%" y="133" width="0.0979%" height="15" fill="rgb(243,35,44)" fg:x="12118" fg:w="16"/><text x="74.4727%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.2777%" y="133" width="0.0979%" height="15" fill="rgb(246,89,9)" fg:x="12134" fg:w="16"/><text x="74.5706%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="74.1797%" y="149" width="0.3428%" height="15" fill="rgb(233,213,13)" fg:x="12118" fg:w="56"/><text x="74.4727%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.5225%" y="149" width="0.1102%" height="15" fill="rgb(233,141,41)" fg:x="12174" fg:w="18"/><text x="74.8155%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.6327%" y="133" width="0.0979%" height="15" fill="rgb(239,167,4)" fg:x="12192" fg:w="16"/><text x="74.9257%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.7307%" y="133" width="0.0979%" height="15" fill="rgb(209,217,16)" fg:x="12208" fg:w="16"/><text x="75.0236%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="74.6327%" y="149" width="0.3489%" height="15" fill="rgb(219,88,35)" fg:x="12192" fg:w="57"/><text x="74.9257%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.9816%" y="149" width="0.1102%" height="15" fill="rgb(220,193,23)" fg:x="12249" fg:w="18"/><text x="75.2746%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.0918%" y="133" width="0.0979%" height="15" fill="rgb(230,90,52)" fg:x="12267" fg:w="16"/><text x="75.3848%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.1898%" y="133" width="0.0979%" height="15" fill="rgb(252,106,19)" fg:x="12283" fg:w="16"/><text x="75.4827%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="75.0918%" y="149" width="0.3428%" height="15" fill="rgb(206,74,20)" fg:x="12267" fg:w="56"/><text x="75.3848%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="75.4346%" y="149" width="0.1102%" height="15" fill="rgb(230,138,44)" fg:x="12323" fg:w="18"/><text x="75.7276%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.5448%" y="133" width="0.0979%" height="15" fill="rgb(235,182,43)" fg:x="12341" fg:w="16"/><text x="75.8378%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.6428%" y="133" width="0.0979%" height="15" fill="rgb(242,16,51)" fg:x="12357" fg:w="16"/><text x="75.9357%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="75.5448%" y="149" width="0.3489%" height="15" fill="rgb(248,9,4)" fg:x="12341" fg:w="57"/><text x="75.8378%" y="159.50"></text></g><g><title>rec.2 (480 instructions, 2.94%)</title><rect x="73.9716%" y="165" width="2.9383%" height="15" fill="rgb(210,31,22)" fg:x="12084" fg:w="480"/><text x="74.2646%" y="175.50">re..</text></g><g><title>get.2 (543 instructions, 3.32%)</title><rect x="73.7206%" y="181" width="3.3239%" height="15" fill="rgb(239,54,39)" fg:x="12043" fg:w="543"/><text x="74.0136%" y="191.50">ge..</text></g><g><title>account_get (1,380 instructions, 8.45%)</title><rect x="68.6337%" y="197" width="8.4476%" height="15" fill="rgb(230,99,41)" fg:x="11212" fg:w="1380"/><text x="68.9267%" y="207.50">account_get</text></g><g><title>get.1 (7 instructions, 0.04%)</title><rect x="77.0813%" y="197" width="0.0429%" height="15" fill="rgb(253,106,12)" fg:x="12592" fg:w="7"/><text x="77.3743%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.1241%" y="197" width="0.0979%" height="15" fill="rgb(213,46,41)" fg:x="12599" fg:w="16"/><text x="77.4171%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="77.2221%" y="197" width="0.1469%" height="15" fill="rgb(215,133,35)" fg:x="12615" fg:w="24"/><text x="77.5151%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.3690%" y="197" width="0.0979%" height="15" fill="rgb(213,28,5)" fg:x="12639" fg:w="16"/><text x="77.6620%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="77.4669%" y="197" width="0.0918%" height="15" fill="rgb(215,77,49)" fg:x="12655" fg:w="15"/><text x="77.7599%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="77.5588%" y="165" width="4.5666%" height="15" fill="rgb(248,100,22)" fg:x="12670" fg:w="746"/><text x="77.8517%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="82.1254%" y="165" width="0.1408%" height="15" fill="rgb(208,67,9)" fg:x="13416" fg:w="23"/><text x="82.4183%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="82.2662%" y="165" width="0.0918%" height="15" fill="rgb(219,133,21)" fg:x="13439" fg:w="15"/><text x="82.5591%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="82.3580%" y="165" width="0.1408%" height="15" fill="rgb(246,46,29)" fg:x="13454" fg:w="23"/><text x="82.6510%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="77.5588%" y="181" width="5.0869%" height="15" fill="rgb(246,185,52)" fg:x="12670" fg:w="831"/><text x="77.8517%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="82.6457%" y="165" width="0.1102%" height="15" fill="rgb(252,136,11)" fg:x="13501" fg:w="18"/><text x="82.9387%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.7559%" y="165" width="0.0918%" height="15" fill="rgb(219,138,53)" fg:x="13519" fg:w="15"/><text x="83.0488%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.8477%" y="165" width="0.0918%" height="15" fill="rgb(211,51,23)" fg:x="13534" fg:w="15"/><text x="83.1407%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="82.9395%" y="149" width="0.0918%" height="15" fill="rgb(247,221,28)" fg:x="13549" fg:w="15"/><text x="83.2325%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="82.9395%" y="165" width="0.1592%" height="15" fill="rgb(251,222,45)" fg:x="13549" fg:w="26"/><text x="83.2325%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="83.0987%" y="149" width="0.0979%" height="15" fill="rgb(217,162,53)" fg:x="13575" fg:w="16"/><text x="83.3916%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.1966%" y="133" width="0.0918%" height="15" fill="rgb(229,93,14)" fg:x="13591" fg:w="15"/><text x="83.4896%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.2884%" y="133" width="0.0918%" height="15" fill="rgb(209,67,49)" fg:x="13606" fg:w="15"/><text x="83.5814%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="83.3803%" y="133" width="0.0918%" height="15" fill="rgb(213,87,29)" fg:x="13621" fg:w="15"/><text x="83.6732%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.4721%" y="117" width="0.1102%" height="15" fill="rgb(205,151,52)" fg:x="13636" fg:w="18"/><text x="83.7651%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.5823%" y="101" width="0.0979%" height="15" fill="rgb(253,215,39)" fg:x="13654" fg:w="16"/><text x="83.8752%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.6802%" y="101" width="0.0979%" height="15" fill="rgb(221,220,41)" fg:x="13670" fg:w="16"/><text x="83.9732%" y="111.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="83.5823%" y="117" width="0.3428%" height="15" fill="rgb(218,133,21)" fg:x="13654" fg:w="56"/><text x="83.8752%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.9251%" y="101" width="0.1102%" height="15" fill="rgb(221,193,43)" fg:x="13710" fg:w="18"/><text x="84.2180%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.0353%" y="85" width="0.0979%" height="15" fill="rgb(240,128,52)" fg:x="13728" fg:w="16"/><text x="84.3282%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.1332%" y="85" width="0.0979%" height="15" fill="rgb(253,114,12)" fg:x="13744" fg:w="16"/><text x="84.4262%" y="95.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="84.0353%" y="101" width="0.3489%" height="15" fill="rgb(215,223,47)" fg:x="13728" fg:w="57"/><text x="84.3282%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.3842%" y="85" width="0.1102%" height="15" fill="rgb(248,225,23)" fg:x="13785" fg:w="18"/><text x="84.6772%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.4944%" y="69" width="0.0979%" height="15" fill="rgb(250,108,0)" fg:x="13803" fg:w="16"/><text x="84.7873%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.5923%" y="69" width="0.0979%" height="15" fill="rgb(228,208,7)" fg:x="13819" fg:w="16"/><text x="84.8853%" y="79.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="84.4944%" y="85" width="0.3428%" height="15" fill="rgb(244,45,10)" fg:x="13803" fg:w="56"/><text x="84.7873%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.8372%" y="69" width="0.1102%" height="15" fill="rgb(207,125,25)" fg:x="13859" fg:w="18"/><text x="85.1301%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.9474%" y="53" width="0.0979%" height="15" fill="rgb(210,195,18)" fg:x="13877" fg:w="16"/><text x="85.2403%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="85.0453%" y="53" width="0.0979%" height="15" fill="rgb(249,80,12)" fg:x="13893" fg:w="16"/><text x="85.3383%" y="63.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="84.9474%" y="69" width="0.3489%" height="15" fill="rgb(221,65,9)" fg:x="13877" fg:w="57"/><text x="85.2403%" y="79.50"></text></g><g><title>del (27 instructions, 0.17%)</title><rect x="85.2963%" y="69" width="0.1653%" height="15" fill="rgb(235,49,36)" fg:x="13934" fg:w="27"/><text x="85.5892%" y="79.50"></text></g><g><title>del (154 instructions, 0.94%)</title><rect x="84.8372%" y="85" width="0.9427%" height="15" fill="rgb(225,32,20)" fg:x="13859" fg:w="154"/><text x="85.1301%" y="95.50"></text></g><g><title>del (280 instructions, 1.71%)</title><rect x="84.3842%" y="101" width="1.7140%" height="15" fill="rgb(215,141,46)" fg:x="13785" fg:w="280"/><text x="84.6772%" y="111.50"></text></g><g><title>del (407 instructions, 2.49%)</title><rect x="83.9251%" y="117" width="2.4914%" height="15" fill="rgb(250,160,47)" fg:x="13710" fg:w="407"/><text x="84.2180%" y="127.50">d..</text></g><g><title>del (533 instructions, 3.26%)</title><rect x="83.4721%" y="133" width="3.2627%" height="15" fill="rgb(216,222,40)" fg:x="13636" fg:w="533"/><text x="83.7651%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="86.7348%" y="133" width="0.1102%" height="15" fill="rgb(234,217,39)" fg:x="14169" fg:w="18"/><text x="87.0278%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.8450%" y="133" width="0.1408%" height="15" fill="rgb(207,178,40)" fg:x="14187" fg:w="23"/><text x="87.1380%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.9858%" y="133" width="0.1408%" height="15" fill="rgb(221,136,13)" fg:x="14210" fg:w="23"/><text x="87.2788%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="87.1266%" y="133" width="0.1102%" height="15" fill="rgb(249,199,10)" fg:x="14233" fg:w="18"/><text x="87.4196%" y="143.50"></text></g><g><title>replace (719 instructions, 4.40%)</title><rect x="83.1966%" y="149" width="4.4013%" height="15" fill="rgb(249,222,13)" fg:x="13591" fg:w="719"/><text x="83.4896%" y="159.50">repl..</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.5979%" y="117" width="0.1102%" height="15" fill="rgb(244,185,38)" fg:x="14310" fg:w="18"/><text x="87.8909%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.7081%" y="117" width="0.0612%" height="15" fill="rgb(236,202,9)" fg:x="14328" fg:w="10"/><text x="88.0011%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="87.7693%" y="117" width="0.1469%" height="15" fill="rgb(250,229,37)" fg:x="14338" fg:w="24"/><text x="88.0623%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.9163%" y="117" width="0.1102%" height="15" fill="rgb(206,174,23)" fg:x="14362" fg:w="18"/><text x="88.2092%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.0264%" y="117" width="0.0612%" height="15" fill="rgb(211,33,43)" fg:x="14380" fg:w="10"/><text x="88.3194%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.0877%" y="117" width="0.1469%" height="15" fill="rgb(245,58,50)" fg:x="14390" fg:w="24"/><text x="88.3806%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.2346%" y="117" width="0.1102%" height="15" fill="rgb(244,68,36)" fg:x="14414" fg:w="18"/><text x="88.5275%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.3448%" y="117" width="0.0612%" height="15" fill="rgb(232,229,15)" fg:x="14432" fg:w="10"/><text x="88.6377%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.4060%" y="117" width="0.1469%" height="15" fill="rgb(254,30,23)" fg:x="14442" fg:w="24"/><text x="88.6989%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.5529%" y="117" width="0.1102%" height="15" fill="rgb(235,160,14)" fg:x="14466" fg:w="18"/><text x="88.8459%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.6631%" y="117" width="0.0612%" height="15" fill="rgb(212,155,44)" fg:x="14484" fg:w="10"/><text x="88.9560%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.7243%" y="117" width="0.1469%" height="15" fill="rgb(226,2,50)" fg:x="14494" fg:w="24"/><text x="89.0173%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.8712%" y="117" width="0.1102%" height="15" fill="rgb(234,177,6)" fg:x="14518" fg:w="18"/><text x="89.1642%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.9814%" y="117" width="0.0612%" height="15" fill="rgb(217,24,9)" fg:x="14536" fg:w="10"/><text x="89.2744%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="89.0426%" y="117" width="0.1469%" height="15" fill="rgb(220,13,46)" fg:x="14546" fg:w="24"/><text x="89.3356%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="89.1895%" y="117" width="0.0245%" height="15" fill="rgb(239,221,27)" fg:x="14570" fg:w="4"/><text x="89.4825%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="89.2140%" y="117" width="0.0245%" height="15" fill="rgb(222,198,25)" fg:x="14574" fg:w="4"/><text x="89.5070%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="89.2385%" y="117" width="0.0918%" height="15" fill="rgb(211,99,13)" fg:x="14578" fg:w="15"/><text x="89.5315%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="89.3303%" y="117" width="0.0918%" height="15" fill="rgb(232,111,31)" fg:x="14593" fg:w="15"/><text x="89.6233%" y="127.50"></text></g><g><title>rec (498 instructions, 3.05%)</title><rect x="87.5979%" y="133" width="3.0485%" height="15" fill="rgb(245,82,37)" fg:x="14310" fg:w="498"/><text x="87.8909%" y="143.50">rec</text></g><g><title>leaf (502 instructions, 3.07%)</title><rect x="87.5979%" y="149" width="3.0730%" height="15" fill="rgb(227,149,46)" fg:x="14310" fg:w="502"/><text x="87.8909%" y="159.50">le..</text></g><g><title>recursiveReplace (1,290 instructions, 7.90%)</title><rect x="83.0987%" y="165" width="7.8967%" height="15" fill="rgb(218,36,50)" fg:x="13575" fg:w="1290"/><text x="83.3916%" y="175.50">recursive..</text></g><g><title>put.1 (1,430 instructions, 8.75%)</title><rect x="82.6457%" y="181" width="8.7537%" height="15" fill="rgb(226,80,48)" fg:x="13501" fg:w="1430"/><text x="82.9387%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="91.3994%" y="181" width="0.1408%" height="15" fill="rgb(238,224,15)" fg:x="14931" fg:w="23"/><text x="91.6923%" y="191.50"></text></g><g><title>account_put (2,297 instructions, 14.06%)</title><rect x="77.5588%" y="197" width="14.0610%" height="15" fill="rgb(241,136,10)" fg:x="12670" fg:w="2297"/><text x="77.8517%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="91.6197%" y="181" width="0.2020%" height="15" fill="rgb(208,32,45)" fg:x="14967" fg:w="33"/><text x="91.9127%" y="191.50"></text></g><g><title>memcpy (76 instructions, 0.47%)</title><rect x="91.8217%" y="181" width="0.4652%" height="15" fill="rgb(207,135,9)" fg:x="15000" fg:w="76"/><text x="92.1147%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hea4ad5c01bb8a8f5 (33 instructions, 0.20%)</title><rect x="92.2870%" y="181" width="0.2020%" height="15" fill="rgb(206,86,44)" fg:x="15076" fg:w="33"/><text x="92.5799%" y="191.50"></text></g><g><title>leb128_encode (9 instructions, 0.06%)</title><rect x="92.4890%" y="181" width="0.0551%" height="15" fill="rgb(245,177,15)" fg:x="15109" fg:w="9"/><text x="92.7820%" y="191.50"></text></g><g><title>reply_with_data (43 instructions, 0.26%)</title><rect x="92.5441%" y="181" width="0.2632%" height="15" fill="rgb(206,64,50)" fg:x="15118" fg:w="43"/><text x="92.8370%" y="191.50"></text></g><g><title>$lambda.35 (300 instructions, 1.84%)</title><rect x="91.6197%" y="197" width="1.8364%" height="15" fill="rgb(234,36,40)" fg:x="14967" fg:w="300"/><text x="91.9127%" y="207.50"></text></g><g><title>$lambda.2 (12,048 instructions, 73.75%)</title><rect x="20.4762%" y="213" width="73.7512%" height="15" fill="rgb(213,64,8)" fg:x="3345" fg:w="12048"/><text x="20.7692%" y="223.50">$lambda.2</text></g><g><title>schedule_copying_gc (45 instructions, 0.28%)</title><rect x="94.2275%" y="213" width="0.2755%" height="15" fill="rgb(210,75,36)" fg:x="15393" fg:w="45"/><text x="94.5204%" y="223.50"></text></g><g><title>trans_state4 (13 instructions, 0.08%)</title><rect x="94.5029%" y="213" width="0.0796%" height="15" fill="rgb(229,88,21)" fg:x="15438" fg:w="13"/><text x="94.7959%" y="223.50"></text></g><g><title>all (16,336 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(252,204,47)" fg:x="0" fg:w="16336"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (16,336 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(208,77,27)" fg:x="0" fg:w="16336"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>