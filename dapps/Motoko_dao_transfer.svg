<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.transfer</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="16312"><g><title>trans_state5 (8 instructions, 0.05%)</title><rect x="0.0000%" y="213" width="0.0490%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2930%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="0.0490%" y="213" width="0.2023%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="33"/><text x="0.3420%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="0.2513%" y="197" width="0.2820%" height="15" fill="rgb(221,193,54)" fg:x="41" fg:w="46"/><text x="0.5443%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="0.5333%" y="197" width="0.2023%" height="15" fill="rgb(248,212,6)" fg:x="87" fg:w="33"/><text x="0.8263%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="0.7357%" y="197" width="0.3678%" height="15" fill="rgb(208,68,35)" fg:x="120" fg:w="60"/><text x="1.0286%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="1.1035%" y="197" width="0.2820%" height="15" fill="rgb(232,128,0)" fg:x="180" fg:w="46"/><text x="1.3965%" y="207.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="1.3855%" y="197" width="0.7479%" height="15" fill="rgb(207,160,47)" fg:x="226" fg:w="122"/><text x="1.6785%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="2.1334%" y="197" width="0.3678%" height="15" fill="rgb(228,23,34)" fg:x="348" fg:w="60"/><text x="2.4264%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="2.5012%" y="197" width="1.2138%" height="15" fill="rgb(218,30,26)" fg:x="408" fg:w="198"/><text x="2.7942%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="3.7151%" y="197" width="0.3678%" height="15" fill="rgb(220,122,19)" fg:x="606" fg:w="60"/><text x="4.0080%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="4.0829%" y="197" width="0.3678%" height="15" fill="rgb(250,228,42)" fg:x="666" fg:w="60"/><text x="4.3759%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="4.4507%" y="197" width="0.2820%" height="15" fill="rgb(240,193,28)" fg:x="726" fg:w="46"/><text x="4.7437%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="4.7327%" y="197" width="1.2138%" height="15" fill="rgb(216,20,37)" fg:x="772" fg:w="198"/><text x="5.0257%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="5.9465%" y="197" width="0.3678%" height="15" fill="rgb(206,188,39)" fg:x="970" fg:w="60"/><text x="6.2395%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.3144%" y="197" width="0.3678%" height="15" fill="rgb(217,207,13)" fg:x="1030" fg:w="60"/><text x="6.6073%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="6.6822%" y="197" width="0.3678%" height="15" fill="rgb(231,73,38)" fg:x="1090" fg:w="60"/><text x="6.9752%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="7.0500%" y="197" width="0.2820%" height="15" fill="rgb(225,20,46)" fg:x="1150" fg:w="46"/><text x="7.3430%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="7.3320%" y="197" width="0.3678%" height="15" fill="rgb(210,31,41)" fg:x="1196" fg:w="60"/><text x="7.6250%" y="207.50"></text></g><g><title>parse_idl_header (1,572 instructions, 9.64%)</title><rect x="0.2513%" y="213" width="9.6371%" height="15" fill="rgb(221,200,47)" fg:x="41" fg:w="1572"/><text x="0.5443%" y="223.50">parse_idl_h..</text></g><g><title>memset (3 instructions, 0.02%)</title><rect x="9.8884%" y="197" width="0.0184%" height="15" fill="rgb(226,26,5)" fg:x="1613" fg:w="3"/><text x="10.1814%" y="207.50"></text></g><g><title>idl_sub_buf_init (6 instructions, 0.04%)</title><rect x="9.8884%" y="213" width="0.0368%" height="15" fill="rgb(249,33,26)" fg:x="1613" fg:w="6"/><text x="10.1814%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="9.9252%" y="213" width="0.2820%" height="15" fill="rgb(235,183,28)" fg:x="1619" fg:w="46"/><text x="10.2182%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.2072%" y="213" width="0.3678%" height="15" fill="rgb(221,5,38)" fg:x="1665" fg:w="60"/><text x="10.5002%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="10.5750%" y="213" width="0.3678%" height="15" fill="rgb(247,18,42)" fg:x="1725" fg:w="60"/><text x="10.8680%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="10.9429%" y="213" width="0.2820%" height="15" fill="rgb(241,131,45)" fg:x="1785" fg:w="46"/><text x="11.2358%" y="223.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="11.2249%" y="213" width="0.0920%" height="15" fill="rgb(249,31,29)" fg:x="1831" fg:w="15"/><text x="11.5178%" y="223.50"></text></g><g><title>leb128_decode (122 instructions, 0.75%)</title><rect x="11.3168%" y="197" width="0.7479%" height="15" fill="rgb(225,111,53)" fg:x="1846" fg:w="122"/><text x="11.6098%" y="207.50"></text></g><g><title>find_field (149 instructions, 0.91%)</title><rect x="11.3168%" y="213" width="0.9134%" height="15" fill="rgb(238,160,17)" fg:x="1846" fg:w="149"/><text x="11.6098%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="12.2303%" y="213" width="0.3678%" height="15" fill="rgb(214,148,48)" fg:x="1995" fg:w="60"/><text x="12.5232%" y="223.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="12.5981%" y="197" width="0.2820%" height="15" fill="rgb(232,36,49)" fg:x="2055" fg:w="46"/><text x="12.8911%" y="207.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="12.8801%" y="197" width="0.2023%" height="15" fill="rgb(209,103,24)" fg:x="2101" fg:w="33"/><text x="13.1731%" y="207.50"></text></g><g><title>memcpy (181 instructions, 1.11%)</title><rect x="13.0824%" y="197" width="1.1096%" height="15" fill="rgb(229,88,8)" fg:x="2134" fg:w="181"/><text x="13.3754%" y="207.50"></text></g><g><title>@deserialize_go&lt;P&gt; (335 instructions, 2.05%)</title><rect x="12.5981%" y="213" width="2.0537%" height="15" fill="rgb(213,181,19)" fg:x="2055" fg:w="335"/><text x="12.8911%" y="223.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="14.6518%" y="197" width="1.2138%" height="15" fill="rgb(254,191,54)" fg:x="2390" fg:w="198"/><text x="14.9448%" y="207.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="14.6518%" y="213" width="1.3794%" height="15" fill="rgb(241,83,37)" fg:x="2390" fg:w="225"/><text x="14.9448%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.0311%" y="213" width="0.3678%" height="15" fill="rgb(233,36,39)" fg:x="2615" fg:w="60"/><text x="16.3241%" y="223.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="16.3990%" y="197" width="0.3678%" height="15" fill="rgb(226,3,54)" fg:x="2675" fg:w="60"/><text x="16.6919%" y="207.50"></text></g><g><title>leb128_decode (46 instructions, 0.28%)</title><rect x="16.7668%" y="197" width="0.2820%" height="15" fill="rgb(245,192,40)" fg:x="2735" fg:w="46"/><text x="17.0598%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="17.0488%" y="197" width="0.0920%" height="15" fill="rgb(238,167,29)" fg:x="2781" fg:w="15"/><text x="17.3418%" y="207.50"></text></g><g><title>leb128_decode (198 instructions, 1.21%)</title><rect x="17.1408%" y="181" width="1.2138%" height="15" fill="rgb(232,182,51)" fg:x="2796" fg:w="198"/><text x="17.4337%" y="191.50"></text></g><g><title>find_field (225 instructions, 1.38%)</title><rect x="17.1408%" y="197" width="1.3794%" height="15" fill="rgb(231,60,39)" fg:x="2796" fg:w="225"/><text x="17.4337%" y="207.50"></text></g><g><title>sleb128_decode (60 instructions, 0.37%)</title><rect x="18.5201%" y="197" width="0.3678%" height="15" fill="rgb(208,69,12)" fg:x="3021" fg:w="60"/><text x="18.8131%" y="207.50"></text></g><g><title>bigint_leb128_decode_word64 (55 instructions, 0.34%)</title><rect x="18.8879%" y="181" width="0.3372%" height="15" fill="rgb(235,93,37)" fg:x="3081" fg:w="55"/><text x="19.1809%" y="191.50"></text></g><g><title>@deserialize_go&lt;N&gt; (99 instructions, 0.61%)</title><rect x="18.8879%" y="197" width="0.6069%" height="15" fill="rgb(213,116,39)" fg:x="3081" fg:w="99"/><text x="19.1809%" y="207.50"></text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="19.4949%" y="197" width="0.0245%" height="15" fill="rgb(222,207,29)" fg:x="3180" fg:w="4"/><text x="19.7878%" y="207.50"></text></g><g><title>@deserialize_go&lt;r(amount_e8s:N)&gt; (641 instructions, 3.93%)</title><rect x="16.3990%" y="213" width="3.9296%" height="15" fill="rgb(206,96,30)" fg:x="2675" fg:w="641"/><text x="16.6919%" y="223.50">@de..</text></g><g><title>skip_fields (4 instructions, 0.02%)</title><rect x="20.3286%" y="213" width="0.0245%" height="15" fill="rgb(218,138,4)" fg:x="3316" fg:w="4"/><text x="20.6216%" y="223.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="20.3531%" y="213" width="0.0920%" height="15" fill="rgb(250,191,14)" fg:x="3320" fg:w="15"/><text x="20.6461%" y="223.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="20.4451%" y="197" width="0.2023%" height="15" fill="rgb(239,60,40)" fg:x="3335" fg:w="33"/><text x="20.7380%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="20.6474%" y="197" width="0.0920%" height="15" fill="rgb(206,27,48)" fg:x="3368" fg:w="15"/><text x="20.9403%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="20.7393%" y="197" width="0.0981%" height="15" fill="rgb(225,35,8)" fg:x="3383" fg:w="16"/><text x="21.0323%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="20.8374%" y="165" width="4.5733%" height="15" fill="rgb(250,213,24)" fg:x="3399" fg:w="746"/><text x="21.1304%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="25.4107%" y="165" width="0.1410%" height="15" fill="rgb(247,123,22)" fg:x="4145" fg:w="23"/><text x="25.7037%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="25.5517%" y="165" width="0.0920%" height="15" fill="rgb(231,138,38)" fg:x="4168" fg:w="15"/><text x="25.8447%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="25.6437%" y="165" width="0.1410%" height="15" fill="rgb(231,145,46)" fg:x="4183" fg:w="23"/><text x="25.9367%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="20.8374%" y="181" width="5.0944%" height="15" fill="rgb(251,118,11)" fg:x="3399" fg:w="831"/><text x="21.1304%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="25.9318%" y="149" width="0.0920%" height="15" fill="rgb(217,147,25)" fg:x="4230" fg:w="15"/><text x="26.2248%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="25.9318%" y="165" width="0.1594%" height="15" fill="rgb(247,81,37)" fg:x="4230" fg:w="26"/><text x="26.2248%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="26.0912%" y="165" width="0.0920%" height="15" fill="rgb(209,12,38)" fg:x="4256" fg:w="15"/><text x="26.3842%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="26.1832%" y="149" width="0.0981%" height="15" fill="rgb(227,1,9)" fg:x="4271" fg:w="16"/><text x="26.4761%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.2813%" y="149" width="0.1103%" height="15" fill="rgb(248,47,43)" fg:x="4287" fg:w="18"/><text x="26.5742%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.3916%" y="133" width="0.0981%" height="15" fill="rgb(221,10,30)" fg:x="4305" fg:w="16"/><text x="26.6846%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.4897%" y="133" width="0.0981%" height="15" fill="rgb(210,229,1)" fg:x="4321" fg:w="16"/><text x="26.7827%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="26.3916%" y="149" width="0.3494%" height="15" fill="rgb(222,148,37)" fg:x="4305" fg:w="57"/><text x="26.6846%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="26.7410%" y="149" width="0.1103%" height="15" fill="rgb(234,67,33)" fg:x="4362" fg:w="18"/><text x="27.0340%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.8514%" y="133" width="0.0981%" height="15" fill="rgb(247,98,35)" fg:x="4380" fg:w="16"/><text x="27.1444%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="26.9495%" y="133" width="0.0981%" height="15" fill="rgb(247,138,52)" fg:x="4396" fg:w="16"/><text x="27.2425%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="26.8514%" y="149" width="0.3433%" height="15" fill="rgb(213,79,30)" fg:x="4380" fg:w="56"/><text x="27.1444%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.1947%" y="149" width="0.1103%" height="15" fill="rgb(246,177,23)" fg:x="4436" fg:w="18"/><text x="27.4877%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.3051%" y="133" width="0.0981%" height="15" fill="rgb(230,62,27)" fg:x="4454" fg:w="16"/><text x="27.5980%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.4031%" y="133" width="0.0981%" height="15" fill="rgb(216,154,8)" fg:x="4470" fg:w="16"/><text x="27.6961%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="27.3051%" y="149" width="0.3433%" height="15" fill="rgb(244,35,45)" fg:x="4454" fg:w="56"/><text x="27.5980%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="27.6484%" y="149" width="0.1103%" height="15" fill="rgb(251,115,12)" fg:x="4510" fg:w="18"/><text x="27.9413%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.7587%" y="133" width="0.0981%" height="15" fill="rgb(240,54,50)" fg:x="4528" fg:w="16"/><text x="28.0517%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="27.8568%" y="133" width="0.0981%" height="15" fill="rgb(233,84,52)" fg:x="4544" fg:w="16"/><text x="28.1498%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="27.9549%" y="133" width="0.0981%" height="15" fill="rgb(207,117,47)" fg:x="4560" fg:w="16"/><text x="28.2478%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="28.0530%" y="133" width="0.0981%" height="15" fill="rgb(249,43,39)" fg:x="4576" fg:w="16"/><text x="28.3459%" y="143.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.16%)</title><rect x="28.1511%" y="117" width="4.1626%" height="15" fill="rgb(209,38,44)" fg:x="4592" fg:w="679"/><text x="28.4440%" y="127.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.18%)</title><rect x="28.1511%" y="133" width="4.1810%" height="15" fill="rgb(236,212,23)" fg:x="4592" fg:w="682"/><text x="28.4440%" y="143.50">equa..</text></g><g><title>anon-func-192.5 (781 instructions, 4.79%)</title><rect x="27.7587%" y="149" width="4.7879%" height="15" fill="rgb(242,79,21)" fg:x="4528" fg:w="781"/><text x="28.0517%" y="159.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="32.5466%" y="149" width="0.1103%" height="15" fill="rgb(211,96,35)" fg:x="5309" fg:w="18"/><text x="32.8396%" y="159.50"></text></g><g><title>rec.2 (1,206 instructions, 7.39%)</title><rect x="26.1832%" y="165" width="7.3933%" height="15" fill="rgb(253,215,40)" fg:x="4271" fg:w="1206"/><text x="26.4761%" y="175.50">rec.2</text></g><g><title>get.2 (1,269 instructions, 7.78%)</title><rect x="25.9318%" y="181" width="7.7795%" height="15" fill="rgb(211,81,21)" fg:x="4230" fg:w="1269"/><text x="26.2248%" y="191.50">get.2</text></g><g><title>account_get (2,106 instructions, 12.91%)</title><rect x="20.8374%" y="197" width="12.9107%" height="15" fill="rgb(208,190,38)" fg:x="3399" fg:w="2106"/><text x="21.1304%" y="207.50">account_get</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="33.7482%" y="197" width="0.1103%" height="15" fill="rgb(235,213,38)" fg:x="5505" fg:w="18"/><text x="34.0411%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.8585%" y="197" width="0.0981%" height="15" fill="rgb(237,122,38)" fg:x="5523" fg:w="16"/><text x="34.1515%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="33.9566%" y="197" width="0.0981%" height="15" fill="rgb(244,218,35)" fg:x="5539" fg:w="16"/><text x="34.2496%" y="207.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="34.0547%" y="197" width="0.0981%" height="15" fill="rgb(240,68,47)" fg:x="5555" fg:w="16"/><text x="34.3477%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.1528%" y="197" width="0.0981%" height="15" fill="rgb(210,16,53)" fg:x="5571" fg:w="16"/><text x="34.4457%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="34.2509%" y="197" width="0.0981%" height="15" fill="rgb(235,124,12)" fg:x="5587" fg:w="16"/><text x="34.5438%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="34.3489%" y="197" width="0.1471%" height="15" fill="rgb(224,169,11)" fg:x="5603" fg:w="24"/><text x="34.6419%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="34.4961%" y="133" width="0.2268%" height="15" fill="rgb(250,166,2)" fg:x="5627" fg:w="37"/><text x="34.7890%" y="143.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="34.7229%" y="133" width="0.6008%" height="15" fill="rgb(242,216,29)" fg:x="5664" fg:w="98"/><text x="35.0159%" y="143.50"></text></g><g><title>mp_calloc (159 instructions, 0.97%)</title><rect x="34.4961%" y="149" width="0.9747%" height="15" fill="rgb(230,116,27)" fg:x="5627" fg:w="159"/><text x="34.7890%" y="159.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="34.4961%" y="165" width="1.0667%" height="15" fill="rgb(228,99,48)" fg:x="5627" fg:w="174"/><text x="34.7890%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.59%)</title><rect x="35.5628%" y="165" width="0.5947%" height="15" fill="rgb(253,11,6)" fg:x="5801" fg:w="97"/><text x="35.8557%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="36.1574%" y="165" width="0.1839%" height="15" fill="rgb(247,143,39)" fg:x="5898" fg:w="30"/><text x="36.4504%" y="175.50"></text></g><g><title>bigint_of_int64 (350 instructions, 2.15%)</title><rect x="34.4961%" y="181" width="2.1457%" height="15" fill="rgb(236,97,10)" fg:x="5627" fg:w="350"/><text x="34.7890%" y="191.50">b..</text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="36.6417%" y="165" width="0.0674%" height="15" fill="rgb(233,208,19)" fg:x="5977" fg:w="11"/><text x="36.9347%" y="175.50"></text></g><g><title>mp_cmp (25 instructions, 0.15%)</title><rect x="36.6417%" y="181" width="0.1533%" height="15" fill="rgb(216,164,2)" fg:x="5977" fg:w="25"/><text x="36.9347%" y="191.50"></text></g><g><title>B_lt (415 instructions, 2.54%)</title><rect x="34.4961%" y="197" width="2.5441%" height="15" fill="rgb(220,129,5)" fg:x="5627" fg:w="415"/><text x="34.7890%" y="207.50">B..</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="37.0402%" y="197" width="0.0981%" height="15" fill="rgb(242,17,10)" fg:x="6042" fg:w="16"/><text x="37.3332%" y="207.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="37.1383%" y="133" width="0.2268%" height="15" fill="rgb(242,107,0)" fg:x="6058" fg:w="37"/><text x="37.4313%" y="143.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="37.3651%" y="133" width="0.6008%" height="15" fill="rgb(251,28,31)" fg:x="6095" fg:w="98"/><text x="37.6581%" y="143.50"></text></g><g><title>mp_calloc (159 instructions, 0.97%)</title><rect x="37.1383%" y="149" width="0.9747%" height="15" fill="rgb(233,223,10)" fg:x="6058" fg:w="159"/><text x="37.4313%" y="159.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="37.1383%" y="165" width="1.0667%" height="15" fill="rgb(215,21,27)" fg:x="6058" fg:w="174"/><text x="37.4313%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.59%)</title><rect x="38.2050%" y="165" width="0.5947%" height="15" fill="rgb(232,23,21)" fg:x="6232" fg:w="97"/><text x="38.4980%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="38.7997%" y="165" width="0.1839%" height="15" fill="rgb(244,5,23)" fg:x="6329" fg:w="30"/><text x="39.0926%" y="175.50"></text></g><g><title>bigint_of_int64 (350 instructions, 2.15%)</title><rect x="37.1383%" y="181" width="2.1457%" height="15" fill="rgb(226,81,46)" fg:x="6058" fg:w="350"/><text x="37.4313%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="39.2840%" y="149" width="0.2268%" height="15" fill="rgb(247,70,30)" fg:x="6408" fg:w="37"/><text x="39.5769%" y="159.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="39.5108%" y="149" width="0.6008%" height="15" fill="rgb(212,68,19)" fg:x="6445" fg:w="98"/><text x="39.8038%" y="159.50"></text></g><g><title>mp_calloc (159 instructions, 0.97%)</title><rect x="39.2840%" y="165" width="0.9747%" height="15" fill="rgb(240,187,13)" fg:x="6408" fg:w="159"/><text x="39.5769%" y="175.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="39.2840%" y="181" width="1.0667%" height="15" fill="rgb(223,113,26)" fg:x="6408" fg:w="174"/><text x="39.5769%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="40.3507%" y="165" width="0.0674%" height="15" fill="rgb(206,192,2)" fg:x="6582" fg:w="11"/><text x="40.6436%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.13%)</title><rect x="40.4181%" y="149" width="0.1349%" height="15" fill="rgb(241,108,4)" fg:x="6593" fg:w="22"/><text x="40.7111%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="40.4181%" y="165" width="0.8154%" height="15" fill="rgb(247,173,49)" fg:x="6593" fg:w="133"/><text x="40.7111%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="40.3507%" y="181" width="1.0115%" height="15" fill="rgb(224,114,35)" fg:x="6582" fg:w="165"/><text x="40.6436%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="41.3622%" y="181" width="0.1839%" height="15" fill="rgb(245,159,27)" fg:x="6747" fg:w="30"/><text x="41.6552%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="41.5461%" y="165" width="1.0177%" height="15" fill="rgb(245,172,44)" fg:x="6777" fg:w="166"/><text x="41.8391%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="41.5461%" y="181" width="1.2200%" height="15" fill="rgb(236,23,11)" fg:x="6777" fg:w="199"/><text x="41.8391%" y="191.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="43.3546%" y="133" width="0.2268%" height="15" fill="rgb(205,117,38)" fg:x="7072" fg:w="37"/><text x="43.6476%" y="143.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="43.5814%" y="133" width="0.6008%" height="15" fill="rgb(237,72,25)" fg:x="7109" fg:w="98"/><text x="43.8744%" y="143.50"></text></g><g><title>mp_calloc (159 instructions, 0.97%)</title><rect x="43.3546%" y="149" width="0.9747%" height="15" fill="rgb(244,70,9)" fg:x="7072" fg:w="159"/><text x="43.6476%" y="159.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="43.3546%" y="165" width="1.0667%" height="15" fill="rgb(217,125,39)" fg:x="7072" fg:w="174"/><text x="43.6476%" y="175.50"></text></g><g><title>mp_set_u64 (97 instructions, 0.59%)</title><rect x="44.4213%" y="165" width="0.5947%" height="15" fill="rgb(235,36,10)" fg:x="7246" fg:w="97"/><text x="44.7143%" y="175.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="45.0159%" y="165" width="0.1839%" height="15" fill="rgb(251,123,47)" fg:x="7343" fg:w="30"/><text x="45.3089%" y="175.50"></text></g><g><title>bigint_of_int64 (350 instructions, 2.15%)</title><rect x="43.3546%" y="181" width="2.1457%" height="15" fill="rgb(221,13,13)" fg:x="7072" fg:w="350"/><text x="43.6476%" y="191.50">b..</text></g><g><title>motoko_rts::bigint::mp_alloc::hcf6b93eeaa38c590 (37 instructions, 0.23%)</title><rect x="45.5002%" y="149" width="0.2268%" height="15" fill="rgb(238,131,9)" fg:x="7422" fg:w="37"/><text x="45.7932%" y="159.50"></text></g><g><title>memset (98 instructions, 0.60%)</title><rect x="45.7271%" y="149" width="0.6008%" height="15" fill="rgb(211,50,8)" fg:x="7459" fg:w="98"/><text x="46.0200%" y="159.50"></text></g><g><title>mp_calloc (159 instructions, 0.97%)</title><rect x="45.5002%" y="165" width="0.9747%" height="15" fill="rgb(245,182,24)" fg:x="7422" fg:w="159"/><text x="45.7932%" y="175.50"></text></g><g><title>mp_init (174 instructions, 1.07%)</title><rect x="45.5002%" y="181" width="1.0667%" height="15" fill="rgb(242,14,37)" fg:x="7422" fg:w="174"/><text x="45.7932%" y="191.50"></text></g><g><title>mp_cmp_mag (11 instructions, 0.07%)</title><rect x="46.5669%" y="165" width="0.0674%" height="15" fill="rgb(246,228,12)" fg:x="7596" fg:w="11"/><text x="46.8599%" y="175.50"></text></g><g><title>mp_clamp (22 instructions, 0.13%)</title><rect x="46.6344%" y="149" width="0.1349%" height="15" fill="rgb(213,55,15)" fg:x="7607" fg:w="22"/><text x="46.9273%" y="159.50"></text></g><g><title>s_mp_sub (133 instructions, 0.82%)</title><rect x="46.6344%" y="165" width="0.8154%" height="15" fill="rgb(209,9,3)" fg:x="7607" fg:w="133"/><text x="46.9273%" y="175.50"></text></g><g><title>mp_sub (165 instructions, 1.01%)</title><rect x="46.5669%" y="181" width="1.0115%" height="15" fill="rgb(230,59,30)" fg:x="7596" fg:w="165"/><text x="46.8599%" y="191.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h720a78b82bd92b07 (30 instructions, 0.18%)</title><rect x="47.5785%" y="181" width="0.1839%" height="15" fill="rgb(209,121,21)" fg:x="7761" fg:w="30"/><text x="47.8714%" y="191.50"></text></g><g><title>mp_count_bits (166 instructions, 1.02%)</title><rect x="47.7624%" y="165" width="1.0177%" height="15" fill="rgb(220,109,13)" fg:x="7791" fg:w="166"/><text x="48.0554%" y="175.50"></text></g><g><title>bigint_2complement_bits (199 instructions, 1.22%)</title><rect x="47.7624%" y="181" width="1.2200%" height="15" fill="rgb(232,18,1)" fg:x="7791" fg:w="199"/><text x="48.0554%" y="191.50"></text></g><g><title>B_sub (2,028 instructions, 12.43%)</title><rect x="37.1383%" y="197" width="12.4326%" height="15" fill="rgb(215,41,42)" fg:x="6058" fg:w="2028"/><text x="37.4313%" y="207.50">B_sub</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="49.5709%" y="197" width="0.0920%" height="15" fill="rgb(224,123,36)" fg:x="8086" fg:w="15"/><text x="49.8638%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="49.6628%" y="165" width="4.5733%" height="15" fill="rgb(240,125,3)" fg:x="8101" fg:w="746"/><text x="49.9558%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="54.2361%" y="165" width="0.1410%" height="15" fill="rgb(205,98,50)" fg:x="8847" fg:w="23"/><text x="54.5291%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="54.3771%" y="165" width="0.0920%" height="15" fill="rgb(205,185,37)" fg:x="8870" fg:w="15"/><text x="54.6701%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="54.4691%" y="165" width="0.1410%" height="15" fill="rgb(238,207,15)" fg:x="8885" fg:w="23"/><text x="54.7621%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="49.6628%" y="181" width="5.0944%" height="15" fill="rgb(213,199,42)" fg:x="8101" fg:w="831"/><text x="49.9558%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="54.7572%" y="165" width="0.1103%" height="15" fill="rgb(235,201,11)" fg:x="8932" fg:w="18"/><text x="55.0502%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="54.8676%" y="165" width="0.0920%" height="15" fill="rgb(207,46,11)" fg:x="8950" fg:w="15"/><text x="55.1606%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="54.9595%" y="165" width="0.0920%" height="15" fill="rgb(241,35,35)" fg:x="8965" fg:w="15"/><text x="55.2525%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.0515%" y="149" width="0.0920%" height="15" fill="rgb(243,32,47)" fg:x="8980" fg:w="15"/><text x="55.3445%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="55.0515%" y="165" width="0.1594%" height="15" fill="rgb(247,202,23)" fg:x="8980" fg:w="26"/><text x="55.3445%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="55.2109%" y="149" width="0.0981%" height="15" fill="rgb(219,102,11)" fg:x="9006" fg:w="16"/><text x="55.5039%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.3090%" y="133" width="0.0920%" height="15" fill="rgb(243,110,44)" fg:x="9022" fg:w="15"/><text x="55.6019%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="55.4009%" y="133" width="0.0920%" height="15" fill="rgb(222,74,54)" fg:x="9037" fg:w="15"/><text x="55.6939%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="55.4929%" y="133" width="0.0920%" height="15" fill="rgb(216,99,12)" fg:x="9052" fg:w="15"/><text x="55.7859%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="55.5848%" y="117" width="0.1103%" height="15" fill="rgb(226,22,26)" fg:x="9067" fg:w="18"/><text x="55.8778%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.6952%" y="101" width="0.0981%" height="15" fill="rgb(217,163,10)" fg:x="9085" fg:w="16"/><text x="55.9882%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="55.7933%" y="101" width="0.0981%" height="15" fill="rgb(213,25,53)" fg:x="9101" fg:w="16"/><text x="56.0862%" y="111.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="55.6952%" y="117" width="0.3494%" height="15" fill="rgb(252,105,26)" fg:x="9085" fg:w="57"/><text x="55.9882%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.0446%" y="101" width="0.1103%" height="15" fill="rgb(220,39,43)" fg:x="9142" fg:w="18"/><text x="56.3376%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.1550%" y="85" width="0.0981%" height="15" fill="rgb(229,68,48)" fg:x="9160" fg:w="16"/><text x="56.4479%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.2531%" y="85" width="0.0981%" height="15" fill="rgb(252,8,32)" fg:x="9176" fg:w="16"/><text x="56.5460%" y="95.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="56.1550%" y="101" width="0.3433%" height="15" fill="rgb(223,20,43)" fg:x="9160" fg:w="56"/><text x="56.4479%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.4983%" y="85" width="0.1103%" height="15" fill="rgb(229,81,49)" fg:x="9216" fg:w="18"/><text x="56.7913%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.6086%" y="69" width="0.0981%" height="15" fill="rgb(236,28,36)" fg:x="9234" fg:w="16"/><text x="56.9016%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="56.7067%" y="69" width="0.0981%" height="15" fill="rgb(249,185,26)" fg:x="9250" fg:w="16"/><text x="56.9997%" y="79.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="56.6086%" y="85" width="0.3433%" height="15" fill="rgb(249,174,33)" fg:x="9234" fg:w="56"/><text x="56.9016%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="56.9519%" y="69" width="0.1103%" height="15" fill="rgb(233,201,37)" fg:x="9290" fg:w="18"/><text x="57.2449%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.0623%" y="53" width="0.0981%" height="15" fill="rgb(221,78,26)" fg:x="9308" fg:w="16"/><text x="57.3553%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="57.1604%" y="53" width="0.0981%" height="15" fill="rgb(250,127,30)" fg:x="9324" fg:w="16"/><text x="57.4533%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.2585%" y="53" width="0.0981%" height="15" fill="rgb(230,49,44)" fg:x="9340" fg:w="16"/><text x="57.5514%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="57.3565%" y="53" width="0.0981%" height="15" fill="rgb(229,67,23)" fg:x="9356" fg:w="16"/><text x="57.6495%" y="63.50"></text></g><g><title>Blob.compare_eq (679 instructions, 4.16%)</title><rect x="57.4546%" y="37" width="4.1626%" height="15" fill="rgb(249,83,47)" fg:x="9372" fg:w="679"/><text x="57.7476%" y="47.50">Blob..</text></g><g><title>equal.1 (682 instructions, 4.18%)</title><rect x="57.4546%" y="53" width="4.1810%" height="15" fill="rgb(215,43,3)" fg:x="9372" fg:w="682"/><text x="57.7476%" y="63.50">equa..</text></g><g><title>anon-func-192.5 (781 instructions, 4.79%)</title><rect x="57.0623%" y="69" width="4.7879%" height="15" fill="rgb(238,154,13)" fg:x="9308" fg:w="781"/><text x="57.3553%" y="79.50">anon..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="61.8502%" y="69" width="0.1103%" height="15" fill="rgb(219,56,2)" fg:x="10089" fg:w="18"/><text x="62.1431%" y="79.50"></text></g><g><title>del (858 instructions, 5.26%)</title><rect x="56.9519%" y="85" width="5.2599%" height="15" fill="rgb(233,0,4)" fg:x="9290" fg:w="858"/><text x="57.2449%" y="95.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.2119%" y="85" width="0.1410%" height="15" fill="rgb(235,30,7)" fg:x="10148" fg:w="23"/><text x="62.5048%" y="95.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.3529%" y="85" width="0.1103%" height="15" fill="rgb(250,79,13)" fg:x="10171" fg:w="18"/><text x="62.6458%" y="95.50"></text></g><g><title>del (1,035 instructions, 6.35%)</title><rect x="56.4983%" y="101" width="6.3450%" height="15" fill="rgb(211,146,34)" fg:x="9216" fg:w="1035"/><text x="56.7913%" y="111.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="62.8433%" y="101" width="0.1410%" height="15" fill="rgb(228,22,38)" fg:x="10251" fg:w="23"/><text x="63.1363%" y="111.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="62.9843%" y="101" width="0.1103%" height="15" fill="rgb(235,168,5)" fg:x="10274" fg:w="18"/><text x="63.2773%" y="111.50"></text></g><g><title>del (1,212 instructions, 7.43%)</title><rect x="56.0446%" y="117" width="7.4301%" height="15" fill="rgb(221,155,16)" fg:x="9142" fg:w="1212"/><text x="56.3376%" y="127.50">del</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="63.4747%" y="117" width="0.1410%" height="15" fill="rgb(215,215,53)" fg:x="10354" fg:w="23"/><text x="63.7677%" y="127.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="63.6157%" y="117" width="0.1103%" height="15" fill="rgb(223,4,10)" fg:x="10377" fg:w="18"/><text x="63.9087%" y="127.50"></text></g><g><title>del (1,390 instructions, 8.52%)</title><rect x="55.5848%" y="133" width="8.5213%" height="15" fill="rgb(234,103,6)" fg:x="9067" fg:w="1390"/><text x="55.8778%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="64.1062%" y="133" width="0.1103%" height="15" fill="rgb(227,97,0)" fg:x="10457" fg:w="18"/><text x="64.3991%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.2165%" y="133" width="0.1410%" height="15" fill="rgb(234,150,53)" fg:x="10475" fg:w="23"/><text x="64.5095%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="64.3575%" y="133" width="0.1410%" height="15" fill="rgb(228,201,54)" fg:x="10498" fg:w="23"/><text x="64.6505%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="64.4985%" y="133" width="0.1103%" height="15" fill="rgb(222,22,37)" fg:x="10521" fg:w="18"/><text x="64.7915%" y="143.50"></text></g><g><title>replace (1,576 instructions, 9.66%)</title><rect x="55.3090%" y="149" width="9.6616%" height="15" fill="rgb(237,53,32)" fg:x="9022" fg:w="1576"/><text x="55.6019%" y="159.50">replace</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="64.9706%" y="117" width="0.1103%" height="15" fill="rgb(233,25,53)" fg:x="10598" fg:w="18"/><text x="65.2635%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.0809%" y="117" width="0.0613%" height="15" fill="rgb(210,40,34)" fg:x="10616" fg:w="10"/><text x="65.3739%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.1422%" y="117" width="0.1471%" height="15" fill="rgb(241,220,44)" fg:x="10626" fg:w="24"/><text x="65.4352%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.2894%" y="117" width="0.1103%" height="15" fill="rgb(235,28,35)" fg:x="10650" fg:w="18"/><text x="65.5823%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.3997%" y="117" width="0.0613%" height="15" fill="rgb(210,56,17)" fg:x="10668" fg:w="10"/><text x="65.6927%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.4610%" y="117" width="0.1471%" height="15" fill="rgb(224,130,29)" fg:x="10678" fg:w="24"/><text x="65.7540%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.6081%" y="117" width="0.1103%" height="15" fill="rgb(235,212,8)" fg:x="10702" fg:w="18"/><text x="65.9011%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="65.7185%" y="117" width="0.0613%" height="15" fill="rgb(223,33,50)" fg:x="10720" fg:w="10"/><text x="66.0115%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="65.7798%" y="117" width="0.1471%" height="15" fill="rgb(219,149,13)" fg:x="10730" fg:w="24"/><text x="66.0728%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="65.9269%" y="117" width="0.1103%" height="15" fill="rgb(250,156,29)" fg:x="10754" fg:w="18"/><text x="66.2199%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="66.0373%" y="117" width="0.0613%" height="15" fill="rgb(216,193,19)" fg:x="10772" fg:w="10"/><text x="66.3302%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="66.0986%" y="117" width="0.1471%" height="15" fill="rgb(216,135,14)" fg:x="10782" fg:w="24"/><text x="66.3915%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="66.2457%" y="117" width="0.0245%" height="15" fill="rgb(241,47,5)" fg:x="10806" fg:w="4"/><text x="66.5387%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="66.2702%" y="117" width="0.0245%" height="15" fill="rgb(233,42,35)" fg:x="10810" fg:w="4"/><text x="66.5632%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="66.2948%" y="117" width="0.0920%" height="15" fill="rgb(231,13,6)" fg:x="10814" fg:w="15"/><text x="66.5877%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="66.3867%" y="117" width="0.0920%" height="15" fill="rgb(207,181,40)" fg:x="10829" fg:w="15"/><text x="66.6797%" y="127.50"></text></g><g><title>rec (417 instructions, 2.56%)</title><rect x="64.9706%" y="133" width="2.5564%" height="15" fill="rgb(254,173,49)" fg:x="10598" fg:w="417"/><text x="65.2635%" y="143.50">r..</text></g><g><title>leaf (421 instructions, 2.58%)</title><rect x="64.9706%" y="149" width="2.5809%" height="15" fill="rgb(221,1,38)" fg:x="10598" fg:w="421"/><text x="65.2635%" y="159.50">l..</text></g><g><title>recursiveReplace (2,066 instructions, 12.67%)</title><rect x="55.2109%" y="165" width="12.6655%" height="15" fill="rgb(206,124,46)" fg:x="9006" fg:w="2066"/><text x="55.5039%" y="175.50">recursiveReplace</text></g><g><title>put.1 (2,206 instructions, 13.52%)</title><rect x="54.7572%" y="181" width="13.5238%" height="15" fill="rgb(249,21,11)" fg:x="8932" fg:w="2206"/><text x="55.0502%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="68.2810%" y="181" width="0.1410%" height="15" fill="rgb(222,201,40)" fg:x="11138" fg:w="23"/><text x="68.5740%" y="191.50"></text></g><g><title>account_put (3,073 instructions, 18.84%)</title><rect x="49.6628%" y="197" width="18.8389%" height="15" fill="rgb(235,61,29)" fg:x="8101" fg:w="3073"/><text x="49.9558%" y="207.50">account_put</text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="68.5017%" y="197" width="0.0981%" height="15" fill="rgb(219,207,3)" fg:x="11174" fg:w="16"/><text x="68.7947%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="68.5998%" y="165" width="4.5733%" height="15" fill="rgb(222,56,46)" fg:x="11190" fg:w="746"/><text x="68.8928%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="73.1731%" y="165" width="0.1410%" height="15" fill="rgb(239,76,54)" fg:x="11936" fg:w="23"/><text x="73.4661%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="73.3141%" y="165" width="0.0920%" height="15" fill="rgb(231,124,27)" fg:x="11959" fg:w="15"/><text x="73.6071%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="73.4061%" y="165" width="0.1410%" height="15" fill="rgb(249,195,6)" fg:x="11974" fg:w="23"/><text x="73.6991%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="68.5998%" y="181" width="5.0944%" height="15" fill="rgb(237,174,47)" fg:x="11190" fg:w="831"/><text x="68.8928%" y="191.50">accou..</text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.6942%" y="149" width="0.0920%" height="15" fill="rgb(206,201,31)" fg:x="12021" fg:w="15"/><text x="73.9872%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="73.6942%" y="165" width="0.1594%" height="15" fill="rgb(231,57,52)" fg:x="12021" fg:w="26"/><text x="73.9872%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="73.8536%" y="165" width="0.0920%" height="15" fill="rgb(248,177,22)" fg:x="12047" fg:w="15"/><text x="74.1466%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="73.9456%" y="149" width="0.0981%" height="15" fill="rgb(215,211,37)" fg:x="12062" fg:w="16"/><text x="74.2385%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.0436%" y="149" width="0.1103%" height="15" fill="rgb(241,128,51)" fg:x="12078" fg:w="18"/><text x="74.3366%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.1540%" y="133" width="0.0981%" height="15" fill="rgb(227,165,31)" fg:x="12096" fg:w="16"/><text x="74.4470%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.2521%" y="133" width="0.0981%" height="15" fill="rgb(228,167,24)" fg:x="12112" fg:w="16"/><text x="74.5451%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="74.1540%" y="149" width="0.3433%" height="15" fill="rgb(228,143,12)" fg:x="12096" fg:w="56"/><text x="74.4470%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.4973%" y="149" width="0.1103%" height="15" fill="rgb(249,149,8)" fg:x="12152" fg:w="18"/><text x="74.7903%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.6077%" y="133" width="0.0981%" height="15" fill="rgb(243,35,44)" fg:x="12170" fg:w="16"/><text x="74.9006%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="74.7057%" y="133" width="0.0981%" height="15" fill="rgb(246,89,9)" fg:x="12186" fg:w="16"/><text x="74.9987%" y="143.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="74.6077%" y="149" width="0.3494%" height="15" fill="rgb(233,213,13)" fg:x="12170" fg:w="57"/><text x="74.9006%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="74.9571%" y="149" width="0.1103%" height="15" fill="rgb(233,141,41)" fg:x="12227" fg:w="18"/><text x="75.2501%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.0674%" y="133" width="0.0981%" height="15" fill="rgb(239,167,4)" fg:x="12245" fg:w="16"/><text x="75.3604%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.1655%" y="133" width="0.0981%" height="15" fill="rgb(209,217,16)" fg:x="12261" fg:w="16"/><text x="75.4585%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="75.0674%" y="149" width="0.3433%" height="15" fill="rgb(219,88,35)" fg:x="12245" fg:w="56"/><text x="75.3604%" y="159.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="75.4107%" y="149" width="0.1103%" height="15" fill="rgb(220,193,23)" fg:x="12301" fg:w="18"/><text x="75.7037%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.5211%" y="133" width="0.0981%" height="15" fill="rgb(230,90,52)" fg:x="12319" fg:w="16"/><text x="75.8141%" y="143.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="75.6192%" y="133" width="0.0981%" height="15" fill="rgb(252,106,19)" fg:x="12335" fg:w="16"/><text x="75.9121%" y="143.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="75.5211%" y="149" width="0.3433%" height="15" fill="rgb(206,74,20)" fg:x="12319" fg:w="56"/><text x="75.8141%" y="159.50"></text></g><g><title>rec.2 (479 instructions, 2.94%)</title><rect x="73.9456%" y="165" width="2.9365%" height="15" fill="rgb(230,138,44)" fg:x="12062" fg:w="479"/><text x="74.2385%" y="175.50">re..</text></g><g><title>get.2 (542 instructions, 3.32%)</title><rect x="73.6942%" y="181" width="3.3227%" height="15" fill="rgb(235,182,43)" fg:x="12021" fg:w="542"/><text x="73.9872%" y="191.50">ge..</text></g><g><title>account_get (1,379 instructions, 8.45%)</title><rect x="68.5998%" y="197" width="8.4539%" height="15" fill="rgb(242,16,51)" fg:x="11190" fg:w="1379"/><text x="68.8928%" y="207.50">account_get</text></g><g><title>get.1 (7 instructions, 0.04%)</title><rect x="77.0537%" y="197" width="0.0429%" height="15" fill="rgb(248,9,4)" fg:x="12569" fg:w="7"/><text x="77.3467%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.0966%" y="197" width="0.0981%" height="15" fill="rgb(210,31,22)" fg:x="12576" fg:w="16"/><text x="77.3896%" y="207.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="77.1947%" y="197" width="0.1471%" height="15" fill="rgb(239,54,39)" fg:x="12592" fg:w="24"/><text x="77.4877%" y="207.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="77.3418%" y="197" width="0.0981%" height="15" fill="rgb(230,99,41)" fg:x="12616" fg:w="16"/><text x="77.6348%" y="207.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="77.4399%" y="197" width="0.0920%" height="15" fill="rgb(253,106,12)" fg:x="12632" fg:w="15"/><text x="77.7329%" y="207.50"></text></g><g><title>compute_crc32 (746 instructions, 4.57%)</title><rect x="77.5319%" y="165" width="4.5733%" height="15" fill="rgb(213,46,41)" fg:x="12647" fg:w="746"/><text x="77.8248%" y="175.50">comp..</text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="82.1052%" y="165" width="0.1410%" height="15" fill="rgb(215,133,35)" fg:x="13393" fg:w="23"/><text x="82.3982%" y="175.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="82.2462%" y="165" width="0.0920%" height="15" fill="rgb(213,28,5)" fg:x="13416" fg:w="15"/><text x="82.5392%" y="175.50"></text></g><g><title>box_i32 (23 instructions, 0.14%)</title><rect x="82.3382%" y="165" width="0.1410%" height="15" fill="rgb(215,77,49)" fg:x="13431" fg:w="23"/><text x="82.6311%" y="175.50"></text></g><g><title>account_key (831 instructions, 5.09%)</title><rect x="77.5319%" y="181" width="5.0944%" height="15" fill="rgb(248,100,22)" fg:x="12647" fg:w="831"/><text x="77.8248%" y="191.50">accou..</text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="82.6263%" y="165" width="0.1103%" height="15" fill="rgb(208,67,9)" fg:x="13478" fg:w="18"/><text x="82.9193%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.7366%" y="165" width="0.0920%" height="15" fill="rgb(219,133,21)" fg:x="13496" fg:w="15"/><text x="83.0296%" y="175.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="82.8286%" y="165" width="0.0920%" height="15" fill="rgb(246,46,29)" fg:x="13511" fg:w="15"/><text x="83.1216%" y="175.50"></text></g><g><title>alloc_size&lt;4&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="82.9205%" y="149" width="0.0920%" height="15" fill="rgb(246,185,52)" fg:x="13526" fg:w="15"/><text x="83.2135%" y="159.50"></text></g><g><title>equalKey (26 instructions, 0.16%)</title><rect x="82.9205%" y="165" width="0.1594%" height="15" fill="rgb(252,136,11)" fg:x="13526" fg:w="26"/><text x="83.2135%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.10%)</title><rect x="83.0799%" y="149" width="0.0981%" height="15" fill="rgb(219,138,53)" fg:x="13552" fg:w="16"/><text x="83.3729%" y="159.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.1780%" y="133" width="0.0920%" height="15" fill="rgb(211,51,23)" fg:x="13568" fg:w="15"/><text x="83.4710%" y="143.50"></text></g><g><title>alloc_size&lt;2&gt;_tag&lt;9&gt; (15 instructions, 0.09%)</title><rect x="83.2700%" y="133" width="0.0920%" height="15" fill="rgb(247,221,28)" fg:x="13583" fg:w="15"/><text x="83.5630%" y="143.50"></text></g><g><title>alloc_size&lt;7&gt;_tag&lt;11&gt; (15 instructions, 0.09%)</title><rect x="83.3619%" y="133" width="0.0920%" height="15" fill="rgb(251,222,45)" fg:x="13598" fg:w="15"/><text x="83.6549%" y="143.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.4539%" y="117" width="0.1103%" height="15" fill="rgb(217,162,53)" fg:x="13613" fg:w="18"/><text x="83.7469%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.5642%" y="101" width="0.0981%" height="15" fill="rgb(229,93,14)" fg:x="13631" fg:w="16"/><text x="83.8572%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="83.6623%" y="101" width="0.0981%" height="15" fill="rgb(209,67,49)" fg:x="13647" fg:w="16"/><text x="83.9553%" y="111.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="83.5642%" y="117" width="0.3433%" height="15" fill="rgb(213,87,29)" fg:x="13631" fg:w="56"/><text x="83.8572%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="83.9076%" y="101" width="0.1103%" height="15" fill="rgb(205,151,52)" fg:x="13687" fg:w="18"/><text x="84.2005%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.0179%" y="85" width="0.0981%" height="15" fill="rgb(253,215,39)" fg:x="13705" fg:w="16"/><text x="84.3109%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.1160%" y="85" width="0.0981%" height="15" fill="rgb(221,220,41)" fg:x="13721" fg:w="16"/><text x="84.4090%" y="95.50"></text></g><g><title>anon-func-192.5 (57 instructions, 0.35%)</title><rect x="84.0179%" y="101" width="0.3494%" height="15" fill="rgb(218,133,21)" fg:x="13705" fg:w="57"/><text x="84.3109%" y="111.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.3673%" y="85" width="0.1103%" height="15" fill="rgb(221,193,43)" fg:x="13762" fg:w="18"/><text x="84.6603%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.4777%" y="69" width="0.0981%" height="15" fill="rgb(240,128,52)" fg:x="13780" fg:w="16"/><text x="84.7707%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.5758%" y="69" width="0.0981%" height="15" fill="rgb(253,114,12)" fg:x="13796" fg:w="16"/><text x="84.8687%" y="79.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="84.4777%" y="85" width="0.3433%" height="15" fill="rgb(215,223,47)" fg:x="13780" fg:w="56"/><text x="84.7707%" y="95.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="84.8210%" y="69" width="0.1103%" height="15" fill="rgb(248,225,23)" fg:x="13836" fg:w="18"/><text x="85.1140%" y="79.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="84.9313%" y="53" width="0.0981%" height="15" fill="rgb(250,108,0)" fg:x="13854" fg:w="16"/><text x="85.2243%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.10%)</title><rect x="85.0294%" y="53" width="0.0981%" height="15" fill="rgb(228,208,7)" fg:x="13870" fg:w="16"/><text x="85.3224%" y="63.50"></text></g><g><title>anon-func-192.5 (56 instructions, 0.34%)</title><rect x="84.9313%" y="69" width="0.3433%" height="15" fill="rgb(244,45,10)" fg:x="13854" fg:w="56"/><text x="85.2243%" y="79.50"></text></g><g><title>del (27 instructions, 0.17%)</title><rect x="85.2746%" y="69" width="0.1655%" height="15" fill="rgb(207,125,25)" fg:x="13910" fg:w="27"/><text x="85.5676%" y="79.50"></text></g><g><title>del (153 instructions, 0.94%)</title><rect x="84.8210%" y="85" width="0.9380%" height="15" fill="rgb(210,195,18)" fg:x="13836" fg:w="153"/><text x="85.1140%" y="95.50"></text></g><g><title>del (279 instructions, 1.71%)</title><rect x="84.3673%" y="101" width="1.7104%" height="15" fill="rgb(249,80,12)" fg:x="13762" fg:w="279"/><text x="84.6603%" y="111.50"></text></g><g><title>del (406 instructions, 2.49%)</title><rect x="83.9076%" y="117" width="2.4890%" height="15" fill="rgb(221,65,9)" fg:x="13687" fg:w="406"/><text x="84.2005%" y="127.50">d..</text></g><g><title>del (532 instructions, 3.26%)</title><rect x="83.4539%" y="133" width="3.2614%" height="15" fill="rgb(235,49,36)" fg:x="13613" fg:w="532"/><text x="83.7469%" y="143.50">del</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="86.7153%" y="133" width="0.1103%" height="15" fill="rgb(225,32,20)" fg:x="14145" fg:w="18"/><text x="87.0083%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.8256%" y="133" width="0.1410%" height="15" fill="rgb(215,141,46)" fg:x="14163" fg:w="23"/><text x="87.1186%" y="143.50"></text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="86.9667%" y="133" width="0.1410%" height="15" fill="rgb(250,160,47)" fg:x="14186" fg:w="23"/><text x="87.2596%" y="143.50"></text></g><g><title>opt_inject (18 instructions, 0.11%)</title><rect x="87.1077%" y="133" width="0.1103%" height="15" fill="rgb(216,222,40)" fg:x="14209" fg:w="18"/><text x="87.4006%" y="143.50"></text></g><g><title>replace (718 instructions, 4.40%)</title><rect x="83.1780%" y="149" width="4.4017%" height="15" fill="rgb(234,217,39)" fg:x="13568" fg:w="718"/><text x="83.4710%" y="159.50">repl..</text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.5797%" y="117" width="0.1103%" height="15" fill="rgb(207,178,40)" fg:x="14286" fg:w="18"/><text x="87.8727%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="87.6900%" y="117" width="0.0613%" height="15" fill="rgb(221,136,13)" fg:x="14304" fg:w="10"/><text x="87.9830%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="87.7513%" y="117" width="0.1471%" height="15" fill="rgb(249,199,10)" fg:x="14314" fg:w="24"/><text x="88.0443%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="87.8985%" y="117" width="0.1103%" height="15" fill="rgb(249,222,13)" fg:x="14338" fg:w="18"/><text x="88.1914%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.0088%" y="117" width="0.0613%" height="15" fill="rgb(244,185,38)" fg:x="14356" fg:w="10"/><text x="88.3018%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.0701%" y="117" width="0.1471%" height="15" fill="rgb(236,202,9)" fg:x="14366" fg:w="24"/><text x="88.3631%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.2173%" y="117" width="0.1103%" height="15" fill="rgb(250,229,37)" fg:x="14390" fg:w="18"/><text x="88.5102%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.3276%" y="117" width="0.0613%" height="15" fill="rgb(206,174,23)" fg:x="14408" fg:w="10"/><text x="88.6206%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.3889%" y="117" width="0.1471%" height="15" fill="rgb(211,33,43)" fg:x="14418" fg:w="24"/><text x="88.6819%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.5360%" y="117" width="0.1103%" height="15" fill="rgb(245,58,50)" fg:x="14442" fg:w="18"/><text x="88.8290%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.6464%" y="117" width="0.0613%" height="15" fill="rgb(244,68,36)" fg:x="14460" fg:w="10"/><text x="88.9394%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="88.7077%" y="117" width="0.1471%" height="15" fill="rgb(232,229,15)" fg:x="14470" fg:w="24"/><text x="89.0007%" y="127.50"></text></g><g><title>opt_project (18 instructions, 0.11%)</title><rect x="88.8548%" y="117" width="0.1103%" height="15" fill="rgb(254,30,23)" fg:x="14494" fg:w="18"/><text x="89.1478%" y="127.50"></text></g><g><title>B_ge (10 instructions, 0.06%)</title><rect x="88.9652%" y="117" width="0.0613%" height="15" fill="rgb(235,160,14)" fg:x="14512" fg:w="10"/><text x="89.2581%" y="127.50"></text></g><g><title>B_add (24 instructions, 0.15%)</title><rect x="89.0265%" y="117" width="0.1471%" height="15" fill="rgb(212,155,44)" fg:x="14522" fg:w="24"/><text x="89.3195%" y="127.50"></text></g><g><title>opt_inject (4 instructions, 0.02%)</title><rect x="89.1736%" y="117" width="0.0245%" height="15" fill="rgb(226,2,50)" fg:x="14546" fg:w="4"/><text x="89.4666%" y="127.50"></text></g><g><title>opt_project (4 instructions, 0.02%)</title><rect x="89.1981%" y="117" width="0.0245%" height="15" fill="rgb(234,177,6)" fg:x="14550" fg:w="4"/><text x="89.4911%" y="127.50"></text></g><g><title>alloc_size&lt;3&gt;_tag&lt;15&gt; (15 instructions, 0.09%)</title><rect x="89.2227%" y="117" width="0.0920%" height="15" fill="rgb(217,24,9)" fg:x="14554" fg:w="15"/><text x="89.5156%" y="127.50"></text></g><g><title>alloc_size&lt;5&gt;_tag&lt;1&gt; (15 instructions, 0.09%)</title><rect x="89.3146%" y="117" width="0.0920%" height="15" fill="rgb(220,13,46)" fg:x="14569" fg:w="15"/><text x="89.6076%" y="127.50"></text></g><g><title>rec (498 instructions, 3.05%)</title><rect x="87.5797%" y="133" width="3.0530%" height="15" fill="rgb(239,221,27)" fg:x="14286" fg:w="498"/><text x="87.8727%" y="143.50">rec</text></g><g><title>leaf (502 instructions, 3.08%)</title><rect x="87.5797%" y="149" width="3.0775%" height="15" fill="rgb(222,198,25)" fg:x="14286" fg:w="502"/><text x="87.8727%" y="159.50">le..</text></g><g><title>recursiveReplace (1,289 instructions, 7.90%)</title><rect x="83.0799%" y="165" width="7.9022%" height="15" fill="rgb(211,99,13)" fg:x="13552" fg:w="1289"/><text x="83.3729%" y="175.50">recursive..</text></g><g><title>put.1 (1,429 instructions, 8.76%)</title><rect x="82.6263%" y="181" width="8.7604%" height="15" fill="rgb(232,111,31)" fg:x="13478" fg:w="1429"/><text x="82.9193%" y="191.50">put.1</text></g><g><title>to_2_tuple (23 instructions, 0.14%)</title><rect x="91.3867%" y="181" width="0.1410%" height="15" fill="rgb(245,82,37)" fg:x="14907" fg:w="23"/><text x="91.6797%" y="191.50"></text></g><g><title>account_put (2,296 instructions, 14.08%)</title><rect x="77.5319%" y="197" width="14.0755%" height="15" fill="rgb(227,149,46)" fg:x="12647" fg:w="2296"/><text x="77.8248%" y="207.50">account_put</text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="91.6074%" y="181" width="0.2023%" height="15" fill="rgb(218,36,50)" fg:x="14943" fg:w="33"/><text x="91.9004%" y="191.50"></text></g><g><title>memcpy (76 instructions, 0.47%)</title><rect x="91.8097%" y="181" width="0.4659%" height="15" fill="rgb(226,80,48)" fg:x="14976" fg:w="76"/><text x="92.1027%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h89549146b02728af (33 instructions, 0.20%)</title><rect x="92.2756%" y="181" width="0.2023%" height="15" fill="rgb(238,224,15)" fg:x="15052" fg:w="33"/><text x="92.5686%" y="191.50"></text></g><g><title>leb128_encode (9 instructions, 0.06%)</title><rect x="92.4779%" y="181" width="0.0552%" height="15" fill="rgb(241,136,10)" fg:x="15085" fg:w="9"/><text x="92.7709%" y="191.50"></text></g><g><title>reply_with_data (43 instructions, 0.26%)</title><rect x="92.5331%" y="181" width="0.2636%" height="15" fill="rgb(208,32,45)" fg:x="15094" fg:w="43"/><text x="92.8261%" y="191.50"></text></g><g><title>$lambda.35 (300 instructions, 1.84%)</title><rect x="91.6074%" y="197" width="1.8391%" height="15" fill="rgb(207,135,9)" fg:x="14943" fg:w="300"/><text x="91.9004%" y="207.50"></text></g><g><title>$lambda.2 (12,034 instructions, 73.77%)</title><rect x="20.4451%" y="213" width="73.7739%" height="15" fill="rgb(206,86,44)" fg:x="3335" fg:w="12034"/><text x="20.7380%" y="223.50">$lambda.2</text></g><g><title>schedule_copying_gc (45 instructions, 0.28%)</title><rect x="94.2190%" y="213" width="0.2759%" height="15" fill="rgb(245,177,15)" fg:x="15369" fg:w="45"/><text x="94.5119%" y="223.50"></text></g><g><title>trans_state4 (13 instructions, 0.08%)</title><rect x="94.4949%" y="213" width="0.0797%" height="15" fill="rgb(206,64,50)" fg:x="15414" fg:w="13"/><text x="94.7878%" y="223.50"></text></g><g><title>all (16,312 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(234,36,40)" fg:x="0" fg:w="16312"/><text x="0.2930%" y="255.50"></text></g><g><title>transfer (16,312 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(213,64,8)" fg:x="0" fg:w="16312"/><text x="0.2930%" y="239.50">transfer</text></g></svg></svg>