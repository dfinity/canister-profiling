<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="246" onload="init(evt)" viewBox="0 0 1024 246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="246" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.vote</text><text id="details" fill="rgb(0,0,0)" x="10" y="229.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="229.00"> </text><svg id="frames" x="10" width="1004" total_samples="20489"><g><title>trans_state5 (10 instructions, 0.05%)</title><rect x="0.0000%" y="165" width="0.0488%" height="15" fill="rgb(222,56,52)" fg:x="0" fg:w="10"/><text x="0.2930%" y="175.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.28%)</title><rect x="0.0488%" y="149" width="0.2782%" height="15" fill="rgb(245,217,50)" fg:x="10" fg:w="57"/><text x="0.3418%" y="159.50"></text></g><g><title>alloc_blob (65 instructions, 0.32%)</title><rect x="0.0488%" y="165" width="0.3172%" height="15" fill="rgb(213,201,24)" fg:x="10" fg:w="65"/><text x="0.3418%" y="175.50"></text></g><g><title>leb128_decode (48 instructions, 0.23%)</title><rect x="0.3661%" y="149" width="0.2343%" height="15" fill="rgb(248,116,28)" fg:x="75" fg:w="48"/><text x="0.6590%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.28%)</title><rect x="0.6003%" y="149" width="0.2782%" height="15" fill="rgb(219,72,43)" fg:x="123" fg:w="57"/><text x="0.8933%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="0.8785%" y="149" width="0.3124%" height="15" fill="rgb(209,138,14)" fg:x="180" fg:w="64"/><text x="1.1715%" y="159.50"></text></g><g><title>leb128_decode (48 instructions, 0.23%)</title><rect x="1.1909%" y="149" width="0.2343%" height="15" fill="rgb(222,18,33)" fg:x="244" fg:w="48"/><text x="1.4839%" y="159.50"></text></g><g><title>leb128_decode (228 instructions, 1.11%)</title><rect x="1.4252%" y="149" width="1.1128%" height="15" fill="rgb(213,199,7)" fg:x="292" fg:w="228"/><text x="1.7181%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="2.5379%" y="149" width="0.3124%" height="15" fill="rgb(250,110,10)" fg:x="520" fg:w="64"/><text x="2.8309%" y="159.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.06%)</title><rect x="2.8503%" y="149" width="0.0586%" height="15" fill="rgb(248,123,6)" fg:x="584" fg:w="12"/><text x="3.1433%" y="159.50"></text></g><g><title>leb128_decode (228 instructions, 1.11%)</title><rect x="2.9089%" y="149" width="1.1128%" height="15" fill="rgb(206,91,31)" fg:x="596" fg:w="228"/><text x="3.2018%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="4.0217%" y="149" width="0.3124%" height="15" fill="rgb(211,154,13)" fg:x="824" fg:w="64"/><text x="4.3146%" y="159.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.06%)</title><rect x="4.3340%" y="149" width="0.0586%" height="15" fill="rgb(225,148,7)" fg:x="888" fg:w="12"/><text x="4.6270%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="4.3926%" y="149" width="0.3124%" height="15" fill="rgb(220,160,43)" fg:x="900" fg:w="64"/><text x="4.6856%" y="159.50"></text></g><g><title>leb128_decode (48 instructions, 0.23%)</title><rect x="4.7050%" y="149" width="0.2343%" height="15" fill="rgb(213,52,39)" fg:x="964" fg:w="48"/><text x="4.9979%" y="159.50"></text></g><g><title>leb128_decode (138 instructions, 0.67%)</title><rect x="4.9392%" y="149" width="0.6735%" height="15" fill="rgb(243,137,7)" fg:x="1012" fg:w="138"/><text x="5.2322%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="5.6128%" y="149" width="0.3124%" height="15" fill="rgb(230,79,13)" fg:x="1150" fg:w="64"/><text x="5.9057%" y="159.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.06%)</title><rect x="5.9251%" y="149" width="0.0586%" height="15" fill="rgb(247,105,23)" fg:x="1214" fg:w="12"/><text x="6.2181%" y="159.50"></text></g><g><title>leb128_decode (183 instructions, 0.89%)</title><rect x="5.9837%" y="149" width="0.8932%" height="15" fill="rgb(223,179,41)" fg:x="1226" fg:w="183"/><text x="6.2767%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="6.8769%" y="149" width="0.3124%" height="15" fill="rgb(218,9,34)" fg:x="1409" fg:w="64"/><text x="7.1698%" y="159.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.06%)</title><rect x="7.1892%" y="149" width="0.0586%" height="15" fill="rgb(222,106,8)" fg:x="1473" fg:w="12"/><text x="7.4822%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="7.2478%" y="149" width="0.3124%" height="15" fill="rgb(211,220,0)" fg:x="1485" fg:w="64"/><text x="7.5408%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="7.5602%" y="149" width="0.3124%" height="15" fill="rgb(229,52,16)" fg:x="1549" fg:w="64"/><text x="7.8531%" y="159.50"></text></g><g><title>leb128_decode (48 instructions, 0.23%)</title><rect x="7.8725%" y="149" width="0.2343%" height="15" fill="rgb(212,155,18)" fg:x="1613" fg:w="48"/><text x="8.1655%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="8.1068%" y="149" width="0.3124%" height="15" fill="rgb(242,21,14)" fg:x="1661" fg:w="64"/><text x="8.3998%" y="159.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.06%)</title><rect x="8.4192%" y="149" width="0.0586%" height="15" fill="rgb(222,19,48)" fg:x="1725" fg:w="12"/><text x="8.7121%" y="159.50"></text></g><g><title>parse_idl_header (2,183 instructions, 10.65%)</title><rect x="0.3661%" y="165" width="10.6545%" height="15" fill="rgb(232,45,27)" fg:x="75" fg:w="2183"/><text x="0.6590%" y="175.50">parse_idl_hea..</text></g><g><title>memset (6 instructions, 0.03%)</title><rect x="11.0205%" y="149" width="0.0293%" height="15" fill="rgb(249,103,42)" fg:x="2258" fg:w="6"/><text x="11.3135%" y="159.50"></text></g><g><title>idl_sub_buf_init (15 instructions, 0.07%)</title><rect x="11.0205%" y="165" width="0.0732%" height="15" fill="rgb(246,81,33)" fg:x="2258" fg:w="15"/><text x="11.3135%" y="175.50"></text></g><g><title>leb128_decode (48 instructions, 0.23%)</title><rect x="11.0938%" y="165" width="0.2343%" height="15" fill="rgb(252,33,42)" fg:x="2273" fg:w="48"/><text x="11.3867%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="11.3280%" y="165" width="0.3124%" height="15" fill="rgb(209,212,41)" fg:x="2321" fg:w="64"/><text x="11.6210%" y="175.50"></text></g><g><title>idl_limit_check (20 instructions, 0.10%)</title><rect x="11.6404%" y="165" width="0.0976%" height="15" fill="rgb(207,154,6)" fg:x="2385" fg:w="20"/><text x="11.9334%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="11.7380%" y="165" width="0.3124%" height="15" fill="rgb(223,64,47)" fg:x="2405" fg:w="64"/><text x="12.0310%" y="175.50"></text></g><g><title>leb128_decode (48 instructions, 0.23%)</title><rect x="12.0504%" y="165" width="0.2343%" height="15" fill="rgb(211,161,38)" fg:x="2469" fg:w="48"/><text x="12.3433%" y="175.50"></text></g><g><title>leb128_decode (228 instructions, 1.11%)</title><rect x="12.2846%" y="149" width="1.1128%" height="15" fill="rgb(219,138,40)" fg:x="2517" fg:w="228"/><text x="12.5776%" y="159.50"></text></g><g><title>find_field (264 instructions, 1.29%)</title><rect x="12.2846%" y="165" width="1.2885%" height="15" fill="rgb(241,228,46)" fg:x="2517" fg:w="264"/><text x="12.5776%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="13.5731%" y="165" width="0.3124%" height="15" fill="rgb(223,209,38)" fg:x="2781" fg:w="64"/><text x="13.8661%" y="175.50"></text></g><g><title>idl_limit_check (20 instructions, 0.10%)</title><rect x="13.8855%" y="165" width="0.0976%" height="15" fill="rgb(236,164,45)" fg:x="2845" fg:w="20"/><text x="14.1785%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="13.9831%" y="165" width="0.3124%" height="15" fill="rgb(231,15,5)" fg:x="2865" fg:w="64"/><text x="14.2761%" y="175.50"></text></g><g><title>leb128_decode (48 instructions, 0.23%)</title><rect x="14.2955%" y="165" width="0.2343%" height="15" fill="rgb(252,35,15)" fg:x="2929" fg:w="48"/><text x="14.5884%" y="175.50"></text></g><g><title>leb128_decode (48 instructions, 0.23%)</title><rect x="14.5297%" y="165" width="0.2343%" height="15" fill="rgb(248,181,18)" fg:x="2977" fg:w="48"/><text x="14.8227%" y="175.50"></text></g><g><title>skip_leb128 (59 instructions, 0.29%)</title><rect x="14.7640%" y="165" width="0.2880%" height="15" fill="rgb(233,39,42)" fg:x="3025" fg:w="59"/><text x="15.0570%" y="175.50"></text></g><g><title>skip_leb128 (25 instructions, 0.12%)</title><rect x="15.0520%" y="165" width="0.1220%" height="15" fill="rgb(238,110,33)" fg:x="3084" fg:w="25"/><text x="15.3449%" y="175.50"></text></g><g><title>leb128_decode (183 instructions, 0.89%)</title><rect x="15.1740%" y="165" width="0.8932%" height="15" fill="rgb(233,195,10)" fg:x="3109" fg:w="183"/><text x="15.4670%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="16.0672%" y="165" width="0.3124%" height="15" fill="rgb(254,105,3)" fg:x="3292" fg:w="64"/><text x="16.3601%" y="175.50"></text></g><g><title>idl_limit_check (20 instructions, 0.10%)</title><rect x="16.3795%" y="149" width="0.0976%" height="15" fill="rgb(221,225,9)" fg:x="3356" fg:w="20"/><text x="16.6725%" y="159.50"></text></g><g><title>@deserialize_go&lt;u&gt; (55 instructions, 0.27%)</title><rect x="16.3795%" y="165" width="0.2684%" height="15" fill="rgb(224,227,45)" fg:x="3356" fg:w="55"/><text x="16.6725%" y="175.50"></text></g><g><title>leb128_decode (228 instructions, 1.11%)</title><rect x="16.6480%" y="149" width="1.1128%" height="15" fill="rgb(229,198,43)" fg:x="3411" fg:w="228"/><text x="16.9409%" y="159.50"></text></g><g><title>find_field (264 instructions, 1.29%)</title><rect x="16.6480%" y="165" width="1.2885%" height="15" fill="rgb(206,209,35)" fg:x="3411" fg:w="264"/><text x="16.9409%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.31%)</title><rect x="17.9365%" y="165" width="0.3124%" height="15" fill="rgb(245,195,53)" fg:x="3675" fg:w="64"/><text x="18.2294%" y="175.50"></text></g><g><title>idl_limit_check (20 instructions, 0.10%)</title><rect x="18.2488%" y="149" width="0.0976%" height="15" fill="rgb(240,92,26)" fg:x="3739" fg:w="20"/><text x="18.5418%" y="159.50"></text></g><g><title>int_from_i32 (13 instructions, 0.06%)</title><rect x="18.3464%" y="133" width="0.0634%" height="15" fill="rgb(207,40,23)" fg:x="3759" fg:w="13"/><text x="18.6394%" y="143.50"></text></g><g><title>bigint_leb128_decode_word64 (57 instructions, 0.28%)</title><rect x="18.3464%" y="149" width="0.2782%" height="15" fill="rgb(223,111,35)" fg:x="3759" fg:w="57"/><text x="18.6394%" y="159.50"></text></g><g><title>@deserialize_go&lt;N&gt; (143 instructions, 0.70%)</title><rect x="18.2488%" y="165" width="0.6979%" height="15" fill="rgb(229,147,28)" fg:x="3739" fg:w="143"/><text x="18.5418%" y="175.50"></text></g><g><title>skip_fields (6 instructions, 0.03%)</title><rect x="18.9468%" y="165" width="0.0293%" height="15" fill="rgb(211,29,28)" fg:x="3882" fg:w="6"/><text x="19.2397%" y="175.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.28%)</title><rect x="18.9760%" y="133" width="0.2782%" height="15" fill="rgb(228,72,33)" fg:x="3888" fg:w="57"/><text x="19.2690%" y="143.50"></text></g><g><title>alloc_blob (65 instructions, 0.32%)</title><rect x="18.9760%" y="149" width="0.3172%" height="15" fill="rgb(205,214,31)" fg:x="3888" fg:w="65"/><text x="19.2690%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="19.2933%" y="149" width="0.0830%" height="15" fill="rgb(224,111,15)" fg:x="3953" fg:w="17"/><text x="19.5862%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="19.3763%" y="149" width="0.0830%" height="15" fill="rgb(253,21,26)" fg:x="3970" fg:w="17"/><text x="19.6692%" y="159.50"></text></g><g><title>proposal_key (316 instructions, 1.54%)</title><rect x="19.4592%" y="133" width="1.5423%" height="15" fill="rgb(245,139,43)" fg:x="3987" fg:w="316"/><text x="19.7522%" y="143.50"></text></g><g><title>equalKey (28 instructions, 0.14%)</title><rect x="21.0015%" y="117" width="0.1367%" height="15" fill="rgb(252,170,7)" fg:x="4303" fg:w="28"/><text x="21.2945%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="21.1382%" y="101" width="0.0830%" height="15" fill="rgb(231,118,14)" fg:x="4331" fg:w="17"/><text x="21.4311%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="21.2211%" y="85" width="0.0830%" height="15" fill="rgb(238,83,0)" fg:x="4348" fg:w="17"/><text x="21.5141%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="21.3041%" y="85" width="0.0830%" height="15" fill="rgb(221,39,39)" fg:x="4365" fg:w="17"/><text x="21.5971%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="21.3871%" y="85" width="0.0830%" height="15" fill="rgb(222,119,46)" fg:x="4382" fg:w="17"/><text x="21.6801%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="21.4701%" y="85" width="0.0830%" height="15" fill="rgb(222,165,49)" fg:x="4399" fg:w="17"/><text x="21.7630%" y="95.50"></text></g><g><title>B_eq (7 instructions, 0.03%)</title><rect x="21.5530%" y="69" width="0.0342%" height="15" fill="rgb(219,113,52)" fg:x="4416" fg:w="7"/><text x="21.8460%" y="79.50"></text></g><g><title>equal (15 instructions, 0.07%)</title><rect x="21.5530%" y="85" width="0.0732%" height="15" fill="rgb(214,7,15)" fg:x="4416" fg:w="15"/><text x="21.8460%" y="95.50"></text></g><g><title>@anon-func-191.5 (149 instructions, 0.73%)</title><rect x="21.2211%" y="101" width="0.7272%" height="15" fill="rgb(235,32,4)" fg:x="4348" fg:w="149"/><text x="21.5141%" y="111.50"></text></g><g><title>rec.4 (284 instructions, 1.39%)</title><rect x="21.1382%" y="117" width="1.3861%" height="15" fill="rgb(238,90,54)" fg:x="4331" fg:w="284"/><text x="21.4311%" y="127.50"></text></g><g><title>get.2 (364 instructions, 1.78%)</title><rect x="21.0015%" y="133" width="1.7766%" height="15" fill="rgb(213,208,19)" fg:x="4303" fg:w="364"/><text x="21.2945%" y="143.50"></text></g><g><title>proposal_get (695 instructions, 3.39%)</title><rect x="19.4592%" y="149" width="3.3921%" height="15" fill="rgb(233,156,4)" fg:x="3987" fg:w="695"/><text x="19.7522%" y="159.50">pr..</text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="22.8513%" y="149" width="0.0830%" height="15" fill="rgb(207,194,5)" fg:x="4682" fg:w="17"/><text x="23.1443%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.28%)</title><rect x="22.9343%" y="101" width="0.2782%" height="15" fill="rgb(206,111,30)" fg:x="4699" fg:w="57"/><text x="23.2272%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.32%)</title><rect x="22.9343%" y="117" width="0.3172%" height="15" fill="rgb(243,70,54)" fg:x="4699" fg:w="65"/><text x="23.2272%" y="127.50"></text></g><g><title>memcpy (100 instructions, 0.49%)</title><rect x="23.2515%" y="117" width="0.4881%" height="15" fill="rgb(242,28,8)" fg:x="4764" fg:w="100"/><text x="23.5445%" y="127.50"></text></g><g><title>compute_crc32 (781 instructions, 3.81%)</title><rect x="23.7396%" y="117" width="3.8118%" height="15" fill="rgb(219,106,18)" fg:x="4864" fg:w="781"/><text x="24.0325%" y="127.50">com..</text></g><g><title>account_key (1,071 instructions, 5.23%)</title><rect x="22.9343%" y="133" width="5.2272%" height="15" fill="rgb(244,222,10)" fg:x="4699" fg:w="1071"/><text x="23.2272%" y="143.50">accou..</text></g><g><title>equalKey (28 instructions, 0.14%)</title><rect x="28.1615%" y="117" width="0.1367%" height="15" fill="rgb(236,179,52)" fg:x="5770" fg:w="28"/><text x="28.4544%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="28.2981%" y="101" width="0.0830%" height="15" fill="rgb(213,23,39)" fg:x="5798" fg:w="17"/><text x="28.5911%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="28.3811%" y="85" width="0.0830%" height="15" fill="rgb(238,48,10)" fg:x="5815" fg:w="17"/><text x="28.6741%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="28.4641%" y="85" width="0.0830%" height="15" fill="rgb(251,196,23)" fg:x="5832" fg:w="17"/><text x="28.7570%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="28.7227%" y="85" width="0.0830%" height="15" fill="rgb(250,152,24)" fg:x="5885" fg:w="17"/><text x="29.0157%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="28.8057%" y="85" width="0.0830%" height="15" fill="rgb(209,150,17)" fg:x="5902" fg:w="17"/><text x="29.0987%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="29.0644%" y="85" width="0.0830%" height="15" fill="rgb(234,202,34)" fg:x="5955" fg:w="17"/><text x="29.3573%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="29.1473%" y="85" width="0.0830%" height="15" fill="rgb(253,148,53)" fg:x="5972" fg:w="17"/><text x="29.4403%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="29.4109%" y="85" width="0.0830%" height="15" fill="rgb(218,129,16)" fg:x="6026" fg:w="17"/><text x="29.7039%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="29.4939%" y="85" width="0.0830%" height="15" fill="rgb(216,85,19)" fg:x="6043" fg:w="17"/><text x="29.7868%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="29.7574%" y="85" width="0.0830%" height="15" fill="rgb(235,228,7)" fg:x="6097" fg:w="17"/><text x="30.0504%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="29.8404%" y="85" width="0.0830%" height="15" fill="rgb(245,175,0)" fg:x="6114" fg:w="17"/><text x="30.1334%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="29.9234%" y="85" width="0.0830%" height="15" fill="rgb(208,168,36)" fg:x="6131" fg:w="17"/><text x="30.2163%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="30.0063%" y="85" width="0.0830%" height="15" fill="rgb(246,171,24)" fg:x="6148" fg:w="17"/><text x="30.2993%" y="95.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.75%)</title><rect x="30.0893%" y="69" width="3.7532%" height="15" fill="rgb(215,142,24)" fg:x="6165" fg:w="769"/><text x="30.3823%" y="79.50">Blo..</text></g><g><title>equal.1 (777 instructions, 3.79%)</title><rect x="30.0893%" y="85" width="3.7923%" height="15" fill="rgb(250,187,7)" fg:x="6165" fg:w="777"/><text x="30.3823%" y="95.50">equ..</text></g><g><title>@anon-func-191.5 (1,191 instructions, 5.81%)</title><rect x="28.3811%" y="101" width="5.8129%" height="15" fill="rgb(228,66,33)" fg:x="5815" fg:w="1191"/><text x="28.6741%" y="111.50">@anon-..</text></g><g><title>rec.4 (1,574 instructions, 7.68%)</title><rect x="28.2981%" y="117" width="7.6822%" height="15" fill="rgb(234,215,21)" fg:x="5798" fg:w="1574"/><text x="28.5911%" y="127.50">rec.4</text></g><g><title>get.2 (1,654 instructions, 8.07%)</title><rect x="28.1615%" y="133" width="8.0726%" height="15" fill="rgb(222,191,20)" fg:x="5770" fg:w="1654"/><text x="28.4544%" y="143.50">get.2</text></g><g><title>account_get (2,740 instructions, 13.37%)</title><rect x="22.9343%" y="149" width="13.3730%" height="15" fill="rgb(245,79,54)" fg:x="4699" fg:w="2740"/><text x="23.2272%" y="159.50">account_get</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="36.3073%" y="149" width="0.0830%" height="15" fill="rgb(240,10,37)" fg:x="7439" fg:w="17"/><text x="36.6003%" y="159.50"></text></g><g><title>obj_idx&lt;6&gt; (17 instructions, 0.08%)</title><rect x="36.3903%" y="149" width="0.0830%" height="15" fill="rgb(214,192,32)" fg:x="7456" fg:w="17"/><text x="36.6832%" y="159.50"></text></g><g><title>obj_idx&lt;4&gt; (17 instructions, 0.08%)</title><rect x="36.4732%" y="149" width="0.0830%" height="15" fill="rgb(209,36,54)" fg:x="7473" fg:w="17"/><text x="36.7662%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="36.5562%" y="149" width="0.0830%" height="15" fill="rgb(220,10,11)" fg:x="7490" fg:w="17"/><text x="36.8492%" y="159.50"></text></g><g><title>obj_idx&lt;5&gt; (17 instructions, 0.08%)</title><rect x="36.6392%" y="149" width="0.0830%" height="15" fill="rgb(221,106,17)" fg:x="7507" fg:w="17"/><text x="36.9321%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="36.7221%" y="149" width="0.0830%" height="15" fill="rgb(251,142,44)" fg:x="7524" fg:w="17"/><text x="37.0151%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="36.8051%" y="149" width="0.0830%" height="15" fill="rgb(238,13,15)" fg:x="7541" fg:w="17"/><text x="37.0981%" y="159.50"></text></g><g><title>B_add (27 instructions, 0.13%)</title><rect x="36.8881%" y="149" width="0.1318%" height="15" fill="rgb(208,107,27)" fg:x="7558" fg:w="27"/><text x="37.1811%" y="159.50"></text></g><g><title>obj_idx&lt;6&gt; (17 instructions, 0.08%)</title><rect x="37.0199%" y="149" width="0.0830%" height="15" fill="rgb(205,136,37)" fg:x="7585" fg:w="17"/><text x="37.3128%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="37.1028%" y="149" width="0.0830%" height="15" fill="rgb(250,205,27)" fg:x="7602" fg:w="17"/><text x="37.3958%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="37.1858%" y="149" width="0.0830%" height="15" fill="rgb(210,80,43)" fg:x="7619" fg:w="17"/><text x="37.4788%" y="159.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="37.2688%" y="149" width="0.0586%" height="15" fill="rgb(247,160,36)" fg:x="7636" fg:w="12"/><text x="37.5617%" y="159.50"></text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.08%)</title><rect x="37.3273%" y="149" width="0.0830%" height="15" fill="rgb(234,13,49)" fg:x="7648" fg:w="17"/><text x="37.6203%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.28%)</title><rect x="37.4103%" y="101" width="0.2782%" height="15" fill="rgb(234,122,0)" fg:x="7665" fg:w="57"/><text x="37.7033%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.32%)</title><rect x="37.4103%" y="117" width="0.3172%" height="15" fill="rgb(207,146,38)" fg:x="7665" fg:w="65"/><text x="37.7033%" y="127.50"></text></g><g><title>memcpy (100 instructions, 0.49%)</title><rect x="37.7276%" y="117" width="0.4881%" height="15" fill="rgb(207,177,25)" fg:x="7730" fg:w="100"/><text x="38.0205%" y="127.50"></text></g><g><title>compute_crc32 (781 instructions, 3.81%)</title><rect x="38.2156%" y="117" width="3.8118%" height="15" fill="rgb(211,178,42)" fg:x="7830" fg:w="781"/><text x="38.5086%" y="127.50">com..</text></g><g><title>account_key (1,071 instructions, 5.23%)</title><rect x="37.4103%" y="133" width="5.2272%" height="15" fill="rgb(230,69,54)" fg:x="7665" fg:w="1071"/><text x="37.7033%" y="143.50">accou..</text></g><g><title>equalKey (28 instructions, 0.14%)</title><rect x="42.6375%" y="117" width="0.1367%" height="15" fill="rgb(214,135,41)" fg:x="8736" fg:w="28"/><text x="42.9305%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="42.7742%" y="101" width="0.0830%" height="15" fill="rgb(237,67,25)" fg:x="8764" fg:w="17"/><text x="43.0671%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="42.8571%" y="85" width="0.0830%" height="15" fill="rgb(222,189,50)" fg:x="8781" fg:w="17"/><text x="43.1501%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="42.9401%" y="85" width="0.0830%" height="15" fill="rgb(245,148,34)" fg:x="8798" fg:w="17"/><text x="43.2331%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="43.0231%" y="85" width="0.0830%" height="15" fill="rgb(222,29,6)" fg:x="8815" fg:w="17"/><text x="43.3161%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="43.1061%" y="85" width="0.0830%" height="15" fill="rgb(221,189,43)" fg:x="8832" fg:w="17"/><text x="43.3990%" y="95.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.75%)</title><rect x="43.1890%" y="69" width="3.7532%" height="15" fill="rgb(207,36,27)" fg:x="8849" fg:w="769"/><text x="43.4820%" y="79.50">Blo..</text></g><g><title>equal.1 (777 instructions, 3.79%)</title><rect x="43.1890%" y="85" width="3.7923%" height="15" fill="rgb(217,90,24)" fg:x="8849" fg:w="777"/><text x="43.4820%" y="95.50">equ..</text></g><g><title>@anon-func-191.5 (909 instructions, 4.44%)</title><rect x="42.8571%" y="101" width="4.4365%" height="15" fill="rgb(224,66,35)" fg:x="8781" fg:w="909"/><text x="43.1501%" y="111.50">@ano..</text></g><g><title>rec.4 (1,044 instructions, 5.10%)</title><rect x="42.7742%" y="117" width="5.0954%" height="15" fill="rgb(221,13,50)" fg:x="8764" fg:w="1044"/><text x="43.0671%" y="127.50">rec.4</text></g><g><title>get.2 (1,124 instructions, 5.49%)</title><rect x="42.6375%" y="133" width="5.4859%" height="15" fill="rgb(236,68,49)" fg:x="8736" fg:w="1124"/><text x="42.9305%" y="143.50">get.2</text></g><g><title>account_get (2,210 instructions, 10.79%)</title><rect x="37.4103%" y="149" width="10.7863%" height="15" fill="rgb(229,146,28)" fg:x="7665" fg:w="2210"/><text x="37.7033%" y="159.50">account_get</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="48.1966%" y="149" width="0.0830%" height="15" fill="rgb(225,31,38)" fg:x="9875" fg:w="17"/><text x="48.4896%" y="159.50"></text></g><g><title>obj_idx&lt;2&gt; (17 instructions, 0.08%)</title><rect x="48.2796%" y="149" width="0.0830%" height="15" fill="rgb(250,208,3)" fg:x="9892" fg:w="17"/><text x="48.5725%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="48.3625%" y="149" width="0.0830%" height="15" fill="rgb(246,54,23)" fg:x="9909" fg:w="17"/><text x="48.6555%" y="159.50"></text></g><g><title>B_add (27 instructions, 0.13%)</title><rect x="48.4455%" y="149" width="0.1318%" height="15" fill="rgb(243,76,11)" fg:x="9926" fg:w="27"/><text x="48.7385%" y="159.50"></text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.08%)</title><rect x="48.5773%" y="149" width="0.0830%" height="15" fill="rgb(245,21,50)" fg:x="9953" fg:w="17"/><text x="48.8703%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.28%)</title><rect x="48.6603%" y="101" width="0.2782%" height="15" fill="rgb(228,9,43)" fg:x="9970" fg:w="57"/><text x="48.9532%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.32%)</title><rect x="48.6603%" y="117" width="0.3172%" height="15" fill="rgb(208,100,47)" fg:x="9970" fg:w="65"/><text x="48.9532%" y="127.50"></text></g><g><title>memcpy (100 instructions, 0.49%)</title><rect x="48.9775%" y="117" width="0.4881%" height="15" fill="rgb(232,26,8)" fg:x="10035" fg:w="100"/><text x="49.2705%" y="127.50"></text></g><g><title>compute_crc32 (781 instructions, 3.81%)</title><rect x="49.4656%" y="117" width="3.8118%" height="15" fill="rgb(216,166,38)" fg:x="10135" fg:w="781"/><text x="49.7585%" y="127.50">com..</text></g><g><title>account_key (1,071 instructions, 5.23%)</title><rect x="48.6603%" y="133" width="5.2272%" height="15" fill="rgb(251,202,51)" fg:x="9970" fg:w="1071"/><text x="48.9532%" y="143.50">accou..</text></g><g><title>equalKey (28 instructions, 0.14%)</title><rect x="53.8875%" y="117" width="0.1367%" height="15" fill="rgb(254,216,34)" fg:x="11041" fg:w="28"/><text x="54.1804%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="54.0241%" y="101" width="0.0830%" height="15" fill="rgb(251,32,27)" fg:x="11069" fg:w="17"/><text x="54.3171%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="54.1071%" y="53" width="0.0830%" height="15" fill="rgb(208,127,28)" fg:x="11086" fg:w="17"/><text x="54.4001%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="54.1901%" y="53" width="0.0830%" height="15" fill="rgb(224,137,22)" fg:x="11103" fg:w="17"/><text x="54.4830%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="54.2730%" y="53" width="0.0830%" height="15" fill="rgb(254,70,32)" fg:x="11120" fg:w="17"/><text x="54.5660%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="54.3560%" y="53" width="0.0830%" height="15" fill="rgb(229,75,37)" fg:x="11137" fg:w="17"/><text x="54.6490%" y="63.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.75%)</title><rect x="54.4390%" y="37" width="3.7532%" height="15" fill="rgb(252,64,23)" fg:x="11154" fg:w="769"/><text x="54.7319%" y="47.50">Blo..</text></g><g><title>equal.1 (777 instructions, 3.79%)</title><rect x="54.4390%" y="53" width="3.7923%" height="15" fill="rgb(232,162,48)" fg:x="11154" fg:w="777"/><text x="54.7319%" y="63.50">equ..</text></g><g><title>@anon-func-191.5 (909 instructions, 4.44%)</title><rect x="54.1071%" y="69" width="4.4365%" height="15" fill="rgb(246,160,12)" fg:x="11086" fg:w="909"/><text x="54.4001%" y="79.50">@ano..</text></g><g><title>del (1,005 instructions, 4.91%)</title><rect x="54.1071%" y="85" width="4.9051%" height="15" fill="rgb(247,166,0)" fg:x="11086" fg:w="1005"/><text x="54.4001%" y="95.50">del</text></g><g><title>replace (1,219 instructions, 5.95%)</title><rect x="54.1071%" y="101" width="5.9495%" height="15" fill="rgb(249,219,21)" fg:x="11086" fg:w="1219"/><text x="54.4001%" y="111.50">replace</text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="60.0566%" y="69" width="0.0586%" height="15" fill="rgb(205,209,3)" fg:x="12305" fg:w="12"/><text x="60.3496%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.13%)</title><rect x="60.1152%" y="69" width="0.1318%" height="15" fill="rgb(243,44,1)" fg:x="12317" fg:w="27"/><text x="60.4082%" y="79.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="60.2470%" y="69" width="0.0586%" height="15" fill="rgb(206,159,16)" fg:x="12344" fg:w="12"/><text x="60.5399%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.13%)</title><rect x="60.3055%" y="69" width="0.1318%" height="15" fill="rgb(244,77,30)" fg:x="12356" fg:w="27"/><text x="60.5985%" y="79.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="60.4373%" y="69" width="0.0586%" height="15" fill="rgb(218,69,12)" fg:x="12383" fg:w="12"/><text x="60.7303%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.13%)</title><rect x="60.4959%" y="69" width="0.1318%" height="15" fill="rgb(212,87,7)" fg:x="12395" fg:w="27"/><text x="60.7888%" y="79.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="60.6277%" y="69" width="0.0586%" height="15" fill="rgb(245,114,25)" fg:x="12422" fg:w="12"/><text x="60.9206%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.13%)</title><rect x="60.6862%" y="69" width="0.1318%" height="15" fill="rgb(210,61,42)" fg:x="12434" fg:w="27"/><text x="60.9792%" y="79.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="60.8180%" y="69" width="0.0586%" height="15" fill="rgb(211,52,33)" fg:x="12461" fg:w="12"/><text x="61.1110%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.13%)</title><rect x="60.8766%" y="69" width="0.1318%" height="15" fill="rgb(234,58,33)" fg:x="12473" fg:w="27"/><text x="61.1695%" y="79.50"></text></g><g><title>rec (601 instructions, 2.93%)</title><rect x="60.0566%" y="85" width="2.9333%" height="15" fill="rgb(220,115,36)" fg:x="12305" fg:w="601"/><text x="60.3496%" y="95.50">rec</text></g><g><title>leaf (610 instructions, 2.98%)</title><rect x="60.0566%" y="101" width="2.9772%" height="15" fill="rgb(243,153,54)" fg:x="12305" fg:w="610"/><text x="60.3496%" y="111.50">le..</text></g><g><title>recursiveReplace (1,919 instructions, 9.37%)</title><rect x="54.0241%" y="117" width="9.3660%" height="15" fill="rgb(251,47,18)" fg:x="11069" fg:w="1919"/><text x="54.3171%" y="127.50">recursiveRe..</text></g><g><title>put.1 (2,086 instructions, 10.18%)</title><rect x="53.8875%" y="133" width="10.1811%" height="15" fill="rgb(242,102,42)" fg:x="11041" fg:w="2086"/><text x="54.1804%" y="143.50">put.1</text></g><g><title>account_put (3,209 instructions, 15.66%)</title><rect x="48.6603%" y="149" width="15.6621%" height="15" fill="rgb(234,31,38)" fg:x="9970" fg:w="3209"/><text x="48.9532%" y="159.50">account_put</text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="64.3223%" y="149" width="0.0830%" height="15" fill="rgb(221,117,51)" fg:x="13179" fg:w="17"/><text x="64.6153%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="64.4053%" y="149" width="0.0830%" height="15" fill="rgb(212,20,18)" fg:x="13196" fg:w="17"/><text x="64.6983%" y="159.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="64.4883%" y="149" width="0.0586%" height="15" fill="rgb(245,133,36)" fg:x="13213" fg:w="12"/><text x="64.7812%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="64.5468%" y="149" width="0.0830%" height="15" fill="rgb(212,6,19)" fg:x="13225" fg:w="17"/><text x="64.8398%" y="159.50"></text></g><g><title>obj_idx&lt;2&gt; (17 instructions, 0.08%)</title><rect x="64.6298%" y="149" width="0.0830%" height="15" fill="rgb(218,1,36)" fg:x="13242" fg:w="17"/><text x="64.9228%" y="159.50"></text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.08%)</title><rect x="64.7128%" y="149" width="0.0830%" height="15" fill="rgb(246,84,54)" fg:x="13259" fg:w="17"/><text x="65.0057%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="64.7957%" y="149" width="0.0830%" height="15" fill="rgb(242,110,6)" fg:x="13276" fg:w="17"/><text x="65.0887%" y="159.50"></text></g><g><title>proposal_key (316 instructions, 1.54%)</title><rect x="64.8787%" y="133" width="1.5423%" height="15" fill="rgb(214,47,5)" fg:x="13293" fg:w="316"/><text x="65.1717%" y="143.50"></text></g><g><title>equalKey (28 instructions, 0.14%)</title><rect x="66.4210%" y="117" width="0.1367%" height="15" fill="rgb(218,159,25)" fg:x="13609" fg:w="28"/><text x="66.7140%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="66.5577%" y="101" width="0.0830%" height="15" fill="rgb(215,211,28)" fg:x="13637" fg:w="17"/><text x="66.8506%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="66.6406%" y="53" width="0.0830%" height="15" fill="rgb(238,59,32)" fg:x="13654" fg:w="17"/><text x="66.9336%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.08%)</title><rect x="66.7236%" y="53" width="0.0830%" height="15" fill="rgb(226,82,3)" fg:x="13671" fg:w="17"/><text x="67.0166%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="66.8066%" y="53" width="0.0830%" height="15" fill="rgb(240,164,32)" fg:x="13688" fg:w="17"/><text x="67.0995%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.08%)</title><rect x="66.8896%" y="53" width="0.0830%" height="15" fill="rgb(232,46,7)" fg:x="13705" fg:w="17"/><text x="67.1825%" y="63.50"></text></g><g><title>B_eq (7 instructions, 0.03%)</title><rect x="66.9725%" y="37" width="0.0342%" height="15" fill="rgb(229,129,53)" fg:x="13722" fg:w="7"/><text x="67.2655%" y="47.50"></text></g><g><title>equal (15 instructions, 0.07%)</title><rect x="66.9725%" y="53" width="0.0732%" height="15" fill="rgb(234,188,29)" fg:x="13722" fg:w="15"/><text x="67.2655%" y="63.50"></text></g><g><title>@anon-func-191.5 (149 instructions, 0.73%)</title><rect x="66.6406%" y="69" width="0.7272%" height="15" fill="rgb(246,141,4)" fg:x="13654" fg:w="149"/><text x="66.9336%" y="79.50"></text></g><g><title>del (245 instructions, 1.20%)</title><rect x="66.6406%" y="85" width="1.1958%" height="15" fill="rgb(229,23,39)" fg:x="13654" fg:w="245"/><text x="66.9336%" y="95.50"></text></g><g><title>replace (459 instructions, 2.24%)</title><rect x="66.6406%" y="101" width="2.2402%" height="15" fill="rgb(206,12,3)" fg:x="13654" fg:w="459"/><text x="66.9336%" y="111.50">r..</text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="68.8809%" y="69" width="0.0586%" height="15" fill="rgb(252,226,20)" fg:x="14113" fg:w="12"/><text x="69.1738%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.13%)</title><rect x="68.9394%" y="69" width="0.1318%" height="15" fill="rgb(216,123,35)" fg:x="14125" fg:w="27"/><text x="69.2324%" y="79.50"></text></g><g><title>rec (201 instructions, 0.98%)</title><rect x="68.8809%" y="85" width="0.9810%" height="15" fill="rgb(212,68,40)" fg:x="14113" fg:w="201"/><text x="69.1738%" y="95.50"></text></g><g><title>leaf (210 instructions, 1.02%)</title><rect x="68.8809%" y="101" width="1.0249%" height="15" fill="rgb(254,125,32)" fg:x="14113" fg:w="210"/><text x="69.1738%" y="111.50"></text></g><g><title>recursiveReplace (759 instructions, 3.70%)</title><rect x="66.5577%" y="117" width="3.7044%" height="15" fill="rgb(253,97,22)" fg:x="13637" fg:w="759"/><text x="66.8506%" y="127.50">rec..</text></g><g><title>put.1 (926 instructions, 4.52%)</title><rect x="66.4210%" y="133" width="4.5195%" height="15" fill="rgb(241,101,14)" fg:x="13609" fg:w="926"/><text x="66.7140%" y="143.50">put.1</text></g><g><title>proposal_put (1,294 instructions, 6.32%)</title><rect x="64.8787%" y="149" width="6.3156%" height="15" fill="rgb(238,103,29)" fg:x="13293" fg:w="1294"/><text x="65.1717%" y="159.50">proposa..</text></g><g><title>@buffer_size&lt;v(accepted:u,executing:u,failed:t,open:u,rejected:u,succeeded:u)&gt; (49 instructions, 0.24%)</title><rect x="71.1943%" y="133" width="0.2392%" height="15" fill="rgb(233,195,47)" fg:x="14587" fg:w="49"/><text x="71.4873%" y="143.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.28%)</title><rect x="71.4335%" y="117" width="0.2782%" height="15" fill="rgb(246,218,30)" fg:x="14636" fg:w="57"/><text x="71.7264%" y="127.50"></text></g><g><title>alloc_blob (65 instructions, 0.32%)</title><rect x="71.4335%" y="133" width="0.3172%" height="15" fill="rgb(219,145,47)" fg:x="14636" fg:w="65"/><text x="71.7264%" y="143.50"></text></g><g><title>memcpy (142 instructions, 0.69%)</title><rect x="71.7507%" y="133" width="0.6931%" height="15" fill="rgb(243,12,26)" fg:x="14701" fg:w="142"/><text x="72.0437%" y="143.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.28%)</title><rect x="72.4438%" y="117" width="0.2782%" height="15" fill="rgb(214,87,16)" fg:x="14843" fg:w="57"/><text x="72.7367%" y="127.50"></text></g><g><title>alloc_blob (65 instructions, 0.32%)</title><rect x="72.4438%" y="133" width="0.3172%" height="15" fill="rgb(208,99,42)" fg:x="14843" fg:w="65"/><text x="72.7367%" y="143.50"></text></g><g><title>leb128_encode (11 instructions, 0.05%)</title><rect x="72.7610%" y="133" width="0.0537%" height="15" fill="rgb(253,99,2)" fg:x="14908" fg:w="11"/><text x="73.0540%" y="143.50"></text></g><g><title>leb128_encode (11 instructions, 0.05%)</title><rect x="72.8147%" y="117" width="0.0537%" height="15" fill="rgb(220,168,23)" fg:x="14919" fg:w="11"/><text x="73.1076%" y="127.50"></text></g><g><title>@serialize_go&lt;v(accepted:u,executing:u,failed:t,open:u,rejected:u,succeeded:u)&gt; (64 instructions, 0.31%)</title><rect x="72.8147%" y="133" width="0.3124%" height="15" fill="rgb(242,38,24)" fg:x="14919" fg:w="64"/><text x="73.1076%" y="143.50"></text></g><g><title>$lambda.26 (1,616 instructions, 7.89%)</title><rect x="71.1943%" y="149" width="7.8872%" height="15" fill="rgb(225,182,9)" fg:x="14587" fg:w="1616"/><text x="71.4873%" y="159.50">$lambda.26</text></g><g><title>$lambda (14,140 instructions, 69.01%)</title><rect x="18.9760%" y="165" width="69.0126%" height="15" fill="rgb(243,178,37)" fg:x="3888" fg:w="14140"/><text x="19.2690%" y="175.50">$lambda</text></g><g><title>schedule_copying_gc (108 instructions, 0.53%)</title><rect x="87.9887%" y="165" width="0.5271%" height="15" fill="rgb(232,139,19)" fg:x="18028" fg:w="108"/><text x="88.2816%" y="175.50"></text></g><g><title>trans_state4 (11 instructions, 0.05%)</title><rect x="88.5158%" y="165" width="0.0537%" height="15" fill="rgb(225,201,24)" fg:x="18136" fg:w="11"/><text x="88.8088%" y="175.50"></text></g><g><title>all (20,489 instructions, 100%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(221,47,46)" fg:x="0" fg:w="20489"/><text x="0.2930%" y="207.50"></text></g><g><title>vote (20,489 instructions, 100.00%)</title><rect x="0.0000%" y="181" width="100.0000%" height="15" fill="rgb(249,23,13)" fg:x="0" fg:w="20489"/><text x="0.2930%" y="191.50">vote</text></g></svg></svg>