<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="246" onload="init(evt)" viewBox="0 0 1024 246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="246" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">DAO.vote</text><text id="details" fill="rgb(0,0,0)" x="10" y="229.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="229.00"> </text><svg id="frames" x="10" width="1004" total_samples="19569"><g><title>trans_state5 (10 instructions, 0.05%)</title><rect x="0.0000%" y="165" width="0.0511%" height="15" fill="rgb(236,59,4)" fg:x="0" fg:w="10"/><text x="0.2930%" y="175.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h87fa1d046288d69e (56 instructions, 0.29%)</title><rect x="0.0511%" y="165" width="0.2862%" height="15" fill="rgb(254,179,45)" fg:x="10" fg:w="56"/><text x="0.3441%" y="175.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="0.3373%" y="149" width="0.2555%" height="15" fill="rgb(226,14,10)" fg:x="66" fg:w="50"/><text x="0.6302%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h87fa1d046288d69e (56 instructions, 0.29%)</title><rect x="0.5928%" y="149" width="0.2862%" height="15" fill="rgb(244,27,41)" fg:x="116" fg:w="56"/><text x="0.8857%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="0.8789%" y="149" width="0.3270%" height="15" fill="rgb(235,35,32)" fg:x="172" fg:w="64"/><text x="1.1719%" y="159.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="1.2060%" y="149" width="0.2555%" height="15" fill="rgb(218,68,31)" fg:x="236" fg:w="50"/><text x="1.4990%" y="159.50"></text></g><g><title>leb128_decode (214 instructions, 1.09%)</title><rect x="1.4615%" y="149" width="1.0936%" height="15" fill="rgb(207,120,37)" fg:x="286" fg:w="214"/><text x="1.7545%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="2.5551%" y="149" width="0.3270%" height="15" fill="rgb(227,98,0)" fg:x="500" fg:w="64"/><text x="2.8480%" y="159.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53f71f4a4e97da09 (12 instructions, 0.06%)</title><rect x="2.8821%" y="149" width="0.0613%" height="15" fill="rgb(207,7,3)" fg:x="564" fg:w="12"/><text x="3.1751%" y="159.50"></text></g><g><title>leb128_decode (214 instructions, 1.09%)</title><rect x="2.9434%" y="149" width="1.0936%" height="15" fill="rgb(206,98,19)" fg:x="576" fg:w="214"/><text x="3.2364%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="4.0370%" y="149" width="0.3270%" height="15" fill="rgb(217,5,26)" fg:x="790" fg:w="64"/><text x="4.3300%" y="159.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53f71f4a4e97da09 (12 instructions, 0.06%)</title><rect x="4.3640%" y="149" width="0.0613%" height="15" fill="rgb(235,190,38)" fg:x="854" fg:w="12"/><text x="4.6570%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="4.4254%" y="149" width="0.3270%" height="15" fill="rgb(247,86,24)" fg:x="866" fg:w="64"/><text x="4.7183%" y="159.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="4.7524%" y="149" width="0.2555%" height="15" fill="rgb(205,101,16)" fg:x="930" fg:w="50"/><text x="5.0454%" y="159.50"></text></g><g><title>leb128_decode (132 instructions, 0.67%)</title><rect x="5.0079%" y="149" width="0.6745%" height="15" fill="rgb(246,168,33)" fg:x="980" fg:w="132"/><text x="5.3009%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="5.6825%" y="149" width="0.3270%" height="15" fill="rgb(231,114,1)" fg:x="1112" fg:w="64"/><text x="5.9754%" y="159.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53f71f4a4e97da09 (12 instructions, 0.06%)</title><rect x="6.0095%" y="149" width="0.0613%" height="15" fill="rgb(207,184,53)" fg:x="1176" fg:w="12"/><text x="6.3025%" y="159.50"></text></g><g><title>leb128_decode (173 instructions, 0.88%)</title><rect x="6.0708%" y="149" width="0.8841%" height="15" fill="rgb(224,95,51)" fg:x="1188" fg:w="173"/><text x="6.3638%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="6.9549%" y="149" width="0.3270%" height="15" fill="rgb(212,188,45)" fg:x="1361" fg:w="64"/><text x="7.2478%" y="159.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53f71f4a4e97da09 (12 instructions, 0.06%)</title><rect x="7.2819%" y="149" width="0.0613%" height="15" fill="rgb(223,154,38)" fg:x="1425" fg:w="12"/><text x="7.5749%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="7.3432%" y="149" width="0.3270%" height="15" fill="rgb(251,22,52)" fg:x="1437" fg:w="64"/><text x="7.6362%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="7.6703%" y="149" width="0.3270%" height="15" fill="rgb(229,209,22)" fg:x="1501" fg:w="64"/><text x="7.9633%" y="159.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="7.9973%" y="149" width="0.2555%" height="15" fill="rgb(234,138,34)" fg:x="1565" fg:w="50"/><text x="8.2903%" y="159.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="8.2528%" y="149" width="0.3270%" height="15" fill="rgb(212,95,11)" fg:x="1615" fg:w="64"/><text x="8.5458%" y="159.50"></text></g><g><title>motoko_rts::idl::check_typearg::h53f71f4a4e97da09 (12 instructions, 0.06%)</title><rect x="8.5799%" y="149" width="0.0613%" height="15" fill="rgb(240,179,47)" fg:x="1679" fg:w="12"/><text x="8.8729%" y="159.50"></text></g><g><title>parse_idl_header (2,145 instructions, 10.96%)</title><rect x="0.3373%" y="165" width="10.9612%" height="15" fill="rgb(240,163,11)" fg:x="66" fg:w="2145"/><text x="0.6302%" y="175.50">parse_idl_hea..</text></g><g><title>memset (6 instructions, 0.03%)</title><rect x="11.2985%" y="149" width="0.0307%" height="15" fill="rgb(236,37,12)" fg:x="2211" fg:w="6"/><text x="11.5915%" y="159.50"></text></g><g><title>idl_sub_buf_init (15 instructions, 0.08%)</title><rect x="11.2985%" y="165" width="0.0767%" height="15" fill="rgb(232,164,16)" fg:x="2211" fg:w="15"/><text x="11.5915%" y="175.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="11.3751%" y="165" width="0.2555%" height="15" fill="rgb(244,205,15)" fg:x="2226" fg:w="50"/><text x="11.6681%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="11.6306%" y="165" width="0.3270%" height="15" fill="rgb(223,117,47)" fg:x="2276" fg:w="64"/><text x="11.9236%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="11.9577%" y="165" width="0.3270%" height="15" fill="rgb(244,107,35)" fg:x="2340" fg:w="64"/><text x="12.2507%" y="175.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="12.2847%" y="165" width="0.2555%" height="15" fill="rgb(205,140,8)" fg:x="2404" fg:w="50"/><text x="12.5777%" y="175.50"></text></g><g><title>leb128_decode (214 instructions, 1.09%)</title><rect x="12.5402%" y="149" width="1.0936%" height="15" fill="rgb(228,84,46)" fg:x="2454" fg:w="214"/><text x="12.8332%" y="159.50"></text></g><g><title>find_field (250 instructions, 1.28%)</title><rect x="12.5402%" y="165" width="1.2775%" height="15" fill="rgb(254,188,9)" fg:x="2454" fg:w="250"/><text x="12.8332%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="13.8178%" y="165" width="0.3270%" height="15" fill="rgb(206,112,54)" fg:x="2704" fg:w="64"/><text x="14.1107%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="14.1448%" y="165" width="0.3270%" height="15" fill="rgb(216,84,49)" fg:x="2768" fg:w="64"/><text x="14.4378%" y="175.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="14.4719%" y="165" width="0.2555%" height="15" fill="rgb(214,194,35)" fg:x="2832" fg:w="50"/><text x="14.7648%" y="175.50"></text></g><g><title>leb128_decode (50 instructions, 0.26%)</title><rect x="14.7274%" y="165" width="0.2555%" height="15" fill="rgb(249,28,3)" fg:x="2882" fg:w="50"/><text x="15.0203%" y="175.50"></text></g><g><title>skip_leb128 (59 instructions, 0.30%)</title><rect x="14.9829%" y="165" width="0.3015%" height="15" fill="rgb(222,56,52)" fg:x="2932" fg:w="59"/><text x="15.2758%" y="175.50"></text></g><g><title>skip_leb128 (25 instructions, 0.13%)</title><rect x="15.2844%" y="165" width="0.1278%" height="15" fill="rgb(245,217,50)" fg:x="2991" fg:w="25"/><text x="15.5773%" y="175.50"></text></g><g><title>leb128_decode (173 instructions, 0.88%)</title><rect x="15.4121%" y="165" width="0.8841%" height="15" fill="rgb(213,201,24)" fg:x="3016" fg:w="173"/><text x="15.7051%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="16.2962%" y="165" width="0.3270%" height="15" fill="rgb(248,116,28)" fg:x="3189" fg:w="64"/><text x="16.5892%" y="175.50"></text></g><g><title>@deserialize_go&lt;u&gt; (28 instructions, 0.14%)</title><rect x="16.6232%" y="165" width="0.1431%" height="15" fill="rgb(219,72,43)" fg:x="3253" fg:w="28"/><text x="16.9162%" y="175.50"></text></g><g><title>leb128_decode (214 instructions, 1.09%)</title><rect x="16.7663%" y="149" width="1.0936%" height="15" fill="rgb(209,138,14)" fg:x="3281" fg:w="214"/><text x="17.0593%" y="159.50"></text></g><g><title>find_field (250 instructions, 1.28%)</title><rect x="16.7663%" y="165" width="1.2775%" height="15" fill="rgb(222,18,33)" fg:x="3281" fg:w="250"/><text x="17.0593%" y="175.50"></text></g><g><title>sleb128_decode (64 instructions, 0.33%)</title><rect x="18.0438%" y="165" width="0.3270%" height="15" fill="rgb(213,199,7)" fg:x="3531" fg:w="64"/><text x="18.3368%" y="175.50"></text></g><g><title>bigint_leb128_decode_word64 (40 instructions, 0.20%)</title><rect x="18.3709%" y="149" width="0.2044%" height="15" fill="rgb(250,110,10)" fg:x="3595" fg:w="40"/><text x="18.6639%" y="159.50"></text></g><g><title>@deserialize_go&lt;N&gt; (101 instructions, 0.52%)</title><rect x="18.3709%" y="165" width="0.5161%" height="15" fill="rgb(248,123,6)" fg:x="3595" fg:w="101"/><text x="18.6639%" y="175.50"></text></g><g><title>skip_fields (6 instructions, 0.03%)</title><rect x="18.8870%" y="165" width="0.0307%" height="15" fill="rgb(206,91,31)" fg:x="3696" fg:w="6"/><text x="19.1800%" y="175.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h87fa1d046288d69e (56 instructions, 0.29%)</title><rect x="18.9177%" y="149" width="0.2862%" height="15" fill="rgb(211,154,13)" fg:x="3702" fg:w="56"/><text x="19.2106%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="19.2038%" y="149" width="0.0869%" height="15" fill="rgb(225,148,7)" fg:x="3758" fg:w="17"/><text x="19.4968%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="19.2907%" y="149" width="0.0869%" height="15" fill="rgb(220,160,43)" fg:x="3775" fg:w="17"/><text x="19.5837%" y="159.50"></text></g><g><title>proposal_key (317 instructions, 1.62%)</title><rect x="19.3776%" y="133" width="1.6199%" height="15" fill="rgb(213,52,39)" fg:x="3792" fg:w="317"/><text x="19.6706%" y="143.50"></text></g><g><title>equalKey (28 instructions, 0.14%)</title><rect x="20.9975%" y="117" width="0.1431%" height="15" fill="rgb(243,137,7)" fg:x="4109" fg:w="28"/><text x="21.2905%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="21.1406%" y="101" width="0.0869%" height="15" fill="rgb(230,79,13)" fg:x="4137" fg:w="17"/><text x="21.4335%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="21.2275%" y="85" width="0.0869%" height="15" fill="rgb(247,105,23)" fg:x="4154" fg:w="17"/><text x="21.5204%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="21.3143%" y="85" width="0.0869%" height="15" fill="rgb(223,179,41)" fg:x="4171" fg:w="17"/><text x="21.6073%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="21.4012%" y="85" width="0.0869%" height="15" fill="rgb(218,9,34)" fg:x="4188" fg:w="17"/><text x="21.6942%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="21.4881%" y="85" width="0.0869%" height="15" fill="rgb(222,106,8)" fg:x="4205" fg:w="17"/><text x="21.7810%" y="95.50"></text></g><g><title>B_eq (7 instructions, 0.04%)</title><rect x="21.5749%" y="69" width="0.0358%" height="15" fill="rgb(211,220,0)" fg:x="4222" fg:w="7"/><text x="21.8679%" y="79.50"></text></g><g><title>equal (15 instructions, 0.08%)</title><rect x="21.5749%" y="85" width="0.0767%" height="15" fill="rgb(229,52,16)" fg:x="4222" fg:w="15"/><text x="21.8679%" y="95.50"></text></g><g><title>anon-func-192.5 (149 instructions, 0.76%)</title><rect x="21.2275%" y="101" width="0.7614%" height="15" fill="rgb(212,155,18)" fg:x="4154" fg:w="149"/><text x="21.5204%" y="111.50"></text></g><g><title>rec.4 (284 instructions, 1.45%)</title><rect x="21.1406%" y="117" width="1.4513%" height="15" fill="rgb(242,21,14)" fg:x="4137" fg:w="284"/><text x="21.4335%" y="127.50"></text></g><g><title>get.2 (364 instructions, 1.86%)</title><rect x="20.9975%" y="133" width="1.8601%" height="15" fill="rgb(222,19,48)" fg:x="4109" fg:w="364"/><text x="21.2905%" y="143.50"></text></g><g><title>proposal_get (696 instructions, 3.56%)</title><rect x="19.3776%" y="149" width="3.5566%" height="15" fill="rgb(232,45,27)" fg:x="3792" fg:w="696"/><text x="19.6706%" y="159.50">pro..</text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="22.9342%" y="149" width="0.0869%" height="15" fill="rgb(249,103,42)" fg:x="4488" fg:w="17"/><text x="23.2272%" y="159.50"></text></g><g><title>compute_crc32 (778 instructions, 3.98%)</title><rect x="23.0211%" y="117" width="3.9757%" height="15" fill="rgb(246,81,33)" fg:x="4505" fg:w="778"/><text x="23.3141%" y="127.50">com..</text></g><g><title>account_key (842 instructions, 4.30%)</title><rect x="23.0211%" y="133" width="4.3027%" height="15" fill="rgb(252,33,42)" fg:x="4505" fg:w="842"/><text x="23.3141%" y="143.50">acco..</text></g><g><title>equalKey (28 instructions, 0.14%)</title><rect x="27.3238%" y="117" width="0.1431%" height="15" fill="rgb(209,212,41)" fg:x="5347" fg:w="28"/><text x="27.6168%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="27.4669%" y="101" width="0.0869%" height="15" fill="rgb(207,154,6)" fg:x="5375" fg:w="17"/><text x="27.7599%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="27.5538%" y="85" width="0.0869%" height="15" fill="rgb(223,64,47)" fg:x="5392" fg:w="17"/><text x="27.8468%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="27.6407%" y="85" width="0.0869%" height="15" fill="rgb(211,161,38)" fg:x="5409" fg:w="17"/><text x="27.9336%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="27.9217%" y="85" width="0.0869%" height="15" fill="rgb(219,138,40)" fg:x="5464" fg:w="17"/><text x="28.2147%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="28.0086%" y="85" width="0.0869%" height="15" fill="rgb(241,228,46)" fg:x="5481" fg:w="17"/><text x="28.3016%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="28.2845%" y="85" width="0.0869%" height="15" fill="rgb(223,209,38)" fg:x="5535" fg:w="17"/><text x="28.5775%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="28.3714%" y="85" width="0.0869%" height="15" fill="rgb(236,164,45)" fg:x="5552" fg:w="17"/><text x="28.6644%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="28.6525%" y="85" width="0.0869%" height="15" fill="rgb(231,15,5)" fg:x="5607" fg:w="17"/><text x="28.9454%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="28.7393%" y="85" width="0.0869%" height="15" fill="rgb(252,35,15)" fg:x="5624" fg:w="17"/><text x="29.0323%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="29.0204%" y="85" width="0.0869%" height="15" fill="rgb(248,181,18)" fg:x="5679" fg:w="17"/><text x="29.3134%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="29.1073%" y="85" width="0.0869%" height="15" fill="rgb(233,39,42)" fg:x="5696" fg:w="17"/><text x="29.4002%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="29.1941%" y="85" width="0.0869%" height="15" fill="rgb(238,110,33)" fg:x="5713" fg:w="17"/><text x="29.4871%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="29.2810%" y="85" width="0.0869%" height="15" fill="rgb(233,195,10)" fg:x="5730" fg:w="17"/><text x="29.5740%" y="95.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.93%)</title><rect x="29.3679%" y="69" width="3.9297%" height="15" fill="rgb(254,105,3)" fg:x="5747" fg:w="769"/><text x="29.6608%" y="79.50">Blo..</text></g><g><title>equal.1 (777 instructions, 3.97%)</title><rect x="29.3679%" y="85" width="3.9706%" height="15" fill="rgb(221,225,9)" fg:x="5747" fg:w="777"/><text x="29.6608%" y="95.50">equ..</text></g><g><title>anon-func-192.5 (1,198 instructions, 6.12%)</title><rect x="27.5538%" y="101" width="6.1219%" height="15" fill="rgb(224,227,45)" fg:x="5392" fg:w="1198"/><text x="27.8468%" y="111.50">anon-f..</text></g><g><title>rec.4 (1,581 instructions, 8.08%)</title><rect x="27.4669%" y="117" width="8.0791%" height="15" fill="rgb(229,198,43)" fg:x="5375" fg:w="1581"/><text x="27.7599%" y="127.50">rec.4</text></g><g><title>get.2 (1,661 instructions, 8.49%)</title><rect x="27.3238%" y="133" width="8.4879%" height="15" fill="rgb(206,209,35)" fg:x="5347" fg:w="1661"/><text x="27.6168%" y="143.50">get.2</text></g><g><title>account_get (2,518 instructions, 12.87%)</title><rect x="23.0211%" y="149" width="12.8673%" height="15" fill="rgb(245,195,53)" fg:x="4505" fg:w="2518"/><text x="23.3141%" y="159.50">account_get</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="35.8884%" y="149" width="0.0869%" height="15" fill="rgb(240,92,26)" fg:x="7023" fg:w="17"/><text x="36.1814%" y="159.50"></text></g><g><title>obj_idx&lt;6&gt; (17 instructions, 0.09%)</title><rect x="35.9753%" y="149" width="0.0869%" height="15" fill="rgb(207,40,23)" fg:x="7040" fg:w="17"/><text x="36.2682%" y="159.50"></text></g><g><title>obj_idx&lt;4&gt; (17 instructions, 0.09%)</title><rect x="36.0621%" y="149" width="0.0869%" height="15" fill="rgb(223,111,35)" fg:x="7057" fg:w="17"/><text x="36.3551%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="36.1490%" y="149" width="0.0869%" height="15" fill="rgb(229,147,28)" fg:x="7074" fg:w="17"/><text x="36.4420%" y="159.50"></text></g><g><title>obj_idx&lt;5&gt; (17 instructions, 0.09%)</title><rect x="36.2359%" y="149" width="0.0869%" height="15" fill="rgb(211,29,28)" fg:x="7091" fg:w="17"/><text x="36.5289%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="36.3228%" y="149" width="0.0869%" height="15" fill="rgb(228,72,33)" fg:x="7108" fg:w="17"/><text x="36.6157%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="36.4096%" y="149" width="0.0869%" height="15" fill="rgb(205,214,31)" fg:x="7125" fg:w="17"/><text x="36.7026%" y="159.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="36.4965%" y="149" width="0.1380%" height="15" fill="rgb(224,111,15)" fg:x="7142" fg:w="27"/><text x="36.7895%" y="159.50"></text></g><g><title>obj_idx&lt;6&gt; (17 instructions, 0.09%)</title><rect x="36.6345%" y="149" width="0.0869%" height="15" fill="rgb(253,21,26)" fg:x="7169" fg:w="17"/><text x="36.9274%" y="159.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="36.7213%" y="149" width="0.0869%" height="15" fill="rgb(245,139,43)" fg:x="7186" fg:w="17"/><text x="37.0143%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="36.8082%" y="149" width="0.0869%" height="15" fill="rgb(252,170,7)" fg:x="7203" fg:w="17"/><text x="37.1012%" y="159.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="36.8951%" y="149" width="0.0613%" height="15" fill="rgb(231,118,14)" fg:x="7220" fg:w="12"/><text x="37.1881%" y="159.50"></text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.09%)</title><rect x="36.9564%" y="149" width="0.0869%" height="15" fill="rgb(238,83,0)" fg:x="7232" fg:w="17"/><text x="37.2494%" y="159.50"></text></g><g><title>compute_crc32 (778 instructions, 3.98%)</title><rect x="37.0433%" y="117" width="3.9757%" height="15" fill="rgb(221,39,39)" fg:x="7249" fg:w="778"/><text x="37.3363%" y="127.50">com..</text></g><g><title>account_key (842 instructions, 4.30%)</title><rect x="37.0433%" y="133" width="4.3027%" height="15" fill="rgb(222,119,46)" fg:x="7249" fg:w="842"/><text x="37.3363%" y="143.50">acco..</text></g><g><title>equalKey (28 instructions, 0.14%)</title><rect x="41.3460%" y="117" width="0.1431%" height="15" fill="rgb(222,165,49)" fg:x="8091" fg:w="28"/><text x="41.6390%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="41.4891%" y="101" width="0.0869%" height="15" fill="rgb(219,113,52)" fg:x="8119" fg:w="17"/><text x="41.7821%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="41.5760%" y="85" width="0.0869%" height="15" fill="rgb(214,7,15)" fg:x="8136" fg:w="17"/><text x="41.8689%" y="95.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="41.6628%" y="85" width="0.0869%" height="15" fill="rgb(235,32,4)" fg:x="8153" fg:w="17"/><text x="41.9558%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="41.7497%" y="85" width="0.0869%" height="15" fill="rgb(238,90,54)" fg:x="8170" fg:w="17"/><text x="42.0427%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="41.8366%" y="85" width="0.0869%" height="15" fill="rgb(213,208,19)" fg:x="8187" fg:w="17"/><text x="42.1295%" y="95.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.93%)</title><rect x="41.9235%" y="69" width="3.9297%" height="15" fill="rgb(233,156,4)" fg:x="8204" fg:w="769"/><text x="42.2164%" y="79.50">Blo..</text></g><g><title>equal.1 (777 instructions, 3.97%)</title><rect x="41.9235%" y="85" width="3.9706%" height="15" fill="rgb(207,194,5)" fg:x="8204" fg:w="777"/><text x="42.2164%" y="95.50">equ..</text></g><g><title>anon-func-192.5 (911 instructions, 4.66%)</title><rect x="41.5760%" y="101" width="4.6553%" height="15" fill="rgb(206,111,30)" fg:x="8136" fg:w="911"/><text x="41.8689%" y="111.50">anon..</text></g><g><title>rec.4 (1,046 instructions, 5.35%)</title><rect x="41.4891%" y="117" width="5.3452%" height="15" fill="rgb(243,70,54)" fg:x="8119" fg:w="1046"/><text x="41.7821%" y="127.50">rec.4</text></g><g><title>get.2 (1,126 instructions, 5.75%)</title><rect x="41.3460%" y="133" width="5.7540%" height="15" fill="rgb(242,28,8)" fg:x="8091" fg:w="1126"/><text x="41.6390%" y="143.50">get.2</text></g><g><title>account_get (1,983 instructions, 10.13%)</title><rect x="37.0433%" y="149" width="10.1334%" height="15" fill="rgb(219,106,18)" fg:x="7249" fg:w="1983"/><text x="37.3363%" y="159.50">account_get</text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="47.1767%" y="149" width="0.0869%" height="15" fill="rgb(244,222,10)" fg:x="9232" fg:w="17"/><text x="47.4696%" y="159.50"></text></g><g><title>obj_idx&lt;2&gt; (17 instructions, 0.09%)</title><rect x="47.2635%" y="149" width="0.0869%" height="15" fill="rgb(236,179,52)" fg:x="9249" fg:w="17"/><text x="47.5565%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="47.3504%" y="149" width="0.0869%" height="15" fill="rgb(213,23,39)" fg:x="9266" fg:w="17"/><text x="47.6434%" y="159.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="47.4373%" y="149" width="0.1380%" height="15" fill="rgb(238,48,10)" fg:x="9283" fg:w="27"/><text x="47.7302%" y="159.50"></text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.09%)</title><rect x="47.5752%" y="149" width="0.0869%" height="15" fill="rgb(251,196,23)" fg:x="9310" fg:w="17"/><text x="47.8682%" y="159.50"></text></g><g><title>compute_crc32 (778 instructions, 3.98%)</title><rect x="47.6621%" y="117" width="3.9757%" height="15" fill="rgb(250,152,24)" fg:x="9327" fg:w="778"/><text x="47.9551%" y="127.50">com..</text></g><g><title>account_key (842 instructions, 4.30%)</title><rect x="47.6621%" y="133" width="4.3027%" height="15" fill="rgb(209,150,17)" fg:x="9327" fg:w="842"/><text x="47.9551%" y="143.50">acco..</text></g><g><title>equalKey (28 instructions, 0.14%)</title><rect x="51.9648%" y="117" width="0.1431%" height="15" fill="rgb(234,202,34)" fg:x="10169" fg:w="28"/><text x="52.2578%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="52.1079%" y="101" width="0.0869%" height="15" fill="rgb(253,148,53)" fg:x="10197" fg:w="17"/><text x="52.4009%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="52.1948%" y="53" width="0.0869%" height="15" fill="rgb(218,129,16)" fg:x="10214" fg:w="17"/><text x="52.4878%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="52.2817%" y="53" width="0.0869%" height="15" fill="rgb(216,85,19)" fg:x="10231" fg:w="17"/><text x="52.5746%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="52.3685%" y="53" width="0.0869%" height="15" fill="rgb(235,228,7)" fg:x="10248" fg:w="17"/><text x="52.6615%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="52.4554%" y="53" width="0.0869%" height="15" fill="rgb(245,175,0)" fg:x="10265" fg:w="17"/><text x="52.7484%" y="63.50"></text></g><g><title>Blob.compare_eq (769 instructions, 3.93%)</title><rect x="52.5423%" y="37" width="3.9297%" height="15" fill="rgb(208,168,36)" fg:x="10282" fg:w="769"/><text x="52.8353%" y="47.50">Blo..</text></g><g><title>equal.1 (777 instructions, 3.97%)</title><rect x="52.5423%" y="53" width="3.9706%" height="15" fill="rgb(246,171,24)" fg:x="10282" fg:w="777"/><text x="52.8353%" y="63.50">equ..</text></g><g><title>anon-func-192.5 (911 instructions, 4.66%)</title><rect x="52.1948%" y="69" width="4.6553%" height="15" fill="rgb(215,142,24)" fg:x="10214" fg:w="911"/><text x="52.4878%" y="79.50">anon..</text></g><g><title>del (1,007 instructions, 5.15%)</title><rect x="52.1948%" y="85" width="5.1459%" height="15" fill="rgb(250,187,7)" fg:x="10214" fg:w="1007"/><text x="52.4878%" y="95.50">del</text></g><g><title>replace (1,221 instructions, 6.24%)</title><rect x="52.1948%" y="101" width="6.2395%" height="15" fill="rgb(228,66,33)" fg:x="10214" fg:w="1221"/><text x="52.4878%" y="111.50">replace</text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="58.4343%" y="69" width="0.0613%" height="15" fill="rgb(234,215,21)" fg:x="11435" fg:w="12"/><text x="58.7272%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="58.4956%" y="69" width="0.1380%" height="15" fill="rgb(222,191,20)" fg:x="11447" fg:w="27"/><text x="58.7885%" y="79.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="58.6336%" y="69" width="0.0613%" height="15" fill="rgb(245,79,54)" fg:x="11474" fg:w="12"/><text x="58.9265%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="58.6949%" y="69" width="0.1380%" height="15" fill="rgb(240,10,37)" fg:x="11486" fg:w="27"/><text x="58.9878%" y="79.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="58.8328%" y="69" width="0.0613%" height="15" fill="rgb(214,192,32)" fg:x="11513" fg:w="12"/><text x="59.1258%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="58.8942%" y="69" width="0.1380%" height="15" fill="rgb(209,36,54)" fg:x="11525" fg:w="27"/><text x="59.1871%" y="79.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="59.0321%" y="69" width="0.0613%" height="15" fill="rgb(220,10,11)" fg:x="11552" fg:w="12"/><text x="59.3251%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="59.0935%" y="69" width="0.1380%" height="15" fill="rgb(221,106,17)" fg:x="11564" fg:w="27"/><text x="59.3864%" y="79.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="59.2314%" y="69" width="0.0613%" height="15" fill="rgb(251,142,44)" fg:x="11591" fg:w="12"/><text x="59.5244%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="59.2928%" y="69" width="0.1380%" height="15" fill="rgb(238,13,15)" fg:x="11603" fg:w="27"/><text x="59.5857%" y="79.50"></text></g><g><title>rec (601 instructions, 3.07%)</title><rect x="58.4343%" y="85" width="3.0712%" height="15" fill="rgb(208,107,27)" fg:x="11435" fg:w="601"/><text x="58.7272%" y="95.50">rec</text></g><g><title>leaf (610 instructions, 3.12%)</title><rect x="58.4343%" y="101" width="3.1172%" height="15" fill="rgb(205,136,37)" fg:x="11435" fg:w="610"/><text x="58.7272%" y="111.50">le..</text></g><g><title>recursiveReplace (1,921 instructions, 9.82%)</title><rect x="52.1079%" y="117" width="9.8165%" height="15" fill="rgb(250,205,27)" fg:x="10197" fg:w="1921"/><text x="52.4009%" y="127.50">recursiveRep..</text></g><g><title>put.1 (2,088 instructions, 10.67%)</title><rect x="51.9648%" y="133" width="10.6699%" height="15" fill="rgb(210,80,43)" fg:x="10169" fg:w="2088"/><text x="52.2578%" y="143.50">put.1</text></g><g><title>account_put (2,982 instructions, 15.24%)</title><rect x="47.6621%" y="149" width="15.2384%" height="15" fill="rgb(247,160,36)" fg:x="9327" fg:w="2982"/><text x="47.9551%" y="159.50">account_put</text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="62.9005%" y="149" width="0.0869%" height="15" fill="rgb(234,13,49)" fg:x="12309" fg:w="17"/><text x="63.1935%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="62.9874%" y="149" width="0.0869%" height="15" fill="rgb(234,122,0)" fg:x="12326" fg:w="17"/><text x="63.2803%" y="159.50"></text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="63.0743%" y="149" width="0.0613%" height="15" fill="rgb(207,146,38)" fg:x="12343" fg:w="12"/><text x="63.3672%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="63.1356%" y="149" width="0.0869%" height="15" fill="rgb(207,177,25)" fg:x="12355" fg:w="17"/><text x="63.4285%" y="159.50"></text></g><g><title>obj_idx&lt;2&gt; (17 instructions, 0.09%)</title><rect x="63.2224%" y="149" width="0.0869%" height="15" fill="rgb(211,178,42)" fg:x="12372" fg:w="17"/><text x="63.5154%" y="159.50"></text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.09%)</title><rect x="63.3093%" y="149" width="0.0869%" height="15" fill="rgb(230,69,54)" fg:x="12389" fg:w="17"/><text x="63.6023%" y="159.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="63.3962%" y="149" width="0.0869%" height="15" fill="rgb(214,135,41)" fg:x="12406" fg:w="17"/><text x="63.6892%" y="159.50"></text></g><g><title>proposal_key (317 instructions, 1.62%)</title><rect x="63.4831%" y="133" width="1.6199%" height="15" fill="rgb(237,67,25)" fg:x="12423" fg:w="317"/><text x="63.7760%" y="143.50"></text></g><g><title>equalKey (28 instructions, 0.14%)</title><rect x="65.1030%" y="117" width="0.1431%" height="15" fill="rgb(222,189,50)" fg:x="12740" fg:w="28"/><text x="65.3959%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="65.2461%" y="101" width="0.0869%" height="15" fill="rgb(245,148,34)" fg:x="12768" fg:w="17"/><text x="65.5390%" y="111.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="65.3329%" y="53" width="0.0869%" height="15" fill="rgb(222,29,6)" fg:x="12785" fg:w="17"/><text x="65.6259%" y="63.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.09%)</title><rect x="65.4198%" y="53" width="0.0869%" height="15" fill="rgb(221,189,43)" fg:x="12802" fg:w="17"/><text x="65.7128%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="65.5067%" y="53" width="0.0869%" height="15" fill="rgb(207,36,27)" fg:x="12819" fg:w="17"/><text x="65.7996%" y="63.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.09%)</title><rect x="65.5935%" y="53" width="0.0869%" height="15" fill="rgb(217,90,24)" fg:x="12836" fg:w="17"/><text x="65.8865%" y="63.50"></text></g><g><title>B_eq (7 instructions, 0.04%)</title><rect x="65.6804%" y="37" width="0.0358%" height="15" fill="rgb(224,66,35)" fg:x="12853" fg:w="7"/><text x="65.9734%" y="47.50"></text></g><g><title>equal (15 instructions, 0.08%)</title><rect x="65.6804%" y="53" width="0.0767%" height="15" fill="rgb(221,13,50)" fg:x="12853" fg:w="15"/><text x="65.9734%" y="63.50"></text></g><g><title>anon-func-192.5 (149 instructions, 0.76%)</title><rect x="65.3329%" y="69" width="0.7614%" height="15" fill="rgb(236,68,49)" fg:x="12785" fg:w="149"/><text x="65.6259%" y="79.50"></text></g><g><title>del (245 instructions, 1.25%)</title><rect x="65.3329%" y="85" width="1.2520%" height="15" fill="rgb(229,146,28)" fg:x="12785" fg:w="245"/><text x="65.6259%" y="95.50"></text></g><g><title>replace (459 instructions, 2.35%)</title><rect x="65.3329%" y="101" width="2.3455%" height="15" fill="rgb(225,31,38)" fg:x="12785" fg:w="459"/><text x="65.6259%" y="111.50">r..</text></g><g><title>B_ge (12 instructions, 0.06%)</title><rect x="67.6785%" y="69" width="0.0613%" height="15" fill="rgb(250,208,3)" fg:x="13244" fg:w="12"/><text x="67.9714%" y="79.50"></text></g><g><title>B_add (27 instructions, 0.14%)</title><rect x="67.7398%" y="69" width="0.1380%" height="15" fill="rgb(246,54,23)" fg:x="13256" fg:w="27"/><text x="68.0328%" y="79.50"></text></g><g><title>rec (201 instructions, 1.03%)</title><rect x="67.6785%" y="85" width="1.0271%" height="15" fill="rgb(243,76,11)" fg:x="13244" fg:w="201"/><text x="67.9714%" y="95.50"></text></g><g><title>leaf (210 instructions, 1.07%)</title><rect x="67.6785%" y="101" width="1.0731%" height="15" fill="rgb(245,21,50)" fg:x="13244" fg:w="210"/><text x="67.9714%" y="111.50"></text></g><g><title>recursiveReplace (759 instructions, 3.88%)</title><rect x="65.2461%" y="117" width="3.8786%" height="15" fill="rgb(228,9,43)" fg:x="12768" fg:w="759"/><text x="65.5390%" y="127.50">rec..</text></g><g><title>put.1 (926 instructions, 4.73%)</title><rect x="65.1030%" y="133" width="4.7320%" height="15" fill="rgb(208,100,47)" fg:x="12740" fg:w="926"/><text x="65.3959%" y="143.50">put.1</text></g><g><title>proposal_put (1,295 instructions, 6.62%)</title><rect x="63.4831%" y="149" width="6.6176%" height="15" fill="rgb(232,26,8)" fg:x="12423" fg:w="1295"/><text x="63.7760%" y="159.50">proposa..</text></g><g><title>@buffer_size&lt;v(accepted:u,executing:u,failed:t,open:u,rejected:u,succeeded:u)&gt; (49 instructions, 0.25%)</title><rect x="70.1007%" y="133" width="0.2504%" height="15" fill="rgb(216,166,38)" fg:x="13718" fg:w="49"/><text x="70.3936%" y="143.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h87fa1d046288d69e (56 instructions, 0.29%)</title><rect x="70.3511%" y="133" width="0.2862%" height="15" fill="rgb(251,202,51)" fg:x="13767" fg:w="56"/><text x="70.6440%" y="143.50"></text></g><g><title>memcpy (142 instructions, 0.73%)</title><rect x="70.6372%" y="133" width="0.7256%" height="15" fill="rgb(254,216,34)" fg:x="13823" fg:w="142"/><text x="70.9302%" y="143.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h87fa1d046288d69e (56 instructions, 0.29%)</title><rect x="71.3629%" y="133" width="0.2862%" height="15" fill="rgb(251,32,27)" fg:x="13965" fg:w="56"/><text x="71.6558%" y="143.50"></text></g><g><title>leb128_encode (11 instructions, 0.06%)</title><rect x="71.6490%" y="133" width="0.0562%" height="15" fill="rgb(208,127,28)" fg:x="14021" fg:w="11"/><text x="71.9420%" y="143.50"></text></g><g><title>leb128_encode (11 instructions, 0.06%)</title><rect x="71.7052%" y="117" width="0.0562%" height="15" fill="rgb(224,137,22)" fg:x="14032" fg:w="11"/><text x="71.9982%" y="127.50"></text></g><g><title>@serialize_go&lt;v(accepted:u,executing:u,failed:t,open:u,rejected:u,succeeded:u)&gt; (64 instructions, 0.33%)</title><rect x="71.7052%" y="133" width="0.3270%" height="15" fill="rgb(254,70,32)" fg:x="14032" fg:w="64"/><text x="71.9982%" y="143.50"></text></g><g><title>$lambda.25 (1,596 instructions, 8.16%)</title><rect x="70.1007%" y="149" width="8.1558%" height="15" fill="rgb(229,75,37)" fg:x="13718" fg:w="1596"/><text x="70.3936%" y="159.50">$lambda.25</text></g><g><title>$lambda (13,436 instructions, 68.66%)</title><rect x="18.9177%" y="165" width="68.6596%" height="15" fill="rgb(252,64,23)" fg:x="3702" fg:w="13436"/><text x="19.2106%" y="175.50">$lambda</text></g><g><title>schedule_copying_gc (108 instructions, 0.55%)</title><rect x="87.5773%" y="165" width="0.5519%" height="15" fill="rgb(232,162,48)" fg:x="17138" fg:w="108"/><text x="87.8703%" y="175.50"></text></g><g><title>trans_state4 (16 instructions, 0.08%)</title><rect x="88.1292%" y="165" width="0.0818%" height="15" fill="rgb(246,160,12)" fg:x="17246" fg:w="16"/><text x="88.4222%" y="175.50"></text></g><g><title>all (19,569 instructions, 100%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(247,166,0)" fg:x="0" fg:w="19569"/><text x="0.2930%" y="207.50"></text></g><g><title>vote (19,569 instructions, 100.00%)</title><rect x="0.0000%" y="181" width="100.0000%" height="15" fill="rgb(249,219,21)" fg:x="0" fg:w="19569"/><text x="0.2930%" y="191.50">vote</text></g></svg></svg>