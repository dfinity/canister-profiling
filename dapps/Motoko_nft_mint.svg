<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">NFT.mintDip721</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="24678"><g><title>trans_state5 (9 instructions, 0.04%)</title><rect x="0.0000%" y="181" width="0.0365%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="9"/><text x="0.2930%" y="191.50"></text></g><g><title>@reset_cycles (3 instructions, 0.01%)</title><rect x="0.0365%" y="181" width="0.0122%" height="15" fill="rgb(217,0,24)" fg:x="9" fg:w="3"/><text x="0.3294%" y="191.50"></text></g><g><title>@reset_refund (3 instructions, 0.01%)</title><rect x="0.0486%" y="181" width="0.0122%" height="15" fill="rgb(221,193,54)" fg:x="12" fg:w="3"/><text x="0.3416%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="0.0608%" y="165" width="0.1378%" height="15" fill="rgb(248,212,6)" fg:x="15" fg:w="34"/><text x="0.3538%" y="175.50"></text></g><g><title>alloc_blob (36 instructions, 0.15%)</title><rect x="0.0608%" y="181" width="0.1459%" height="15" fill="rgb(208,68,35)" fg:x="15" fg:w="36"/><text x="0.3538%" y="191.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="0.2067%" y="149" width="0.2067%" height="15" fill="rgb(232,128,0)" fg:x="51" fg:w="51"/><text x="0.4996%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="0.4133%" y="149" width="0.1378%" height="15" fill="rgb(207,160,47)" fg:x="102" fg:w="34"/><text x="0.7063%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="0.5511%" y="149" width="0.2755%" height="15" fill="rgb(228,23,34)" fg:x="136" fg:w="68"/><text x="0.8441%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="0.8266%" y="149" width="0.2755%" height="15" fill="rgb(218,30,26)" fg:x="204" fg:w="68"/><text x="1.1196%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="1.1022%" y="149" width="0.2755%" height="15" fill="rgb(220,122,19)" fg:x="272" fg:w="68"/><text x="1.3952%" y="159.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="1.3777%" y="133" width="0.2067%" height="15" fill="rgb(250,228,42)" fg:x="340" fg:w="51"/><text x="1.6707%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="1.5844%" y="133" width="0.8631%" height="15" fill="rgb(240,193,28)" fg:x="391" fg:w="213"/><text x="1.8774%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="2.4475%" y="133" width="0.2755%" height="15" fill="rgb(216,20,37)" fg:x="604" fg:w="68"/><text x="2.7405%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="2.7231%" y="133" width="0.8631%" height="15" fill="rgb(206,188,39)" fg:x="672" fg:w="213"/><text x="3.0160%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="3.5862%" y="133" width="0.2755%" height="15" fill="rgb(217,207,13)" fg:x="885" fg:w="68"/><text x="3.8792%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="3.8617%" y="133" width="0.8631%" height="15" fill="rgb(231,73,38)" fg:x="953" fg:w="213"/><text x="4.1547%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="4.7249%" y="133" width="0.2755%" height="15" fill="rgb(225,20,46)" fg:x="1166" fg:w="68"/><text x="5.0178%" y="143.50"></text></g><g><title>motoko_rts::idl::parse_fields::h81c9d86bd5bcf94b (1,013 instructions, 4.10%)</title><rect x="1.3777%" y="149" width="4.1049%" height="15" fill="rgb(210,31,41)" fg:x="340" fg:w="1013"/><text x="1.6707%" y="159.50">mot..</text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="5.4826%" y="149" width="0.2755%" height="15" fill="rgb(221,200,47)" fg:x="1353" fg:w="68"/><text x="5.7756%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="5.7582%" y="149" width="0.2755%" height="15" fill="rgb(226,26,5)" fg:x="1421" fg:w="68"/><text x="6.0511%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="6.0337%" y="149" width="0.2755%" height="15" fill="rgb(249,33,26)" fg:x="1489" fg:w="68"/><text x="6.3267%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="6.3093%" y="149" width="0.2755%" height="15" fill="rgb(235,183,28)" fg:x="1557" fg:w="68"/><text x="6.6022%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="6.5848%" y="149" width="0.2755%" height="15" fill="rgb(221,5,38)" fg:x="1625" fg:w="68"/><text x="6.8778%" y="159.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="6.8604%" y="133" width="0.2067%" height="15" fill="rgb(247,18,42)" fg:x="1693" fg:w="51"/><text x="7.1533%" y="143.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="7.0670%" y="133" width="0.2067%" height="15" fill="rgb(241,131,45)" fg:x="1744" fg:w="51"/><text x="7.3600%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="7.2737%" y="133" width="0.2755%" height="15" fill="rgb(249,31,29)" fg:x="1795" fg:w="68"/><text x="7.5667%" y="143.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="7.5492%" y="133" width="0.2067%" height="15" fill="rgb(225,111,53)" fg:x="1863" fg:w="51"/><text x="7.8422%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="7.7559%" y="133" width="0.2755%" height="15" fill="rgb(238,160,17)" fg:x="1914" fg:w="68"/><text x="8.0489%" y="143.50"></text></g><g><title>motoko_rts::idl::parse_fields::h81c9d86bd5bcf94b (371 instructions, 1.50%)</title><rect x="6.8604%" y="149" width="1.5034%" height="15" fill="rgb(214,148,48)" fg:x="1693" fg:w="371"/><text x="7.1533%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="8.3637%" y="149" width="0.2755%" height="15" fill="rgb(232,36,49)" fg:x="2064" fg:w="68"/><text x="8.6567%" y="159.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="8.6393%" y="133" width="0.2067%" height="15" fill="rgb(209,103,24)" fg:x="2132" fg:w="51"/><text x="8.9322%" y="143.50"></text></g><g><title>leb128_decode (168 instructions, 0.68%)</title><rect x="8.8459%" y="133" width="0.6808%" height="15" fill="rgb(229,88,8)" fg:x="2183" fg:w="168"/><text x="9.1389%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="9.5267%" y="133" width="0.2755%" height="15" fill="rgb(213,181,19)" fg:x="2351" fg:w="68"/><text x="9.8197%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="9.8023%" y="133" width="0.8631%" height="15" fill="rgb(254,191,54)" fg:x="2419" fg:w="213"/><text x="10.0952%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="10.6654%" y="133" width="0.2755%" height="15" fill="rgb(241,83,37)" fg:x="2632" fg:w="68"/><text x="10.9583%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="10.9409%" y="133" width="0.8631%" height="15" fill="rgb(233,36,39)" fg:x="2700" fg:w="213"/><text x="11.2339%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="11.8040%" y="133" width="0.2755%" height="15" fill="rgb(226,3,54)" fg:x="2913" fg:w="68"/><text x="12.0970%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="12.0796%" y="133" width="0.8631%" height="15" fill="rgb(245,192,40)" fg:x="2981" fg:w="213"/><text x="12.3726%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="12.9427%" y="133" width="0.2755%" height="15" fill="rgb(238,167,29)" fg:x="3194" fg:w="68"/><text x="13.2357%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="13.2183%" y="133" width="0.8631%" height="15" fill="rgb(232,182,51)" fg:x="3262" fg:w="213"/><text x="13.5112%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="14.0814%" y="133" width="0.2755%" height="15" fill="rgb(231,60,39)" fg:x="3475" fg:w="68"/><text x="14.3743%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="14.3569%" y="133" width="0.8631%" height="15" fill="rgb(208,69,12)" fg:x="3543" fg:w="213"/><text x="14.6499%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="15.2200%" y="133" width="0.2755%" height="15" fill="rgb(235,93,37)" fg:x="3756" fg:w="68"/><text x="15.5130%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="15.4956%" y="133" width="0.8631%" height="15" fill="rgb(213,116,39)" fg:x="3824" fg:w="213"/><text x="15.7886%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="16.3587%" y="133" width="0.2755%" height="15" fill="rgb(222,207,29)" fg:x="4037" fg:w="68"/><text x="16.6517%" y="143.50"></text></g><g><title>motoko_rts::idl::parse_fields::h81c9d86bd5bcf94b (2,240 instructions, 9.08%)</title><rect x="8.6393%" y="149" width="9.0769%" height="15" fill="rgb(206,96,30)" fg:x="2132" fg:w="2240"/><text x="8.9322%" y="159.50">motoko_rts:..</text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="17.7162%" y="149" width="0.2755%" height="15" fill="rgb(218,138,4)" fg:x="4372" fg:w="68"/><text x="18.0092%" y="159.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="17.9917%" y="133" width="0.2067%" height="15" fill="rgb(250,191,14)" fg:x="4440" fg:w="51"/><text x="18.2847%" y="143.50"></text></g><g><title>leb128_decode (168 instructions, 0.68%)</title><rect x="18.1984%" y="133" width="0.6808%" height="15" fill="rgb(239,60,40)" fg:x="4491" fg:w="168"/><text x="18.4914%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="18.8792%" y="133" width="0.2755%" height="15" fill="rgb(206,27,48)" fg:x="4659" fg:w="68"/><text x="19.1721%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="19.1547%" y="133" width="0.8631%" height="15" fill="rgb(225,35,8)" fg:x="4727" fg:w="213"/><text x="19.4477%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="20.0178%" y="133" width="0.2755%" height="15" fill="rgb(250,213,24)" fg:x="4940" fg:w="68"/><text x="20.3108%" y="143.50"></text></g><g><title>motoko_rts::idl::parse_fields::h81c9d86bd5bcf94b (650 instructions, 2.63%)</title><rect x="17.9917%" y="149" width="2.6339%" height="15" fill="rgb(247,123,22)" fg:x="4440" fg:w="650"/><text x="18.2847%" y="159.50">m..</text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="20.6257%" y="149" width="0.2755%" height="15" fill="rgb(231,138,38)" fg:x="5090" fg:w="68"/><text x="20.9186%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="20.9012%" y="149" width="0.2755%" height="15" fill="rgb(231,145,46)" fg:x="5158" fg:w="68"/><text x="21.1942%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="21.1768%" y="149" width="0.2755%" height="15" fill="rgb(251,118,11)" fg:x="5226" fg:w="68"/><text x="21.4697%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="21.4523%" y="149" width="0.2755%" height="15" fill="rgb(217,147,25)" fg:x="5294" fg:w="68"/><text x="21.7453%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="21.7279%" y="149" width="0.2755%" height="15" fill="rgb(247,81,37)" fg:x="5362" fg:w="68"/><text x="22.0208%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="22.0034%" y="149" width="0.2755%" height="15" fill="rgb(209,12,38)" fg:x="5430" fg:w="68"/><text x="22.2964%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="22.2790%" y="149" width="0.2755%" height="15" fill="rgb(227,1,9)" fg:x="5498" fg:w="68"/><text x="22.5719%" y="159.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="22.5545%" y="149" width="0.2067%" height="15" fill="rgb(248,47,43)" fg:x="5566" fg:w="51"/><text x="22.8475%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="22.7612%" y="149" width="0.2755%" height="15" fill="rgb(221,10,30)" fg:x="5617" fg:w="68"/><text x="23.0541%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="23.0367%" y="149" width="0.2755%" height="15" fill="rgb(210,229,1)" fg:x="5685" fg:w="68"/><text x="23.3297%" y="159.50"></text></g><g><title>parse_idl_header (6,284 instructions, 25.46%)</title><rect x="0.2067%" y="165" width="25.4640%" height="15" fill="rgb(222,148,37)" fg:x="51" fg:w="6284"/><text x="0.4996%" y="175.50">parse_idl_header</text></g><g><title>idl_sub_buf_words (9 instructions, 0.04%)</title><rect x="25.6706%" y="165" width="0.0365%" height="15" fill="rgb(234,67,33)" fg:x="6335" fg:w="9"/><text x="25.9636%" y="175.50"></text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="25.7071%" y="149" width="0.0162%" height="15" fill="rgb(247,98,35)" fg:x="6344" fg:w="4"/><text x="26.0001%" y="159.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.08%)</title><rect x="25.7071%" y="165" width="0.0770%" height="15" fill="rgb(247,138,52)" fg:x="6344" fg:w="19"/><text x="26.0001%" y="175.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="25.7841%" y="165" width="0.2067%" height="15" fill="rgb(213,79,30)" fg:x="6363" fg:w="51"/><text x="26.0771%" y="175.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="25.9908%" y="165" width="0.2755%" height="15" fill="rgb(246,177,23)" fg:x="6414" fg:w="68"/><text x="26.2837%" y="175.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="26.2663%" y="165" width="0.0122%" height="15" fill="rgb(230,62,27)" fg:x="6482" fg:w="3"/><text x="26.5593%" y="175.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="26.2785%" y="165" width="0.0122%" height="15" fill="rgb(216,154,8)" fg:x="6485" fg:w="3"/><text x="26.5714%" y="175.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="26.2906%" y="165" width="0.0122%" height="15" fill="rgb(244,35,45)" fg:x="6488" fg:w="3"/><text x="26.5836%" y="175.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="26.3028%" y="149" width="0.2067%" height="15" fill="rgb(251,115,12)" fg:x="6491" fg:w="51"/><text x="26.5957%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="26.5094%" y="133" width="0.1378%" height="15" fill="rgb(240,54,50)" fg:x="6542" fg:w="34"/><text x="26.8024%" y="143.50"></text></g><g><title>alloc_blob (36 instructions, 0.15%)</title><rect x="26.5094%" y="149" width="0.1459%" height="15" fill="rgb(233,84,52)" fg:x="6542" fg:w="36"/><text x="26.8024%" y="159.50"></text></g><g><title>memcpy (159 instructions, 0.64%)</title><rect x="26.6553%" y="149" width="0.6443%" height="15" fill="rgb(207,117,47)" fg:x="6578" fg:w="159"/><text x="26.9483%" y="159.50"></text></g><g><title>@deserialize_go&lt;P&gt; (319 instructions, 1.29%)</title><rect x="26.3028%" y="165" width="1.2926%" height="15" fill="rgb(249,43,39)" fg:x="6491" fg:w="319"/><text x="26.5957%" y="175.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="27.5954%" y="165" width="0.2755%" height="15" fill="rgb(209,38,44)" fg:x="6810" fg:w="68"/><text x="27.8884%" y="175.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="27.8710%" y="165" width="0.0122%" height="15" fill="rgb(236,212,23)" fg:x="6878" fg:w="3"/><text x="28.1639%" y="175.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="27.8831%" y="165" width="0.0122%" height="15" fill="rgb(242,79,21)" fg:x="6881" fg:w="3"/><text x="28.1761%" y="175.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="27.8953%" y="165" width="0.0122%" height="15" fill="rgb(211,96,35)" fg:x="6884" fg:w="3"/><text x="28.1883%" y="175.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="27.9074%" y="149" width="0.2755%" height="15" fill="rgb(253,215,40)" fg:x="6887" fg:w="68"/><text x="28.2004%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="28.1830%" y="149" width="0.2755%" height="15" fill="rgb(211,81,21)" fg:x="6955" fg:w="68"/><text x="28.4760%" y="159.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="28.4585%" y="149" width="0.2067%" height="15" fill="rgb(208,190,38)" fg:x="7023" fg:w="51"/><text x="28.7515%" y="159.50"></text></g><g><title>motoko_rts::memory::alloc_array::hdf61863d125c75ff (39 instructions, 0.16%)</title><rect x="28.6652%" y="133" width="0.1580%" height="15" fill="rgb(235,213,38)" fg:x="7074" fg:w="39"/><text x="28.9582%" y="143.50"></text></g><g><title>alloc_array (41 instructions, 0.17%)</title><rect x="28.6652%" y="149" width="0.1661%" height="15" fill="rgb(237,122,38)" fg:x="7074" fg:w="41"/><text x="28.9582%" y="159.50"></text></g><g><title>Array.unsafe_idx (7 instructions, 0.03%)</title><rect x="28.8313%" y="149" width="0.0284%" height="15" fill="rgb(244,218,35)" fg:x="7115" fg:w="7"/><text x="29.1243%" y="159.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="28.8597%" y="149" width="0.0122%" height="15" fill="rgb(240,68,47)" fg:x="7122" fg:w="3"/><text x="29.1527%" y="159.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="28.8719%" y="149" width="0.0122%" height="15" fill="rgb(210,16,53)" fg:x="7125" fg:w="3"/><text x="29.1648%" y="159.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="28.8840%" y="149" width="0.0122%" height="15" fill="rgb(235,124,12)" fg:x="7128" fg:w="3"/><text x="29.1770%" y="159.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="28.8962%" y="133" width="0.2755%" height="15" fill="rgb(224,169,11)" fg:x="7131" fg:w="68"/><text x="29.1892%" y="143.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="29.1717%" y="133" width="0.2067%" height="15" fill="rgb(250,166,2)" fg:x="7199" fg:w="51"/><text x="29.4647%" y="143.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="29.3784%" y="133" width="0.1054%" height="15" fill="rgb(242,216,29)" fg:x="7250" fg:w="26"/><text x="29.6714%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="29.4838%" y="117" width="0.8631%" height="15" fill="rgb(230,116,27)" fg:x="7276" fg:w="213"/><text x="29.7767%" y="127.50"></text></g><g><title>find_field (242 instructions, 0.98%)</title><rect x="29.4838%" y="133" width="0.9806%" height="15" fill="rgb(228,99,48)" fg:x="7276" fg:w="242"/><text x="29.7767%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="30.4644%" y="133" width="0.2755%" height="15" fill="rgb(253,11,6)" fg:x="7518" fg:w="68"/><text x="30.7573%" y="143.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="30.7399%" y="133" width="0.0122%" height="15" fill="rgb(247,143,39)" fg:x="7586" fg:w="3"/><text x="31.0329%" y="143.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="30.7521%" y="133" width="0.0122%" height="15" fill="rgb(236,97,10)" fg:x="7589" fg:w="3"/><text x="31.0451%" y="143.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="30.7642%" y="133" width="0.0122%" height="15" fill="rgb(233,208,19)" fg:x="7592" fg:w="3"/><text x="31.0572%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="30.7764%" y="117" width="0.2755%" height="15" fill="rgb(216,164,2)" fg:x="7595" fg:w="68"/><text x="31.0694%" y="127.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="31.0519%" y="117" width="0.2755%" height="15" fill="rgb(220,129,5)" fg:x="7663" fg:w="68"/><text x="31.3449%" y="127.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="31.3275%" y="117" width="0.2067%" height="15" fill="rgb(242,17,10)" fg:x="7731" fg:w="51"/><text x="31.6205%" y="127.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="31.5342%" y="101" width="0.1378%" height="15" fill="rgb(242,107,0)" fg:x="7782" fg:w="34"/><text x="31.8271%" y="111.50"></text></g><g><title>alloc_blob (36 instructions, 0.15%)</title><rect x="31.5342%" y="117" width="0.1459%" height="15" fill="rgb(251,28,31)" fg:x="7782" fg:w="36"/><text x="31.8271%" y="127.50"></text></g><g><title>memcpy (148 instructions, 0.60%)</title><rect x="31.6800%" y="117" width="0.5997%" height="15" fill="rgb(233,223,10)" fg:x="7818" fg:w="148"/><text x="31.9730%" y="127.50"></text></g><g><title>@deserialize_go&lt;B&gt; (449 instructions, 1.82%)</title><rect x="30.7764%" y="133" width="1.8194%" height="15" fill="rgb(215,21,27)" fg:x="7595" fg:w="449"/><text x="31.0694%" y="143.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="32.5958%" y="117" width="0.8631%" height="15" fill="rgb(232,23,21)" fg:x="8044" fg:w="213"/><text x="32.8888%" y="127.50"></text></g><g><title>find_field (242 instructions, 0.98%)</title><rect x="32.5958%" y="133" width="0.9806%" height="15" fill="rgb(244,5,23)" fg:x="8044" fg:w="242"/><text x="32.8888%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="33.5765%" y="133" width="0.2755%" height="15" fill="rgb(226,81,46)" fg:x="8286" fg:w="68"/><text x="33.8694%" y="143.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="33.8520%" y="133" width="0.0122%" height="15" fill="rgb(247,70,30)" fg:x="8354" fg:w="3"/><text x="34.1450%" y="143.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="33.8642%" y="133" width="0.0122%" height="15" fill="rgb(212,68,19)" fg:x="8357" fg:w="3"/><text x="34.1571%" y="143.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="33.8763%" y="133" width="0.0122%" height="15" fill="rgb(240,187,13)" fg:x="8360" fg:w="3"/><text x="34.1693%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="33.8885%" y="117" width="0.2755%" height="15" fill="rgb(223,113,26)" fg:x="8363" fg:w="68"/><text x="34.1815%" y="127.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="34.1640%" y="117" width="0.2755%" height="15" fill="rgb(206,192,2)" fg:x="8431" fg:w="68"/><text x="34.4570%" y="127.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="34.4396%" y="117" width="0.2067%" height="15" fill="rgb(241,108,4)" fg:x="8499" fg:w="51"/><text x="34.7326%" y="127.50"></text></g><g><title>motoko_rts::memory::alloc_array::hdf61863d125c75ff (39 instructions, 0.16%)</title><rect x="34.6462%" y="101" width="0.1580%" height="15" fill="rgb(247,173,49)" fg:x="8550" fg:w="39"/><text x="34.9392%" y="111.50"></text></g><g><title>alloc_array (41 instructions, 0.17%)</title><rect x="34.6462%" y="117" width="0.1661%" height="15" fill="rgb(224,114,35)" fg:x="8550" fg:w="41"/><text x="34.9392%" y="127.50"></text></g><g><title>Array.unsafe_idx (7 instructions, 0.03%)</title><rect x="34.8124%" y="117" width="0.0284%" height="15" fill="rgb(245,159,27)" fg:x="8591" fg:w="7"/><text x="35.1054%" y="127.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="34.8407%" y="117" width="0.0122%" height="15" fill="rgb(245,172,44)" fg:x="8598" fg:w="3"/><text x="35.1337%" y="127.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="34.8529%" y="117" width="0.0122%" height="15" fill="rgb(236,23,11)" fg:x="8601" fg:w="3"/><text x="35.1459%" y="127.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="34.8651%" y="117" width="0.0122%" height="15" fill="rgb(205,117,38)" fg:x="8604" fg:w="3"/><text x="35.1580%" y="127.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="34.8772%" y="101" width="0.2755%" height="15" fill="rgb(237,72,25)" fg:x="8607" fg:w="68"/><text x="35.1702%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="35.1528%" y="101" width="0.2067%" height="15" fill="rgb(244,70,9)" fg:x="8675" fg:w="51"/><text x="35.4457%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="35.3594%" y="85" width="0.2067%" height="15" fill="rgb(217,125,39)" fg:x="8726" fg:w="51"/><text x="35.6524%" y="95.50"></text></g><g><title>find_field (80 instructions, 0.32%)</title><rect x="35.3594%" y="101" width="0.3242%" height="15" fill="rgb(235,36,10)" fg:x="8726" fg:w="80"/><text x="35.6524%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="35.6836%" y="101" width="0.2755%" height="15" fill="rgb(251,123,47)" fg:x="8806" fg:w="68"/><text x="35.9766%" y="111.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="35.9592%" y="101" width="0.0122%" height="15" fill="rgb(221,13,13)" fg:x="8874" fg:w="3"/><text x="36.2521%" y="111.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="35.9713%" y="101" width="0.0122%" height="15" fill="rgb(238,131,9)" fg:x="8877" fg:w="3"/><text x="36.2643%" y="111.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="35.9835%" y="101" width="0.0122%" height="15" fill="rgb(211,50,8)" fg:x="8880" fg:w="3"/><text x="36.2764%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="35.9956%" y="85" width="0.2067%" height="15" fill="rgb(245,182,24)" fg:x="8883" fg:w="51"/><text x="36.2886%" y="95.50"></text></g><g><title>core::str::converts::from_utf8::h828634ce6cdca907 (130 instructions, 0.53%)</title><rect x="36.2023%" y="69" width="0.5268%" height="15" fill="rgb(242,14,37)" fg:x="8934" fg:w="130"/><text x="36.4953%" y="79.50"></text></g><g><title>utf8_validate (147 instructions, 0.60%)</title><rect x="36.2023%" y="85" width="0.5957%" height="15" fill="rgb(246,228,12)" fg:x="8934" fg:w="147"/><text x="36.4953%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="36.7980%" y="53" width="0.1378%" height="15" fill="rgb(213,55,15)" fg:x="9081" fg:w="34"/><text x="37.0909%" y="63.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h65a8860ad2532130 (41 instructions, 0.17%)</title><rect x="36.7980%" y="69" width="0.1661%" height="15" fill="rgb(209,9,3)" fg:x="9081" fg:w="41"/><text x="37.0909%" y="79.50"></text></g><g><title>memcpy (66 instructions, 0.27%)</title><rect x="36.9641%" y="69" width="0.2674%" height="15" fill="rgb(230,59,30)" fg:x="9122" fg:w="66"/><text x="37.2571%" y="79.50"></text></g><g><title>text_of_ptr_size (117 instructions, 0.47%)</title><rect x="36.7980%" y="85" width="0.4741%" height="15" fill="rgb(209,121,21)" fg:x="9081" fg:w="117"/><text x="37.0909%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (352 instructions, 1.43%)</title><rect x="35.9956%" y="101" width="1.4264%" height="15" fill="rgb(220,109,13)" fg:x="8883" fg:w="352"/><text x="36.2886%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="37.4220%" y="85" width="0.2067%" height="15" fill="rgb(232,18,1)" fg:x="9235" fg:w="51"/><text x="37.7150%" y="95.50"></text></g><g><title>find_field (80 instructions, 0.32%)</title><rect x="37.4220%" y="101" width="0.3242%" height="15" fill="rgb(215,41,42)" fg:x="9235" fg:w="80"/><text x="37.7150%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="37.7462%" y="101" width="0.2755%" height="15" fill="rgb(224,123,36)" fg:x="9315" fg:w="68"/><text x="38.0391%" y="111.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="38.0217%" y="101" width="0.0122%" height="15" fill="rgb(240,125,3)" fg:x="9383" fg:w="3"/><text x="38.3147%" y="111.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="38.0339%" y="101" width="0.0122%" height="15" fill="rgb(205,98,50)" fg:x="9386" fg:w="3"/><text x="38.3268%" y="111.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="38.0460%" y="101" width="0.0122%" height="15" fill="rgb(205,185,37)" fg:x="9389" fg:w="3"/><text x="38.3390%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="38.0582%" y="85" width="0.2755%" height="15" fill="rgb(238,207,15)" fg:x="9392" fg:w="68"/><text x="38.3512%" y="95.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="38.3337%" y="85" width="0.2067%" height="15" fill="rgb(213,199,42)" fg:x="9460" fg:w="51"/><text x="38.6267%" y="95.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="38.5404%" y="85" width="0.2067%" height="15" fill="rgb(235,201,11)" fg:x="9511" fg:w="51"/><text x="38.8334%" y="95.50"></text></g><g><title>skip_leb128 (83 instructions, 0.34%)</title><rect x="38.7471%" y="85" width="0.3363%" height="15" fill="rgb(207,46,11)" fg:x="9562" fg:w="83"/><text x="39.0400%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="39.0834%" y="85" width="0.1054%" height="15" fill="rgb(241,35,35)" fg:x="9645" fg:w="26"/><text x="39.3764%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="39.1888%" y="85" width="0.4133%" height="15" fill="rgb(243,32,47)" fg:x="9671" fg:w="102"/><text x="39.4817%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="39.6021%" y="85" width="0.1054%" height="15" fill="rgb(247,202,23)" fg:x="9773" fg:w="26"/><text x="39.8950%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="39.7074%" y="85" width="0.4133%" height="15" fill="rgb(219,102,11)" fg:x="9799" fg:w="102"/><text x="40.0004%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="40.1208%" y="85" width="0.1054%" height="15" fill="rgb(243,110,44)" fg:x="9901" fg:w="26"/><text x="40.4137%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="40.2261%" y="85" width="0.4133%" height="15" fill="rgb(222,74,54)" fg:x="9927" fg:w="102"/><text x="40.5191%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="40.6394%" y="85" width="0.1054%" height="15" fill="rgb(216,99,12)" fg:x="10029" fg:w="26"/><text x="40.9324%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="40.7448%" y="85" width="0.4133%" height="15" fill="rgb(226,22,26)" fg:x="10055" fg:w="102"/><text x="41.0378%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="41.1581%" y="85" width="0.1054%" height="15" fill="rgb(217,163,10)" fg:x="10157" fg:w="26"/><text x="41.4511%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="41.2635%" y="85" width="0.4133%" height="15" fill="rgb(213,25,53)" fg:x="10183" fg:w="102"/><text x="41.5564%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="41.6768%" y="85" width="0.1054%" height="15" fill="rgb(252,105,26)" fg:x="10285" fg:w="26"/><text x="41.9698%" y="95.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="41.7822%" y="85" width="0.8631%" height="15" fill="rgb(220,39,43)" fg:x="10311" fg:w="213"/><text x="42.0751%" y="95.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="42.6453%" y="85" width="0.2755%" height="15" fill="rgb(229,68,48)" fg:x="10524" fg:w="68"/><text x="42.9382%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="42.9208%" y="85" width="0.1054%" height="15" fill="rgb(252,8,32)" fg:x="10592" fg:w="26"/><text x="43.2138%" y="95.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="43.0262%" y="85" width="0.0122%" height="15" fill="rgb(223,20,43)" fg:x="10618" fg:w="3"/><text x="43.3191%" y="95.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="43.0383%" y="85" width="0.0122%" height="15" fill="rgb(229,81,49)" fg:x="10621" fg:w="3"/><text x="43.3313%" y="95.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="43.0505%" y="85" width="0.0122%" height="15" fill="rgb(236,28,36)" fg:x="10624" fg:w="3"/><text x="43.3435%" y="95.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="43.0626%" y="69" width="0.2067%" height="15" fill="rgb(249,185,26)" fg:x="10627" fg:w="51"/><text x="43.3556%" y="79.50"></text></g><g><title>core::str::converts::from_utf8::h828634ce6cdca907 (275 instructions, 1.11%)</title><rect x="43.2693%" y="53" width="1.1144%" height="15" fill="rgb(249,174,33)" fg:x="10678" fg:w="275"/><text x="43.5623%" y="63.50"></text></g><g><title>utf8_validate (292 instructions, 1.18%)</title><rect x="43.2693%" y="69" width="1.1832%" height="15" fill="rgb(233,201,37)" fg:x="10678" fg:w="292"/><text x="43.5623%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="44.4525%" y="37" width="0.1378%" height="15" fill="rgb(221,78,26)" fg:x="10970" fg:w="34"/><text x="44.7455%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h65a8860ad2532130 (41 instructions, 0.17%)</title><rect x="44.4525%" y="53" width="0.1661%" height="15" fill="rgb(250,127,30)" fg:x="10970" fg:w="41"/><text x="44.7455%" y="63.50"></text></g><g><title>memcpy (327 instructions, 1.33%)</title><rect x="44.6187%" y="53" width="1.3251%" height="15" fill="rgb(230,49,44)" fg:x="11011" fg:w="327"/><text x="44.9117%" y="63.50"></text></g><g><title>text_of_ptr_size (378 instructions, 1.53%)</title><rect x="44.4525%" y="69" width="1.5317%" height="15" fill="rgb(229,67,23)" fg:x="10970" fg:w="378"/><text x="44.7455%" y="79.50"></text></g><g><title>@deserialize_go&lt;t&gt; (758 instructions, 3.07%)</title><rect x="43.0626%" y="85" width="3.0716%" height="15" fill="rgb(249,83,47)" fg:x="10627" fg:w="758"/><text x="43.3556%" y="95.50">@d..</text></g><g><title>@deserialize_go&lt;v(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)&gt; (2,218 instructions, 8.99%)</title><rect x="38.0582%" y="101" width="8.9878%" height="15" fill="rgb(215,43,3)" fg:x="9392" fg:w="2218"/><text x="38.3512%" y="111.50">@deseriali..</text></g><g><title>skip_fields (5 instructions, 0.02%)</title><rect x="47.0460%" y="101" width="0.0203%" height="15" fill="rgb(238,154,13)" fg:x="11610" fg:w="5"/><text x="47.3389%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="47.0662%" y="85" width="0.1054%" height="15" fill="rgb(219,56,2)" fg:x="11615" fg:w="26"/><text x="47.3592%" y="95.50"></text></g><g><title>to_2_tuple (41 instructions, 0.17%)</title><rect x="47.0662%" y="101" width="0.1661%" height="15" fill="rgb(233,0,4)" fg:x="11615" fg:w="41"/><text x="47.3592%" y="111.50"></text></g><g><title>@deserialize_go&lt;(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t))&gt; (3,212 instructions, 13.02%)</title><rect x="34.8772%" y="117" width="13.0156%" height="15" fill="rgb(235,30,7)" fg:x="8607" fg:w="3212"/><text x="35.1702%" y="127.50">@deserialize_go&lt;..</text></g><g><title>Array.unsafe_idx (7 instructions, 0.03%)</title><rect x="47.8929%" y="117" width="0.0284%" height="15" fill="rgb(250,79,13)" fg:x="11819" fg:w="7"/><text x="48.1858%" y="127.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="47.9212%" y="117" width="0.0122%" height="15" fill="rgb(211,146,34)" fg:x="11826" fg:w="3"/><text x="48.2142%" y="127.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="47.9334%" y="117" width="0.0122%" height="15" fill="rgb(228,22,38)" fg:x="11829" fg:w="3"/><text x="48.2264%" y="127.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="47.9455%" y="117" width="0.0122%" height="15" fill="rgb(235,168,5)" fg:x="11832" fg:w="3"/><text x="48.2385%" y="127.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="47.9577%" y="101" width="0.2755%" height="15" fill="rgb(221,155,16)" fg:x="11835" fg:w="68"/><text x="48.2507%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="48.2332%" y="101" width="0.2067%" height="15" fill="rgb(215,215,53)" fg:x="11903" fg:w="51"/><text x="48.5262%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="48.4399%" y="85" width="0.2067%" height="15" fill="rgb(223,4,10)" fg:x="11954" fg:w="51"/><text x="48.7329%" y="95.50"></text></g><g><title>find_field (80 instructions, 0.32%)</title><rect x="48.4399%" y="101" width="0.3242%" height="15" fill="rgb(234,103,6)" fg:x="11954" fg:w="80"/><text x="48.7329%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="48.7641%" y="101" width="0.2755%" height="15" fill="rgb(227,97,0)" fg:x="12034" fg:w="68"/><text x="49.0571%" y="111.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="49.0396%" y="101" width="0.0122%" height="15" fill="rgb(234,150,53)" fg:x="12102" fg:w="3"/><text x="49.3326%" y="111.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="49.0518%" y="101" width="0.0122%" height="15" fill="rgb(228,201,54)" fg:x="12105" fg:w="3"/><text x="49.3448%" y="111.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="49.0639%" y="101" width="0.0122%" height="15" fill="rgb(222,22,37)" fg:x="12108" fg:w="3"/><text x="49.3569%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="49.0761%" y="85" width="0.2067%" height="15" fill="rgb(237,53,32)" fg:x="12111" fg:w="51"/><text x="49.3691%" y="95.50"></text></g><g><title>core::str::converts::from_utf8::h828634ce6cdca907 (144 instructions, 0.58%)</title><rect x="49.2828%" y="69" width="0.5835%" height="15" fill="rgb(233,25,53)" fg:x="12162" fg:w="144"/><text x="49.5757%" y="79.50"></text></g><g><title>utf8_validate (161 instructions, 0.65%)</title><rect x="49.2828%" y="85" width="0.6524%" height="15" fill="rgb(210,40,34)" fg:x="12162" fg:w="161"/><text x="49.5757%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="49.9352%" y="53" width="0.1378%" height="15" fill="rgb(241,220,44)" fg:x="12323" fg:w="34"/><text x="50.2281%" y="63.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h65a8860ad2532130 (41 instructions, 0.17%)</title><rect x="49.9352%" y="69" width="0.1661%" height="15" fill="rgb(235,28,35)" fg:x="12323" fg:w="41"/><text x="50.2281%" y="79.50"></text></g><g><title>memcpy (107 instructions, 0.43%)</title><rect x="50.1013%" y="69" width="0.4336%" height="15" fill="rgb(210,56,17)" fg:x="12364" fg:w="107"/><text x="50.3943%" y="79.50"></text></g><g><title>text_of_ptr_size (158 instructions, 0.64%)</title><rect x="49.9352%" y="85" width="0.6402%" height="15" fill="rgb(224,130,29)" fg:x="12323" fg:w="158"/><text x="50.2281%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (407 instructions, 1.65%)</title><rect x="49.0761%" y="101" width="1.6492%" height="15" fill="rgb(235,212,8)" fg:x="12111" fg:w="407"/><text x="49.3691%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="50.7253%" y="85" width="0.2067%" height="15" fill="rgb(223,33,50)" fg:x="12518" fg:w="51"/><text x="51.0183%" y="95.50"></text></g><g><title>find_field (80 instructions, 0.32%)</title><rect x="50.7253%" y="101" width="0.3242%" height="15" fill="rgb(219,149,13)" fg:x="12518" fg:w="80"/><text x="51.0183%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="51.0495%" y="101" width="0.2755%" height="15" fill="rgb(250,156,29)" fg:x="12598" fg:w="68"/><text x="51.3425%" y="111.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="51.3251%" y="101" width="0.0122%" height="15" fill="rgb(216,193,19)" fg:x="12666" fg:w="3"/><text x="51.6180%" y="111.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="51.3372%" y="101" width="0.0122%" height="15" fill="rgb(216,135,14)" fg:x="12669" fg:w="3"/><text x="51.6302%" y="111.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="51.3494%" y="101" width="0.0122%" height="15" fill="rgb(241,47,5)" fg:x="12672" fg:w="3"/><text x="51.6423%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="51.3615%" y="85" width="0.2755%" height="15" fill="rgb(233,42,35)" fg:x="12675" fg:w="68"/><text x="51.6545%" y="95.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="51.6371%" y="85" width="0.2067%" height="15" fill="rgb(231,13,6)" fg:x="12743" fg:w="51"/><text x="51.9301%" y="95.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="51.8437%" y="85" width="0.2067%" height="15" fill="rgb(207,181,40)" fg:x="12794" fg:w="51"/><text x="52.1367%" y="95.50"></text></g><g><title>skip_leb128 (83 instructions, 0.34%)</title><rect x="52.0504%" y="85" width="0.3363%" height="15" fill="rgb(254,173,49)" fg:x="12845" fg:w="83"/><text x="52.3434%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="52.3867%" y="85" width="0.1054%" height="15" fill="rgb(221,1,38)" fg:x="12928" fg:w="26"/><text x="52.6797%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="52.4921%" y="85" width="0.4133%" height="15" fill="rgb(206,124,46)" fg:x="12954" fg:w="102"/><text x="52.7851%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="52.9054%" y="85" width="0.1054%" height="15" fill="rgb(249,21,11)" fg:x="13056" fg:w="26"/><text x="53.1984%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="53.0108%" y="85" width="0.4133%" height="15" fill="rgb(222,201,40)" fg:x="13082" fg:w="102"/><text x="53.3037%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="53.4241%" y="85" width="0.1054%" height="15" fill="rgb(235,61,29)" fg:x="13184" fg:w="26"/><text x="53.7171%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="53.5295%" y="85" width="0.4133%" height="15" fill="rgb(219,207,3)" fg:x="13210" fg:w="102"/><text x="53.8224%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="53.9428%" y="85" width="0.1054%" height="15" fill="rgb(222,56,46)" fg:x="13312" fg:w="26"/><text x="54.2358%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="54.0481%" y="85" width="0.4133%" height="15" fill="rgb(239,76,54)" fg:x="13338" fg:w="102"/><text x="54.3411%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="54.4615%" y="85" width="0.1054%" height="15" fill="rgb(231,124,27)" fg:x="13440" fg:w="26"/><text x="54.7544%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="54.5668%" y="85" width="0.4133%" height="15" fill="rgb(249,195,6)" fg:x="13466" fg:w="102"/><text x="54.8598%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="54.9801%" y="85" width="0.1054%" height="15" fill="rgb(237,174,47)" fg:x="13568" fg:w="26"/><text x="55.2731%" y="95.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="55.0855%" y="85" width="0.8631%" height="15" fill="rgb(206,201,31)" fg:x="13594" fg:w="213"/><text x="55.3785%" y="95.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="55.9486%" y="85" width="0.2755%" height="15" fill="rgb(231,57,52)" fg:x="13807" fg:w="68"/><text x="56.2416%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="56.2242%" y="85" width="0.1054%" height="15" fill="rgb(248,177,22)" fg:x="13875" fg:w="26"/><text x="56.5171%" y="95.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="56.3295%" y="85" width="0.0122%" height="15" fill="rgb(215,211,37)" fg:x="13901" fg:w="3"/><text x="56.6225%" y="95.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="56.3417%" y="85" width="0.0122%" height="15" fill="rgb(241,128,51)" fg:x="13904" fg:w="3"/><text x="56.6346%" y="95.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="56.3538%" y="85" width="0.0122%" height="15" fill="rgb(227,165,31)" fg:x="13907" fg:w="3"/><text x="56.6468%" y="95.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="56.3660%" y="69" width="0.2067%" height="15" fill="rgb(228,167,24)" fg:x="13910" fg:w="51"/><text x="56.6590%" y="79.50"></text></g><g><title>core::str::converts::from_utf8::h828634ce6cdca907 (155 instructions, 0.63%)</title><rect x="56.5727%" y="53" width="0.6281%" height="15" fill="rgb(228,143,12)" fg:x="13961" fg:w="155"/><text x="56.8656%" y="63.50"></text></g><g><title>utf8_validate (172 instructions, 0.70%)</title><rect x="56.5727%" y="69" width="0.6970%" height="15" fill="rgb(249,149,8)" fg:x="13961" fg:w="172"/><text x="56.8656%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="57.2696%" y="37" width="0.1378%" height="15" fill="rgb(243,35,44)" fg:x="14133" fg:w="34"/><text x="57.5626%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h65a8860ad2532130 (41 instructions, 0.17%)</title><rect x="57.2696%" y="53" width="0.1661%" height="15" fill="rgb(246,89,9)" fg:x="14133" fg:w="41"/><text x="57.5626%" y="63.50"></text></g><g><title>memcpy (82 instructions, 0.33%)</title><rect x="57.4358%" y="53" width="0.3323%" height="15" fill="rgb(233,213,13)" fg:x="14174" fg:w="82"/><text x="57.7287%" y="63.50"></text></g><g><title>text_of_ptr_size (133 instructions, 0.54%)</title><rect x="57.2696%" y="69" width="0.5389%" height="15" fill="rgb(233,141,41)" fg:x="14133" fg:w="133"/><text x="57.5626%" y="79.50"></text></g><g><title>@deserialize_go&lt;t&gt; (393 instructions, 1.59%)</title><rect x="56.3660%" y="85" width="1.5925%" height="15" fill="rgb(239,167,4)" fg:x="13910" fg:w="393"/><text x="56.6590%" y="95.50"></text></g><g><title>@deserialize_go&lt;v(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)&gt; (1,853 instructions, 7.51%)</title><rect x="51.3615%" y="101" width="7.5087%" height="15" fill="rgb(209,217,16)" fg:x="12675" fg:w="1853"/><text x="51.6545%" y="111.50">@deseria..</text></g><g><title>skip_fields (5 instructions, 0.02%)</title><rect x="58.8702%" y="101" width="0.0203%" height="15" fill="rgb(219,88,35)" fg:x="14528" fg:w="5"/><text x="59.1632%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="58.8905%" y="85" width="0.1054%" height="15" fill="rgb(220,193,23)" fg:x="14533" fg:w="26"/><text x="59.1835%" y="95.50"></text></g><g><title>to_2_tuple (41 instructions, 0.17%)</title><rect x="58.8905%" y="101" width="0.1661%" height="15" fill="rgb(230,90,52)" fg:x="14533" fg:w="41"/><text x="59.1835%" y="111.50"></text></g><g><title>@deserialize_go&lt;(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t))&gt; (2,902 instructions, 11.76%)</title><rect x="47.9577%" y="117" width="11.7595%" height="15" fill="rgb(252,106,19)" fg:x="11835" fg:w="2902"/><text x="48.2507%" y="127.50">@deserialize_go..</text></g><g><title>Array.unsafe_idx (7 instructions, 0.03%)</title><rect x="59.7172%" y="117" width="0.0284%" height="15" fill="rgb(206,74,20)" fg:x="14737" fg:w="7"/><text x="60.0101%" y="127.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="59.7455%" y="117" width="0.0122%" height="15" fill="rgb(230,138,44)" fg:x="14744" fg:w="3"/><text x="60.0385%" y="127.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="59.7577%" y="117" width="0.0122%" height="15" fill="rgb(235,182,43)" fg:x="14747" fg:w="3"/><text x="60.0506%" y="127.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="59.7698%" y="117" width="0.0122%" height="15" fill="rgb(242,16,51)" fg:x="14750" fg:w="3"/><text x="60.0628%" y="127.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="59.7820%" y="101" width="0.2755%" height="15" fill="rgb(248,9,4)" fg:x="14753" fg:w="68"/><text x="60.0750%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="60.0575%" y="101" width="0.2067%" height="15" fill="rgb(210,31,22)" fg:x="14821" fg:w="51"/><text x="60.3505%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="60.2642%" y="85" width="0.2067%" height="15" fill="rgb(239,54,39)" fg:x="14872" fg:w="51"/><text x="60.5572%" y="95.50"></text></g><g><title>find_field (80 instructions, 0.32%)</title><rect x="60.2642%" y="101" width="0.3242%" height="15" fill="rgb(230,99,41)" fg:x="14872" fg:w="80"/><text x="60.5572%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="60.5884%" y="101" width="0.2755%" height="15" fill="rgb(253,106,12)" fg:x="14952" fg:w="68"/><text x="60.8813%" y="111.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="60.8639%" y="101" width="0.0122%" height="15" fill="rgb(213,46,41)" fg:x="15020" fg:w="3"/><text x="61.1569%" y="111.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="60.8761%" y="101" width="0.0122%" height="15" fill="rgb(215,133,35)" fg:x="15023" fg:w="3"/><text x="61.1691%" y="111.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="60.8882%" y="101" width="0.0122%" height="15" fill="rgb(213,28,5)" fg:x="15026" fg:w="3"/><text x="61.1812%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="60.9004%" y="85" width="0.2067%" height="15" fill="rgb(215,77,49)" fg:x="15029" fg:w="51"/><text x="61.1934%" y="95.50"></text></g><g><title>core::str::converts::from_utf8::h828634ce6cdca907 (185 instructions, 0.75%)</title><rect x="61.1071%" y="69" width="0.7497%" height="15" fill="rgb(248,100,22)" fg:x="15080" fg:w="185"/><text x="61.4000%" y="79.50"></text></g><g><title>utf8_validate (202 instructions, 0.82%)</title><rect x="61.1071%" y="85" width="0.8185%" height="15" fill="rgb(208,67,9)" fg:x="15080" fg:w="202"/><text x="61.4000%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="61.9256%" y="53" width="0.1378%" height="15" fill="rgb(219,133,21)" fg:x="15282" fg:w="34"/><text x="62.2186%" y="63.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h65a8860ad2532130 (41 instructions, 0.17%)</title><rect x="61.9256%" y="69" width="0.1661%" height="15" fill="rgb(246,46,29)" fg:x="15282" fg:w="41"/><text x="62.2186%" y="79.50"></text></g><g><title>memcpy (148 instructions, 0.60%)</title><rect x="62.0917%" y="69" width="0.5997%" height="15" fill="rgb(246,185,52)" fg:x="15323" fg:w="148"/><text x="62.3847%" y="79.50"></text></g><g><title>text_of_ptr_size (199 instructions, 0.81%)</title><rect x="61.9256%" y="85" width="0.8064%" height="15" fill="rgb(252,136,11)" fg:x="15282" fg:w="199"/><text x="62.2186%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (489 instructions, 1.98%)</title><rect x="60.9004%" y="101" width="1.9815%" height="15" fill="rgb(219,138,53)" fg:x="15029" fg:w="489"/><text x="61.1934%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="62.8819%" y="85" width="0.2067%" height="15" fill="rgb(211,51,23)" fg:x="15518" fg:w="51"/><text x="63.1749%" y="95.50"></text></g><g><title>find_field (80 instructions, 0.32%)</title><rect x="62.8819%" y="101" width="0.3242%" height="15" fill="rgb(247,221,28)" fg:x="15518" fg:w="80"/><text x="63.1749%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="63.2061%" y="101" width="0.2755%" height="15" fill="rgb(251,222,45)" fg:x="15598" fg:w="68"/><text x="63.4991%" y="111.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="63.4816%" y="101" width="0.0122%" height="15" fill="rgb(217,162,53)" fg:x="15666" fg:w="3"/><text x="63.7746%" y="111.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="63.4938%" y="101" width="0.0122%" height="15" fill="rgb(229,93,14)" fg:x="15669" fg:w="3"/><text x="63.7868%" y="111.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="63.5060%" y="101" width="0.0122%" height="15" fill="rgb(209,67,49)" fg:x="15672" fg:w="3"/><text x="63.7989%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="63.5181%" y="85" width="0.2755%" height="15" fill="rgb(213,87,29)" fg:x="15675" fg:w="68"/><text x="63.8111%" y="95.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="63.7937%" y="85" width="0.2067%" height="15" fill="rgb(205,151,52)" fg:x="15743" fg:w="51"/><text x="64.0866%" y="95.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="64.0003%" y="85" width="0.2067%" height="15" fill="rgb(253,215,39)" fg:x="15794" fg:w="51"/><text x="64.2933%" y="95.50"></text></g><g><title>skip_leb128 (83 instructions, 0.34%)</title><rect x="64.2070%" y="85" width="0.3363%" height="15" fill="rgb(221,220,41)" fg:x="15845" fg:w="83"/><text x="64.5000%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="64.5433%" y="85" width="0.1054%" height="15" fill="rgb(218,133,21)" fg:x="15928" fg:w="26"/><text x="64.8363%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="64.6487%" y="85" width="0.4133%" height="15" fill="rgb(221,193,43)" fg:x="15954" fg:w="102"/><text x="64.9416%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="65.0620%" y="85" width="0.1054%" height="15" fill="rgb(240,128,52)" fg:x="16056" fg:w="26"/><text x="65.3550%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="65.1674%" y="85" width="0.4133%" height="15" fill="rgb(253,114,12)" fg:x="16082" fg:w="102"/><text x="65.4603%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="65.5807%" y="85" width="0.1054%" height="15" fill="rgb(215,223,47)" fg:x="16184" fg:w="26"/><text x="65.8736%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="65.6860%" y="85" width="0.4133%" height="15" fill="rgb(248,225,23)" fg:x="16210" fg:w="102"/><text x="65.9790%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="66.0994%" y="85" width="0.1054%" height="15" fill="rgb(250,108,0)" fg:x="16312" fg:w="26"/><text x="66.3923%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="66.2047%" y="85" width="0.4133%" height="15" fill="rgb(228,208,7)" fg:x="16338" fg:w="102"/><text x="66.4977%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="66.6180%" y="85" width="0.1054%" height="15" fill="rgb(244,45,10)" fg:x="16440" fg:w="26"/><text x="66.9110%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="66.7234%" y="85" width="0.4133%" height="15" fill="rgb(207,125,25)" fg:x="16466" fg:w="102"/><text x="67.0164%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="67.1367%" y="85" width="0.1054%" height="15" fill="rgb(210,195,18)" fg:x="16568" fg:w="26"/><text x="67.4297%" y="95.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="67.2421%" y="85" width="0.8631%" height="15" fill="rgb(249,80,12)" fg:x="16594" fg:w="213"/><text x="67.5350%" y="95.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="68.1052%" y="85" width="0.2755%" height="15" fill="rgb(221,65,9)" fg:x="16807" fg:w="68"/><text x="68.3982%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="68.3807%" y="85" width="0.1054%" height="15" fill="rgb(235,49,36)" fg:x="16875" fg:w="26"/><text x="68.6737%" y="95.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="68.4861%" y="85" width="0.0122%" height="15" fill="rgb(225,32,20)" fg:x="16901" fg:w="3"/><text x="68.7791%" y="95.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="68.4983%" y="85" width="0.0122%" height="15" fill="rgb(215,141,46)" fg:x="16904" fg:w="3"/><text x="68.7912%" y="95.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="68.5104%" y="85" width="0.0122%" height="15" fill="rgb(250,160,47)" fg:x="16907" fg:w="3"/><text x="68.8034%" y="95.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="68.5226%" y="69" width="0.2067%" height="15" fill="rgb(216,222,40)" fg:x="16910" fg:w="51"/><text x="68.8155%" y="79.50"></text></g><g><title>core::str::converts::from_utf8::h828634ce6cdca907 (154 instructions, 0.62%)</title><rect x="68.7292%" y="53" width="0.6240%" height="15" fill="rgb(234,217,39)" fg:x="16961" fg:w="154"/><text x="69.0222%" y="63.50"></text></g><g><title>utf8_validate (171 instructions, 0.69%)</title><rect x="68.7292%" y="69" width="0.6929%" height="15" fill="rgb(207,178,40)" fg:x="16961" fg:w="171"/><text x="69.0222%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="69.4222%" y="37" width="0.1378%" height="15" fill="rgb(221,136,13)" fg:x="17132" fg:w="34"/><text x="69.7151%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h65a8860ad2532130 (41 instructions, 0.17%)</title><rect x="69.4222%" y="53" width="0.1661%" height="15" fill="rgb(249,199,10)" fg:x="17132" fg:w="41"/><text x="69.7151%" y="63.50"></text></g><g><title>memcpy (115 instructions, 0.47%)</title><rect x="69.5883%" y="53" width="0.4660%" height="15" fill="rgb(249,222,13)" fg:x="17173" fg:w="115"/><text x="69.8813%" y="63.50"></text></g><g><title>text_of_ptr_size (166 instructions, 0.67%)</title><rect x="69.4222%" y="69" width="0.6727%" height="15" fill="rgb(244,185,38)" fg:x="17132" fg:w="166"/><text x="69.7151%" y="79.50"></text></g><g><title>@deserialize_go&lt;t&gt; (425 instructions, 1.72%)</title><rect x="68.5226%" y="85" width="1.7222%" height="15" fill="rgb(236,202,9)" fg:x="16910" fg:w="425"/><text x="68.8155%" y="95.50"></text></g><g><title>@deserialize_go&lt;v(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)&gt; (1,885 instructions, 7.64%)</title><rect x="63.5181%" y="101" width="7.6384%" height="15" fill="rgb(250,229,37)" fg:x="15675" fg:w="1885"/><text x="63.8111%" y="111.50">@deserial..</text></g><g><title>skip_fields (5 instructions, 0.02%)</title><rect x="71.1565%" y="101" width="0.0203%" height="15" fill="rgb(206,174,23)" fg:x="17560" fg:w="5"/><text x="71.4495%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="71.1768%" y="85" width="0.1054%" height="15" fill="rgb(211,33,43)" fg:x="17565" fg:w="26"/><text x="71.4697%" y="95.50"></text></g><g><title>to_2_tuple (41 instructions, 0.17%)</title><rect x="71.1768%" y="101" width="0.1661%" height="15" fill="rgb(245,58,50)" fg:x="17565" fg:w="41"/><text x="71.4697%" y="111.50"></text></g><g><title>@deserialize_go&lt;(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t))&gt; (3,016 instructions, 12.22%)</title><rect x="59.7820%" y="117" width="12.2214%" height="15" fill="rgb(244,68,36)" fg:x="14753" fg:w="3016"/><text x="60.0750%" y="127.50">@deserialize_go..</text></g><g><title>Array.unsafe_idx (7 instructions, 0.03%)</title><rect x="72.0034%" y="117" width="0.0284%" height="15" fill="rgb(232,229,15)" fg:x="17769" fg:w="7"/><text x="72.2964%" y="127.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="72.0318%" y="117" width="0.0122%" height="15" fill="rgb(254,30,23)" fg:x="17776" fg:w="3"/><text x="72.3247%" y="127.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="72.0439%" y="117" width="0.0122%" height="15" fill="rgb(235,160,14)" fg:x="17779" fg:w="3"/><text x="72.3369%" y="127.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="72.0561%" y="117" width="0.0122%" height="15" fill="rgb(212,155,44)" fg:x="17782" fg:w="3"/><text x="72.3491%" y="127.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="72.0682%" y="101" width="0.2755%" height="15" fill="rgb(226,2,50)" fg:x="17785" fg:w="68"/><text x="72.3612%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="72.3438%" y="101" width="0.2067%" height="15" fill="rgb(234,177,6)" fg:x="17853" fg:w="51"/><text x="72.6368%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="72.5504%" y="85" width="0.2067%" height="15" fill="rgb(217,24,9)" fg:x="17904" fg:w="51"/><text x="72.8434%" y="95.50"></text></g><g><title>find_field (80 instructions, 0.32%)</title><rect x="72.5504%" y="101" width="0.3242%" height="15" fill="rgb(220,13,46)" fg:x="17904" fg:w="80"/><text x="72.8434%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="72.8746%" y="101" width="0.2755%" height="15" fill="rgb(239,221,27)" fg:x="17984" fg:w="68"/><text x="73.1676%" y="111.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="73.1502%" y="101" width="0.0122%" height="15" fill="rgb(222,198,25)" fg:x="18052" fg:w="3"/><text x="73.4431%" y="111.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="73.1623%" y="101" width="0.0122%" height="15" fill="rgb(211,99,13)" fg:x="18055" fg:w="3"/><text x="73.4553%" y="111.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="73.1745%" y="101" width="0.0122%" height="15" fill="rgb(232,111,31)" fg:x="18058" fg:w="3"/><text x="73.4675%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="73.1866%" y="85" width="0.2067%" height="15" fill="rgb(245,82,37)" fg:x="18061" fg:w="51"/><text x="73.4796%" y="95.50"></text></g><g><title>core::str::converts::from_utf8::h828634ce6cdca907 (195 instructions, 0.79%)</title><rect x="73.3933%" y="69" width="0.7902%" height="15" fill="rgb(227,149,46)" fg:x="18112" fg:w="195"/><text x="73.6863%" y="79.50"></text></g><g><title>utf8_validate (212 instructions, 0.86%)</title><rect x="73.3933%" y="85" width="0.8591%" height="15" fill="rgb(218,36,50)" fg:x="18112" fg:w="212"/><text x="73.6863%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="74.2524%" y="53" width="0.1378%" height="15" fill="rgb(226,80,48)" fg:x="18324" fg:w="34"/><text x="74.5453%" y="63.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h65a8860ad2532130 (41 instructions, 0.17%)</title><rect x="74.2524%" y="69" width="0.1661%" height="15" fill="rgb(238,224,15)" fg:x="18324" fg:w="41"/><text x="74.5453%" y="79.50"></text></g><g><title>memcpy (152 instructions, 0.62%)</title><rect x="74.4185%" y="69" width="0.6159%" height="15" fill="rgb(241,136,10)" fg:x="18365" fg:w="152"/><text x="74.7115%" y="79.50"></text></g><g><title>text_of_ptr_size (203 instructions, 0.82%)</title><rect x="74.2524%" y="85" width="0.8226%" height="15" fill="rgb(208,32,45)" fg:x="18324" fg:w="203"/><text x="74.5453%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (503 instructions, 2.04%)</title><rect x="73.1866%" y="101" width="2.0383%" height="15" fill="rgb(207,135,9)" fg:x="18061" fg:w="503"/><text x="73.4796%" y="111.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="75.2249%" y="85" width="0.2067%" height="15" fill="rgb(206,86,44)" fg:x="18564" fg:w="51"/><text x="75.5179%" y="95.50"></text></g><g><title>find_field (80 instructions, 0.32%)</title><rect x="75.2249%" y="101" width="0.3242%" height="15" fill="rgb(245,177,15)" fg:x="18564" fg:w="80"/><text x="75.5179%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="75.5491%" y="101" width="0.2755%" height="15" fill="rgb(206,64,50)" fg:x="18644" fg:w="68"/><text x="75.8420%" y="111.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="75.8246%" y="101" width="0.0122%" height="15" fill="rgb(234,36,40)" fg:x="18712" fg:w="3"/><text x="76.1176%" y="111.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="75.8368%" y="101" width="0.0122%" height="15" fill="rgb(213,64,8)" fg:x="18715" fg:w="3"/><text x="76.1297%" y="111.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="75.8489%" y="101" width="0.0122%" height="15" fill="rgb(210,75,36)" fg:x="18718" fg:w="3"/><text x="76.1419%" y="111.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="75.8611%" y="85" width="0.2755%" height="15" fill="rgb(229,88,21)" fg:x="18721" fg:w="68"/><text x="76.1541%" y="95.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="76.1366%" y="85" width="0.2067%" height="15" fill="rgb(252,204,47)" fg:x="18789" fg:w="51"/><text x="76.4296%" y="95.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="76.3433%" y="85" width="0.2067%" height="15" fill="rgb(208,77,27)" fg:x="18840" fg:w="51"/><text x="76.6363%" y="95.50"></text></g><g><title>skip_leb128 (83 instructions, 0.34%)</title><rect x="76.5500%" y="85" width="0.3363%" height="15" fill="rgb(221,76,26)" fg:x="18891" fg:w="83"/><text x="76.8429%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="76.8863%" y="85" width="0.1054%" height="15" fill="rgb(225,139,18)" fg:x="18974" fg:w="26"/><text x="77.1793%" y="95.50"></text></g><g><title>skip_leb128 (102 instructions, 0.41%)</title><rect x="76.9917%" y="85" width="0.4133%" height="15" fill="rgb(230,137,11)" fg:x="19000" fg:w="102"/><text x="77.2846%" y="95.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="77.4050%" y="85" width="0.1054%" height="15" fill="rgb(212,28,1)" fg:x="19102" fg:w="26"/><text x="77.6979%" y="95.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="77.5103%" y="85" width="0.8631%" height="15" fill="rgb(248,164,17)" fg:x="19128" fg:w="213"/><text x="77.8033%" y="95.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="78.3735%" y="85" width="0.2755%" height="15" fill="rgb(222,171,42)" fg:x="19341" fg:w="68"/><text x="78.6664%" y="95.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="78.6490%" y="85" width="0.1054%" height="15" fill="rgb(243,84,45)" fg:x="19409" fg:w="26"/><text x="78.9420%" y="95.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="78.7544%" y="85" width="0.0122%" height="15" fill="rgb(252,49,23)" fg:x="19435" fg:w="3"/><text x="79.0473%" y="95.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="78.7665%" y="85" width="0.0122%" height="15" fill="rgb(215,19,7)" fg:x="19438" fg:w="3"/><text x="79.0595%" y="95.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="78.7787%" y="85" width="0.0122%" height="15" fill="rgb(238,81,41)" fg:x="19441" fg:w="3"/><text x="79.0716%" y="95.50"></text></g><g><title>@deserialize_go&lt;n8&gt; (38 instructions, 0.15%)</title><rect x="78.7908%" y="85" width="0.1540%" height="15" fill="rgb(210,199,37)" fg:x="19444" fg:w="38"/><text x="79.0838%" y="95.50"></text></g><g><title>@deserialize_go&lt;v(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)&gt; (918 instructions, 3.72%)</title><rect x="75.8611%" y="101" width="3.7199%" height="15" fill="rgb(244,192,49)" fg:x="18721" fg:w="918"/><text x="76.1541%" y="111.50">@de..</text></g><g><title>skip_fields (5 instructions, 0.02%)</title><rect x="79.5810%" y="101" width="0.0203%" height="15" fill="rgb(226,211,11)" fg:x="19639" fg:w="5"/><text x="79.8740%" y="111.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="79.6013%" y="85" width="0.1054%" height="15" fill="rgb(236,162,54)" fg:x="19644" fg:w="26"/><text x="79.8942%" y="95.50"></text></g><g><title>to_2_tuple (41 instructions, 0.17%)</title><rect x="79.6013%" y="101" width="0.1661%" height="15" fill="rgb(220,229,9)" fg:x="19644" fg:w="41"/><text x="79.8942%" y="111.50"></text></g><g><title>@deserialize_go&lt;(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t))&gt; (2,063 instructions, 8.36%)</title><rect x="72.0682%" y="117" width="8.3597%" height="15" fill="rgb(250,87,22)" fg:x="17785" fg:w="2063"/><text x="72.3612%" y="127.50">@deseriali..</text></g><g><title>@deserialize_go&lt;v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t))&gt; (11,756 instructions, 47.64%)</title><rect x="33.8885%" y="133" width="47.6376%" height="15" fill="rgb(239,43,17)" fg:x="8363" fg:w="11756"/><text x="34.1815%" y="143.50">@deserialize_go&lt;v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n..</text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="81.5261%" y="117" width="0.8631%" height="15" fill="rgb(231,177,25)" fg:x="20119" fg:w="213"/><text x="81.8190%" y="127.50"></text></g><g><title>find_field (242 instructions, 0.98%)</title><rect x="81.5261%" y="133" width="0.9806%" height="15" fill="rgb(219,179,1)" fg:x="20119" fg:w="242"/><text x="81.8190%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="82.5067%" y="133" width="0.2755%" height="15" fill="rgb(238,219,53)" fg:x="20361" fg:w="68"/><text x="82.7997%" y="143.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="82.7822%" y="133" width="0.0122%" height="15" fill="rgb(232,167,36)" fg:x="20429" fg:w="3"/><text x="83.0752%" y="143.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="82.7944%" y="133" width="0.0122%" height="15" fill="rgb(244,19,51)" fg:x="20432" fg:w="3"/><text x="83.0874%" y="143.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="82.8065%" y="133" width="0.0122%" height="15" fill="rgb(224,6,22)" fg:x="20435" fg:w="3"/><text x="83.0995%" y="143.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="82.8187%" y="117" width="0.2755%" height="15" fill="rgb(224,145,5)" fg:x="20438" fg:w="68"/><text x="83.1117%" y="127.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="83.0943%" y="117" width="0.2067%" height="15" fill="rgb(234,130,49)" fg:x="20506" fg:w="51"/><text x="83.3872%" y="127.50"></text></g><g><title>leb128_decode (51 instructions, 0.21%)</title><rect x="83.3009%" y="117" width="0.2067%" height="15" fill="rgb(254,6,2)" fg:x="20557" fg:w="51"/><text x="83.5939%" y="127.50"></text></g><g><title>skip_leb128 (83 instructions, 0.34%)</title><rect x="83.5076%" y="117" width="0.3363%" height="15" fill="rgb(208,96,46)" fg:x="20608" fg:w="83"/><text x="83.8005%" y="127.50"></text></g><g><title>skip_leb128 (26 instructions, 0.11%)</title><rect x="83.8439%" y="117" width="0.1054%" height="15" fill="rgb(239,3,39)" fg:x="20691" fg:w="26"/><text x="84.1369%" y="127.50"></text></g><g><title>leb128_decode (213 instructions, 0.86%)</title><rect x="83.9493%" y="117" width="0.8631%" height="15" fill="rgb(233,210,1)" fg:x="20717" fg:w="213"/><text x="84.2422%" y="127.50"></text></g><g><title>sleb128_decode (68 instructions, 0.28%)</title><rect x="84.8124%" y="117" width="0.2755%" height="15" fill="rgb(244,137,37)" fg:x="20930" fg:w="68"/><text x="85.1054%" y="127.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="85.0879%" y="117" width="0.1054%" height="15" fill="rgb(240,136,2)" fg:x="20998" fg:w="26"/><text x="85.3809%" y="127.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="85.1933%" y="117" width="0.0122%" height="15" fill="rgb(239,18,37)" fg:x="21024" fg:w="3"/><text x="85.4863%" y="127.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="85.2054%" y="117" width="0.0122%" height="15" fill="rgb(218,185,22)" fg:x="21027" fg:w="3"/><text x="85.4984%" y="127.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="85.2176%" y="117" width="0.0122%" height="15" fill="rgb(225,218,4)" fg:x="21030" fg:w="3"/><text x="85.5106%" y="127.50"></text></g><g><title>@deserialize_go&lt;u&gt; (20 instructions, 0.08%)</title><rect x="85.2298%" y="117" width="0.0810%" height="15" fill="rgb(230,182,32)" fg:x="21033" fg:w="20"/><text x="85.5227%" y="127.50"></text></g><g><title>@deserialize_go&lt;v(Preview:u,Rendered:u)&gt; (755 instructions, 3.06%)</title><rect x="82.8187%" y="133" width="3.0594%" height="15" fill="rgb(242,56,43)" fg:x="20438" fg:w="755"/><text x="83.1117%" y="143.50">@d..</text></g><g><title>skip_fields (5 instructions, 0.02%)</title><rect x="85.8781%" y="133" width="0.0203%" height="15" fill="rgb(233,99,24)" fg:x="21193" fg:w="5"/><text x="86.1711%" y="143.50"></text></g><g><title>@deserialize_go&lt;r(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u))&gt; (14,294 instructions, 57.92%)</title><rect x="28.8962%" y="149" width="57.9220%" height="15" fill="rgb(234,209,42)" fg:x="7131" fg:w="14294"/><text x="29.1892%" y="159.50">@deserialize_go&lt;r(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Co..</text></g><g><title>@deserialize_go&lt;vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u))&gt; (14,653 instructions, 59.38%)</title><rect x="27.9074%" y="165" width="59.3768%" height="15" fill="rgb(227,7,12)" fg:x="6887" fg:w="14653"/><text x="28.2004%" y="175.50">@deserialize_go&lt;vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Con..</text></g><g><title>@deserialize&lt;Pvr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u))&gt; (21,750 instructions, 88.14%)</title><rect x="0.2067%" y="181" width="88.1352%" height="15" fill="rgb(245,203,43)" fg:x="51" fg:w="21750"/><text x="0.4996%" y="191.50">@deserialize&lt;Pvr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,Nat..</text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="88.3418%" y="181" width="0.1054%" height="15" fill="rgb(238,205,33)" fg:x="21801" fg:w="26"/><text x="88.6348%" y="191.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="88.4472%" y="149" width="0.1378%" height="15" fill="rgb(231,56,7)" fg:x="21827" fg:w="34"/><text x="88.7402%" y="159.50"></text></g><g><title>alloc_blob (36 instructions, 0.15%)</title><rect x="88.4472%" y="165" width="0.1459%" height="15" fill="rgb(244,186,29)" fg:x="21827" fg:w="36"/><text x="88.7402%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="88.5931%" y="165" width="0.1054%" height="15" fill="rgb(234,111,31)" fg:x="21863" fg:w="26"/><text x="88.8860%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.06%)</title><rect x="88.6984%" y="165" width="0.0648%" height="15" fill="rgb(241,149,10)" fg:x="21889" fg:w="16"/><text x="88.9914%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="88.7633%" y="165" width="0.1054%" height="15" fill="rgb(249,206,44)" fg:x="21905" fg:w="26"/><text x="89.0562%" y="175.50"></text></g><g><title>opt_project (14 instructions, 0.06%)</title><rect x="88.8686%" y="149" width="0.0567%" height="15" fill="rgb(251,153,30)" fg:x="21931" fg:w="14"/><text x="89.1616%" y="159.50"></text></g><g><title>Blob.compare_eq (803 instructions, 3.25%)</title><rect x="88.9254%" y="133" width="3.2539%" height="15" fill="rgb(239,152,38)" fg:x="21945" fg:w="803"/><text x="89.2183%" y="143.50">Bl..</text></g><g><title>anon-func-151.35 (809 instructions, 3.28%)</title><rect x="88.9254%" y="149" width="3.2782%" height="15" fill="rgb(249,139,47)" fg:x="21945" fg:w="809"/><text x="89.2183%" y="159.50">an..</text></g><g><title>some (867 instructions, 3.51%)</title><rect x="88.8686%" y="165" width="3.5133%" height="15" fill="rgb(244,64,35)" fg:x="21931" fg:w="867"/><text x="89.1616%" y="175.50">some</text></g><g><title>rec (20 instructions, 0.08%)</title><rect x="92.3819%" y="149" width="0.0810%" height="15" fill="rgb(216,46,15)" fg:x="22798" fg:w="20"/><text x="92.6748%" y="159.50"></text></g><g><title>size (24 instructions, 0.10%)</title><rect x="92.3819%" y="165" width="0.0973%" height="15" fill="rgb(250,74,19)" fg:x="22798" fg:w="24"/><text x="92.6748%" y="175.50"></text></g><g><title>Nat-&gt;Nat64 (14 instructions, 0.06%)</title><rect x="92.4791%" y="165" width="0.0567%" height="15" fill="rgb(249,42,33)" fg:x="22822" fg:w="14"/><text x="92.7721%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="92.5359%" y="165" width="0.1054%" height="15" fill="rgb(242,149,17)" fg:x="22836" fg:w="26"/><text x="92.8288%" y="175.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="92.6412%" y="149" width="0.0324%" height="15" fill="rgb(244,29,21)" fg:x="22862" fg:w="8"/><text x="92.9342%" y="159.50"></text></g><g><title>box_i64 (15 instructions, 0.06%)</title><rect x="92.6412%" y="165" width="0.0608%" height="15" fill="rgb(220,130,37)" fg:x="22862" fg:w="15"/><text x="92.9342%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="92.7020%" y="133" width="0.1054%" height="15" fill="rgb(211,67,2)" fg:x="22877" fg:w="26"/><text x="92.9950%" y="143.50"></text></g><g><title>to_2_tuple (41 instructions, 0.17%)</title><rect x="92.7020%" y="149" width="0.1661%" height="15" fill="rgb(235,68,52)" fg:x="22877" fg:w="41"/><text x="92.9950%" y="159.50"></text></g><g><title>opt_inject (14 instructions, 0.06%)</title><rect x="92.8681%" y="149" width="0.0567%" height="15" fill="rgb(246,142,3)" fg:x="22918" fg:w="14"/><text x="93.1611%" y="159.50"></text></g><g><title>push (59 instructions, 0.24%)</title><rect x="92.7020%" y="165" width="0.2391%" height="15" fill="rgb(241,25,7)" fg:x="22877" fg:w="59"/><text x="92.9950%" y="175.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="92.9411%" y="149" width="0.0324%" height="15" fill="rgb(242,119,39)" fg:x="22936" fg:w="8"/><text x="93.2340%" y="159.50"></text></g><g><title>B_add (25 instructions, 0.10%)</title><rect x="92.9411%" y="165" width="0.1013%" height="15" fill="rgb(241,98,45)" fg:x="22936" fg:w="25"/><text x="93.2340%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="93.0424%" y="165" width="0.1054%" height="15" fill="rgb(254,28,30)" fg:x="22961" fg:w="26"/><text x="93.3354%" y="175.50"></text></g><g><title>alloc_words (26 instructions, 0.11%)</title><rect x="93.1477%" y="165" width="0.1054%" height="15" fill="rgb(241,142,54)" fg:x="22987" fg:w="26"/><text x="93.4407%" y="175.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="93.2531%" y="149" width="0.0324%" height="15" fill="rgb(222,85,15)" fg:x="23013" fg:w="8"/><text x="93.5461%" y="159.50"></text></g><g><title>box_i64 (15 instructions, 0.06%)</title><rect x="93.2531%" y="165" width="0.0608%" height="15" fill="rgb(210,85,47)" fg:x="23013" fg:w="15"/><text x="93.5461%" y="175.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.06%)</title><rect x="93.3139%" y="101" width="0.0648%" height="15" fill="rgb(224,206,25)" fg:x="23028" fg:w="16"/><text x="93.6069%" y="111.50"></text></g><g><title>@buffer_size&lt;N&gt; (32 instructions, 0.13%)</title><rect x="93.3787%" y="101" width="0.1297%" height="15" fill="rgb(243,201,19)" fg:x="23044" fg:w="32"/><text x="93.6717%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (30 instructions, 0.12%)</title><rect x="93.5084%" y="101" width="0.1216%" height="15" fill="rgb(236,59,4)" fg:x="23076" fg:w="30"/><text x="93.8014%" y="111.50"></text></g><g><title>@buffer_size&lt;n64&gt; (18 instructions, 0.07%)</title><rect x="93.6300%" y="101" width="0.0729%" height="15" fill="rgb(254,179,45)" fg:x="23106" fg:w="18"/><text x="93.9229%" y="111.50"></text></g><g><title>@buffer_size&lt;r(id:N,token_id:n64)&gt; (141 instructions, 0.57%)</title><rect x="93.3139%" y="117" width="0.5714%" height="15" fill="rgb(226,14,10)" fg:x="23028" fg:w="141"/><text x="93.6069%" y="127.50"></text></g><g><title>@buffer_size&lt;v(Err:v(InvalidTokenId:u,Other:u,Unauthorized:u,ZeroAddress:u),Ok:r(id:N,token_id:n64))&gt; (183 instructions, 0.74%)</title><rect x="93.3139%" y="133" width="0.7416%" height="15" fill="rgb(244,27,41)" fg:x="23028" fg:w="183"/><text x="93.6069%" y="143.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="94.0554%" y="117" width="0.1378%" height="15" fill="rgb(235,35,32)" fg:x="23211" fg:w="34"/><text x="94.3484%" y="127.50"></text></g><g><title>alloc_blob (36 instructions, 0.15%)</title><rect x="94.0554%" y="133" width="0.1459%" height="15" fill="rgb(218,68,31)" fg:x="23211" fg:w="36"/><text x="94.3484%" y="143.50"></text></g><g><title>memcpy (132 instructions, 0.53%)</title><rect x="94.2013%" y="133" width="0.5349%" height="15" fill="rgb(207,120,37)" fg:x="23247" fg:w="132"/><text x="94.4943%" y="143.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hb87d531fc7688eb8 (34 instructions, 0.14%)</title><rect x="94.7362%" y="117" width="0.1378%" height="15" fill="rgb(227,98,0)" fg:x="23379" fg:w="34"/><text x="95.0292%" y="127.50"></text></g><g><title>alloc_blob (36 instructions, 0.15%)</title><rect x="94.7362%" y="133" width="0.1459%" height="15" fill="rgb(207,7,3)" fg:x="23379" fg:w="36"/><text x="95.0292%" y="143.50"></text></g><g><title>leb128_encode (12 instructions, 0.05%)</title><rect x="94.8821%" y="117" width="0.0486%" height="15" fill="rgb(206,98,19)" fg:x="23415" fg:w="12"/><text x="95.1750%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (16 instructions, 0.06%)</title><rect x="94.9307%" y="101" width="0.0648%" height="15" fill="rgb(217,5,26)" fg:x="23427" fg:w="16"/><text x="95.2237%" y="111.50"></text></g><g><title>leb128_encode (12 instructions, 0.05%)</title><rect x="94.9955%" y="85" width="0.0486%" height="15" fill="rgb(235,190,38)" fg:x="23443" fg:w="12"/><text x="95.2885%" y="95.50"></text></g><g><title>@serialize_go&lt;N&gt; (40 instructions, 0.16%)</title><rect x="94.9955%" y="101" width="0.1621%" height="15" fill="rgb(247,86,24)" fg:x="23443" fg:w="40"/><text x="95.2885%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (30 instructions, 0.12%)</title><rect x="95.1576%" y="101" width="0.1216%" height="15" fill="rgb(205,101,16)" fg:x="23483" fg:w="30"/><text x="95.4506%" y="111.50"></text></g><g><title>unbox_i64 (7 instructions, 0.03%)</title><rect x="95.2792%" y="85" width="0.0284%" height="15" fill="rgb(246,168,33)" fg:x="23513" fg:w="7"/><text x="95.5722%" y="95.50"></text></g><g><title>@serialize_go&lt;n64&gt; (19 instructions, 0.08%)</title><rect x="95.2792%" y="101" width="0.0770%" height="15" fill="rgb(231,114,1)" fg:x="23513" fg:w="19"/><text x="95.5722%" y="111.50"></text></g><g><title>@serialize_go&lt;r(id:N,token_id:n64)&gt; (130 instructions, 0.53%)</title><rect x="94.9307%" y="117" width="0.5268%" height="15" fill="rgb(207,184,53)" fg:x="23427" fg:w="130"/><text x="95.2237%" y="127.50"></text></g><g><title>@serialize_go&lt;v(Err:v(InvalidTokenId:u,Other:u,Unauthorized:u,ZeroAddress:u),Ok:r(id:N,token_id:n64))&gt; (170 instructions, 0.69%)</title><rect x="94.8821%" y="133" width="0.6889%" height="15" fill="rgb(224,95,51)" fg:x="23415" fg:w="170"/><text x="95.1750%" y="143.50"></text></g><g><title>@serialize&lt;v(Err:v(InvalidTokenId:u,Other:u,Unauthorized:u,ZeroAddress:u),Ok:r(id:N,token_id:n64))&gt; (620 instructions, 2.51%)</title><rect x="93.3139%" y="149" width="2.5124%" height="15" fill="rgb(212,188,45)" fg:x="23028" fg:w="620"/><text x="93.6069%" y="159.50">@..</text></g><g><title>reply_with_data (90 instructions, 0.36%)</title><rect x="95.8262%" y="149" width="0.3647%" height="15" fill="rgb(223,154,38)" fg:x="23648" fg:w="90"/><text x="96.1192%" y="159.50"></text></g><g><title>$lambda (715 instructions, 2.90%)</title><rect x="93.3139%" y="165" width="2.8973%" height="15" fill="rgb(251,22,52)" fg:x="23028" fg:w="715"/><text x="93.6069%" y="175.50">$l..</text></g><g><title>$lambda (2,068 instructions, 8.38%)</title><rect x="88.4472%" y="181" width="8.3799%" height="15" fill="rgb(229,209,22)" fg:x="21827" fg:w="2068"/><text x="88.7402%" y="191.50">$lambda</text></g><g><title>schedule_copying_gc (50 instructions, 0.20%)</title><rect x="96.8271%" y="181" width="0.2026%" height="15" fill="rgb(234,138,34)" fg:x="23895" fg:w="50"/><text x="97.1201%" y="191.50"></text></g><g><title>trans_state4 (14 instructions, 0.06%)</title><rect x="97.0297%" y="181" width="0.0567%" height="15" fill="rgb(212,95,11)" fg:x="23945" fg:w="14"/><text x="97.3227%" y="191.50"></text></g><g><title>all (24,678 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(240,179,47)" fg:x="0" fg:w="24678"/><text x="0.2930%" y="223.50"></text></g><g><title>mintDip721 (24,678 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(240,163,11)" fg:x="0" fg:w="24678"/><text x="0.2930%" y="207.50">mintDip721</text></g></svg></svg>