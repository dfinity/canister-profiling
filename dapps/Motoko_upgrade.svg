<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="214" onload="init(evt)" viewBox="0 0 1024 214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="214" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">NFT.upgrade</text><text id="details" fill="rgb(0,0,0)" x="10" y="197.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="197.00"> </text><svg id="frames" x="10" width="1004" total_samples="91835"><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="0.0000%" y="117" width="0.0359%" height="15" fill="rgb(235,68,52)" fg:x="0" fg:w="33"/><text x="0.2930%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="0.0359%" y="117" width="0.0534%" height="15" fill="rgb(246,142,3)" fg:x="33" fg:w="49"/><text x="0.3289%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="0.0893%" y="101" width="0.0185%" height="15" fill="rgb(241,25,7)" fg:x="82" fg:w="17"/><text x="0.3823%" y="111.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.1078%" y="101" width="0.0436%" height="15" fill="rgb(242,119,39)" fg:x="99" fg:w="40"/><text x="0.4008%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="0.1514%" y="101" width="0.0359%" height="15" fill="rgb(241,98,45)" fg:x="139" fg:w="33"/><text x="0.4443%" y="111.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.1873%" y="101" width="0.0436%" height="15" fill="rgb(254,28,30)" fg:x="172" fg:w="40"/><text x="0.4803%" y="111.50"></text></g><g><title>@buffer_size&lt;r(data:t,logo_type:t)&gt; (186 instructions, 0.20%)</title><rect x="0.0893%" y="117" width="0.2025%" height="15" fill="rgb(241,142,54)" fg:x="82" fg:w="186"/><text x="0.3823%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (65 instructions, 0.07%)</title><rect x="0.2918%" y="117" width="0.0708%" height="15" fill="rgb(222,85,15)" fg:x="268" fg:w="65"/><text x="0.5848%" y="127.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.3626%" y="101" width="0.0436%" height="15" fill="rgb(210,85,47)" fg:x="333" fg:w="40"/><text x="0.6556%" y="111.50"></text></g><g><title>@buffer_size&lt;?t&gt; (97 instructions, 0.11%)</title><rect x="0.3626%" y="117" width="0.1056%" height="15" fill="rgb(224,206,25)" fg:x="333" fg:w="97"/><text x="0.6556%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (81 instructions, 0.09%)</title><rect x="0.4682%" y="117" width="0.0882%" height="15" fill="rgb(243,201,19)" fg:x="430" fg:w="81"/><text x="0.7612%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="0.5564%" y="101" width="0.0185%" height="15" fill="rgb(236,59,4)" fg:x="511" fg:w="17"/><text x="0.8494%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="0.5749%" y="101" width="0.0359%" height="15" fill="rgb(254,179,45)" fg:x="528" fg:w="33"/><text x="0.8679%" y="111.50"></text></g><g><title>@buffer_size&lt;B&gt; (38 instructions, 0.04%)</title><rect x="0.6109%" y="85" width="0.0414%" height="15" fill="rgb(226,14,10)" fg:x="561" fg:w="38"/><text x="0.9038%" y="95.50"></text></g><g><title>@buffer_size&lt;P&gt; (64 instructions, 0.07%)</title><rect x="0.6109%" y="101" width="0.0697%" height="15" fill="rgb(244,27,41)" fg:x="561" fg:w="64"/><text x="0.9038%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="0.6806%" y="101" width="0.0534%" height="15" fill="rgb(235,35,32)" fg:x="625" fg:w="49"/><text x="0.9735%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="0.7339%" y="85" width="0.0359%" height="15" fill="rgb(218,68,31)" fg:x="674" fg:w="33"/><text x="1.0269%" y="95.50"></text></g><g><title>@buffer_size&lt;B&gt; (38 instructions, 0.04%)</title><rect x="0.7699%" y="85" width="0.0414%" height="15" fill="rgb(207,120,37)" fg:x="707" fg:w="38"/><text x="1.0628%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="0.8112%" y="85" width="0.0185%" height="15" fill="rgb(227,98,0)" fg:x="745" fg:w="17"/><text x="1.1042%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.8297%" y="85" width="0.0436%" height="15" fill="rgb(207,7,3)" fg:x="762" fg:w="40"/><text x="1.1227%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.8733%" y="85" width="0.0436%" height="15" fill="rgb(206,98,19)" fg:x="802" fg:w="40"/><text x="1.1663%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.9169%" y="85" width="0.0436%" height="15" fill="rgb(217,5,26)" fg:x="842" fg:w="40"/><text x="1.2098%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.9604%" y="85" width="0.0436%" height="15" fill="rgb(235,190,38)" fg:x="882" fg:w="40"/><text x="1.2534%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="1.0040%" y="85" width="0.0436%" height="15" fill="rgb(247,86,24)" fg:x="922" fg:w="40"/><text x="1.2969%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="1.0475%" y="85" width="0.0436%" height="15" fill="rgb(205,101,16)" fg:x="962" fg:w="40"/><text x="1.3405%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="1.0911%" y="85" width="0.0436%" height="15" fill="rgb(246,168,33)" fg:x="1002" fg:w="40"/><text x="1.3841%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="1.1346%" y="85" width="0.0534%" height="15" fill="rgb(231,114,1)" fg:x="1042" fg:w="49"/><text x="1.4276%" y="95.50"></text></g><g><title>@buffer_size&lt;vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u))&gt; (1,147 instructions, 1.25%)</title><rect x="0.7339%" y="101" width="1.2490%" height="15" fill="rgb(207,184,53)" fg:x="674" fg:w="1147"/><text x="1.0269%" y="111.50"></text></g><g><title>@buffer_size&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (22 instructions, 0.02%)</title><rect x="1.9829%" y="101" width="0.0240%" height="15" fill="rgb(224,95,51)" fg:x="1821" fg:w="22"/><text x="2.2759%" y="111.50"></text></g><g><title>@buffer_size&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (1,495 instructions, 1.63%)</title><rect x="0.5564%" y="117" width="1.6279%" height="15" fill="rgb(212,188,45)" fg:x="511" fg:w="1495"/><text x="0.8494%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (97 instructions, 0.11%)</title><rect x="2.1844%" y="117" width="0.1056%" height="15" fill="rgb(223,154,38)" fg:x="2006" fg:w="97"/><text x="2.4773%" y="127.50"></text></g><g><title>@buffer_size&lt;B&gt; (38 instructions, 0.04%)</title><rect x="2.2900%" y="117" width="0.0414%" height="15" fill="rgb(251,22,52)" fg:x="2103" fg:w="38"/><text x="2.5829%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="2.3314%" y="117" width="0.0185%" height="15" fill="rgb(229,209,22)" fg:x="2141" fg:w="17"/><text x="2.6243%" y="127.50"></text></g><g><title>@buffer_size&lt;B&gt; (38 instructions, 0.04%)</title><rect x="2.3499%" y="85" width="0.0414%" height="15" fill="rgb(234,138,34)" fg:x="2158" fg:w="38"/><text x="2.6428%" y="95.50"></text></g><g><title>@buffer_size&lt;P&gt; (64 instructions, 0.07%)</title><rect x="2.3499%" y="101" width="0.0697%" height="15" fill="rgb(212,95,11)" fg:x="2158" fg:w="64"/><text x="2.6428%" y="111.50"></text></g><g><title>@buffer_size&lt;0=?(P!0)&gt; (21 instructions, 0.02%)</title><rect x="2.4196%" y="101" width="0.0229%" height="15" fill="rgb(240,179,47)" fg:x="2222" fg:w="21"/><text x="2.7125%" y="111.50"></text></g><g><title>@buffer_size&lt;0=?(P!0)&gt; (181 instructions, 0.20%)</title><rect x="2.3499%" y="117" width="0.1971%" height="15" fill="rgb(240,163,11)" fg:x="2158" fg:w="181"/><text x="2.6428%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (113 instructions, 0.12%)</title><rect x="2.5470%" y="117" width="0.1230%" height="15" fill="rgb(236,37,12)" fg:x="2339" fg:w="113"/><text x="2.8399%" y="127.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="2.6700%" y="101" width="0.0436%" height="15" fill="rgb(232,164,16)" fg:x="2452" fg:w="40"/><text x="2.9630%" y="111.50"></text></g><g><title>@buffer_size&lt;?t&gt; (97 instructions, 0.11%)</title><rect x="2.6700%" y="117" width="0.1056%" height="15" fill="rgb(244,205,15)" fg:x="2452" fg:w="97"/><text x="2.9630%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (129 instructions, 0.14%)</title><rect x="2.7756%" y="117" width="0.1405%" height="15" fill="rgb(223,117,47)" fg:x="2549" fg:w="129"/><text x="3.0686%" y="127.50"></text></g><g><title>@buffer_size&lt;N&gt; (41 instructions, 0.04%)</title><rect x="2.9161%" y="117" width="0.0446%" height="15" fill="rgb(244,107,35)" fg:x="2678" fg:w="41"/><text x="3.2091%" y="127.50"></text></g><g><title>@buffer_size&lt;rs(custodians:?2=?(P!2),logo:?r(data:t,logo_type:t),maxLimit:?n16,name:10=?t,nfts:?12=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!12),profiling:?R,symbol:!10,transactionId:?N)&gt; (3,255 instructions, 3.54%)</title><rect x="0.0000%" y="133" width="3.5444%" height="15" fill="rgb(205,140,8)" fg:x="0" fg:w="3255"/><text x="0.2930%" y="143.50">@bu..</text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="3.5444%" y="133" width="0.0621%" height="15" fill="rgb(228,84,46)" fg:x="3255" fg:w="57"/><text x="3.8374%" y="143.50"></text></g><g><title>memcpy (410 instructions, 0.45%)</title><rect x="3.6065%" y="101" width="0.4465%" height="15" fill="rgb(254,188,9)" fg:x="3312" fg:w="410"/><text x="3.8994%" y="111.50"></text></g><g><title>stream_write (450 instructions, 0.49%)</title><rect x="3.6065%" y="117" width="0.4900%" height="15" fill="rgb(206,112,54)" fg:x="3312" fg:w="450"/><text x="3.8994%" y="127.50"></text></g><g><title>stream_write_text (471 instructions, 0.51%)</title><rect x="3.6065%" y="133" width="0.5129%" height="15" fill="rgb(216,84,49)" fg:x="3312" fg:w="471"/><text x="3.8994%" y="143.50"></text></g><g><title>__stablemem_ensure_pages (140 instructions, 0.15%)</title><rect x="4.1193%" y="117" width="0.1524%" height="15" fill="rgb(214,194,35)" fg:x="3783" fg:w="140"/><text x="4.4123%" y="127.50"></text></g><g><title>__stablemem_ensure (163 instructions, 0.18%)</title><rect x="4.1193%" y="133" width="0.1775%" height="15" fill="rgb(249,28,3)" fg:x="3783" fg:w="163"/><text x="4.4123%" y="143.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="4.2968%" y="117" width="0.0621%" height="15" fill="rgb(222,56,52)" fg:x="3946" fg:w="57"/><text x="4.5898%" y="127.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="4.2968%" y="133" width="0.0708%" height="15" fill="rgb(245,217,50)" fg:x="3946" fg:w="65"/><text x="4.5898%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="4.3676%" y="133" width="0.0359%" height="15" fill="rgb(213,201,24)" fg:x="4011" fg:w="33"/><text x="4.6606%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="4.4035%" y="133" width="0.0294%" height="15" fill="rgb(248,116,28)" fg:x="4044" fg:w="27"/><text x="4.6965%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="4.4330%" y="117" width="0.0283%" height="15" fill="rgb(219,72,43)" fg:x="4071" fg:w="26"/><text x="4.7259%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;n16&gt; (44 instructions, 0.05%)</title><rect x="4.4330%" y="133" width="0.0479%" height="15" fill="rgb(209,138,14)" fg:x="4071" fg:w="44"/><text x="4.7259%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="4.4809%" y="133" width="0.0534%" height="15" fill="rgb(222,18,33)" fg:x="4115" fg:w="49"/><text x="4.7738%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="4.5342%" y="133" width="0.0294%" height="15" fill="rgb(213,199,7)" fg:x="4164" fg:w="27"/><text x="4.8272%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="4.5636%" y="133" width="0.0185%" height="15" fill="rgb(250,110,10)" fg:x="4191" fg:w="17"/><text x="4.8566%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="4.5821%" y="117" width="0.0283%" height="15" fill="rgb(248,123,6)" fg:x="4208" fg:w="26"/><text x="4.8751%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="4.6104%" y="117" width="0.0120%" height="15" fill="rgb(206,91,31)" fg:x="4234" fg:w="11"/><text x="4.9034%" y="127.50"></text></g><g><title>memcpy (50 instructions, 0.05%)</title><rect x="4.6224%" y="85" width="0.0544%" height="15" fill="rgb(211,154,13)" fg:x="4245" fg:w="50"/><text x="4.9154%" y="95.50"></text></g><g><title>stream_write (84 instructions, 0.09%)</title><rect x="4.6224%" y="101" width="0.0915%" height="15" fill="rgb(225,148,7)" fg:x="4245" fg:w="84"/><text x="4.9154%" y="111.50"></text></g><g><title>stream_write_text (105 instructions, 0.11%)</title><rect x="4.6224%" y="117" width="0.1143%" height="15" fill="rgb(220,160,43)" fg:x="4245" fg:w="105"/><text x="4.9154%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (190 instructions, 0.21%)</title><rect x="4.5821%" y="133" width="0.2069%" height="15" fill="rgb(213,52,39)" fg:x="4208" fg:w="190"/><text x="4.8751%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="4.7890%" y="133" width="0.0359%" height="15" fill="rgb(243,137,7)" fg:x="4398" fg:w="33"/><text x="5.0820%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="4.8250%" y="117" width="0.0283%" height="15" fill="rgb(230,79,13)" fg:x="4431" fg:w="26"/><text x="5.1179%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="4.8533%" y="117" width="0.0120%" height="15" fill="rgb(247,105,23)" fg:x="4457" fg:w="11"/><text x="5.1462%" y="127.50"></text></g><g><title>memcpy (66 instructions, 0.07%)</title><rect x="4.8652%" y="85" width="0.0719%" height="15" fill="rgb(223,179,41)" fg:x="4468" fg:w="66"/><text x="5.1582%" y="95.50"></text></g><g><title>stream_write (100 instructions, 0.11%)</title><rect x="4.8652%" y="101" width="0.1089%" height="15" fill="rgb(218,9,34)" fg:x="4468" fg:w="100"/><text x="5.1582%" y="111.50"></text></g><g><title>stream_write_text (121 instructions, 0.13%)</title><rect x="4.8652%" y="117" width="0.1318%" height="15" fill="rgb(222,106,8)" fg:x="4468" fg:w="121"/><text x="5.1582%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (206 instructions, 0.22%)</title><rect x="4.8250%" y="133" width="0.2243%" height="15" fill="rgb(211,220,0)" fg:x="4431" fg:w="206"/><text x="5.1179%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (65 instructions, 0.07%)</title><rect x="5.0493%" y="133" width="0.0708%" height="15" fill="rgb(229,52,16)" fg:x="4637" fg:w="65"/><text x="5.3422%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="5.1201%" y="117" width="0.0294%" height="15" fill="rgb(212,155,18)" fg:x="4702" fg:w="27"/><text x="5.4130%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="5.1495%" y="101" width="0.0283%" height="15" fill="rgb(242,21,14)" fg:x="4729" fg:w="26"/><text x="5.4424%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="5.1778%" y="101" width="0.0120%" height="15" fill="rgb(222,19,48)" fg:x="4755" fg:w="11"/><text x="5.4707%" y="111.50"></text></g><g><title>memcpy (66 instructions, 0.07%)</title><rect x="5.1897%" y="69" width="0.0719%" height="15" fill="rgb(232,45,27)" fg:x="4766" fg:w="66"/><text x="5.4827%" y="79.50"></text></g><g><title>stream_write (100 instructions, 0.11%)</title><rect x="5.1897%" y="85" width="0.1089%" height="15" fill="rgb(249,103,42)" fg:x="4766" fg:w="100"/><text x="5.4827%" y="95.50"></text></g><g><title>stream_write_text (121 instructions, 0.13%)</title><rect x="5.1897%" y="101" width="0.1318%" height="15" fill="rgb(246,81,33)" fg:x="4766" fg:w="121"/><text x="5.4827%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (206 instructions, 0.22%)</title><rect x="5.1495%" y="117" width="0.2243%" height="15" fill="rgb(252,33,42)" fg:x="4729" fg:w="206"/><text x="5.4424%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;?t&gt; (284 instructions, 0.31%)</title><rect x="5.1201%" y="133" width="0.3093%" height="15" fill="rgb(209,212,41)" fg:x="4702" fg:w="284"/><text x="5.4130%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (81 instructions, 0.09%)</title><rect x="5.4293%" y="133" width="0.0882%" height="15" fill="rgb(207,154,6)" fg:x="4986" fg:w="81"/><text x="5.7223%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="5.5175%" y="133" width="0.0294%" height="15" fill="rgb(223,64,47)" fg:x="5067" fg:w="27"/><text x="5.8105%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="5.5469%" y="117" width="0.0294%" height="15" fill="rgb(211,161,38)" fg:x="5094" fg:w="27"/><text x="5.8399%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="5.5763%" y="117" width="0.0185%" height="15" fill="rgb(219,138,40)" fg:x="5121" fg:w="17"/><text x="5.8693%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="5.5948%" y="101" width="0.0283%" height="15" fill="rgb(241,228,46)" fg:x="5138" fg:w="26"/><text x="5.8878%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;n64&gt; (49 instructions, 0.05%)</title><rect x="5.5948%" y="117" width="0.0534%" height="15" fill="rgb(223,209,38)" fg:x="5138" fg:w="49"/><text x="5.8878%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="5.6482%" y="117" width="0.0359%" height="15" fill="rgb(236,164,45)" fg:x="5187" fg:w="33"/><text x="5.9411%" y="127.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="5.6841%" y="101" width="0.0294%" height="15" fill="rgb(231,15,5)" fg:x="5220" fg:w="27"/><text x="5.9771%" y="111.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="5.7135%" y="85" width="0.0283%" height="15" fill="rgb(252,35,15)" fg:x="5247" fg:w="26"/><text x="6.0065%" y="95.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="5.7418%" y="85" width="0.0120%" height="15" fill="rgb(248,181,18)" fg:x="5273" fg:w="11"/><text x="6.0348%" y="95.50"></text></g><g><title>memcpy (106 instructions, 0.12%)</title><rect x="5.7538%" y="69" width="0.1154%" height="15" fill="rgb(233,39,42)" fg:x="5284" fg:w="106"/><text x="6.0468%" y="79.50"></text></g><g><title>stream_write (140 instructions, 0.15%)</title><rect x="5.7538%" y="85" width="0.1524%" height="15" fill="rgb(238,110,33)" fg:x="5284" fg:w="140"/><text x="6.0468%" y="95.50"></text></g><g><title>@Sm_serialize_go&lt;B&gt; (226 instructions, 0.25%)</title><rect x="5.7135%" y="101" width="0.2461%" height="15" fill="rgb(233,195,10)" fg:x="5247" fg:w="226"/><text x="6.0065%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;P&gt; (272 instructions, 0.30%)</title><rect x="5.6841%" y="117" width="0.2962%" height="15" fill="rgb(254,105,3)" fg:x="5220" fg:w="272"/><text x="5.9771%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="5.9803%" y="117" width="0.0534%" height="15" fill="rgb(221,225,9)" fg:x="5492" fg:w="49"/><text x="6.2733%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="6.0336%" y="117" width="0.0283%" height="15" fill="rgb(224,227,45)" fg:x="5541" fg:w="26"/><text x="6.3266%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.0620%" y="117" width="0.0120%" height="15" fill="rgb(229,198,43)" fg:x="5567" fg:w="11"/><text x="6.3549%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="6.0739%" y="117" width="0.0359%" height="15" fill="rgb(206,209,35)" fg:x="5578" fg:w="33"/><text x="6.3669%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="6.1099%" y="101" width="0.0283%" height="15" fill="rgb(245,195,53)" fg:x="5611" fg:w="26"/><text x="6.4028%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.1382%" y="101" width="0.0120%" height="15" fill="rgb(240,92,26)" fg:x="5637" fg:w="11"/><text x="6.4312%" y="111.50"></text></g><g><title>memcpy (66 instructions, 0.07%)</title><rect x="6.1502%" y="85" width="0.0719%" height="15" fill="rgb(207,40,23)" fg:x="5648" fg:w="66"/><text x="6.4431%" y="95.50"></text></g><g><title>stream_write (100 instructions, 0.11%)</title><rect x="6.1502%" y="101" width="0.1089%" height="15" fill="rgb(223,111,35)" fg:x="5648" fg:w="100"/><text x="6.4431%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;B&gt; (186 instructions, 0.20%)</title><rect x="6.1099%" y="117" width="0.2025%" height="15" fill="rgb(229,147,28)" fg:x="5611" fg:w="186"/><text x="6.4028%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="6.3124%" y="117" width="0.0185%" height="15" fill="rgb(211,29,28)" fg:x="5797" fg:w="17"/><text x="6.6054%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="6.3309%" y="117" width="0.0283%" height="15" fill="rgb(228,72,33)" fg:x="5814" fg:w="26"/><text x="6.6239%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.3592%" y="117" width="0.0120%" height="15" fill="rgb(205,214,31)" fg:x="5840" fg:w="11"/><text x="6.6522%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="6.3712%" y="101" width="0.0283%" height="15" fill="rgb(224,111,15)" fg:x="5851" fg:w="26"/><text x="6.6642%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.3995%" y="101" width="0.0120%" height="15" fill="rgb(253,21,26)" fg:x="5877" fg:w="11"/><text x="6.6925%" y="111.50"></text></g><g><title>memcpy (72 instructions, 0.08%)</title><rect x="6.4115%" y="69" width="0.0784%" height="15" fill="rgb(245,139,43)" fg:x="5888" fg:w="72"/><text x="6.7045%" y="79.50"></text></g><g><title>stream_write (106 instructions, 0.12%)</title><rect x="6.4115%" y="85" width="0.1154%" height="15" fill="rgb(252,170,7)" fg:x="5888" fg:w="106"/><text x="6.7045%" y="95.50"></text></g><g><title>stream_write_text (127 instructions, 0.14%)</title><rect x="6.4115%" y="101" width="0.1383%" height="15" fill="rgb(231,118,14)" fg:x="5888" fg:w="127"/><text x="6.7045%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (212 instructions, 0.23%)</title><rect x="6.3712%" y="117" width="0.2308%" height="15" fill="rgb(238,83,0)" fg:x="5851" fg:w="212"/><text x="6.6642%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="6.6021%" y="117" width="0.0283%" height="15" fill="rgb(221,39,39)" fg:x="6063" fg:w="26"/><text x="6.8950%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.6304%" y="117" width="0.0120%" height="15" fill="rgb(222,119,46)" fg:x="6089" fg:w="11"/><text x="6.9233%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="6.6423%" y="101" width="0.0283%" height="15" fill="rgb(222,165,49)" fg:x="6100" fg:w="26"/><text x="6.9353%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.6707%" y="101" width="0.0120%" height="15" fill="rgb(219,113,52)" fg:x="6126" fg:w="11"/><text x="6.9636%" y="111.50"></text></g><g><title>memcpy (260 instructions, 0.28%)</title><rect x="6.6826%" y="69" width="0.2831%" height="15" fill="rgb(214,7,15)" fg:x="6137" fg:w="260"/><text x="6.9756%" y="79.50"></text></g><g><title>stream_write (294 instructions, 0.32%)</title><rect x="6.6826%" y="85" width="0.3201%" height="15" fill="rgb(235,32,4)" fg:x="6137" fg:w="294"/><text x="6.9756%" y="95.50"></text></g><g><title>stream_write_text (315 instructions, 0.34%)</title><rect x="6.6826%" y="101" width="0.3430%" height="15" fill="rgb(238,90,54)" fg:x="6137" fg:w="315"/><text x="6.9756%" y="111.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.0779%" y="101" width="0.0283%" height="15" fill="rgb(213,208,19)" fg:x="6500" fg:w="26"/><text x="7.3709%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.1062%" y="101" width="0.0120%" height="15" fill="rgb(233,156,4)" fg:x="6526" fg:w="11"/><text x="7.3992%" y="111.50"></text></g><g><title>memcpy (66 instructions, 0.07%)</title><rect x="7.1182%" y="69" width="0.0719%" height="15" fill="rgb(207,194,5)" fg:x="6537" fg:w="66"/><text x="7.4112%" y="79.50"></text></g><g><title>stream_write (100 instructions, 0.11%)</title><rect x="7.1182%" y="85" width="0.1089%" height="15" fill="rgb(206,111,30)" fg:x="6537" fg:w="100"/><text x="7.4112%" y="95.50"></text></g><g><title>stream_write_text (121 instructions, 0.13%)</title><rect x="7.1182%" y="101" width="0.1318%" height="15" fill="rgb(243,70,54)" fg:x="6537" fg:w="121"/><text x="7.4112%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (606 instructions, 0.66%)</title><rect x="6.6423%" y="117" width="0.6599%" height="15" fill="rgb(242,28,8)" fg:x="6100" fg:w="606"/><text x="6.9353%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.3022%" y="117" width="0.0283%" height="15" fill="rgb(219,106,18)" fg:x="6706" fg:w="26"/><text x="7.5952%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.3305%" y="117" width="0.0120%" height="15" fill="rgb(244,222,10)" fg:x="6732" fg:w="11"/><text x="7.6235%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.3425%" y="101" width="0.0283%" height="15" fill="rgb(236,179,52)" fg:x="6743" fg:w="26"/><text x="7.6355%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.3708%" y="101" width="0.0120%" height="15" fill="rgb(213,23,39)" fg:x="6769" fg:w="11"/><text x="7.6638%" y="111.50"></text></g><g><title>memcpy (66 instructions, 0.07%)</title><rect x="7.3828%" y="69" width="0.0719%" height="15" fill="rgb(238,48,10)" fg:x="6780" fg:w="66"/><text x="7.6758%" y="79.50"></text></g><g><title>stream_write (100 instructions, 0.11%)</title><rect x="7.3828%" y="85" width="0.1089%" height="15" fill="rgb(251,196,23)" fg:x="6780" fg:w="100"/><text x="7.6758%" y="95.50"></text></g><g><title>stream_write_text (121 instructions, 0.13%)</title><rect x="7.3828%" y="101" width="0.1318%" height="15" fill="rgb(250,152,24)" fg:x="6780" fg:w="121"/><text x="7.6758%" y="111.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.5668%" y="101" width="0.0283%" height="15" fill="rgb(209,150,17)" fg:x="6949" fg:w="26"/><text x="7.8598%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.5951%" y="101" width="0.0120%" height="15" fill="rgb(234,202,34)" fg:x="6975" fg:w="11"/><text x="7.8881%" y="111.50"></text></g><g><title>memcpy (78 instructions, 0.08%)</title><rect x="7.6071%" y="69" width="0.0849%" height="15" fill="rgb(253,148,53)" fg:x="6986" fg:w="78"/><text x="7.9001%" y="79.50"></text></g><g><title>stream_write (112 instructions, 0.12%)</title><rect x="7.6071%" y="85" width="0.1220%" height="15" fill="rgb(218,129,16)" fg:x="6986" fg:w="112"/><text x="7.9001%" y="95.50"></text></g><g><title>stream_write_text (133 instructions, 0.14%)</title><rect x="7.6071%" y="101" width="0.1448%" height="15" fill="rgb(216,85,19)" fg:x="6986" fg:w="133"/><text x="7.9001%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (424 instructions, 0.46%)</title><rect x="7.3425%" y="117" width="0.4617%" height="15" fill="rgb(235,228,7)" fg:x="6743" fg:w="424"/><text x="7.6355%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.8042%" y="117" width="0.0283%" height="15" fill="rgb(245,175,0)" fg:x="7167" fg:w="26"/><text x="8.0972%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.8325%" y="117" width="0.0120%" height="15" fill="rgb(208,168,36)" fg:x="7193" fg:w="11"/><text x="8.1255%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.8445%" y="101" width="0.0283%" height="15" fill="rgb(246,171,24)" fg:x="7204" fg:w="26"/><text x="8.1375%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.8728%" y="101" width="0.0120%" height="15" fill="rgb(215,142,24)" fg:x="7230" fg:w="11"/><text x="8.1658%" y="111.50"></text></g><g><title>memcpy (74 instructions, 0.08%)</title><rect x="7.8848%" y="69" width="0.0806%" height="15" fill="rgb(250,187,7)" fg:x="7241" fg:w="74"/><text x="8.1778%" y="79.50"></text></g><g><title>stream_write (108 instructions, 0.12%)</title><rect x="7.8848%" y="85" width="0.1176%" height="15" fill="rgb(228,66,33)" fg:x="7241" fg:w="108"/><text x="8.1778%" y="95.50"></text></g><g><title>stream_write_text (129 instructions, 0.14%)</title><rect x="7.8848%" y="101" width="0.1405%" height="15" fill="rgb(234,215,21)" fg:x="7241" fg:w="129"/><text x="8.1778%" y="111.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="8.0775%" y="101" width="0.0283%" height="15" fill="rgb(222,191,20)" fg:x="7418" fg:w="26"/><text x="8.3705%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="8.1058%" y="101" width="0.0120%" height="15" fill="rgb(245,79,54)" fg:x="7444" fg:w="11"/><text x="8.3988%" y="111.50"></text></g><g><title>memcpy (74 instructions, 0.08%)</title><rect x="8.1178%" y="69" width="0.0806%" height="15" fill="rgb(240,10,37)" fg:x="7455" fg:w="74"/><text x="8.4108%" y="79.50"></text></g><g><title>stream_write (108 instructions, 0.12%)</title><rect x="8.1178%" y="85" width="0.1176%" height="15" fill="rgb(214,192,32)" fg:x="7455" fg:w="108"/><text x="8.4108%" y="95.50"></text></g><g><title>stream_write_text (129 instructions, 0.14%)</title><rect x="8.1178%" y="101" width="0.1405%" height="15" fill="rgb(209,36,54)" fg:x="7455" fg:w="129"/><text x="8.4108%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (428 instructions, 0.47%)</title><rect x="7.8445%" y="117" width="0.4661%" height="15" fill="rgb(220,10,11)" fg:x="7204" fg:w="428"/><text x="8.1375%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="8.3106%" y="117" width="0.0283%" height="15" fill="rgb(221,106,17)" fg:x="7632" fg:w="26"/><text x="8.6035%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="8.3389%" y="117" width="0.0120%" height="15" fill="rgb(251,142,44)" fg:x="7658" fg:w="11"/><text x="8.6318%" y="127.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="8.3508%" y="117" width="0.0294%" height="15" fill="rgb(238,13,15)" fg:x="7669" fg:w="27"/><text x="8.6438%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="8.3802%" y="117" width="0.0534%" height="15" fill="rgb(208,107,27)" fg:x="7696" fg:w="49"/><text x="8.6732%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="8.4336%" y="117" width="0.0283%" height="15" fill="rgb(205,136,37)" fg:x="7745" fg:w="26"/><text x="8.7266%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="8.4619%" y="117" width="0.0120%" height="15" fill="rgb(250,205,27)" fg:x="7771" fg:w="11"/><text x="8.7549%" y="127.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="8.4739%" y="101" width="0.0294%" height="15" fill="rgb(210,80,43)" fg:x="7782" fg:w="27"/><text x="8.7669%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (46 instructions, 0.05%)</title><rect x="8.4739%" y="117" width="0.0501%" height="15" fill="rgb(247,160,36)" fg:x="7782" fg:w="46"/><text x="8.7669%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (3,461 instructions, 3.77%)</title><rect x="5.5469%" y="133" width="3.7687%" height="15" fill="rgb(234,13,49)" fg:x="5094" fg:w="3461"/><text x="5.8399%" y="143.50">@Sm..</text></g><g><title>obj_idx&lt;0&gt; (97 instructions, 0.11%)</title><rect x="9.3156%" y="133" width="0.1056%" height="15" fill="rgb(234,122,0)" fg:x="8555" fg:w="97"/><text x="9.6086%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="9.4212%" y="133" width="0.0294%" height="15" fill="rgb(207,146,38)" fg:x="8652" fg:w="27"/><text x="9.7142%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="9.4506%" y="133" width="0.0294%" height="15" fill="rgb(207,177,25)" fg:x="8679" fg:w="27"/><text x="9.7436%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.4800%" y="133" width="0.0283%" height="15" fill="rgb(211,178,42)" fg:x="8706" fg:w="26"/><text x="9.7730%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.5084%" y="133" width="0.0283%" height="15" fill="rgb(230,69,54)" fg:x="8732" fg:w="26"/><text x="9.8013%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.5367%" y="133" width="0.0283%" height="15" fill="rgb(214,135,41)" fg:x="8758" fg:w="26"/><text x="9.8296%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.5650%" y="133" width="0.0283%" height="15" fill="rgb(237,67,25)" fg:x="8784" fg:w="26"/><text x="9.8579%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.5933%" y="133" width="0.0283%" height="15" fill="rgb(222,189,50)" fg:x="8810" fg:w="26"/><text x="9.8863%" y="143.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="9.6216%" y="133" width="0.0120%" height="15" fill="rgb(245,148,34)" fg:x="8836" fg:w="11"/><text x="9.9146%" y="143.50"></text></g><g><title>memcpy (158 instructions, 0.17%)</title><rect x="9.6336%" y="117" width="0.1720%" height="15" fill="rgb(222,29,6)" fg:x="8847" fg:w="158"/><text x="9.9266%" y="127.50"></text></g><g><title>stream_write (192 instructions, 0.21%)</title><rect x="9.6336%" y="133" width="0.2091%" height="15" fill="rgb(221,189,43)" fg:x="8847" fg:w="192"/><text x="9.9266%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="9.8427%" y="133" width="0.0185%" height="15" fill="rgb(207,36,27)" fg:x="9039" fg:w="17"/><text x="10.1356%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="9.8612%" y="133" width="0.0294%" height="15" fill="rgb(217,90,24)" fg:x="9056" fg:w="27"/><text x="10.1541%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="9.8906%" y="117" width="0.0294%" height="15" fill="rgb(224,66,35)" fg:x="9083" fg:w="27"/><text x="10.1835%" y="127.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="9.9200%" y="101" width="0.0294%" height="15" fill="rgb(221,13,50)" fg:x="9110" fg:w="27"/><text x="10.2129%" y="111.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.9494%" y="85" width="0.0283%" height="15" fill="rgb(236,68,49)" fg:x="9137" fg:w="26"/><text x="10.2423%" y="95.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="9.9777%" y="85" width="0.0120%" height="15" fill="rgb(229,146,28)" fg:x="9163" fg:w="11"/><text x="10.2706%" y="95.50"></text></g><g><title>memcpy (100 instructions, 0.11%)</title><rect x="9.9897%" y="69" width="0.1089%" height="15" fill="rgb(225,31,38)" fg:x="9174" fg:w="100"/><text x="10.2826%" y="79.50"></text></g><g><title>stream_write (134 instructions, 0.15%)</title><rect x="9.9897%" y="85" width="0.1459%" height="15" fill="rgb(250,208,3)" fg:x="9174" fg:w="134"/><text x="10.2826%" y="95.50"></text></g><g><title>@Sm_serialize_go&lt;B&gt; (220 instructions, 0.24%)</title><rect x="9.9494%" y="101" width="0.2396%" height="15" fill="rgb(246,54,23)" fg:x="9137" fg:w="220"/><text x="10.2423%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;P&gt; (266 instructions, 0.29%)</title><rect x="9.9200%" y="117" width="0.2896%" height="15" fill="rgb(243,76,11)" fg:x="9110" fg:w="266"/><text x="10.2129%" y="127.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="10.2096%" y="101" width="0.0294%" height="15" fill="rgb(245,21,50)" fg:x="9376" fg:w="27"/><text x="10.5026%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;0=?(P!0)&gt; (46 instructions, 0.05%)</title><rect x="10.2096%" y="117" width="0.0501%" height="15" fill="rgb(228,9,43)" fg:x="9376" fg:w="46"/><text x="10.5026%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;0=?(P!0)&gt; (407 instructions, 0.44%)</title><rect x="9.8906%" y="133" width="0.4432%" height="15" fill="rgb(208,100,47)" fg:x="9083" fg:w="407"/><text x="10.1835%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (113 instructions, 0.12%)</title><rect x="10.3338%" y="133" width="0.1230%" height="15" fill="rgb(232,26,8)" fg:x="9490" fg:w="113"/><text x="10.6267%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="10.4568%" y="117" width="0.0294%" height="15" fill="rgb(216,166,38)" fg:x="9603" fg:w="27"/><text x="10.7498%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="10.4862%" y="101" width="0.0283%" height="15" fill="rgb(251,202,51)" fg:x="9630" fg:w="26"/><text x="10.7792%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="10.5145%" y="101" width="0.0120%" height="15" fill="rgb(254,216,34)" fg:x="9656" fg:w="11"/><text x="10.8075%" y="111.50"></text></g><g><title>memcpy (58 instructions, 0.06%)</title><rect x="10.5265%" y="69" width="0.0632%" height="15" fill="rgb(251,32,27)" fg:x="9667" fg:w="58"/><text x="10.8195%" y="79.50"></text></g><g><title>stream_write (92 instructions, 0.10%)</title><rect x="10.5265%" y="85" width="0.1002%" height="15" fill="rgb(208,127,28)" fg:x="9667" fg:w="92"/><text x="10.8195%" y="95.50"></text></g><g><title>stream_write_text (113 instructions, 0.12%)</title><rect x="10.5265%" y="101" width="0.1230%" height="15" fill="rgb(224,137,22)" fg:x="9667" fg:w="113"/><text x="10.8195%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (198 instructions, 0.22%)</title><rect x="10.4862%" y="117" width="0.2156%" height="15" fill="rgb(254,70,32)" fg:x="9630" fg:w="198"/><text x="10.7792%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;?t&gt; (276 instructions, 0.30%)</title><rect x="10.4568%" y="133" width="0.3005%" height="15" fill="rgb(229,75,37)" fg:x="9603" fg:w="276"/><text x="10.7498%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (129 instructions, 0.14%)</title><rect x="10.7573%" y="133" width="0.1405%" height="15" fill="rgb(252,64,23)" fg:x="9879" fg:w="129"/><text x="11.0503%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="10.8978%" y="133" width="0.0294%" height="15" fill="rgb(232,162,48)" fg:x="10008" fg:w="27"/><text x="11.1908%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="10.9272%" y="117" width="0.0283%" height="15" fill="rgb(246,160,12)" fg:x="10035" fg:w="26"/><text x="11.2202%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="10.9555%" y="117" width="0.0120%" height="15" fill="rgb(247,166,0)" fg:x="10061" fg:w="11"/><text x="11.2485%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;N&gt; (81 instructions, 0.09%)</title><rect x="10.9272%" y="133" width="0.0882%" height="15" fill="rgb(249,219,21)" fg:x="10035" fg:w="81"/><text x="11.2202%" y="143.50"></text></g><g><title>motoko_rts::stream::_$LT$impl$u20$motoko_rts..types..Stream$GT$::send_to_stable::hc93ad7e9012d75a1 (561 instructions, 0.61%)</title><rect x="11.0154%" y="133" width="0.6109%" height="15" fill="rgb(205,209,3)" fg:x="10116" fg:w="561"/><text x="11.3084%" y="143.50"></text></g><g><title>__stablemem_ensure_pages (35 instructions, 0.04%)</title><rect x="11.6263%" y="117" width="0.0381%" height="15" fill="rgb(243,44,1)" fg:x="10677" fg:w="35"/><text x="11.9193%" y="127.50"></text></g><g><title>__stablemem_ensure (58 instructions, 0.06%)</title><rect x="11.6263%" y="133" width="0.0632%" height="15" fill="rgb(206,159,16)" fg:x="10677" fg:w="58"/><text x="11.9193%" y="143.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="11.6894%" y="133" width="0.0936%" height="15" fill="rgb(244,77,30)" fg:x="10735" fg:w="86"/><text x="11.9824%" y="143.50"></text></g><g><title>pre_upgrade (12,543 instructions, 13.66%)</title><rect x="0.0000%" y="149" width="13.6582%" height="15" fill="rgb(218,69,12)" fg:x="0" fg:w="12543"/><text x="0.2930%" y="159.50">pre_upgrade</text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="13.6669%" y="101" width="0.0621%" height="15" fill="rgb(212,87,7)" fg:x="12551" fg:w="57"/><text x="13.9599%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="13.6669%" y="117" width="0.0708%" height="15" fill="rgb(245,114,25)" fg:x="12551" fg:w="65"/><text x="13.9599%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="13.7377%" y="101" width="0.0523%" height="15" fill="rgb(210,61,42)" fg:x="12616" fg:w="48"/><text x="14.0307%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="13.7899%" y="101" width="0.0621%" height="15" fill="rgb(211,52,33)" fg:x="12664" fg:w="57"/><text x="14.0829%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="13.8520%" y="101" width="0.0697%" height="15" fill="rgb(234,58,33)" fg:x="12721" fg:w="64"/><text x="14.1450%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="13.9217%" y="101" width="0.0523%" height="15" fill="rgb(220,115,36)" fg:x="12785" fg:w="48"/><text x="14.2147%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="13.9740%" y="101" width="0.2483%" height="15" fill="rgb(243,153,54)" fg:x="12833" fg:w="228"/><text x="14.2669%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="14.2222%" y="101" width="0.0697%" height="15" fill="rgb(251,47,18)" fg:x="13061" fg:w="64"/><text x="14.5152%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="14.2919%" y="101" width="0.0131%" height="15" fill="rgb(242,102,42)" fg:x="13125" fg:w="12"/><text x="14.5849%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="14.3050%" y="101" width="0.2483%" height="15" fill="rgb(234,31,38)" fg:x="13137" fg:w="228"/><text x="14.5980%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="14.5533%" y="101" width="0.0697%" height="15" fill="rgb(221,117,51)" fg:x="13365" fg:w="64"/><text x="14.8462%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="14.6230%" y="101" width="0.0131%" height="15" fill="rgb(212,20,18)" fg:x="13429" fg:w="12"/><text x="14.9159%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="14.6360%" y="101" width="0.2483%" height="15" fill="rgb(245,133,36)" fg:x="13441" fg:w="228"/><text x="14.9290%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="14.8843%" y="101" width="0.0697%" height="15" fill="rgb(212,6,19)" fg:x="13669" fg:w="64"/><text x="15.1773%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="14.9540%" y="101" width="0.0131%" height="15" fill="rgb(218,1,36)" fg:x="13733" fg:w="12"/><text x="15.2470%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="14.9671%" y="101" width="0.2483%" height="15" fill="rgb(246,84,54)" fg:x="13745" fg:w="228"/><text x="15.2600%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="15.2153%" y="101" width="0.0697%" height="15" fill="rgb(242,110,6)" fg:x="13973" fg:w="64"/><text x="15.5083%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="15.2850%" y="101" width="0.0131%" height="15" fill="rgb(214,47,5)" fg:x="14037" fg:w="12"/><text x="15.5780%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="15.2981%" y="101" width="0.0697%" height="15" fill="rgb(218,159,25)" fg:x="14049" fg:w="64"/><text x="15.5911%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="15.3678%" y="101" width="0.0523%" height="15" fill="rgb(215,211,28)" fg:x="14113" fg:w="48"/><text x="15.6607%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="15.4200%" y="101" width="0.2483%" height="15" fill="rgb(238,59,32)" fg:x="14161" fg:w="228"/><text x="15.7130%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="15.6683%" y="101" width="0.0697%" height="15" fill="rgb(226,82,3)" fg:x="14389" fg:w="64"/><text x="15.9613%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="15.7380%" y="101" width="0.0131%" height="15" fill="rgb(240,164,32)" fg:x="14453" fg:w="12"/><text x="16.0310%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="15.7511%" y="101" width="0.2483%" height="15" fill="rgb(232,46,7)" fg:x="14465" fg:w="228"/><text x="16.0440%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="15.9993%" y="101" width="0.0697%" height="15" fill="rgb(229,129,53)" fg:x="14693" fg:w="64"/><text x="16.2923%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="16.0690%" y="101" width="0.0131%" height="15" fill="rgb(234,188,29)" fg:x="14757" fg:w="12"/><text x="16.3620%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="16.0821%" y="101" width="0.0697%" height="15" fill="rgb(246,141,4)" fg:x="14769" fg:w="64"/><text x="16.3751%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="16.1518%" y="101" width="0.0697%" height="15" fill="rgb(229,23,39)" fg:x="14833" fg:w="64"/><text x="16.4448%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="16.2215%" y="101" width="0.0523%" height="15" fill="rgb(206,12,3)" fg:x="14897" fg:w="48"/><text x="16.5145%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="16.2738%" y="101" width="0.0697%" height="15" fill="rgb(252,226,20)" fg:x="14945" fg:w="64"/><text x="16.5667%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="16.3434%" y="101" width="0.0131%" height="15" fill="rgb(216,123,35)" fg:x="15009" fg:w="12"/><text x="16.6364%" y="111.50"></text></g><g><title>parse_idl_header (3,028 instructions, 3.30%)</title><rect x="13.7377%" y="117" width="3.2972%" height="15" fill="rgb(212,68,40)" fg:x="12616" fg:w="3028"/><text x="14.0307%" y="127.50">pa..</text></g><g><title>idl_sub_buf_init (15 instructions, 0.02%)</title><rect x="17.0349%" y="117" width="0.0163%" height="15" fill="rgb(254,125,32)" fg:x="15644" fg:w="15"/><text x="17.3279%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="17.0512%" y="117" width="0.0523%" height="15" fill="rgb(253,97,22)" fg:x="15659" fg:w="48"/><text x="17.3442%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="17.1035%" y="117" width="0.0697%" height="15" fill="rgb(241,101,14)" fg:x="15707" fg:w="64"/><text x="17.3965%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="17.1732%" y="117" width="0.0218%" height="15" fill="rgb(238,103,29)" fg:x="15771" fg:w="20"/><text x="17.4662%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="17.1950%" y="117" width="0.0697%" height="15" fill="rgb(233,195,47)" fg:x="15791" fg:w="64"/><text x="17.4879%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="17.2647%" y="117" width="0.0523%" height="15" fill="rgb(246,218,30)" fg:x="15855" fg:w="48"/><text x="17.5576%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="17.3169%" y="101" width="0.2483%" height="15" fill="rgb(219,145,47)" fg:x="15903" fg:w="228"/><text x="17.6099%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="17.3169%" y="117" width="0.2875%" height="15" fill="rgb(243,12,26)" fg:x="15903" fg:w="264"/><text x="17.6099%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="17.6044%" y="117" width="0.0697%" height="15" fill="rgb(214,87,16)" fg:x="16167" fg:w="64"/><text x="17.8974%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="17.6741%" y="101" width="0.0218%" height="15" fill="rgb(208,99,42)" fg:x="16231" fg:w="20"/><text x="17.9671%" y="111.50"></text></g><g><title>@deserialize_go&lt;n16&gt; (76 instructions, 0.08%)</title><rect x="17.6741%" y="117" width="0.0828%" height="15" fill="rgb(253,99,2)" fg:x="16231" fg:w="76"/><text x="17.9671%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="17.7568%" y="101" width="0.2483%" height="15" fill="rgb(220,168,23)" fg:x="16307" fg:w="228"/><text x="18.0498%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="17.7568%" y="117" width="0.2875%" height="15" fill="rgb(242,38,24)" fg:x="16307" fg:w="264"/><text x="18.0498%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="18.0443%" y="117" width="0.0697%" height="15" fill="rgb(225,182,9)" fg:x="16571" fg:w="64"/><text x="18.3373%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="18.1140%" y="101" width="0.0218%" height="15" fill="rgb(243,178,37)" fg:x="16635" fg:w="20"/><text x="18.4070%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="18.1358%" y="101" width="0.0697%" height="15" fill="rgb(232,139,19)" fg:x="16655" fg:w="64"/><text x="18.4288%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="18.2055%" y="101" width="0.0523%" height="15" fill="rgb(225,201,24)" fg:x="16719" fg:w="48"/><text x="18.4984%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="18.2577%" y="85" width="0.2483%" height="15" fill="rgb(221,47,46)" fg:x="16767" fg:w="228"/><text x="18.5507%" y="95.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="18.2577%" y="101" width="0.2875%" height="15" fill="rgb(249,23,13)" fg:x="16767" fg:w="264"/><text x="18.5507%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="18.5452%" y="101" width="0.0697%" height="15" fill="rgb(219,9,5)" fg:x="17031" fg:w="64"/><text x="18.8382%" y="111.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="18.6149%" y="85" width="0.0218%" height="15" fill="rgb(254,171,16)" fg:x="17095" fg:w="20"/><text x="18.9079%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="18.6367%" y="85" width="0.0523%" height="15" fill="rgb(230,171,20)" fg:x="17115" fg:w="48"/><text x="18.9297%" y="95.50"></text></g><g><title>utf8_validate (34 instructions, 0.04%)</title><rect x="18.6890%" y="85" width="0.0370%" height="15" fill="rgb(210,71,41)" fg:x="17163" fg:w="34"/><text x="18.9819%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="18.7260%" y="69" width="0.0621%" height="15" fill="rgb(206,173,20)" fg:x="17197" fg:w="57"/><text x="19.0189%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="18.7260%" y="85" width="0.0773%" height="15" fill="rgb(233,88,34)" fg:x="17197" fg:w="71"/><text x="19.0189%" y="95.50"></text></g><g><title>memcpy (50 instructions, 0.05%)</title><rect x="18.8033%" y="85" width="0.0544%" height="15" fill="rgb(223,209,46)" fg:x="17268" fg:w="50"/><text x="19.0963%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (300 instructions, 0.33%)</title><rect x="18.6149%" y="101" width="0.3267%" height="15" fill="rgb(250,43,18)" fg:x="17095" fg:w="300"/><text x="18.9079%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="18.9416%" y="85" width="0.2483%" height="15" fill="rgb(208,13,10)" fg:x="17395" fg:w="228"/><text x="19.2345%" y="95.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="18.9416%" y="101" width="0.2875%" height="15" fill="rgb(212,200,36)" fg:x="17395" fg:w="264"/><text x="19.2345%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="19.2291%" y="101" width="0.0697%" height="15" fill="rgb(225,90,30)" fg:x="17659" fg:w="64"/><text x="19.5220%" y="111.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="19.2987%" y="85" width="0.0218%" height="15" fill="rgb(236,182,39)" fg:x="17723" fg:w="20"/><text x="19.5917%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="19.3205%" y="85" width="0.0523%" height="15" fill="rgb(212,144,35)" fg:x="17743" fg:w="48"/><text x="19.6135%" y="95.50"></text></g><g><title>utf8_validate (149 instructions, 0.16%)</title><rect x="19.3728%" y="85" width="0.1622%" height="15" fill="rgb(228,63,44)" fg:x="17791" fg:w="149"/><text x="19.6658%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="19.5350%" y="69" width="0.0621%" height="15" fill="rgb(228,109,6)" fg:x="17940" fg:w="57"/><text x="19.8280%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="19.5350%" y="85" width="0.0773%" height="15" fill="rgb(238,117,24)" fg:x="17940" fg:w="71"/><text x="19.8280%" y="95.50"></text></g><g><title>memcpy (90 instructions, 0.10%)</title><rect x="19.6123%" y="85" width="0.0980%" height="15" fill="rgb(242,26,26)" fg:x="18011" fg:w="90"/><text x="19.9053%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (455 instructions, 0.50%)</title><rect x="19.2987%" y="101" width="0.4955%" height="15" fill="rgb(221,92,48)" fg:x="17723" fg:w="455"/><text x="19.5917%" y="111.50"></text></g><g><title>@deserialize_go&lt;r(data:t,logo_type:t)&gt; (1,866 instructions, 2.03%)</title><rect x="18.1140%" y="117" width="2.0319%" height="15" fill="rgb(209,209,32)" fg:x="16635" fg:w="1866"/><text x="18.4070%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="20.1459%" y="101" width="0.2483%" height="15" fill="rgb(221,70,22)" fg:x="18501" fg:w="228"/><text x="20.4389%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="20.1459%" y="117" width="0.2875%" height="15" fill="rgb(248,145,5)" fg:x="18501" fg:w="264"/><text x="20.4389%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="20.4334%" y="117" width="0.0697%" height="15" fill="rgb(226,116,26)" fg:x="18765" fg:w="64"/><text x="20.7264%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="20.5031%" y="101" width="0.0218%" height="15" fill="rgb(244,5,17)" fg:x="18829" fg:w="20"/><text x="20.7960%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="20.5249%" y="101" width="0.0523%" height="15" fill="rgb(252,159,33)" fg:x="18849" fg:w="48"/><text x="20.8178%" y="111.50"></text></g><g><title>utf8_validate (284 instructions, 0.31%)</title><rect x="20.5771%" y="101" width="0.3093%" height="15" fill="rgb(206,71,0)" fg:x="18897" fg:w="284"/><text x="20.8701%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="20.8864%" y="85" width="0.0621%" height="15" fill="rgb(233,118,54)" fg:x="19181" fg:w="57"/><text x="21.1793%" y="95.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="20.8864%" y="101" width="0.0773%" height="15" fill="rgb(234,83,48)" fg:x="19181" fg:w="71"/><text x="21.1793%" y="111.50"></text></g><g><title>memcpy (168 instructions, 0.18%)</title><rect x="20.9637%" y="101" width="0.1829%" height="15" fill="rgb(228,3,54)" fg:x="19252" fg:w="168"/><text x="21.2567%" y="111.50"></text></g><g><title>@deserialize_go&lt;t&gt; (668 instructions, 0.73%)</title><rect x="20.5031%" y="117" width="0.7274%" height="15" fill="rgb(226,155,13)" fg:x="18829" fg:w="668"/><text x="20.7960%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="21.2305%" y="101" width="0.2483%" height="15" fill="rgb(241,28,37)" fg:x="19497" fg:w="228"/><text x="21.5234%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="21.2305%" y="117" width="0.2875%" height="15" fill="rgb(233,93,10)" fg:x="19497" fg:w="264"/><text x="21.5234%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="21.5179%" y="117" width="0.0697%" height="15" fill="rgb(225,113,19)" fg:x="19761" fg:w="64"/><text x="21.8109%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="21.5876%" y="101" width="0.0218%" height="15" fill="rgb(241,2,18)" fg:x="19825" fg:w="20"/><text x="21.8806%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="21.6094%" y="101" width="0.0523%" height="15" fill="rgb(228,207,21)" fg:x="19845" fg:w="48"/><text x="21.9024%" y="111.50"></text></g><g><title>utf8_validate (172 instructions, 0.19%)</title><rect x="21.6617%" y="101" width="0.1873%" height="15" fill="rgb(213,211,35)" fg:x="19893" fg:w="172"/><text x="21.9546%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="21.8490%" y="85" width="0.0621%" height="15" fill="rgb(209,83,10)" fg:x="20065" fg:w="57"/><text x="22.1419%" y="95.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="21.8490%" y="101" width="0.0773%" height="15" fill="rgb(209,164,1)" fg:x="20065" fg:w="71"/><text x="22.1419%" y="111.50"></text></g><g><title>memcpy (94 instructions, 0.10%)</title><rect x="21.9263%" y="101" width="0.1024%" height="15" fill="rgb(213,184,43)" fg:x="20136" fg:w="94"/><text x="22.2192%" y="111.50"></text></g><g><title>@deserialize_go&lt;t&gt; (482 instructions, 0.52%)</title><rect x="21.5876%" y="117" width="0.5249%" height="15" fill="rgb(231,61,34)" fg:x="19825" fg:w="482"/><text x="21.8806%" y="127.50"></text></g><g><title>motoko_rts::text::blob_of_text::h094b1867590184bd (11 instructions, 0.01%)</title><rect x="22.1190%" y="101" width="0.0120%" height="15" fill="rgb(235,75,3)" fg:x="20313" fg:w="11"/><text x="22.4120%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="22.1310%" y="101" width="0.0621%" height="15" fill="rgb(220,106,47)" fg:x="20324" fg:w="57"/><text x="22.4240%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="22.1931%" y="101" width="0.0621%" height="15" fill="rgb(210,196,33)" fg:x="20381" fg:w="57"/><text x="22.4860%" y="111.50"></text></g><g><title>memcpy (46 instructions, 0.05%)</title><rect x="22.2551%" y="101" width="0.0501%" height="15" fill="rgb(229,154,42)" fg:x="20438" fg:w="46"/><text x="22.5481%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="22.3052%" y="101" width="0.0621%" height="15" fill="rgb(228,114,26)" fg:x="20484" fg:w="57"/><text x="22.5982%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::ha2b15cd801cc471c (77 instructions, 0.08%)</title><rect x="22.3673%" y="101" width="0.0838%" height="15" fill="rgb(208,144,1)" fg:x="20541" fg:w="77"/><text x="22.6603%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::ha2b15cd801cc471c (110 instructions, 0.12%)</title><rect x="22.4511%" y="101" width="0.1198%" height="15" fill="rgb(239,112,37)" fg:x="20618" fg:w="110"/><text x="22.7441%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::ha2b15cd801cc471c (77 instructions, 0.08%)</title><rect x="22.5709%" y="101" width="0.0838%" height="15" fill="rgb(210,96,50)" fg:x="20728" fg:w="77"/><text x="22.8639%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::ha2b15cd801cc471c (110 instructions, 0.12%)</title><rect x="22.6548%" y="101" width="0.1198%" height="15" fill="rgb(222,178,2)" fg:x="20805" fg:w="110"/><text x="22.9477%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="22.7745%" y="101" width="0.0621%" height="15" fill="rgb(226,74,18)" fg:x="20915" fg:w="57"/><text x="23.0675%" y="111.50"></text></g><g><title>memcmp (192 instructions, 0.21%)</title><rect x="22.8366%" y="101" width="0.2091%" height="15" fill="rgb(225,67,54)" fg:x="20972" fg:w="192"/><text x="23.1296%" y="111.50"></text></g><g><title>blob_of_principal (2,244 instructions, 2.44%)</title><rect x="22.1190%" y="117" width="2.4435%" height="15" fill="rgb(251,92,32)" fg:x="20313" fg:w="2244"/><text x="22.4120%" y="127.50">b..</text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="24.5625%" y="101" width="0.0621%" height="15" fill="rgb(228,149,22)" fg:x="22557" fg:w="57"/><text x="24.8555%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="24.5625%" y="117" width="0.0708%" height="15" fill="rgb(243,54,13)" fg:x="22557" fg:w="65"/><text x="24.8555%" y="127.50"></text></g><g><title>memcpy (46 instructions, 0.05%)</title><rect x="24.6333%" y="117" width="0.0501%" height="15" fill="rgb(243,180,28)" fg:x="22622" fg:w="46"/><text x="24.9263%" y="127.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="24.6834%" y="101" width="0.0621%" height="15" fill="rgb(208,167,24)" fg:x="22668" fg:w="57"/><text x="24.9764%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="24.7542%" y="101" width="0.0621%" height="15" fill="rgb(245,73,45)" fg:x="22733" fg:w="57"/><text x="25.0471%" y="111.50"></text></g><g><title>alloc_blob (130 instructions, 0.14%)</title><rect x="24.6834%" y="117" width="0.1416%" height="15" fill="rgb(237,203,48)" fg:x="22668" fg:w="130"/><text x="24.9764%" y="127.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="24.8250%" y="117" width="0.0936%" height="15" fill="rgb(211,197,16)" fg:x="22798" fg:w="86"/><text x="25.1179%" y="127.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="24.9186%" y="117" width="0.0936%" height="15" fill="rgb(243,99,51)" fg:x="22884" fg:w="86"/><text x="25.2116%" y="127.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="25.0123%" y="117" width="0.0936%" height="15" fill="rgb(215,123,29)" fg:x="22970" fg:w="86"/><text x="25.3052%" y="127.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="25.1059%" y="117" width="0.0936%" height="15" fill="rgb(239,186,37)" fg:x="23056" fg:w="86"/><text x="25.3989%" y="127.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="25.1995%" y="117" width="0.0936%" height="15" fill="rgb(252,136,39)" fg:x="23142" fg:w="86"/><text x="25.4925%" y="127.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (411 instructions, 0.45%)</title><rect x="25.2932%" y="101" width="0.4475%" height="15" fill="rgb(223,213,32)" fg:x="23228" fg:w="411"/><text x="25.5862%" y="111.50"></text></g><g><title>alloc_blob (419 instructions, 0.46%)</title><rect x="25.2932%" y="117" width="0.4563%" height="15" fill="rgb(233,115,5)" fg:x="23228" fg:w="419"/><text x="25.5862%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="25.7494%" y="101" width="0.0523%" height="15" fill="rgb(207,226,44)" fg:x="23647" fg:w="48"/><text x="26.0424%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="25.8017%" y="101" width="0.0621%" height="15" fill="rgb(208,126,0)" fg:x="23695" fg:w="57"/><text x="26.0947%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="25.8638%" y="101" width="0.0697%" height="15" fill="rgb(244,66,21)" fg:x="23752" fg:w="64"/><text x="26.1567%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="25.9335%" y="101" width="0.0523%" height="15" fill="rgb(222,97,12)" fg:x="23816" fg:w="48"/><text x="26.2264%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="25.9857%" y="101" width="0.2483%" height="15" fill="rgb(219,213,19)" fg:x="23864" fg:w="228"/><text x="26.2787%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="26.2340%" y="101" width="0.0697%" height="15" fill="rgb(252,169,30)" fg:x="24092" fg:w="64"/><text x="26.5270%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="26.3037%" y="101" width="0.0131%" height="15" fill="rgb(206,32,51)" fg:x="24156" fg:w="12"/><text x="26.5967%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="26.3168%" y="101" width="0.2483%" height="15" fill="rgb(250,172,42)" fg:x="24168" fg:w="228"/><text x="26.6097%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="26.5650%" y="101" width="0.0697%" height="15" fill="rgb(209,34,43)" fg:x="24396" fg:w="64"/><text x="26.8580%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="26.6347%" y="101" width="0.0131%" height="15" fill="rgb(223,11,35)" fg:x="24460" fg:w="12"/><text x="26.9277%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="26.6478%" y="101" width="0.2483%" height="15" fill="rgb(251,219,26)" fg:x="24472" fg:w="228"/><text x="26.9408%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="26.8961%" y="101" width="0.0697%" height="15" fill="rgb(231,119,3)" fg:x="24700" fg:w="64"/><text x="27.1890%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="26.9658%" y="101" width="0.0131%" height="15" fill="rgb(216,97,11)" fg:x="24764" fg:w="12"/><text x="27.2587%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="26.9788%" y="101" width="0.2483%" height="15" fill="rgb(223,59,9)" fg:x="24776" fg:w="228"/><text x="27.2718%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="27.2271%" y="101" width="0.0697%" height="15" fill="rgb(233,93,31)" fg:x="25004" fg:w="64"/><text x="27.5201%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="27.2968%" y="101" width="0.0131%" height="15" fill="rgb(239,81,33)" fg:x="25068" fg:w="12"/><text x="27.5898%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="27.3098%" y="101" width="0.2483%" height="15" fill="rgb(213,120,34)" fg:x="25080" fg:w="228"/><text x="27.6028%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="27.5581%" y="101" width="0.0697%" height="15" fill="rgb(243,49,53)" fg:x="25308" fg:w="64"/><text x="27.8511%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="27.6278%" y="101" width="0.0131%" height="15" fill="rgb(247,216,33)" fg:x="25372" fg:w="12"/><text x="27.9208%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="27.6409%" y="101" width="0.2483%" height="15" fill="rgb(226,26,14)" fg:x="25384" fg:w="228"/><text x="27.9338%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="27.8891%" y="101" width="0.0697%" height="15" fill="rgb(215,49,53)" fg:x="25612" fg:w="64"/><text x="28.1821%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="27.9588%" y="101" width="0.0131%" height="15" fill="rgb(245,162,40)" fg:x="25676" fg:w="12"/><text x="28.2518%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="27.9719%" y="101" width="0.2483%" height="15" fill="rgb(229,68,17)" fg:x="25688" fg:w="228"/><text x="28.2649%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.2202%" y="101" width="0.0697%" height="15" fill="rgb(213,182,10)" fg:x="25916" fg:w="64"/><text x="28.5131%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="28.2899%" y="101" width="0.0131%" height="15" fill="rgb(245,125,30)" fg:x="25980" fg:w="12"/><text x="28.5828%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="28.3029%" y="101" width="0.2483%" height="15" fill="rgb(232,202,2)" fg:x="25992" fg:w="228"/><text x="28.5959%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.5512%" y="101" width="0.0697%" height="15" fill="rgb(237,140,51)" fg:x="26220" fg:w="64"/><text x="28.8442%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="28.6209%" y="101" width="0.0131%" height="15" fill="rgb(236,157,25)" fg:x="26284" fg:w="12"/><text x="28.9139%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.6340%" y="101" width="0.0697%" height="15" fill="rgb(219,209,0)" fg:x="26296" fg:w="64"/><text x="28.9269%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.7037%" y="101" width="0.0697%" height="15" fill="rgb(240,116,54)" fg:x="26360" fg:w="64"/><text x="28.9966%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="28.7733%" y="101" width="0.0131%" height="15" fill="rgb(216,10,36)" fg:x="26424" fg:w="12"/><text x="29.0663%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.7864%" y="101" width="0.0697%" height="15" fill="rgb(222,72,44)" fg:x="26436" fg:w="64"/><text x="29.0794%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.8561%" y="101" width="0.0697%" height="15" fill="rgb(232,159,9)" fg:x="26500" fg:w="64"/><text x="29.1491%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="28.9258%" y="101" width="0.0131%" height="15" fill="rgb(210,39,32)" fg:x="26564" fg:w="12"/><text x="29.2188%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.9389%" y="101" width="0.0697%" height="15" fill="rgb(216,194,45)" fg:x="26576" fg:w="64"/><text x="29.2318%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="29.0085%" y="101" width="0.0523%" height="15" fill="rgb(218,18,35)" fg:x="26640" fg:w="48"/><text x="29.3015%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="29.0608%" y="101" width="0.0523%" height="15" fill="rgb(207,83,51)" fg:x="26688" fg:w="48"/><text x="29.3538%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.1131%" y="101" width="0.0697%" height="15" fill="rgb(225,63,43)" fg:x="26736" fg:w="64"/><text x="29.4061%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (17 instructions, 0.02%)</title><rect x="29.1828%" y="101" width="0.0185%" height="15" fill="rgb(207,57,36)" fg:x="26800" fg:w="17"/><text x="29.4757%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="29.2013%" y="101" width="0.0523%" height="15" fill="rgb(216,99,33)" fg:x="26817" fg:w="48"/><text x="29.4943%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.2536%" y="101" width="0.0697%" height="15" fill="rgb(225,42,16)" fg:x="26865" fg:w="64"/><text x="29.5465%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="29.3232%" y="101" width="0.0131%" height="15" fill="rgb(220,201,45)" fg:x="26929" fg:w="12"/><text x="29.6162%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.3363%" y="101" width="0.0697%" height="15" fill="rgb(225,33,4)" fg:x="26941" fg:w="64"/><text x="29.6293%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.4060%" y="101" width="0.0697%" height="15" fill="rgb(224,33,50)" fg:x="27005" fg:w="64"/><text x="29.6990%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="29.4757%" y="101" width="0.0131%" height="15" fill="rgb(246,198,51)" fg:x="27069" fg:w="12"/><text x="29.7687%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.4888%" y="101" width="0.0697%" height="15" fill="rgb(205,22,4)" fg:x="27081" fg:w="64"/><text x="29.7817%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="29.5584%" y="101" width="0.0523%" height="15" fill="rgb(206,3,8)" fg:x="27145" fg:w="48"/><text x="29.8514%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="29.6107%" y="101" width="0.2483%" height="15" fill="rgb(251,23,15)" fg:x="27193" fg:w="228"/><text x="29.9037%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.8590%" y="101" width="0.0697%" height="15" fill="rgb(252,88,28)" fg:x="27421" fg:w="64"/><text x="30.1520%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="29.9287%" y="101" width="0.0131%" height="15" fill="rgb(212,127,14)" fg:x="27485" fg:w="12"/><text x="30.2216%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="29.9417%" y="101" width="0.2483%" height="15" fill="rgb(247,145,37)" fg:x="27497" fg:w="228"/><text x="30.2347%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.1900%" y="101" width="0.0697%" height="15" fill="rgb(209,117,53)" fg:x="27725" fg:w="64"/><text x="30.4830%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="30.2597%" y="101" width="0.0131%" height="15" fill="rgb(212,90,42)" fg:x="27789" fg:w="12"/><text x="30.5527%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.2728%" y="101" width="0.0697%" height="15" fill="rgb(218,164,37)" fg:x="27801" fg:w="64"/><text x="30.5657%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.3425%" y="101" width="0.0697%" height="15" fill="rgb(246,65,34)" fg:x="27865" fg:w="64"/><text x="30.6354%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="30.4122%" y="101" width="0.0131%" height="15" fill="rgb(231,100,33)" fg:x="27929" fg:w="12"/><text x="30.7051%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.4252%" y="101" width="0.0697%" height="15" fill="rgb(228,126,14)" fg:x="27941" fg:w="64"/><text x="30.7182%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.4949%" y="101" width="0.0697%" height="15" fill="rgb(215,173,21)" fg:x="28005" fg:w="64"/><text x="30.7879%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="30.5646%" y="101" width="0.0131%" height="15" fill="rgb(210,6,40)" fg:x="28069" fg:w="12"/><text x="30.8576%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.5777%" y="101" width="0.0697%" height="15" fill="rgb(212,48,18)" fg:x="28081" fg:w="64"/><text x="30.8706%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.6474%" y="101" width="0.0697%" height="15" fill="rgb(230,214,11)" fg:x="28145" fg:w="64"/><text x="30.9403%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="30.7170%" y="101" width="0.0131%" height="15" fill="rgb(254,105,39)" fg:x="28209" fg:w="12"/><text x="31.0100%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.7301%" y="101" width="0.0697%" height="15" fill="rgb(245,158,5)" fg:x="28221" fg:w="64"/><text x="31.0231%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.7998%" y="101" width="0.0697%" height="15" fill="rgb(249,208,11)" fg:x="28285" fg:w="64"/><text x="31.0928%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="30.8695%" y="101" width="0.0131%" height="15" fill="rgb(210,39,28)" fg:x="28349" fg:w="12"/><text x="31.1625%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.8826%" y="101" width="0.0697%" height="15" fill="rgb(211,56,53)" fg:x="28361" fg:w="64"/><text x="31.1755%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="30.9523%" y="101" width="0.0523%" height="15" fill="rgb(226,201,30)" fg:x="28425" fg:w="48"/><text x="31.2452%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="31.0045%" y="101" width="0.0523%" height="15" fill="rgb(239,101,34)" fg:x="28473" fg:w="48"/><text x="31.2975%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="31.0568%" y="101" width="0.0697%" height="15" fill="rgb(226,209,5)" fg:x="28521" fg:w="64"/><text x="31.3498%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="31.1265%" y="101" width="0.0131%" height="15" fill="rgb(250,105,47)" fg:x="28585" fg:w="12"/><text x="31.4194%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="31.1395%" y="101" width="0.0523%" height="15" fill="rgb(230,72,3)" fg:x="28597" fg:w="48"/><text x="31.4325%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="31.1918%" y="101" width="0.0697%" height="15" fill="rgb(232,218,39)" fg:x="28645" fg:w="64"/><text x="31.4848%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="31.2615%" y="101" width="0.0131%" height="15" fill="rgb(248,166,6)" fg:x="28709" fg:w="12"/><text x="31.5545%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="31.2746%" y="101" width="0.0697%" height="15" fill="rgb(247,89,20)" fg:x="28721" fg:w="64"/><text x="31.5675%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="31.3443%" y="101" width="0.0523%" height="15" fill="rgb(248,130,54)" fg:x="28785" fg:w="48"/><text x="31.6372%" y="111.50"></text></g><g><title>leb128_decode (138 instructions, 0.15%)</title><rect x="31.3965%" y="101" width="0.1503%" height="15" fill="rgb(234,196,4)" fg:x="28833" fg:w="138"/><text x="31.6895%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="31.5468%" y="101" width="0.0697%" height="15" fill="rgb(250,143,31)" fg:x="28971" fg:w="64"/><text x="31.8398%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="31.6165%" y="101" width="0.0131%" height="15" fill="rgb(211,110,34)" fg:x="29035" fg:w="12"/><text x="31.9095%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="31.6296%" y="101" width="0.2483%" height="15" fill="rgb(215,124,48)" fg:x="29047" fg:w="228"/><text x="31.9225%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="31.8778%" y="101" width="0.0697%" height="15" fill="rgb(216,46,13)" fg:x="29275" fg:w="64"/><text x="32.1708%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (17 instructions, 0.02%)</title><rect x="31.9475%" y="101" width="0.0185%" height="15" fill="rgb(205,184,25)" fg:x="29339" fg:w="17"/><text x="32.2405%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="31.9660%" y="101" width="0.2483%" height="15" fill="rgb(228,1,10)" fg:x="29356" fg:w="228"/><text x="32.2590%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="32.2143%" y="101" width="0.0697%" height="15" fill="rgb(213,116,27)" fg:x="29584" fg:w="64"/><text x="32.5073%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="32.2840%" y="101" width="0.0131%" height="15" fill="rgb(241,95,50)" fg:x="29648" fg:w="12"/><text x="32.5770%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="32.2971%" y="101" width="0.0697%" height="15" fill="rgb(238,48,32)" fg:x="29660" fg:w="64"/><text x="32.5900%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="32.3667%" y="101" width="0.0697%" height="15" fill="rgb(235,113,49)" fg:x="29724" fg:w="64"/><text x="32.6597%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="32.4364%" y="101" width="0.0131%" height="15" fill="rgb(205,127,43)" fg:x="29788" fg:w="12"/><text x="32.7294%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="32.4495%" y="101" width="0.0697%" height="15" fill="rgb(250,162,2)" fg:x="29800" fg:w="64"/><text x="32.7425%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="32.5192%" y="101" width="0.0523%" height="15" fill="rgb(220,13,41)" fg:x="29864" fg:w="48"/><text x="32.8122%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="32.5715%" y="101" width="0.2483%" height="15" fill="rgb(249,221,25)" fg:x="29912" fg:w="228"/><text x="32.8644%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="32.8197%" y="101" width="0.0697%" height="15" fill="rgb(215,208,19)" fg:x="30140" fg:w="64"/><text x="33.1127%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="32.8894%" y="101" width="0.0131%" height="15" fill="rgb(236,175,2)" fg:x="30204" fg:w="12"/><text x="33.1824%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="32.9025%" y="101" width="0.2483%" height="15" fill="rgb(241,52,2)" fg:x="30216" fg:w="228"/><text x="33.1955%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.1508%" y="101" width="0.0697%" height="15" fill="rgb(248,140,14)" fg:x="30444" fg:w="64"/><text x="33.4437%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="33.2204%" y="101" width="0.0131%" height="15" fill="rgb(253,22,42)" fg:x="30508" fg:w="12"/><text x="33.5134%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="33.2335%" y="101" width="0.2483%" height="15" fill="rgb(234,61,47)" fg:x="30520" fg:w="228"/><text x="33.5265%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.4818%" y="101" width="0.0697%" height="15" fill="rgb(208,226,15)" fg:x="30748" fg:w="64"/><text x="33.7748%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="33.5515%" y="101" width="0.0131%" height="15" fill="rgb(217,221,4)" fg:x="30812" fg:w="12"/><text x="33.8444%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.5645%" y="101" width="0.0697%" height="15" fill="rgb(212,174,34)" fg:x="30824" fg:w="64"/><text x="33.8575%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.6342%" y="101" width="0.0697%" height="15" fill="rgb(253,83,4)" fg:x="30888" fg:w="64"/><text x="33.9272%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="33.7039%" y="101" width="0.0131%" height="15" fill="rgb(250,195,49)" fg:x="30952" fg:w="12"/><text x="33.9969%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.7170%" y="101" width="0.0697%" height="15" fill="rgb(241,192,25)" fg:x="30964" fg:w="64"/><text x="34.0100%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.7867%" y="101" width="0.0697%" height="15" fill="rgb(208,124,10)" fg:x="31028" fg:w="64"/><text x="34.0797%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="33.8564%" y="101" width="0.0131%" height="15" fill="rgb(222,33,0)" fg:x="31092" fg:w="12"/><text x="34.1493%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.8694%" y="101" width="0.0697%" height="15" fill="rgb(234,209,28)" fg:x="31104" fg:w="64"/><text x="34.1624%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="33.9391%" y="101" width="0.0523%" height="15" fill="rgb(224,11,23)" fg:x="31168" fg:w="48"/><text x="34.2321%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="33.9914%" y="101" width="0.0523%" height="15" fill="rgb(232,99,1)" fg:x="31216" fg:w="48"/><text x="34.2844%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="34.0437%" y="101" width="0.0697%" height="15" fill="rgb(237,95,45)" fg:x="31264" fg:w="64"/><text x="34.3366%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="34.1134%" y="101" width="0.0131%" height="15" fill="rgb(208,109,11)" fg:x="31328" fg:w="12"/><text x="34.4063%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="34.1264%" y="101" width="0.0523%" height="15" fill="rgb(216,190,48)" fg:x="31340" fg:w="48"/><text x="34.4194%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="34.1787%" y="101" width="0.0697%" height="15" fill="rgb(251,171,36)" fg:x="31388" fg:w="64"/><text x="34.4717%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="34.2484%" y="101" width="0.0131%" height="15" fill="rgb(230,62,22)" fg:x="31452" fg:w="12"/><text x="34.5413%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="34.2614%" y="101" width="0.0697%" height="15" fill="rgb(225,114,35)" fg:x="31464" fg:w="64"/><text x="34.5544%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="34.3311%" y="101" width="0.0523%" height="15" fill="rgb(215,118,42)" fg:x="31528" fg:w="48"/><text x="34.6241%" y="111.50"></text></g><g><title>leb128_decode (183 instructions, 0.20%)</title><rect x="34.3834%" y="101" width="0.1993%" height="15" fill="rgb(243,119,21)" fg:x="31576" fg:w="183"/><text x="34.6764%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="34.5827%" y="101" width="0.0697%" height="15" fill="rgb(252,177,53)" fg:x="31759" fg:w="64"/><text x="34.8756%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="34.6524%" y="101" width="0.0131%" height="15" fill="rgb(237,209,29)" fg:x="31823" fg:w="12"/><text x="34.9453%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="34.6654%" y="101" width="0.2483%" height="15" fill="rgb(212,65,23)" fg:x="31835" fg:w="228"/><text x="34.9584%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="34.9137%" y="101" width="0.0697%" height="15" fill="rgb(230,222,46)" fg:x="32063" fg:w="64"/><text x="35.2067%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="34.9834%" y="101" width="0.0131%" height="15" fill="rgb(215,135,32)" fg:x="32127" fg:w="12"/><text x="35.2764%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="34.9965%" y="101" width="0.2483%" height="15" fill="rgb(246,101,22)" fg:x="32139" fg:w="228"/><text x="35.2894%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="35.2447%" y="101" width="0.0697%" height="15" fill="rgb(206,107,13)" fg:x="32367" fg:w="64"/><text x="35.5377%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="35.3144%" y="101" width="0.0131%" height="15" fill="rgb(250,100,44)" fg:x="32431" fg:w="12"/><text x="35.6074%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="35.3275%" y="101" width="0.2483%" height="15" fill="rgb(231,147,38)" fg:x="32443" fg:w="228"/><text x="35.6205%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="35.5758%" y="101" width="0.0697%" height="15" fill="rgb(229,8,40)" fg:x="32671" fg:w="64"/><text x="35.8687%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="35.6455%" y="101" width="0.0131%" height="15" fill="rgb(221,135,30)" fg:x="32735" fg:w="12"/><text x="35.9384%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="35.6585%" y="101" width="0.2483%" height="15" fill="rgb(249,193,18)" fg:x="32747" fg:w="228"/><text x="35.9515%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="35.9068%" y="101" width="0.0697%" height="15" fill="rgb(209,133,39)" fg:x="32975" fg:w="64"/><text x="36.1998%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="35.9765%" y="101" width="0.0131%" height="15" fill="rgb(232,100,14)" fg:x="33039" fg:w="12"/><text x="36.2694%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="35.9895%" y="101" width="0.2483%" height="15" fill="rgb(224,185,1)" fg:x="33051" fg:w="228"/><text x="36.2825%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="36.2378%" y="101" width="0.0697%" height="15" fill="rgb(223,139,8)" fg:x="33279" fg:w="64"/><text x="36.5308%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="36.3075%" y="101" width="0.0131%" height="15" fill="rgb(232,213,38)" fg:x="33343" fg:w="12"/><text x="36.6005%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="36.3206%" y="101" width="0.2483%" height="15" fill="rgb(207,94,22)" fg:x="33355" fg:w="228"/><text x="36.6135%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="36.5688%" y="101" width="0.0697%" height="15" fill="rgb(219,183,54)" fg:x="33583" fg:w="64"/><text x="36.8618%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="36.6385%" y="101" width="0.0131%" height="15" fill="rgb(216,185,54)" fg:x="33647" fg:w="12"/><text x="36.9315%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="36.6516%" y="101" width="0.0697%" height="15" fill="rgb(254,217,39)" fg:x="33659" fg:w="64"/><text x="36.9446%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="36.7213%" y="101" width="0.0523%" height="15" fill="rgb(240,178,23)" fg:x="33723" fg:w="48"/><text x="37.0143%" y="111.50"></text></g><g><title>leb128_decode (183 instructions, 0.20%)</title><rect x="36.7736%" y="101" width="0.1993%" height="15" fill="rgb(218,11,47)" fg:x="33771" fg:w="183"/><text x="37.0665%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="36.9728%" y="101" width="0.0697%" height="15" fill="rgb(218,51,51)" fg:x="33954" fg:w="64"/><text x="37.2658%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="37.0425%" y="101" width="0.0131%" height="15" fill="rgb(238,126,27)" fg:x="34018" fg:w="12"/><text x="37.3355%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="37.0556%" y="101" width="0.2483%" height="15" fill="rgb(249,202,22)" fg:x="34030" fg:w="228"/><text x="37.3486%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.3039%" y="101" width="0.0697%" height="15" fill="rgb(254,195,49)" fg:x="34258" fg:w="64"/><text x="37.5968%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="37.3736%" y="101" width="0.0131%" height="15" fill="rgb(208,123,14)" fg:x="34322" fg:w="12"/><text x="37.6665%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.3866%" y="101" width="0.0697%" height="15" fill="rgb(224,200,8)" fg:x="34334" fg:w="64"/><text x="37.6796%" y="111.50"></text></g><g><title>sleb128_decode (103 instructions, 0.11%)</title><rect x="37.4563%" y="101" width="0.1122%" height="15" fill="rgb(217,61,36)" fg:x="34398" fg:w="103"/><text x="37.7493%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (24 instructions, 0.03%)</title><rect x="37.5685%" y="101" width="0.0261%" height="15" fill="rgb(206,35,45)" fg:x="34501" fg:w="24"/><text x="37.8614%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.5946%" y="101" width="0.0697%" height="15" fill="rgb(217,65,33)" fg:x="34525" fg:w="64"/><text x="37.8876%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.6643%" y="101" width="0.0697%" height="15" fill="rgb(222,158,48)" fg:x="34589" fg:w="64"/><text x="37.9573%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="37.7340%" y="101" width="0.0131%" height="15" fill="rgb(254,2,54)" fg:x="34653" fg:w="12"/><text x="38.0269%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.7470%" y="101" width="0.0697%" height="15" fill="rgb(250,143,38)" fg:x="34665" fg:w="64"/><text x="38.0400%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.8167%" y="101" width="0.0697%" height="15" fill="rgb(248,25,0)" fg:x="34729" fg:w="64"/><text x="38.1097%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.8864%" y="101" width="0.0697%" height="15" fill="rgb(206,152,27)" fg:x="34793" fg:w="64"/><text x="38.1794%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.9561%" y="101" width="0.0697%" height="15" fill="rgb(240,77,30)" fg:x="34857" fg:w="64"/><text x="38.2491%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.0258%" y="101" width="0.0697%" height="15" fill="rgb(231,5,3)" fg:x="34921" fg:w="64"/><text x="38.3188%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.0955%" y="101" width="0.0697%" height="15" fill="rgb(207,226,32)" fg:x="34985" fg:w="64"/><text x="38.3885%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.1652%" y="101" width="0.0697%" height="15" fill="rgb(222,207,47)" fg:x="35049" fg:w="64"/><text x="38.4582%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.2349%" y="101" width="0.0697%" height="15" fill="rgb(229,115,45)" fg:x="35113" fg:w="64"/><text x="38.5278%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.3046%" y="101" width="0.0697%" height="15" fill="rgb(224,191,6)" fg:x="35177" fg:w="64"/><text x="38.5975%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.3743%" y="101" width="0.0697%" height="15" fill="rgb(230,227,24)" fg:x="35241" fg:w="64"/><text x="38.6672%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.4439%" y="101" width="0.0697%" height="15" fill="rgb(228,80,19)" fg:x="35305" fg:w="64"/><text x="38.7369%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.5136%" y="101" width="0.0697%" height="15" fill="rgb(247,229,0)" fg:x="35369" fg:w="64"/><text x="38.8066%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.5833%" y="101" width="0.0697%" height="15" fill="rgb(237,194,15)" fg:x="35433" fg:w="64"/><text x="38.8763%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.6530%" y="101" width="0.0697%" height="15" fill="rgb(219,203,20)" fg:x="35497" fg:w="64"/><text x="38.9460%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.7227%" y="101" width="0.0697%" height="15" fill="rgb(234,128,8)" fg:x="35561" fg:w="64"/><text x="39.0157%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.7924%" y="101" width="0.0697%" height="15" fill="rgb(248,202,8)" fg:x="35625" fg:w="64"/><text x="39.0854%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.8621%" y="101" width="0.0697%" height="15" fill="rgb(206,104,37)" fg:x="35689" fg:w="64"/><text x="39.1551%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.9318%" y="101" width="0.0697%" height="15" fill="rgb(223,8,27)" fg:x="35753" fg:w="64"/><text x="39.2247%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="39.0015%" y="101" width="0.0697%" height="15" fill="rgb(216,217,28)" fg:x="35817" fg:w="64"/><text x="39.2944%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="39.0712%" y="101" width="0.0697%" height="15" fill="rgb(249,199,1)" fg:x="35881" fg:w="64"/><text x="39.3641%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="39.1409%" y="101" width="0.0697%" height="15" fill="rgb(240,85,17)" fg:x="35945" fg:w="64"/><text x="39.4338%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="39.2105%" y="101" width="0.0523%" height="15" fill="rgb(206,108,45)" fg:x="36009" fg:w="48"/><text x="39.5035%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="39.2628%" y="101" width="0.0697%" height="15" fill="rgb(245,210,41)" fg:x="36057" fg:w="64"/><text x="39.5558%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::h3b881c31b9db46be (12 instructions, 0.01%)</title><rect x="39.3325%" y="101" width="0.0131%" height="15" fill="rgb(206,13,37)" fg:x="36121" fg:w="12"/><text x="39.6255%" y="111.50"></text></g><g><title>parse_idl_header (16,341 instructions, 17.79%)</title><rect x="25.7494%" y="117" width="17.7939%" height="15" fill="rgb(250,61,18)" fg:x="23647" fg:w="16341"/><text x="26.0424%" y="127.50">parse_idl_header</text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="43.5433%" y="117" width="0.0523%" height="15" fill="rgb(235,172,48)" fg:x="39988" fg:w="48"/><text x="43.8363%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="43.5956%" y="117" width="0.0697%" height="15" fill="rgb(249,201,17)" fg:x="40036" fg:w="64"/><text x="43.8885%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="43.6707%" y="117" width="0.0697%" height="15" fill="rgb(219,208,6)" fg:x="40105" fg:w="64"/><text x="43.9637%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="43.7404%" y="117" width="0.0523%" height="15" fill="rgb(248,31,23)" fg:x="40169" fg:w="48"/><text x="44.0334%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="43.7927%" y="101" width="0.2483%" height="15" fill="rgb(245,15,42)" fg:x="40217" fg:w="228"/><text x="44.0856%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="43.7927%" y="117" width="0.2875%" height="15" fill="rgb(222,217,39)" fg:x="40217" fg:w="264"/><text x="44.0856%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.0801%" y="117" width="0.0697%" height="15" fill="rgb(210,219,27)" fg:x="40481" fg:w="64"/><text x="44.3731%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.1553%" y="117" width="0.0697%" height="15" fill="rgb(252,166,36)" fg:x="40550" fg:w="64"/><text x="44.4482%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.2250%" y="117" width="0.0697%" height="15" fill="rgb(245,132,34)" fg:x="40614" fg:w="64"/><text x="44.5179%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.2947%" y="117" width="0.0697%" height="15" fill="rgb(236,54,3)" fg:x="40678" fg:w="64"/><text x="44.5876%" y="127.50"></text></g><g><title>@deserialize_go&lt;n16&gt; (61 instructions, 0.07%)</title><rect x="44.3643%" y="117" width="0.0664%" height="15" fill="rgb(241,173,43)" fg:x="40742" fg:w="61"/><text x="44.6573%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="44.4308%" y="101" width="0.2483%" height="15" fill="rgb(215,190,9)" fg:x="40803" fg:w="228"/><text x="44.7237%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="44.4308%" y="117" width="0.2875%" height="15" fill="rgb(242,101,16)" fg:x="40803" fg:w="264"/><text x="44.7237%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.7182%" y="117" width="0.0697%" height="15" fill="rgb(223,190,21)" fg:x="41067" fg:w="64"/><text x="45.0112%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.7934%" y="117" width="0.0697%" height="15" fill="rgb(215,228,25)" fg:x="41136" fg:w="64"/><text x="45.0863%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.8631%" y="117" width="0.0697%" height="15" fill="rgb(225,36,22)" fg:x="41200" fg:w="64"/><text x="45.1560%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.9328%" y="117" width="0.0697%" height="15" fill="rgb(251,106,46)" fg:x="41264" fg:w="64"/><text x="45.2257%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="45.0079%" y="101" width="0.0697%" height="15" fill="rgb(208,90,1)" fg:x="41333" fg:w="64"/><text x="45.3009%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="45.0776%" y="101" width="0.0523%" height="15" fill="rgb(243,10,4)" fg:x="41397" fg:w="48"/><text x="45.3706%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="45.1299%" y="85" width="0.2483%" height="15" fill="rgb(212,137,27)" fg:x="41445" fg:w="228"/><text x="45.4228%" y="95.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="45.1299%" y="101" width="0.2875%" height="15" fill="rgb(231,220,49)" fg:x="41445" fg:w="264"/><text x="45.4228%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="45.4173%" y="101" width="0.0697%" height="15" fill="rgb(237,96,20)" fg:x="41709" fg:w="64"/><text x="45.7103%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="45.4925%" y="85" width="0.0523%" height="15" fill="rgb(239,229,30)" fg:x="41778" fg:w="48"/><text x="45.7854%" y="95.50"></text></g><g><title>utf8_validate (34 instructions, 0.04%)</title><rect x="45.5447%" y="85" width="0.0370%" height="15" fill="rgb(219,65,33)" fg:x="41826" fg:w="34"/><text x="45.8377%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="45.5817%" y="69" width="0.0621%" height="15" fill="rgb(243,134,7)" fg:x="41860" fg:w="57"/><text x="45.8747%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="45.5817%" y="85" width="0.0773%" height="15" fill="rgb(216,177,54)" fg:x="41860" fg:w="71"/><text x="45.8747%" y="95.50"></text></g><g><title>memcpy (50 instructions, 0.05%)</title><rect x="45.6591%" y="85" width="0.0544%" height="15" fill="rgb(211,160,20)" fg:x="41931" fg:w="50"/><text x="45.9520%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (285 instructions, 0.31%)</title><rect x="45.4870%" y="101" width="0.3103%" height="15" fill="rgb(239,85,39)" fg:x="41773" fg:w="285"/><text x="45.7800%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="45.7974%" y="85" width="0.2483%" height="15" fill="rgb(232,125,22)" fg:x="42058" fg:w="228"/><text x="46.0903%" y="95.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="45.7974%" y="101" width="0.2875%" height="15" fill="rgb(244,57,34)" fg:x="42058" fg:w="264"/><text x="46.0903%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="46.0848%" y="101" width="0.0697%" height="15" fill="rgb(214,203,32)" fg:x="42322" fg:w="64"/><text x="46.3778%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="46.1600%" y="85" width="0.0523%" height="15" fill="rgb(207,58,43)" fg:x="42391" fg:w="48"/><text x="46.4529%" y="95.50"></text></g><g><title>utf8_validate (268 instructions, 0.29%)</title><rect x="46.2122%" y="85" width="0.2918%" height="15" fill="rgb(215,193,15)" fg:x="42439" fg:w="268"/><text x="46.5052%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="46.5041%" y="69" width="0.0621%" height="15" fill="rgb(232,15,44)" fg:x="42707" fg:w="57"/><text x="46.7970%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="46.5041%" y="85" width="0.0773%" height="15" fill="rgb(212,3,48)" fg:x="42707" fg:w="71"/><text x="46.7970%" y="95.50"></text></g><g><title>memcpy (139 instructions, 0.15%)</title><rect x="46.5814%" y="85" width="0.1514%" height="15" fill="rgb(218,128,7)" fg:x="42778" fg:w="139"/><text x="46.8743%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (608 instructions, 0.66%)</title><rect x="46.1545%" y="101" width="0.6621%" height="15" fill="rgb(226,216,39)" fg:x="42386" fg:w="608"/><text x="46.4475%" y="111.50"></text></g><g><title>@deserialize_go&lt;r(data:t,logo_type:t)&gt; (1,989 instructions, 2.17%)</title><rect x="45.0025%" y="117" width="2.1658%" height="15" fill="rgb(243,47,51)" fg:x="41328" fg:w="1989"/><text x="45.2954%" y="127.50">@..</text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="47.1683%" y="101" width="0.2483%" height="15" fill="rgb(241,183,40)" fg:x="43317" fg:w="228"/><text x="47.4613%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="47.1683%" y="117" width="0.2875%" height="15" fill="rgb(231,217,32)" fg:x="43317" fg:w="264"/><text x="47.4613%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="47.4558%" y="117" width="0.0697%" height="15" fill="rgb(229,61,38)" fg:x="43581" fg:w="64"/><text x="47.7487%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="47.5309%" y="101" width="0.0697%" height="15" fill="rgb(225,210,5)" fg:x="43650" fg:w="64"/><text x="47.8239%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="47.6006%" y="101" width="0.0697%" height="15" fill="rgb(231,79,45)" fg:x="43714" fg:w="64"/><text x="47.8936%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="47.6703%" y="101" width="0.0697%" height="15" fill="rgb(224,100,7)" fg:x="43778" fg:w="64"/><text x="47.9632%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="47.7454%" y="85" width="0.0523%" height="15" fill="rgb(241,198,18)" fg:x="43847" fg:w="48"/><text x="48.0384%" y="95.50"></text></g><g><title>utf8_validate (284 instructions, 0.31%)</title><rect x="47.7977%" y="85" width="0.3093%" height="15" fill="rgb(252,97,53)" fg:x="43895" fg:w="284"/><text x="48.0906%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="48.1069%" y="69" width="0.0621%" height="15" fill="rgb(220,88,7)" fg:x="44179" fg:w="57"/><text x="48.3999%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="48.1069%" y="85" width="0.0773%" height="15" fill="rgb(213,176,14)" fg:x="44179" fg:w="71"/><text x="48.3999%" y="95.50"></text></g><g><title>memcpy (168 instructions, 0.18%)</title><rect x="48.1842%" y="85" width="0.1829%" height="15" fill="rgb(246,73,7)" fg:x="44250" fg:w="168"/><text x="48.4772%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (653 instructions, 0.71%)</title><rect x="47.7400%" y="101" width="0.7111%" height="15" fill="rgb(245,64,36)" fg:x="43842" fg:w="653"/><text x="48.0329%" y="111.50"></text></g><g><title>@deserialize_go&lt;?t&gt; (1,104 instructions, 1.20%)</title><rect x="47.5255%" y="117" width="1.2022%" height="15" fill="rgb(245,80,10)" fg:x="43645" fg:w="1104"/><text x="47.8184%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="48.7276%" y="101" width="0.2483%" height="15" fill="rgb(232,107,50)" fg:x="44749" fg:w="228"/><text x="49.0206%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="48.7276%" y="117" width="0.2875%" height="15" fill="rgb(253,3,0)" fg:x="44749" fg:w="264"/><text x="49.0206%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.0151%" y="117" width="0.0697%" height="15" fill="rgb(212,99,53)" fg:x="45013" fg:w="64"/><text x="49.3081%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.0902%" y="117" width="0.0697%" height="15" fill="rgb(249,111,54)" fg:x="45082" fg:w="64"/><text x="49.3832%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.1599%" y="117" width="0.0697%" height="15" fill="rgb(249,55,30)" fg:x="45146" fg:w="64"/><text x="49.4529%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.2296%" y="117" width="0.0697%" height="15" fill="rgb(237,47,42)" fg:x="45210" fg:w="64"/><text x="49.5226%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.3047%" y="101" width="0.0697%" height="15" fill="rgb(211,20,18)" fg:x="45279" fg:w="64"/><text x="49.5977%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.3744%" y="101" width="0.0697%" height="15" fill="rgb(231,203,46)" fg:x="45343" fg:w="64"/><text x="49.6674%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.4441%" y="101" width="0.0697%" height="15" fill="rgb(237,142,3)" fg:x="45407" fg:w="64"/><text x="49.7371%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.5192%" y="85" width="0.0697%" height="15" fill="rgb(241,107,1)" fg:x="45476" fg:w="64"/><text x="49.8122%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="49.5889%" y="85" width="0.0523%" height="15" fill="rgb(229,83,13)" fg:x="45540" fg:w="48"/><text x="49.8819%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="49.6412%" y="69" width="0.0523%" height="15" fill="rgb(241,91,40)" fg:x="45588" fg:w="48"/><text x="49.9342%" y="79.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="49.6412%" y="85" width="0.0915%" height="15" fill="rgb(225,3,45)" fg:x="45588" fg:w="84"/><text x="49.9342%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.7327%" y="85" width="0.0697%" height="15" fill="rgb(244,223,14)" fg:x="45672" fg:w="64"/><text x="50.0256%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.8078%" y="85" width="0.0697%" height="15" fill="rgb(224,124,37)" fg:x="45741" fg:w="64"/><text x="50.1008%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="49.8775%" y="85" width="0.0523%" height="15" fill="rgb(251,171,30)" fg:x="45805" fg:w="48"/><text x="50.1705%" y="95.50"></text></g><g><title>leb128_decode (138 instructions, 0.15%)</title><rect x="49.9298%" y="69" width="0.1503%" height="15" fill="rgb(236,46,54)" fg:x="45853" fg:w="138"/><text x="50.2227%" y="79.50"></text></g><g><title>find_field (174 instructions, 0.19%)</title><rect x="49.9298%" y="85" width="0.1895%" height="15" fill="rgb(245,213,5)" fg:x="45853" fg:w="174"/><text x="50.2227%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="50.1192%" y="85" width="0.0697%" height="15" fill="rgb(230,144,27)" fg:x="46027" fg:w="64"/><text x="50.4122%" y="95.50"></text></g><g><title>@deserialize_go&lt;n64&gt; (70 instructions, 0.08%)</title><rect x="50.1889%" y="85" width="0.0762%" height="15" fill="rgb(220,86,6)" fg:x="46091" fg:w="70"/><text x="50.4819%" y="95.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="50.2651%" y="69" width="0.2483%" height="15" fill="rgb(240,20,13)" fg:x="46161" fg:w="228"/><text x="50.5581%" y="79.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="50.2651%" y="85" width="0.2875%" height="15" fill="rgb(217,89,34)" fg:x="46161" fg:w="264"/><text x="50.5581%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="50.5526%" y="85" width="0.0697%" height="15" fill="rgb(229,13,5)" fg:x="46425" fg:w="64"/><text x="50.8456%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="50.6278%" y="69" width="0.0523%" height="15" fill="rgb(244,67,35)" fg:x="46494" fg:w="48"/><text x="50.9207%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="50.6800%" y="53" width="0.0621%" height="15" fill="rgb(221,40,2)" fg:x="46542" fg:w="57"/><text x="50.9730%" y="63.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="50.6800%" y="69" width="0.0708%" height="15" fill="rgb(237,157,21)" fg:x="46542" fg:w="65"/><text x="50.9730%" y="79.50"></text></g><g><title>memcpy (167 instructions, 0.18%)</title><rect x="50.7508%" y="69" width="0.1818%" height="15" fill="rgb(222,94,11)" fg:x="46607" fg:w="167"/><text x="51.0438%" y="79.50"></text></g><g><title>@deserialize_go&lt;P&gt; (398 instructions, 0.43%)</title><rect x="50.6223%" y="85" width="0.4334%" height="15" fill="rgb(249,113,6)" fg:x="46489" fg:w="398"/><text x="50.9153%" y="95.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="51.0557%" y="69" width="0.2483%" height="15" fill="rgb(238,137,36)" fg:x="46887" fg:w="228"/><text x="51.3487%" y="79.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="51.0557%" y="85" width="0.2875%" height="15" fill="rgb(210,102,26)" fg:x="46887" fg:w="264"/><text x="51.3487%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="51.3432%" y="85" width="0.0697%" height="15" fill="rgb(218,30,30)" fg:x="47151" fg:w="64"/><text x="51.6361%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="51.4183%" y="69" width="0.0697%" height="15" fill="rgb(214,67,26)" fg:x="47220" fg:w="64"/><text x="51.7113%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="51.4880%" y="69" width="0.0697%" height="15" fill="rgb(251,9,53)" fg:x="47284" fg:w="64"/><text x="51.7810%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="51.5577%" y="69" width="0.0523%" height="15" fill="rgb(228,204,25)" fg:x="47348" fg:w="48"/><text x="51.8507%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_array::heebb6365e1e316bb (60 instructions, 0.07%)</title><rect x="51.6154%" y="53" width="0.0653%" height="15" fill="rgb(207,153,8)" fg:x="47401" fg:w="60"/><text x="51.9084%" y="63.50"></text></g><g><title>alloc_array (68 instructions, 0.07%)</title><rect x="51.6154%" y="69" width="0.0740%" height="15" fill="rgb(242,9,16)" fg:x="47401" fg:w="68"/><text x="51.9084%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="51.6949%" y="69" width="0.0697%" height="15" fill="rgb(217,211,10)" fg:x="47474" fg:w="64"/><text x="51.9879%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="51.7646%" y="69" width="0.0523%" height="15" fill="rgb(219,228,52)" fg:x="47538" fg:w="48"/><text x="52.0575%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="51.8168%" y="53" width="0.2483%" height="15" fill="rgb(231,92,29)" fg:x="47586" fg:w="228"/><text x="52.1098%" y="63.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="51.8168%" y="69" width="0.2875%" height="15" fill="rgb(232,8,23)" fg:x="47586" fg:w="264"/><text x="52.1098%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="52.1043%" y="69" width="0.0697%" height="15" fill="rgb(216,211,34)" fg:x="47850" fg:w="64"/><text x="52.3973%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="52.1795%" y="53" width="0.0697%" height="15" fill="rgb(236,151,0)" fg:x="47919" fg:w="64"/><text x="52.4724%" y="63.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="52.2491%" y="53" width="0.0697%" height="15" fill="rgb(209,168,3)" fg:x="47983" fg:w="64"/><text x="52.5421%" y="63.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="52.3188%" y="53" width="0.0523%" height="15" fill="rgb(208,129,28)" fg:x="48047" fg:w="48"/><text x="52.6118%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="52.3711%" y="37" width="0.0621%" height="15" fill="rgb(229,78,22)" fg:x="48095" fg:w="57"/><text x="52.6641%" y="47.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="52.3711%" y="53" width="0.0708%" height="15" fill="rgb(228,187,13)" fg:x="48095" fg:w="65"/><text x="52.6641%" y="63.50"></text></g><g><title>memcpy (156 instructions, 0.17%)</title><rect x="52.4419%" y="53" width="0.1699%" height="15" fill="rgb(240,119,24)" fg:x="48160" fg:w="156"/><text x="52.7348%" y="63.50"></text></g><g><title>@deserialize_go&lt;B&gt; (532 instructions, 0.58%)</title><rect x="52.1740%" y="69" width="0.5793%" height="15" fill="rgb(209,194,42)" fg:x="47914" fg:w="532"/><text x="52.4670%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="52.7533%" y="53" width="0.2483%" height="15" fill="rgb(247,200,46)" fg:x="48446" fg:w="228"/><text x="53.0463%" y="63.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="52.7533%" y="69" width="0.2875%" height="15" fill="rgb(218,76,16)" fg:x="48446" fg:w="264"/><text x="53.0463%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="53.0408%" y="69" width="0.0697%" height="15" fill="rgb(225,21,48)" fg:x="48710" fg:w="64"/><text x="53.3337%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="53.1159%" y="69" width="0.0697%" height="15" fill="rgb(239,223,50)" fg:x="48779" fg:w="64"/><text x="53.4089%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="53.1856%" y="69" width="0.0697%" height="15" fill="rgb(244,45,21)" fg:x="48843" fg:w="64"/><text x="53.4786%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="53.2553%" y="69" width="0.0523%" height="15" fill="rgb(232,33,43)" fg:x="48907" fg:w="48"/><text x="53.5483%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_array::heebb6365e1e316bb (60 instructions, 0.07%)</title><rect x="53.3130%" y="53" width="0.0653%" height="15" fill="rgb(209,8,3)" fg:x="48960" fg:w="60"/><text x="53.6060%" y="63.50"></text></g><g><title>alloc_array (68 instructions, 0.07%)</title><rect x="53.3130%" y="69" width="0.0740%" height="15" fill="rgb(214,25,53)" fg:x="48960" fg:w="68"/><text x="53.6060%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="53.3925%" y="69" width="0.0697%" height="15" fill="rgb(254,186,54)" fg:x="49033" fg:w="64"/><text x="53.6855%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="53.4622%" y="69" width="0.0523%" height="15" fill="rgb(208,174,49)" fg:x="49097" fg:w="48"/><text x="53.7552%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="53.5145%" y="53" width="0.0523%" height="15" fill="rgb(233,191,51)" fg:x="49145" fg:w="48"/><text x="53.8074%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="53.5145%" y="69" width="0.0915%" height="15" fill="rgb(222,134,10)" fg:x="49145" fg:w="84"/><text x="53.8074%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="53.6059%" y="69" width="0.0697%" height="15" fill="rgb(230,226,20)" fg:x="49229" fg:w="64"/><text x="53.8989%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="53.6811%" y="53" width="0.0523%" height="15" fill="rgb(251,111,25)" fg:x="49298" fg:w="48"/><text x="53.9740%" y="63.50"></text></g><g><title>utf8_validate (162 instructions, 0.18%)</title><rect x="53.7333%" y="53" width="0.1764%" height="15" fill="rgb(224,40,46)" fg:x="49346" fg:w="162"/><text x="54.0263%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="53.9097%" y="37" width="0.0621%" height="15" fill="rgb(236,108,47)" fg:x="49508" fg:w="57"/><text x="54.2027%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="53.9097%" y="53" width="0.0773%" height="15" fill="rgb(234,93,0)" fg:x="49508" fg:w="71"/><text x="54.2027%" y="63.50"></text></g><g><title>memcpy (72 instructions, 0.08%)</title><rect x="53.9870%" y="53" width="0.0784%" height="15" fill="rgb(224,213,32)" fg:x="49579" fg:w="72"/><text x="54.2800%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (435 instructions, 0.47%)</title><rect x="53.6756%" y="69" width="0.4737%" height="15" fill="rgb(251,11,48)" fg:x="49293" fg:w="435"/><text x="53.9686%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="54.1493%" y="53" width="0.0523%" height="15" fill="rgb(236,173,5)" fg:x="49728" fg:w="48"/><text x="54.4423%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="54.1493%" y="69" width="0.0915%" height="15" fill="rgb(230,95,12)" fg:x="49728" fg:w="84"/><text x="54.4423%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="54.2408%" y="69" width="0.0697%" height="15" fill="rgb(232,209,1)" fg:x="49812" fg:w="64"/><text x="54.5337%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="54.3159%" y="69" width="0.0697%" height="15" fill="rgb(232,6,1)" fg:x="49881" fg:w="64"/><text x="54.6089%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="54.3856%" y="69" width="0.0523%" height="15" fill="rgb(210,224,50)" fg:x="49945" fg:w="48"/><text x="54.6786%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="54.4379%" y="69" width="0.0523%" height="15" fill="rgb(228,127,35)" fg:x="49993" fg:w="48"/><text x="54.7308%" y="79.50"></text></g><g><title>skip_leb128 (76 instructions, 0.08%)</title><rect x="54.4901%" y="69" width="0.0828%" height="15" fill="rgb(245,102,45)" fg:x="50041" fg:w="76"/><text x="54.7831%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="54.5729%" y="69" width="0.0272%" height="15" fill="rgb(214,1,49)" fg:x="50117" fg:w="25"/><text x="54.8658%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="54.6001%" y="69" width="0.1013%" height="15" fill="rgb(226,163,40)" fg:x="50142" fg:w="93"/><text x="54.8931%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="54.7014%" y="69" width="0.0272%" height="15" fill="rgb(239,212,28)" fg:x="50235" fg:w="25"/><text x="54.9943%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="54.7286%" y="69" width="0.1013%" height="15" fill="rgb(220,20,13)" fg:x="50260" fg:w="93"/><text x="55.0216%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="54.8299%" y="69" width="0.0272%" height="15" fill="rgb(210,164,35)" fg:x="50353" fg:w="25"/><text x="55.1228%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="54.8571%" y="69" width="0.1013%" height="15" fill="rgb(248,109,41)" fg:x="50378" fg:w="93"/><text x="55.1500%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="54.9583%" y="69" width="0.0272%" height="15" fill="rgb(238,23,50)" fg:x="50471" fg:w="25"/><text x="55.2513%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="54.9856%" y="69" width="0.1013%" height="15" fill="rgb(211,48,49)" fg:x="50496" fg:w="93"/><text x="55.2785%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="55.0868%" y="69" width="0.0272%" height="15" fill="rgb(223,36,21)" fg:x="50589" fg:w="25"/><text x="55.3798%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="55.1141%" y="69" width="0.1013%" height="15" fill="rgb(207,123,46)" fg:x="50614" fg:w="93"/><text x="55.4070%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="55.2153%" y="69" width="0.0272%" height="15" fill="rgb(240,218,32)" fg:x="50707" fg:w="25"/><text x="55.5083%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="55.2426%" y="69" width="0.2483%" height="15" fill="rgb(252,5,43)" fg:x="50732" fg:w="228"/><text x="55.5355%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="55.4908%" y="69" width="0.0697%" height="15" fill="rgb(252,84,19)" fg:x="50960" fg:w="64"/><text x="55.7838%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="55.5660%" y="53" width="0.0523%" height="15" fill="rgb(243,152,39)" fg:x="51029" fg:w="48"/><text x="55.8589%" y="63.50"></text></g><g><title>utf8_validate (314 instructions, 0.34%)</title><rect x="55.6182%" y="53" width="0.3419%" height="15" fill="rgb(234,160,15)" fg:x="51077" fg:w="314"/><text x="55.9112%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="55.9601%" y="37" width="0.0621%" height="15" fill="rgb(237,34,20)" fg:x="51391" fg:w="57"/><text x="56.2531%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="55.9601%" y="53" width="0.0773%" height="15" fill="rgb(229,97,13)" fg:x="51391" fg:w="71"/><text x="56.2531%" y="63.50"></text></g><g><title>memcpy (338 instructions, 0.37%)</title><rect x="56.0375%" y="53" width="0.3681%" height="15" fill="rgb(234,71,50)" fg:x="51462" fg:w="338"/><text x="56.3304%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (853 instructions, 0.93%)</title><rect x="55.5605%" y="69" width="0.9288%" height="15" fill="rgb(253,155,4)" fg:x="51024" fg:w="853"/><text x="55.8535%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="56.5013%" y="69" width="0.0697%" height="15" fill="rgb(222,185,37)" fg:x="51888" fg:w="64"/><text x="56.7943%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="56.5710%" y="69" width="0.0523%" height="15" fill="rgb(251,177,13)" fg:x="51952" fg:w="48"/><text x="56.8640%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="56.6233%" y="53" width="0.0523%" height="15" fill="rgb(250,179,40)" fg:x="52000" fg:w="48"/><text x="56.9163%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="56.6233%" y="69" width="0.0915%" height="15" fill="rgb(242,44,2)" fg:x="52000" fg:w="84"/><text x="56.9163%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="56.7148%" y="69" width="0.0697%" height="15" fill="rgb(216,177,13)" fg:x="52084" fg:w="64"/><text x="57.0077%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="56.7899%" y="53" width="0.0523%" height="15" fill="rgb(216,106,43)" fg:x="52153" fg:w="48"/><text x="57.0829%" y="63.50"></text></g><g><title>utf8_validate (172 instructions, 0.19%)</title><rect x="56.8422%" y="53" width="0.1873%" height="15" fill="rgb(216,183,2)" fg:x="52201" fg:w="172"/><text x="57.1351%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="57.0295%" y="37" width="0.0621%" height="15" fill="rgb(249,75,3)" fg:x="52373" fg:w="57"/><text x="57.3224%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="57.0295%" y="53" width="0.0773%" height="15" fill="rgb(219,67,39)" fg:x="52373" fg:w="71"/><text x="57.3224%" y="63.50"></text></g><g><title>memcpy (115 instructions, 0.13%)</title><rect x="57.1068%" y="53" width="0.1252%" height="15" fill="rgb(253,228,2)" fg:x="52444" fg:w="115"/><text x="57.3997%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (488 instructions, 0.53%)</title><rect x="56.7845%" y="69" width="0.5314%" height="15" fill="rgb(235,138,27)" fg:x="52148" fg:w="488"/><text x="57.0774%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="57.3158%" y="53" width="0.0523%" height="15" fill="rgb(236,97,51)" fg:x="52636" fg:w="48"/><text x="57.6088%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="57.3158%" y="69" width="0.0915%" height="15" fill="rgb(240,80,30)" fg:x="52636" fg:w="84"/><text x="57.6088%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="57.4073%" y="69" width="0.0697%" height="15" fill="rgb(230,178,19)" fg:x="52720" fg:w="64"/><text x="57.7003%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="57.4824%" y="69" width="0.0697%" height="15" fill="rgb(210,190,27)" fg:x="52789" fg:w="64"/><text x="57.7754%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="57.5521%" y="69" width="0.0523%" height="15" fill="rgb(222,107,31)" fg:x="52853" fg:w="48"/><text x="57.8451%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="57.6044%" y="69" width="0.0523%" height="15" fill="rgb(216,127,34)" fg:x="52901" fg:w="48"/><text x="57.8974%" y="79.50"></text></g><g><title>skip_leb128 (76 instructions, 0.08%)</title><rect x="57.6567%" y="69" width="0.0828%" height="15" fill="rgb(234,116,52)" fg:x="52949" fg:w="76"/><text x="57.9496%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="57.7394%" y="69" width="0.0272%" height="15" fill="rgb(222,124,15)" fg:x="53025" fg:w="25"/><text x="58.0324%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="57.7666%" y="69" width="0.1013%" height="15" fill="rgb(231,179,28)" fg:x="53050" fg:w="93"/><text x="58.0596%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="57.8679%" y="69" width="0.0272%" height="15" fill="rgb(226,93,45)" fg:x="53143" fg:w="25"/><text x="58.1609%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="57.8951%" y="69" width="0.1013%" height="15" fill="rgb(215,8,51)" fg:x="53168" fg:w="93"/><text x="58.1881%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="57.9964%" y="69" width="0.0272%" height="15" fill="rgb(223,106,5)" fg:x="53261" fg:w="25"/><text x="58.2894%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="58.0236%" y="69" width="0.1013%" height="15" fill="rgb(250,191,5)" fg:x="53286" fg:w="93"/><text x="58.3166%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="58.1249%" y="69" width="0.0272%" height="15" fill="rgb(242,132,44)" fg:x="53379" fg:w="25"/><text x="58.4179%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="58.1521%" y="69" width="0.1013%" height="15" fill="rgb(251,152,29)" fg:x="53404" fg:w="93"/><text x="58.4451%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="58.2534%" y="69" width="0.0272%" height="15" fill="rgb(218,179,5)" fg:x="53497" fg:w="25"/><text x="58.5464%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="58.2806%" y="69" width="0.1013%" height="15" fill="rgb(227,67,19)" fg:x="53522" fg:w="93"/><text x="58.5736%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="58.3819%" y="69" width="0.0272%" height="15" fill="rgb(233,119,31)" fg:x="53615" fg:w="25"/><text x="58.6748%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="58.4091%" y="69" width="0.2483%" height="15" fill="rgb(241,120,22)" fg:x="53640" fg:w="228"/><text x="58.7021%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="58.6574%" y="69" width="0.0697%" height="15" fill="rgb(224,102,30)" fg:x="53868" fg:w="64"/><text x="58.9503%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="58.7325%" y="53" width="0.0523%" height="15" fill="rgb(210,164,37)" fg:x="53937" fg:w="48"/><text x="59.0255%" y="63.50"></text></g><g><title>utf8_validate (188 instructions, 0.20%)</title><rect x="58.7848%" y="53" width="0.2047%" height="15" fill="rgb(226,191,16)" fg:x="53985" fg:w="188"/><text x="59.0777%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="58.9895%" y="37" width="0.0621%" height="15" fill="rgb(214,40,45)" fg:x="54173" fg:w="57"/><text x="59.2825%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="58.9895%" y="53" width="0.0773%" height="15" fill="rgb(244,29,26)" fg:x="54173" fg:w="71"/><text x="59.2825%" y="63.50"></text></g><g><title>memcpy (90 instructions, 0.10%)</title><rect x="59.0668%" y="53" width="0.0980%" height="15" fill="rgb(216,16,5)" fg:x="54244" fg:w="90"/><text x="59.3598%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (479 instructions, 0.52%)</title><rect x="58.7271%" y="69" width="0.5216%" height="15" fill="rgb(249,76,35)" fg:x="53932" fg:w="479"/><text x="59.0200%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="59.2606%" y="69" width="0.0697%" height="15" fill="rgb(207,11,44)" fg:x="54422" fg:w="64"/><text x="59.5536%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="59.3303%" y="69" width="0.0523%" height="15" fill="rgb(228,190,49)" fg:x="54486" fg:w="48"/><text x="59.6233%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="59.3826%" y="53" width="0.0523%" height="15" fill="rgb(214,173,12)" fg:x="54534" fg:w="48"/><text x="59.6756%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="59.3826%" y="69" width="0.0915%" height="15" fill="rgb(218,26,35)" fg:x="54534" fg:w="84"/><text x="59.6756%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="59.4741%" y="69" width="0.0697%" height="15" fill="rgb(220,200,19)" fg:x="54618" fg:w="64"/><text x="59.7670%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="59.5492%" y="53" width="0.0523%" height="15" fill="rgb(239,95,49)" fg:x="54687" fg:w="48"/><text x="59.8422%" y="63.50"></text></g><g><title>utf8_validate (213 instructions, 0.23%)</title><rect x="59.6015%" y="53" width="0.2319%" height="15" fill="rgb(235,85,53)" fg:x="54735" fg:w="213"/><text x="59.8944%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="59.8334%" y="37" width="0.0621%" height="15" fill="rgb(233,133,31)" fg:x="54948" fg:w="57"/><text x="60.1264%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="59.8334%" y="53" width="0.0773%" height="15" fill="rgb(218,25,20)" fg:x="54948" fg:w="71"/><text x="60.1264%" y="63.50"></text></g><g><title>memcpy (156 instructions, 0.17%)</title><rect x="59.9107%" y="53" width="0.1699%" height="15" fill="rgb(252,210,38)" fg:x="55019" fg:w="156"/><text x="60.2037%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (570 instructions, 0.62%)</title><rect x="59.5437%" y="69" width="0.6207%" height="15" fill="rgb(242,134,21)" fg:x="54682" fg:w="570"/><text x="59.8367%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="60.1644%" y="53" width="0.0523%" height="15" fill="rgb(213,28,48)" fg:x="55252" fg:w="48"/><text x="60.4574%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="60.1644%" y="69" width="0.0915%" height="15" fill="rgb(250,196,2)" fg:x="55252" fg:w="84"/><text x="60.4574%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="60.2559%" y="69" width="0.0697%" height="15" fill="rgb(227,5,17)" fg:x="55336" fg:w="64"/><text x="60.5489%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="60.3310%" y="69" width="0.0697%" height="15" fill="rgb(221,226,24)" fg:x="55405" fg:w="64"/><text x="60.6240%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="60.4007%" y="69" width="0.0523%" height="15" fill="rgb(211,5,48)" fg:x="55469" fg:w="48"/><text x="60.6937%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="60.4530%" y="69" width="0.0523%" height="15" fill="rgb(219,150,6)" fg:x="55517" fg:w="48"/><text x="60.7460%" y="79.50"></text></g><g><title>skip_leb128 (76 instructions, 0.08%)</title><rect x="60.5053%" y="69" width="0.0828%" height="15" fill="rgb(251,46,16)" fg:x="55565" fg:w="76"/><text x="60.7982%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="60.5880%" y="69" width="0.0272%" height="15" fill="rgb(220,204,40)" fg:x="55641" fg:w="25"/><text x="60.8810%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="60.6152%" y="69" width="0.1013%" height="15" fill="rgb(211,85,2)" fg:x="55666" fg:w="93"/><text x="60.9082%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="60.7165%" y="69" width="0.0272%" height="15" fill="rgb(229,17,7)" fg:x="55759" fg:w="25"/><text x="61.0095%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="60.7437%" y="69" width="0.1013%" height="15" fill="rgb(239,72,28)" fg:x="55784" fg:w="93"/><text x="61.0367%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="60.8450%" y="69" width="0.0272%" height="15" fill="rgb(230,47,54)" fg:x="55877" fg:w="25"/><text x="61.1380%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="60.8722%" y="69" width="0.1013%" height="15" fill="rgb(214,50,8)" fg:x="55902" fg:w="93"/><text x="61.1652%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="60.9735%" y="69" width="0.0272%" height="15" fill="rgb(216,198,43)" fg:x="55995" fg:w="25"/><text x="61.2665%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="61.0007%" y="69" width="0.1013%" height="15" fill="rgb(234,20,35)" fg:x="56020" fg:w="93"/><text x="61.2937%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="61.1020%" y="69" width="0.0272%" height="15" fill="rgb(254,45,19)" fg:x="56113" fg:w="25"/><text x="61.3949%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="61.1292%" y="69" width="0.1013%" height="15" fill="rgb(219,14,44)" fg:x="56138" fg:w="93"/><text x="61.4222%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="61.2305%" y="69" width="0.0272%" height="15" fill="rgb(217,220,26)" fg:x="56231" fg:w="25"/><text x="61.5234%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="61.2577%" y="69" width="0.2483%" height="15" fill="rgb(213,158,28)" fg:x="56256" fg:w="228"/><text x="61.5507%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="61.5060%" y="69" width="0.0697%" height="15" fill="rgb(252,51,52)" fg:x="56484" fg:w="64"/><text x="61.7989%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="61.5811%" y="53" width="0.0523%" height="15" fill="rgb(246,89,16)" fg:x="56553" fg:w="48"/><text x="61.8741%" y="63.50"></text></g><g><title>utf8_validate (181 instructions, 0.20%)</title><rect x="61.6334%" y="53" width="0.1971%" height="15" fill="rgb(216,158,49)" fg:x="56601" fg:w="181"/><text x="61.9263%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="61.8305%" y="37" width="0.0621%" height="15" fill="rgb(236,107,19)" fg:x="56782" fg:w="57"/><text x="62.1234%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="61.8305%" y="53" width="0.0773%" height="15" fill="rgb(228,185,30)" fg:x="56782" fg:w="71"/><text x="62.1234%" y="63.50"></text></g><g><title>memcpy (123 instructions, 0.13%)</title><rect x="61.9078%" y="53" width="0.1339%" height="15" fill="rgb(246,134,8)" fg:x="56853" fg:w="123"/><text x="62.2007%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (505 instructions, 0.55%)</title><rect x="61.5757%" y="69" width="0.5499%" height="15" fill="rgb(214,143,50)" fg:x="56548" fg:w="505"/><text x="61.8686%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="62.1375%" y="69" width="0.0697%" height="15" fill="rgb(228,75,8)" fg:x="57064" fg:w="64"/><text x="62.4305%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="62.2072%" y="69" width="0.0523%" height="15" fill="rgb(207,175,4)" fg:x="57128" fg:w="48"/><text x="62.5002%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="62.2595%" y="53" width="0.0523%" height="15" fill="rgb(205,108,24)" fg:x="57176" fg:w="48"/><text x="62.5525%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="62.2595%" y="69" width="0.0915%" height="15" fill="rgb(244,120,49)" fg:x="57176" fg:w="84"/><text x="62.5525%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="62.3510%" y="69" width="0.0697%" height="15" fill="rgb(223,47,38)" fg:x="57260" fg:w="64"/><text x="62.6439%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="62.4261%" y="53" width="0.0523%" height="15" fill="rgb(229,179,11)" fg:x="57329" fg:w="48"/><text x="62.7191%" y="63.50"></text></g><g><title>utf8_validate (226 instructions, 0.25%)</title><rect x="62.4784%" y="53" width="0.2461%" height="15" fill="rgb(231,122,1)" fg:x="57377" fg:w="226"/><text x="62.7713%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="62.7245%" y="37" width="0.0621%" height="15" fill="rgb(245,119,9)" fg:x="57603" fg:w="57"/><text x="63.0174%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="62.7245%" y="53" width="0.0773%" height="15" fill="rgb(241,163,25)" fg:x="57603" fg:w="71"/><text x="63.0174%" y="63.50"></text></g><g><title>memcpy (160 instructions, 0.17%)</title><rect x="62.8018%" y="53" width="0.1742%" height="15" fill="rgb(217,214,3)" fg:x="57674" fg:w="160"/><text x="63.0947%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (587 instructions, 0.64%)</title><rect x="62.4206%" y="69" width="0.6392%" height="15" fill="rgb(240,86,28)" fg:x="57324" fg:w="587"/><text x="62.7136%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="63.0598%" y="53" width="0.0523%" height="15" fill="rgb(215,47,9)" fg:x="57911" fg:w="48"/><text x="63.3528%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="63.0598%" y="69" width="0.0915%" height="15" fill="rgb(252,25,45)" fg:x="57911" fg:w="84"/><text x="63.3528%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="63.1513%" y="69" width="0.0697%" height="15" fill="rgb(251,164,9)" fg:x="57995" fg:w="64"/><text x="63.4443%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="63.2264%" y="69" width="0.0697%" height="15" fill="rgb(233,194,0)" fg:x="58064" fg:w="64"/><text x="63.5194%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="63.2961%" y="69" width="0.0523%" height="15" fill="rgb(249,111,24)" fg:x="58128" fg:w="48"/><text x="63.5891%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="63.3484%" y="69" width="0.0523%" height="15" fill="rgb(250,223,3)" fg:x="58176" fg:w="48"/><text x="63.6414%" y="79.50"></text></g><g><title>skip_leb128 (76 instructions, 0.08%)</title><rect x="63.4007%" y="69" width="0.0828%" height="15" fill="rgb(236,178,37)" fg:x="58224" fg:w="76"/><text x="63.6936%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="63.4834%" y="69" width="0.0272%" height="15" fill="rgb(241,158,50)" fg:x="58300" fg:w="25"/><text x="63.7764%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="63.5106%" y="69" width="0.1013%" height="15" fill="rgb(213,121,41)" fg:x="58325" fg:w="93"/><text x="63.8036%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="63.6119%" y="69" width="0.0272%" height="15" fill="rgb(240,92,3)" fg:x="58418" fg:w="25"/><text x="63.9049%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="63.6391%" y="69" width="0.2483%" height="15" fill="rgb(205,123,3)" fg:x="58443" fg:w="228"/><text x="63.9321%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="63.8874%" y="69" width="0.0697%" height="15" fill="rgb(205,97,47)" fg:x="58671" fg:w="64"/><text x="64.1804%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="63.9691%" y="53" width="0.2483%" height="15" fill="rgb(247,152,14)" fg:x="58746" fg:w="228"/><text x="64.2620%" y="63.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="63.9691%" y="69" width="0.2875%" height="15" fill="rgb(248,195,53)" fg:x="58746" fg:w="264"/><text x="64.2620%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="64.2565%" y="69" width="0.0697%" height="15" fill="rgb(226,201,16)" fg:x="59010" fg:w="64"/><text x="64.5495%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="64.3317%" y="69" width="0.0697%" height="15" fill="rgb(205,98,0)" fg:x="59079" fg:w="64"/><text x="64.6247%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="64.4014%" y="69" width="0.0523%" height="15" fill="rgb(214,191,48)" fg:x="59143" fg:w="48"/><text x="64.6943%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="64.4536%" y="69" width="0.0523%" height="15" fill="rgb(237,112,39)" fg:x="59191" fg:w="48"/><text x="64.7466%" y="79.50"></text></g><g><title>skip_leb128 (76 instructions, 0.08%)</title><rect x="64.5059%" y="69" width="0.0828%" height="15" fill="rgb(247,203,27)" fg:x="59239" fg:w="76"/><text x="64.7989%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="64.5887%" y="69" width="0.0272%" height="15" fill="rgb(235,124,28)" fg:x="59315" fg:w="25"/><text x="64.8816%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="64.6159%" y="69" width="0.2483%" height="15" fill="rgb(208,207,46)" fg:x="59340" fg:w="228"/><text x="64.9089%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="64.8642%" y="69" width="0.0697%" height="15" fill="rgb(234,176,4)" fg:x="59568" fg:w="64"/><text x="65.1571%" y="79.50"></text></g><g><title>@deserialize_go&lt;u&gt; (40 instructions, 0.04%)</title><rect x="64.9338%" y="69" width="0.0436%" height="15" fill="rgb(230,133,28)" fg:x="59632" fg:w="40"/><text x="65.2268%" y="79.50"></text></g><g><title>@deserialize_go&lt;vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u))&gt; (16,433 instructions, 17.89%)</title><rect x="51.4129%" y="85" width="17.8940%" height="15" fill="rgb(211,137,40)" fg:x="47215" fg:w="16433"/><text x="51.7058%" y="95.50">@deserialize_go&lt;vr(data..</text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="69.3134%" y="69" width="0.0523%" height="15" fill="rgb(254,35,13)" fg:x="63654" fg:w="48"/><text x="69.6064%" y="79.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="69.3134%" y="85" width="0.0915%" height="15" fill="rgb(225,49,51)" fg:x="63654" fg:w="84"/><text x="69.6064%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="69.4049%" y="85" width="0.0697%" height="15" fill="rgb(251,10,15)" fg:x="63738" fg:w="64"/><text x="69.6979%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="69.4800%" y="69" width="0.0697%" height="15" fill="rgb(228,207,15)" fg:x="63807" fg:w="64"/><text x="69.7730%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="69.5497%" y="69" width="0.0697%" height="15" fill="rgb(241,99,19)" fg:x="63871" fg:w="64"/><text x="69.8427%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="69.6194%" y="69" width="0.0697%" height="15" fill="rgb(207,104,49)" fg:x="63935" fg:w="64"/><text x="69.9124%" y="79.50"></text></g><g><title>@deserialize_go&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (362 instructions, 0.39%)</title><rect x="69.4746%" y="85" width="0.3942%" height="15" fill="rgb(234,99,18)" fg:x="63802" fg:w="362"/><text x="69.7676%" y="95.50"></text></g><g><title>@deserialize_go&lt;0=(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)?!0)&gt; (19,423 instructions, 21.15%)</title><rect x="49.5138%" y="101" width="21.1499%" height="15" fill="rgb(213,191,49)" fg:x="45471" fg:w="19423"/><text x="49.8068%" y="111.50">@deserialize_go&lt;0=(r(id:n64,..</text></g><g><title>@deserialize_go&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (19,874 instructions, 21.64%)</title><rect x="49.2993%" y="117" width="21.6410%" height="15" fill="rgb(210,226,19)" fg:x="45274" fg:w="19874"/><text x="49.5923%" y="127.50">@deserialize_go&lt;0=?(r(id:n64,..</text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="70.9403%" y="101" width="0.2483%" height="15" fill="rgb(229,97,18)" fg:x="65148" fg:w="228"/><text x="71.2332%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="70.9403%" y="117" width="0.2875%" height="15" fill="rgb(211,167,15)" fg:x="65148" fg:w="264"/><text x="71.2332%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="71.2277%" y="117" width="0.0697%" height="15" fill="rgb(210,169,34)" fg:x="65412" fg:w="64"/><text x="71.5207%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="71.3029%" y="117" width="0.0697%" height="15" fill="rgb(241,121,31)" fg:x="65481" fg:w="64"/><text x="71.5958%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="71.3726%" y="117" width="0.0697%" height="15" fill="rgb(232,40,11)" fg:x="65545" fg:w="64"/><text x="71.6655%" y="127.50"></text></g><g><title>sleb128_decode (103 instructions, 0.11%)</title><rect x="71.4423%" y="117" width="0.1122%" height="15" fill="rgb(205,86,26)" fg:x="65609" fg:w="103"/><text x="71.7352%" y="127.50"></text></g><g><title>motoko_rts::region::alloc_region::h3fa9abaf74a076ca (84 instructions, 0.09%)</title><rect x="71.5599%" y="101" width="0.0915%" height="15" fill="rgb(231,126,28)" fg:x="65717" fg:w="84"/><text x="71.8528%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="71.6513%" y="101" width="0.0523%" height="15" fill="rgb(219,221,18)" fg:x="65801" fg:w="48"/><text x="71.9443%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="71.7036%" y="85" width="0.0621%" height="15" fill="rgb(211,40,0)" fg:x="65849" fg:w="57"/><text x="71.9966%" y="95.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="71.7036%" y="101" width="0.0708%" height="15" fill="rgb(239,85,43)" fg:x="65849" fg:w="65"/><text x="71.9966%" y="111.50"></text></g><g><title>memcpy (158 instructions, 0.17%)</title><rect x="71.7744%" y="101" width="0.1720%" height="15" fill="rgb(231,55,21)" fg:x="65914" fg:w="158"/><text x="72.0673%" y="111.50"></text></g><g><title>@deserialize_go&lt;R&gt; (629 instructions, 0.68%)</title><rect x="71.5544%" y="117" width="0.6849%" height="15" fill="rgb(225,184,43)" fg:x="65712" fg:w="629"/><text x="71.8474%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="72.2393%" y="101" width="0.2483%" height="15" fill="rgb(251,158,41)" fg:x="66341" fg:w="228"/><text x="72.5323%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="72.2393%" y="117" width="0.2875%" height="15" fill="rgb(234,159,37)" fg:x="66341" fg:w="264"/><text x="72.5323%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.5268%" y="117" width="0.0697%" height="15" fill="rgb(216,204,22)" fg:x="66605" fg:w="64"/><text x="72.8198%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.6019%" y="117" width="0.0697%" height="15" fill="rgb(214,17,3)" fg:x="66674" fg:w="64"/><text x="72.8949%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.6716%" y="117" width="0.0697%" height="15" fill="rgb(212,111,17)" fg:x="66738" fg:w="64"/><text x="72.9646%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.7413%" y="117" width="0.0697%" height="15" fill="rgb(221,157,24)" fg:x="66802" fg:w="64"/><text x="73.0343%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.8165%" y="101" width="0.0697%" height="15" fill="rgb(252,16,13)" fg:x="66871" fg:w="64"/><text x="73.1094%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.8862%" y="101" width="0.0697%" height="15" fill="rgb(221,62,2)" fg:x="66935" fg:w="64"/><text x="73.1791%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.9558%" y="101" width="0.0697%" height="15" fill="rgb(247,87,22)" fg:x="66999" fg:w="64"/><text x="73.2488%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="73.0310%" y="85" width="0.0697%" height="15" fill="rgb(215,73,9)" fg:x="67068" fg:w="64"/><text x="73.3239%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="73.1007%" y="85" width="0.0523%" height="15" fill="rgb(207,175,33)" fg:x="67132" fg:w="48"/><text x="73.3936%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="73.1529%" y="69" width="0.0523%" height="15" fill="rgb(243,129,54)" fg:x="67180" fg:w="48"/><text x="73.4459%" y="79.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="73.1529%" y="85" width="0.0915%" height="15" fill="rgb(227,119,45)" fg:x="67180" fg:w="84"/><text x="73.4459%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="73.2444%" y="85" width="0.0697%" height="15" fill="rgb(205,109,36)" fg:x="67264" fg:w="64"/><text x="73.5374%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="73.3195%" y="69" width="0.0523%" height="15" fill="rgb(205,6,39)" fg:x="67333" fg:w="48"/><text x="73.6125%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="73.3718%" y="53" width="0.0621%" height="15" fill="rgb(221,32,16)" fg:x="67381" fg:w="57"/><text x="73.6648%" y="63.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="73.3718%" y="69" width="0.0708%" height="15" fill="rgb(228,144,50)" fg:x="67381" fg:w="65"/><text x="73.6648%" y="79.50"></text></g><g><title>memcpy (100 instructions, 0.11%)</title><rect x="73.4426%" y="69" width="0.1089%" height="15" fill="rgb(229,201,53)" fg:x="67446" fg:w="100"/><text x="73.7356%" y="79.50"></text></g><g><title>@deserialize_go&lt;P&gt; (331 instructions, 0.36%)</title><rect x="73.3141%" y="85" width="0.3604%" height="15" fill="rgb(249,153,27)" fg:x="67328" fg:w="331"/><text x="73.6071%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="73.6745%" y="69" width="0.0523%" height="15" fill="rgb(227,106,25)" fg:x="67659" fg:w="48"/><text x="73.9675%" y="79.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="73.6745%" y="85" width="0.0915%" height="15" fill="rgb(230,65,29)" fg:x="67659" fg:w="84"/><text x="73.9675%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="73.7660%" y="85" width="0.0697%" height="15" fill="rgb(221,57,46)" fg:x="67743" fg:w="64"/><text x="74.0590%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="73.8411%" y="69" width="0.0697%" height="15" fill="rgb(229,161,17)" fg:x="67812" fg:w="64"/><text x="74.1341%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="73.9108%" y="69" width="0.0697%" height="15" fill="rgb(222,213,11)" fg:x="67876" fg:w="64"/><text x="74.2038%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="73.9805%" y="69" width="0.0697%" height="15" fill="rgb(235,35,13)" fg:x="67940" fg:w="64"/><text x="74.2735%" y="79.50"></text></g><g><title>@deserialize_go&lt;0=?(P!0)&gt; (362 instructions, 0.39%)</title><rect x="73.8357%" y="85" width="0.3942%" height="15" fill="rgb(233,158,34)" fg:x="67807" fg:w="362"/><text x="74.1287%" y="95.50"></text></g><g><title>@deserialize_go&lt;0=(P?!0)&gt; (1,430 instructions, 1.56%)</title><rect x="73.0255%" y="101" width="1.5571%" height="15" fill="rgb(215,151,48)" fg:x="67063" fg:w="1430"/><text x="73.3185%" y="111.50"></text></g><g><title>@deserialize_go&lt;0=?(P!0)&gt; (1,881 instructions, 2.05%)</title><rect x="72.8110%" y="117" width="2.0482%" height="15" fill="rgb(229,84,14)" fg:x="66866" fg:w="1881"/><text x="73.1040%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="74.8593%" y="101" width="0.2483%" height="15" fill="rgb(229,68,14)" fg:x="68747" fg:w="228"/><text x="75.1522%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="74.8593%" y="117" width="0.2875%" height="15" fill="rgb(243,106,26)" fg:x="68747" fg:w="264"/><text x="75.1522%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="75.1467%" y="117" width="0.0697%" height="15" fill="rgb(206,45,38)" fg:x="69011" fg:w="64"/><text x="75.4397%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="75.2219%" y="101" width="0.0697%" height="15" fill="rgb(226,6,15)" fg:x="69080" fg:w="64"/><text x="75.5148%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="75.2916%" y="101" width="0.0697%" height="15" fill="rgb(232,22,54)" fg:x="69144" fg:w="64"/><text x="75.5845%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="75.3612%" y="101" width="0.0697%" height="15" fill="rgb(229,222,32)" fg:x="69208" fg:w="64"/><text x="75.6542%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="75.4364%" y="85" width="0.0523%" height="15" fill="rgb(228,62,29)" fg:x="69277" fg:w="48"/><text x="75.7293%" y="95.50"></text></g><g><title>utf8_validate (156 instructions, 0.17%)</title><rect x="75.4886%" y="85" width="0.1699%" height="15" fill="rgb(251,103,34)" fg:x="69325" fg:w="156"/><text x="75.7816%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="75.6585%" y="69" width="0.0621%" height="15" fill="rgb(233,12,30)" fg:x="69481" fg:w="57"/><text x="75.9515%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h85b8c81303dbbeb1 (71 instructions, 0.08%)</title><rect x="75.6585%" y="85" width="0.0773%" height="15" fill="rgb(238,52,0)" fg:x="69481" fg:w="71"/><text x="75.9515%" y="95.50"></text></g><g><title>memcpy (58 instructions, 0.06%)</title><rect x="75.7358%" y="85" width="0.0632%" height="15" fill="rgb(223,98,5)" fg:x="69552" fg:w="58"/><text x="76.0288%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (415 instructions, 0.45%)</title><rect x="75.4309%" y="101" width="0.4519%" height="15" fill="rgb(228,75,37)" fg:x="69272" fg:w="415"/><text x="75.7239%" y="111.50"></text></g><g><title>@deserialize_go&lt;?t&gt; (866 instructions, 0.94%)</title><rect x="75.2164%" y="117" width="0.9430%" height="15" fill="rgb(205,115,49)" fg:x="69075" fg:w="866"/><text x="75.5094%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="76.1594%" y="101" width="0.2483%" height="15" fill="rgb(250,154,43)" fg:x="69941" fg:w="228"/><text x="76.4524%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="76.1594%" y="117" width="0.2875%" height="15" fill="rgb(226,43,29)" fg:x="69941" fg:w="264"/><text x="76.4524%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="76.4469%" y="117" width="0.0697%" height="15" fill="rgb(249,228,39)" fg:x="70205" fg:w="64"/><text x="76.7399%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="76.5220%" y="117" width="0.0697%" height="15" fill="rgb(216,79,43)" fg:x="70274" fg:w="64"/><text x="76.8150%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="76.5917%" y="117" width="0.0697%" height="15" fill="rgb(228,95,12)" fg:x="70338" fg:w="64"/><text x="76.8847%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="76.6614%" y="117" width="0.0697%" height="15" fill="rgb(249,221,15)" fg:x="70402" fg:w="64"/><text x="76.9544%" y="127.50"></text></g><g><title>int_from_i32 (13 instructions, 0.01%)</title><rect x="76.7365%" y="101" width="0.0142%" height="15" fill="rgb(233,34,13)" fg:x="70471" fg:w="13"/><text x="77.0295%" y="111.50"></text></g><g><title>@deserialize_go&lt;N&gt; (122 instructions, 0.13%)</title><rect x="76.7311%" y="117" width="0.1328%" height="15" fill="rgb(214,103,39)" fg:x="70466" fg:w="122"/><text x="77.0241%" y="127.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="76.8705%" y="101" width="0.1797%" height="15" fill="rgb(251,126,39)" fg:x="70594" fg:w="165"/><text x="77.1634%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="77.0501%" y="101" width="0.1797%" height="15" fill="rgb(214,216,36)" fg:x="70759" fg:w="165"/><text x="77.3431%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="77.2298%" y="101" width="0.1797%" height="15" fill="rgb(220,221,8)" fg:x="70924" fg:w="165"/><text x="77.5228%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="77.4095%" y="101" width="0.1797%" height="15" fill="rgb(240,216,3)" fg:x="71089" fg:w="165"/><text x="77.7025%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="77.5892%" y="101" width="0.1797%" height="15" fill="rgb(232,218,17)" fg:x="71254" fg:w="165"/><text x="77.8821%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="77.7688%" y="101" width="0.1797%" height="15" fill="rgb(229,163,45)" fg:x="71419" fg:w="165"/><text x="78.0618%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="77.9485%" y="101" width="0.1797%" height="15" fill="rgb(231,110,42)" fg:x="71584" fg:w="165"/><text x="78.2415%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="78.1282%" y="101" width="0.1797%" height="15" fill="rgb(208,170,48)" fg:x="71749" fg:w="165"/><text x="78.4211%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="78.3078%" y="101" width="0.1797%" height="15" fill="rgb(239,116,25)" fg:x="71914" fg:w="165"/><text x="78.6008%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="78.4875%" y="101" width="0.1797%" height="15" fill="rgb(219,200,50)" fg:x="72079" fg:w="165"/><text x="78.7805%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="78.6672%" y="101" width="0.1797%" height="15" fill="rgb(245,200,0)" fg:x="72244" fg:w="165"/><text x="78.9601%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="78.8468%" y="101" width="0.1797%" height="15" fill="rgb(245,119,33)" fg:x="72409" fg:w="165"/><text x="79.1398%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="79.0265%" y="101" width="0.1797%" height="15" fill="rgb(231,125,12)" fg:x="72574" fg:w="165"/><text x="79.3195%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="79.2062%" y="101" width="0.1797%" height="15" fill="rgb(216,96,41)" fg:x="72739" fg:w="165"/><text x="79.4992%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="79.3859%" y="101" width="0.1797%" height="15" fill="rgb(248,43,45)" fg:x="72904" fg:w="165"/><text x="79.6788%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="79.5655%" y="101" width="0.1797%" height="15" fill="rgb(217,222,7)" fg:x="73069" fg:w="165"/><text x="79.8585%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="79.7452%" y="101" width="0.1797%" height="15" fill="rgb(233,28,6)" fg:x="73234" fg:w="165"/><text x="80.0382%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="79.9249%" y="101" width="0.1797%" height="15" fill="rgb(231,218,15)" fg:x="73399" fg:w="165"/><text x="80.2178%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="80.1045%" y="101" width="0.1797%" height="15" fill="rgb(226,171,48)" fg:x="73564" fg:w="165"/><text x="80.3975%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="80.2842%" y="101" width="0.1797%" height="15" fill="rgb(235,201,9)" fg:x="73729" fg:w="165"/><text x="80.5772%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="80.4639%" y="101" width="0.1797%" height="15" fill="rgb(217,80,15)" fg:x="73894" fg:w="165"/><text x="80.7568%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="80.6435%" y="101" width="0.1797%" height="15" fill="rgb(219,152,8)" fg:x="74059" fg:w="165"/><text x="80.9365%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="80.8232%" y="101" width="0.1797%" height="15" fill="rgb(243,107,38)" fg:x="74224" fg:w="165"/><text x="81.1162%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="81.0029%" y="101" width="0.1797%" height="15" fill="rgb(231,17,5)" fg:x="74389" fg:w="165"/><text x="81.2959%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="81.1826%" y="101" width="0.1797%" height="15" fill="rgb(209,25,54)" fg:x="74554" fg:w="165"/><text x="81.4755%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="81.3622%" y="101" width="0.1797%" height="15" fill="rgb(219,0,2)" fg:x="74719" fg:w="165"/><text x="81.6552%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="81.5419%" y="101" width="0.1797%" height="15" fill="rgb(246,9,5)" fg:x="74884" fg:w="165"/><text x="81.8349%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="81.7216%" y="101" width="0.1797%" height="15" fill="rgb(226,159,4)" fg:x="75049" fg:w="165"/><text x="82.0145%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="81.9012%" y="101" width="0.1797%" height="15" fill="rgb(219,175,34)" fg:x="75214" fg:w="165"/><text x="82.1942%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="82.0809%" y="101" width="0.1797%" height="15" fill="rgb(236,10,46)" fg:x="75379" fg:w="165"/><text x="82.3739%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="82.2606%" y="101" width="0.1797%" height="15" fill="rgb(240,211,16)" fg:x="75544" fg:w="165"/><text x="82.5535%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::h37648d553163f731 (165 instructions, 0.18%)</title><rect x="82.4402%" y="101" width="0.1797%" height="15" fill="rgb(205,3,43)" fg:x="75709" fg:w="165"/><text x="82.7332%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="82.6199%" y="101" width="0.0621%" height="15" fill="rgb(245,7,22)" fg:x="75874" fg:w="57"/><text x="82.9129%" y="111.50"></text></g><g><title>motoko_rts::region::alloc_region::h3fa9abaf74a076ca (84 instructions, 0.09%)</title><rect x="82.6820%" y="101" width="0.0915%" height="15" fill="rgb(239,132,32)" fg:x="75931" fg:w="84"/><text x="82.9750%" y="111.50"></text></g><g><title>motoko_rts::region::region_recover::h56d09ba2d3262f36 (6,719 instructions, 7.32%)</title><rect x="76.8705%" y="117" width="7.3164%" height="15" fill="rgb(228,202,34)" fg:x="70594" fg:w="6719"/><text x="77.1634%" y="127.50">motoko_r..</text></g><g><title>motoko_rts::region::region_reserve_id_span::he9fe9f4660c70bfb (72 instructions, 0.08%)</title><rect x="84.1869%" y="117" width="0.0784%" height="15" fill="rgb(254,200,22)" fg:x="77313" fg:w="72"/><text x="84.4798%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.2653%" y="117" width="0.0446%" height="15" fill="rgb(219,10,39)" fg:x="77385" fg:w="41"/><text x="84.5582%" y="127.50"></text></g><g><title>obj_idx&lt;5&gt; (17 instructions, 0.02%)</title><rect x="84.3099%" y="117" width="0.0185%" height="15" fill="rgb(226,210,39)" fg:x="77426" fg:w="17"/><text x="84.6029%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.3284%" y="117" width="0.0446%" height="15" fill="rgb(208,219,16)" fg:x="77443" fg:w="41"/><text x="84.6214%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.3731%" y="117" width="0.0446%" height="15" fill="rgb(216,158,51)" fg:x="77484" fg:w="41"/><text x="84.6660%" y="127.50"></text></g><g><title>obj_idx&lt;4&gt; (17 instructions, 0.02%)</title><rect x="84.4177%" y="117" width="0.0185%" height="15" fill="rgb(233,14,44)" fg:x="77525" fg:w="17"/><text x="84.7107%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.4362%" y="117" width="0.0446%" height="15" fill="rgb(237,97,39)" fg:x="77542" fg:w="41"/><text x="84.7292%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="84.4809%" y="117" width="0.0185%" height="15" fill="rgb(218,198,43)" fg:x="77583" fg:w="17"/><text x="84.7738%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.4994%" y="117" width="0.0446%" height="15" fill="rgb(231,104,20)" fg:x="77600" fg:w="41"/><text x="84.7923%" y="127.50"></text></g><g><title>obj_idx&lt;2&gt; (17 instructions, 0.02%)</title><rect x="84.5440%" y="117" width="0.0185%" height="15" fill="rgb(254,36,13)" fg:x="77641" fg:w="17"/><text x="84.8370%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.5625%" y="117" width="0.0446%" height="15" fill="rgb(248,14,50)" fg:x="77658" fg:w="41"/><text x="84.8555%" y="127.50"></text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.02%)</title><rect x="84.6072%" y="117" width="0.0185%" height="15" fill="rgb(217,107,29)" fg:x="77699" fg:w="17"/><text x="84.9001%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.6257%" y="117" width="0.0446%" height="15" fill="rgb(251,169,33)" fg:x="77716" fg:w="41"/><text x="84.9187%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.6703%" y="117" width="0.0446%" height="15" fill="rgb(217,108,32)" fg:x="77757" fg:w="41"/><text x="84.9633%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.02%)</title><rect x="84.7150%" y="117" width="0.0185%" height="15" fill="rgb(219,66,42)" fg:x="77798" fg:w="17"/><text x="85.0079%" y="127.50"></text></g><g><title>motoko_rts::text::blob_of_text::h094b1867590184bd (11 instructions, 0.01%)</title><rect x="84.7335%" y="101" width="0.0120%" height="15" fill="rgb(206,180,7)" fg:x="77815" fg:w="11"/><text x="85.0265%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="84.7455%" y="101" width="0.0621%" height="15" fill="rgb(208,226,31)" fg:x="77826" fg:w="57"/><text x="85.0384%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="84.8075%" y="101" width="0.0621%" height="15" fill="rgb(218,26,49)" fg:x="77883" fg:w="57"/><text x="85.1005%" y="111.50"></text></g><g><title>memcpy (46 instructions, 0.05%)</title><rect x="84.8696%" y="101" width="0.0501%" height="15" fill="rgb(233,197,48)" fg:x="77940" fg:w="46"/><text x="85.1626%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="84.9197%" y="101" width="0.0621%" height="15" fill="rgb(252,181,51)" fg:x="77986" fg:w="57"/><text x="85.2127%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::ha2b15cd801cc471c (77 instructions, 0.08%)</title><rect x="84.9818%" y="101" width="0.0838%" height="15" fill="rgb(253,90,19)" fg:x="78043" fg:w="77"/><text x="85.2747%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::ha2b15cd801cc471c (110 instructions, 0.12%)</title><rect x="85.0656%" y="101" width="0.1198%" height="15" fill="rgb(215,171,30)" fg:x="78120" fg:w="110"/><text x="85.3586%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::ha2b15cd801cc471c (77 instructions, 0.08%)</title><rect x="85.1854%" y="101" width="0.0838%" height="15" fill="rgb(214,222,9)" fg:x="78230" fg:w="77"/><text x="85.4784%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::ha2b15cd801cc471c (110 instructions, 0.12%)</title><rect x="85.2692%" y="101" width="0.1198%" height="15" fill="rgb(223,3,22)" fg:x="78307" fg:w="110"/><text x="85.5622%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="85.3890%" y="101" width="0.0621%" height="15" fill="rgb(225,196,46)" fg:x="78417" fg:w="57"/><text x="85.6820%" y="111.50"></text></g><g><title>memcmp (192 instructions, 0.21%)</title><rect x="85.4511%" y="101" width="0.2091%" height="15" fill="rgb(209,110,37)" fg:x="78474" fg:w="192"/><text x="85.7440%" y="111.50"></text></g><g><title>blob_of_principal (2,244 instructions, 2.44%)</title><rect x="84.7335%" y="117" width="2.4435%" height="15" fill="rgb(249,89,12)" fg:x="77815" fg:w="2244"/><text x="85.0265%" y="127.50">b..</text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="87.1770%" y="101" width="0.0621%" height="15" fill="rgb(226,27,33)" fg:x="80059" fg:w="57"/><text x="87.4700%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="87.1770%" y="117" width="0.0708%" height="15" fill="rgb(213,82,22)" fg:x="80059" fg:w="65"/><text x="87.4700%" y="127.50"></text></g><g><title>memcpy (46 instructions, 0.05%)</title><rect x="87.2478%" y="117" width="0.0501%" height="15" fill="rgb(248,140,0)" fg:x="80124" fg:w="46"/><text x="87.5408%" y="127.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h7cce318ad19e4bea (57 instructions, 0.06%)</title><rect x="87.2979%" y="101" width="0.0621%" height="15" fill="rgb(228,106,3)" fg:x="80170" fg:w="57"/><text x="87.5908%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="87.2979%" y="117" width="0.0708%" height="15" fill="rgb(209,23,37)" fg:x="80170" fg:w="65"/><text x="87.5908%" y="127.50"></text></g><g><title>memcpy (46 instructions, 0.05%)</title><rect x="87.3687%" y="117" width="0.0501%" height="15" fill="rgb(241,93,50)" fg:x="80235" fg:w="46"/><text x="87.6616%" y="127.50"></text></g><g><title>init (78,721 instructions, 85.72%)</title><rect x="13.6669%" y="133" width="85.7200%" height="15" fill="rgb(253,46,43)" fg:x="12551" fg:w="78721"/><text x="13.9599%" y="143.50">init</text></g><g><title>trans_state4 (11 instructions, 0.01%)</title><rect x="99.3869%" y="133" width="0.0120%" height="15" fill="rgb(226,206,43)" fg:x="91272" fg:w="11"/><text x="99.6799%" y="143.50"></text></g><g><title>schedule_copying_gc (108 instructions, 0.12%)</title><rect x="99.3989%" y="133" width="0.1176%" height="15" fill="rgb(217,54,7)" fg:x="91283" fg:w="108"/><text x="99.6919%" y="143.50"></text></g><g><title>all (91,835 instructions, 100%)</title><rect x="0.0000%" y="165" width="100.0000%" height="15" fill="rgb(223,5,52)" fg:x="0" fg:w="91835"/><text x="0.2930%" y="175.50"></text></g><g><title>post_upgrade (79,292 instructions, 86.34%)</title><rect x="13.6582%" y="149" width="86.3418%" height="15" fill="rgb(206,52,46)" fg:x="12543" fg:w="79292"/><text x="13.9512%" y="159.50">post_upgrade</text></g></svg></svg>