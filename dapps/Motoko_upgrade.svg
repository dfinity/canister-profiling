<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="214" onload="init(evt)" viewBox="0 0 1024 214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="214" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">NFT.upgrade</text><text id="details" fill="rgb(0,0,0)" x="10" y="197.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="197.00"> </text><svg id="frames" x="10" width="1004" total_samples="92429"><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="0.0000%" y="117" width="0.0357%" height="15" fill="rgb(235,68,52)" fg:x="0" fg:w="33"/><text x="0.2930%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="0.0357%" y="117" width="0.0530%" height="15" fill="rgb(246,142,3)" fg:x="33" fg:w="49"/><text x="0.3287%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="0.0887%" y="101" width="0.0184%" height="15" fill="rgb(241,25,7)" fg:x="82" fg:w="17"/><text x="0.3817%" y="111.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.1071%" y="101" width="0.0433%" height="15" fill="rgb(242,119,39)" fg:x="99" fg:w="40"/><text x="0.4001%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="0.1504%" y="101" width="0.0357%" height="15" fill="rgb(241,98,45)" fg:x="139" fg:w="33"/><text x="0.4434%" y="111.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.1861%" y="101" width="0.0433%" height="15" fill="rgb(254,28,30)" fg:x="172" fg:w="40"/><text x="0.4791%" y="111.50"></text></g><g><title>@buffer_size&lt;r(data:t,logo_type:t)&gt; (186 instructions, 0.20%)</title><rect x="0.0887%" y="117" width="0.2012%" height="15" fill="rgb(241,142,54)" fg:x="82" fg:w="186"/><text x="0.3817%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (65 instructions, 0.07%)</title><rect x="0.2900%" y="117" width="0.0703%" height="15" fill="rgb(222,85,15)" fg:x="268" fg:w="65"/><text x="0.5829%" y="127.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.3603%" y="101" width="0.0433%" height="15" fill="rgb(210,85,47)" fg:x="333" fg:w="40"/><text x="0.6532%" y="111.50"></text></g><g><title>@buffer_size&lt;?t&gt; (97 instructions, 0.10%)</title><rect x="0.3603%" y="117" width="0.1049%" height="15" fill="rgb(224,206,25)" fg:x="333" fg:w="97"/><text x="0.6532%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (81 instructions, 0.09%)</title><rect x="0.4652%" y="117" width="0.0876%" height="15" fill="rgb(243,201,19)" fg:x="430" fg:w="81"/><text x="0.7582%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="0.5529%" y="101" width="0.0184%" height="15" fill="rgb(236,59,4)" fg:x="511" fg:w="17"/><text x="0.8458%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="0.5712%" y="101" width="0.0357%" height="15" fill="rgb(254,179,45)" fg:x="528" fg:w="33"/><text x="0.8642%" y="111.50"></text></g><g><title>@buffer_size&lt;B&gt; (38 instructions, 0.04%)</title><rect x="0.6070%" y="85" width="0.0411%" height="15" fill="rgb(226,14,10)" fg:x="561" fg:w="38"/><text x="0.8999%" y="95.50"></text></g><g><title>@buffer_size&lt;P&gt; (64 instructions, 0.07%)</title><rect x="0.6070%" y="101" width="0.0692%" height="15" fill="rgb(244,27,41)" fg:x="561" fg:w="64"/><text x="0.8999%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="0.6762%" y="101" width="0.0530%" height="15" fill="rgb(235,35,32)" fg:x="625" fg:w="49"/><text x="0.9692%" y="111.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="0.7292%" y="85" width="0.0357%" height="15" fill="rgb(218,68,31)" fg:x="674" fg:w="33"/><text x="1.0222%" y="95.50"></text></g><g><title>@buffer_size&lt;B&gt; (38 instructions, 0.04%)</title><rect x="0.7649%" y="85" width="0.0411%" height="15" fill="rgb(207,120,37)" fg:x="707" fg:w="38"/><text x="1.0579%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="0.8060%" y="85" width="0.0184%" height="15" fill="rgb(227,98,0)" fg:x="745" fg:w="17"/><text x="1.0990%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.8244%" y="85" width="0.0433%" height="15" fill="rgb(207,7,3)" fg:x="762" fg:w="40"/><text x="1.1174%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.8677%" y="85" width="0.0433%" height="15" fill="rgb(206,98,19)" fg:x="802" fg:w="40"/><text x="1.1607%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.9110%" y="85" width="0.0433%" height="15" fill="rgb(217,5,26)" fg:x="842" fg:w="40"/><text x="1.2039%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.9542%" y="85" width="0.0433%" height="15" fill="rgb(235,190,38)" fg:x="882" fg:w="40"/><text x="1.2472%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="0.9975%" y="85" width="0.0433%" height="15" fill="rgb(247,86,24)" fg:x="922" fg:w="40"/><text x="1.2905%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="1.0408%" y="85" width="0.0433%" height="15" fill="rgb(205,101,16)" fg:x="962" fg:w="40"/><text x="1.3338%" y="95.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="1.0841%" y="85" width="0.0433%" height="15" fill="rgb(246,168,33)" fg:x="1002" fg:w="40"/><text x="1.3770%" y="95.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="1.1274%" y="85" width="0.0530%" height="15" fill="rgb(231,114,1)" fg:x="1042" fg:w="49"/><text x="1.4203%" y="95.50"></text></g><g><title>@buffer_size&lt;vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u))&gt; (1,147 instructions, 1.24%)</title><rect x="0.7292%" y="101" width="1.2410%" height="15" fill="rgb(207,184,53)" fg:x="674" fg:w="1147"/><text x="1.0222%" y="111.50"></text></g><g><title>@buffer_size&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (22 instructions, 0.02%)</title><rect x="1.9702%" y="101" width="0.0238%" height="15" fill="rgb(224,95,51)" fg:x="1821" fg:w="22"/><text x="2.2631%" y="111.50"></text></g><g><title>@buffer_size&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (1,495 instructions, 1.62%)</title><rect x="0.5529%" y="117" width="1.6175%" height="15" fill="rgb(212,188,45)" fg:x="511" fg:w="1495"/><text x="0.8458%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (97 instructions, 0.10%)</title><rect x="2.1703%" y="117" width="0.1049%" height="15" fill="rgb(223,154,38)" fg:x="2006" fg:w="97"/><text x="2.4633%" y="127.50"></text></g><g><title>@buffer_size&lt;B&gt; (38 instructions, 0.04%)</title><rect x="2.2753%" y="117" width="0.0411%" height="15" fill="rgb(251,22,52)" fg:x="2103" fg:w="38"/><text x="2.5682%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="2.3164%" y="117" width="0.0184%" height="15" fill="rgb(229,209,22)" fg:x="2141" fg:w="17"/><text x="2.6093%" y="127.50"></text></g><g><title>@buffer_size&lt;B&gt; (38 instructions, 0.04%)</title><rect x="2.3348%" y="85" width="0.0411%" height="15" fill="rgb(234,138,34)" fg:x="2158" fg:w="38"/><text x="2.6277%" y="95.50"></text></g><g><title>@buffer_size&lt;P&gt; (64 instructions, 0.07%)</title><rect x="2.3348%" y="101" width="0.0692%" height="15" fill="rgb(212,95,11)" fg:x="2158" fg:w="64"/><text x="2.6277%" y="111.50"></text></g><g><title>@buffer_size&lt;0=?(P!0)&gt; (21 instructions, 0.02%)</title><rect x="2.4040%" y="101" width="0.0227%" height="15" fill="rgb(240,179,47)" fg:x="2222" fg:w="21"/><text x="2.6970%" y="111.50"></text></g><g><title>@buffer_size&lt;0=?(P!0)&gt; (181 instructions, 0.20%)</title><rect x="2.3348%" y="117" width="0.1958%" height="15" fill="rgb(240,163,11)" fg:x="2158" fg:w="181"/><text x="2.6277%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (113 instructions, 0.12%)</title><rect x="2.5306%" y="117" width="0.1223%" height="15" fill="rgb(236,37,12)" fg:x="2339" fg:w="113"/><text x="2.8236%" y="127.50"></text></g><g><title>@buffer_size&lt;t&gt; (40 instructions, 0.04%)</title><rect x="2.6528%" y="101" width="0.0433%" height="15" fill="rgb(232,164,16)" fg:x="2452" fg:w="40"/><text x="2.9458%" y="111.50"></text></g><g><title>@buffer_size&lt;?t&gt; (97 instructions, 0.10%)</title><rect x="2.6528%" y="117" width="0.1049%" height="15" fill="rgb(244,205,15)" fg:x="2452" fg:w="97"/><text x="2.9458%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (129 instructions, 0.14%)</title><rect x="2.7578%" y="117" width="0.1396%" height="15" fill="rgb(223,117,47)" fg:x="2549" fg:w="129"/><text x="3.0508%" y="127.50"></text></g><g><title>@buffer_size&lt;N&gt; (41 instructions, 0.04%)</title><rect x="2.8974%" y="117" width="0.0444%" height="15" fill="rgb(244,107,35)" fg:x="2678" fg:w="41"/><text x="3.1903%" y="127.50"></text></g><g><title>@buffer_size&lt;rs(custodians:?2=?(P!2),logo:?r(data:t,logo_type:t),maxLimit:?n16,name:10=?t,nfts:?12=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!12),profiling:?R,symbol:!10,transactionId:?N)&gt; (3,255 instructions, 3.52%)</title><rect x="0.0000%" y="133" width="3.5216%" height="15" fill="rgb(205,140,8)" fg:x="0" fg:w="3255"/><text x="0.2930%" y="143.50">@bu..</text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="3.5216%" y="133" width="0.0617%" height="15" fill="rgb(228,84,46)" fg:x="3255" fg:w="57"/><text x="3.8146%" y="143.50"></text></g><g><title>memcpy (410 instructions, 0.44%)</title><rect x="3.5833%" y="101" width="0.4436%" height="15" fill="rgb(254,188,9)" fg:x="3312" fg:w="410"/><text x="3.8763%" y="111.50"></text></g><g><title>stream_write (450 instructions, 0.49%)</title><rect x="3.5833%" y="117" width="0.4869%" height="15" fill="rgb(206,112,54)" fg:x="3312" fg:w="450"/><text x="3.8763%" y="127.50"></text></g><g><title>stream_write_text (471 instructions, 0.51%)</title><rect x="3.5833%" y="133" width="0.5096%" height="15" fill="rgb(216,84,49)" fg:x="3312" fg:w="471"/><text x="3.8763%" y="143.50"></text></g><g><title>__stablemem_ensure_pages (140 instructions, 0.15%)</title><rect x="4.0929%" y="117" width="0.1515%" height="15" fill="rgb(214,194,35)" fg:x="3783" fg:w="140"/><text x="4.3858%" y="127.50"></text></g><g><title>__stablemem_ensure (163 instructions, 0.18%)</title><rect x="4.0929%" y="133" width="0.1764%" height="15" fill="rgb(249,28,3)" fg:x="3783" fg:w="163"/><text x="4.3858%" y="143.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="4.2692%" y="117" width="0.0617%" height="15" fill="rgb(222,56,52)" fg:x="3946" fg:w="57"/><text x="4.5622%" y="127.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="4.2692%" y="133" width="0.0703%" height="15" fill="rgb(245,217,50)" fg:x="3946" fg:w="65"/><text x="4.5622%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="4.3395%" y="133" width="0.0357%" height="15" fill="rgb(213,201,24)" fg:x="4011" fg:w="33"/><text x="4.6325%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="4.3753%" y="133" width="0.0292%" height="15" fill="rgb(248,116,28)" fg:x="4044" fg:w="27"/><text x="4.6682%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="4.4045%" y="117" width="0.0281%" height="15" fill="rgb(219,72,43)" fg:x="4071" fg:w="26"/><text x="4.6974%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;n16&gt; (44 instructions, 0.05%)</title><rect x="4.4045%" y="133" width="0.0476%" height="15" fill="rgb(209,138,14)" fg:x="4071" fg:w="44"/><text x="4.6974%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="4.4521%" y="133" width="0.0530%" height="15" fill="rgb(222,18,33)" fg:x="4115" fg:w="49"/><text x="4.7450%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="4.5051%" y="133" width="0.0292%" height="15" fill="rgb(213,199,7)" fg:x="4164" fg:w="27"/><text x="4.7980%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="4.5343%" y="133" width="0.0184%" height="15" fill="rgb(250,110,10)" fg:x="4191" fg:w="17"/><text x="4.8273%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="4.5527%" y="117" width="0.0281%" height="15" fill="rgb(248,123,6)" fg:x="4208" fg:w="26"/><text x="4.8457%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="4.5808%" y="117" width="0.0119%" height="15" fill="rgb(206,91,31)" fg:x="4234" fg:w="11"/><text x="4.8738%" y="127.50"></text></g><g><title>memcpy (50 instructions, 0.05%)</title><rect x="4.5927%" y="85" width="0.0541%" height="15" fill="rgb(211,154,13)" fg:x="4245" fg:w="50"/><text x="4.8857%" y="95.50"></text></g><g><title>stream_write (84 instructions, 0.09%)</title><rect x="4.5927%" y="101" width="0.0909%" height="15" fill="rgb(225,148,7)" fg:x="4245" fg:w="84"/><text x="4.8857%" y="111.50"></text></g><g><title>stream_write_text (105 instructions, 0.11%)</title><rect x="4.5927%" y="117" width="0.1136%" height="15" fill="rgb(220,160,43)" fg:x="4245" fg:w="105"/><text x="4.8857%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (190 instructions, 0.21%)</title><rect x="4.5527%" y="133" width="0.2056%" height="15" fill="rgb(213,52,39)" fg:x="4208" fg:w="190"/><text x="4.8457%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="4.7582%" y="133" width="0.0357%" height="15" fill="rgb(243,137,7)" fg:x="4398" fg:w="33"/><text x="5.0512%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="4.7939%" y="117" width="0.0281%" height="15" fill="rgb(230,79,13)" fg:x="4431" fg:w="26"/><text x="5.0869%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="4.8221%" y="117" width="0.0119%" height="15" fill="rgb(247,105,23)" fg:x="4457" fg:w="11"/><text x="5.1150%" y="127.50"></text></g><g><title>memcpy (66 instructions, 0.07%)</title><rect x="4.8340%" y="85" width="0.0714%" height="15" fill="rgb(223,179,41)" fg:x="4468" fg:w="66"/><text x="5.1269%" y="95.50"></text></g><g><title>stream_write (100 instructions, 0.11%)</title><rect x="4.8340%" y="101" width="0.1082%" height="15" fill="rgb(218,9,34)" fg:x="4468" fg:w="100"/><text x="5.1269%" y="111.50"></text></g><g><title>stream_write_text (121 instructions, 0.13%)</title><rect x="4.8340%" y="117" width="0.1309%" height="15" fill="rgb(222,106,8)" fg:x="4468" fg:w="121"/><text x="5.1269%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (206 instructions, 0.22%)</title><rect x="4.7939%" y="133" width="0.2229%" height="15" fill="rgb(211,220,0)" fg:x="4431" fg:w="206"/><text x="5.0869%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (65 instructions, 0.07%)</title><rect x="5.0168%" y="133" width="0.0703%" height="15" fill="rgb(229,52,16)" fg:x="4637" fg:w="65"/><text x="5.3098%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="5.0871%" y="117" width="0.0292%" height="15" fill="rgb(212,155,18)" fg:x="4702" fg:w="27"/><text x="5.3801%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="5.1164%" y="101" width="0.0281%" height="15" fill="rgb(242,21,14)" fg:x="4729" fg:w="26"/><text x="5.4093%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="5.1445%" y="101" width="0.0119%" height="15" fill="rgb(222,19,48)" fg:x="4755" fg:w="11"/><text x="5.4375%" y="111.50"></text></g><g><title>memcpy (66 instructions, 0.07%)</title><rect x="5.1564%" y="69" width="0.0714%" height="15" fill="rgb(232,45,27)" fg:x="4766" fg:w="66"/><text x="5.4494%" y="79.50"></text></g><g><title>stream_write (100 instructions, 0.11%)</title><rect x="5.1564%" y="85" width="0.1082%" height="15" fill="rgb(249,103,42)" fg:x="4766" fg:w="100"/><text x="5.4494%" y="95.50"></text></g><g><title>stream_write_text (121 instructions, 0.13%)</title><rect x="5.1564%" y="101" width="0.1309%" height="15" fill="rgb(246,81,33)" fg:x="4766" fg:w="121"/><text x="5.4494%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (206 instructions, 0.22%)</title><rect x="5.1164%" y="117" width="0.2229%" height="15" fill="rgb(252,33,42)" fg:x="4729" fg:w="206"/><text x="5.4093%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;?t&gt; (284 instructions, 0.31%)</title><rect x="5.0871%" y="133" width="0.3073%" height="15" fill="rgb(209,212,41)" fg:x="4702" fg:w="284"/><text x="5.3801%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (81 instructions, 0.09%)</title><rect x="5.3944%" y="133" width="0.0876%" height="15" fill="rgb(207,154,6)" fg:x="4986" fg:w="81"/><text x="5.6874%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="5.4820%" y="133" width="0.0292%" height="15" fill="rgb(223,64,47)" fg:x="5067" fg:w="27"/><text x="5.7750%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="5.5113%" y="117" width="0.0292%" height="15" fill="rgb(211,161,38)" fg:x="5094" fg:w="27"/><text x="5.8042%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="5.5405%" y="117" width="0.0184%" height="15" fill="rgb(219,138,40)" fg:x="5121" fg:w="17"/><text x="5.8334%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="5.5589%" y="101" width="0.0281%" height="15" fill="rgb(241,228,46)" fg:x="5138" fg:w="26"/><text x="5.8518%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;n64&gt; (49 instructions, 0.05%)</title><rect x="5.5589%" y="117" width="0.0530%" height="15" fill="rgb(223,209,38)" fg:x="5138" fg:w="49"/><text x="5.8518%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="5.6119%" y="117" width="0.0357%" height="15" fill="rgb(236,164,45)" fg:x="5187" fg:w="33"/><text x="5.9048%" y="127.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="5.6476%" y="101" width="0.0292%" height="15" fill="rgb(231,15,5)" fg:x="5220" fg:w="27"/><text x="5.9405%" y="111.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="5.6768%" y="85" width="0.0281%" height="15" fill="rgb(252,35,15)" fg:x="5247" fg:w="26"/><text x="5.9698%" y="95.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="5.7049%" y="85" width="0.0119%" height="15" fill="rgb(248,181,18)" fg:x="5273" fg:w="11"/><text x="5.9979%" y="95.50"></text></g><g><title>memcpy (106 instructions, 0.11%)</title><rect x="5.7168%" y="69" width="0.1147%" height="15" fill="rgb(233,39,42)" fg:x="5284" fg:w="106"/><text x="6.0098%" y="79.50"></text></g><g><title>stream_write (140 instructions, 0.15%)</title><rect x="5.7168%" y="85" width="0.1515%" height="15" fill="rgb(238,110,33)" fg:x="5284" fg:w="140"/><text x="6.0098%" y="95.50"></text></g><g><title>@Sm_serialize_go&lt;B&gt; (226 instructions, 0.24%)</title><rect x="5.6768%" y="101" width="0.2445%" height="15" fill="rgb(233,195,10)" fg:x="5247" fg:w="226"/><text x="5.9698%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;P&gt; (272 instructions, 0.29%)</title><rect x="5.6476%" y="117" width="0.2943%" height="15" fill="rgb(254,105,3)" fg:x="5220" fg:w="272"/><text x="5.9405%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="5.9419%" y="117" width="0.0530%" height="15" fill="rgb(221,225,9)" fg:x="5492" fg:w="49"/><text x="6.2348%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="5.9949%" y="117" width="0.0281%" height="15" fill="rgb(224,227,45)" fg:x="5541" fg:w="26"/><text x="6.2878%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.0230%" y="117" width="0.0119%" height="15" fill="rgb(229,198,43)" fg:x="5567" fg:w="11"/><text x="6.3160%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (33 instructions, 0.04%)</title><rect x="6.0349%" y="117" width="0.0357%" height="15" fill="rgb(206,209,35)" fg:x="5578" fg:w="33"/><text x="6.3279%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="6.0706%" y="101" width="0.0281%" height="15" fill="rgb(245,195,53)" fg:x="5611" fg:w="26"/><text x="6.3636%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.0987%" y="101" width="0.0119%" height="15" fill="rgb(240,92,26)" fg:x="5637" fg:w="11"/><text x="6.3917%" y="111.50"></text></g><g><title>memcpy (66 instructions, 0.07%)</title><rect x="6.1106%" y="85" width="0.0714%" height="15" fill="rgb(207,40,23)" fg:x="5648" fg:w="66"/><text x="6.4036%" y="95.50"></text></g><g><title>stream_write (100 instructions, 0.11%)</title><rect x="6.1106%" y="101" width="0.1082%" height="15" fill="rgb(223,111,35)" fg:x="5648" fg:w="100"/><text x="6.4036%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;B&gt; (186 instructions, 0.20%)</title><rect x="6.0706%" y="117" width="0.2012%" height="15" fill="rgb(229,147,28)" fg:x="5611" fg:w="186"/><text x="6.3636%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="6.2718%" y="117" width="0.0184%" height="15" fill="rgb(211,29,28)" fg:x="5797" fg:w="17"/><text x="6.5648%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="6.2902%" y="117" width="0.0281%" height="15" fill="rgb(228,72,33)" fg:x="5814" fg:w="26"/><text x="6.5832%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.3184%" y="117" width="0.0119%" height="15" fill="rgb(205,214,31)" fg:x="5840" fg:w="11"/><text x="6.6113%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="6.3303%" y="101" width="0.0281%" height="15" fill="rgb(224,111,15)" fg:x="5851" fg:w="26"/><text x="6.6232%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.3584%" y="101" width="0.0119%" height="15" fill="rgb(253,21,26)" fg:x="5877" fg:w="11"/><text x="6.6514%" y="111.50"></text></g><g><title>memcpy (72 instructions, 0.08%)</title><rect x="6.3703%" y="69" width="0.0779%" height="15" fill="rgb(245,139,43)" fg:x="5888" fg:w="72"/><text x="6.6633%" y="79.50"></text></g><g><title>stream_write (106 instructions, 0.11%)</title><rect x="6.3703%" y="85" width="0.1147%" height="15" fill="rgb(252,170,7)" fg:x="5888" fg:w="106"/><text x="6.6633%" y="95.50"></text></g><g><title>stream_write_text (127 instructions, 0.14%)</title><rect x="6.3703%" y="101" width="0.1374%" height="15" fill="rgb(231,118,14)" fg:x="5888" fg:w="127"/><text x="6.6633%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (212 instructions, 0.23%)</title><rect x="6.3303%" y="117" width="0.2294%" height="15" fill="rgb(238,83,0)" fg:x="5851" fg:w="212"/><text x="6.6232%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="6.5596%" y="117" width="0.0281%" height="15" fill="rgb(221,39,39)" fg:x="6063" fg:w="26"/><text x="6.8526%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.5878%" y="117" width="0.0119%" height="15" fill="rgb(222,119,46)" fg:x="6089" fg:w="11"/><text x="6.8807%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="6.5997%" y="101" width="0.0281%" height="15" fill="rgb(222,165,49)" fg:x="6100" fg:w="26"/><text x="6.8926%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="6.6278%" y="101" width="0.0119%" height="15" fill="rgb(219,113,52)" fg:x="6126" fg:w="11"/><text x="6.9208%" y="111.50"></text></g><g><title>memcpy (260 instructions, 0.28%)</title><rect x="6.6397%" y="69" width="0.2813%" height="15" fill="rgb(214,7,15)" fg:x="6137" fg:w="260"/><text x="6.9327%" y="79.50"></text></g><g><title>stream_write (294 instructions, 0.32%)</title><rect x="6.6397%" y="85" width="0.3181%" height="15" fill="rgb(235,32,4)" fg:x="6137" fg:w="294"/><text x="6.9327%" y="95.50"></text></g><g><title>stream_write_text (315 instructions, 0.34%)</title><rect x="6.6397%" y="101" width="0.3408%" height="15" fill="rgb(238,90,54)" fg:x="6137" fg:w="315"/><text x="6.9327%" y="111.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.0324%" y="101" width="0.0281%" height="15" fill="rgb(213,208,19)" fg:x="6500" fg:w="26"/><text x="7.3254%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.0606%" y="101" width="0.0119%" height="15" fill="rgb(233,156,4)" fg:x="6526" fg:w="11"/><text x="7.3535%" y="111.50"></text></g><g><title>memcpy (66 instructions, 0.07%)</title><rect x="7.0725%" y="69" width="0.0714%" height="15" fill="rgb(207,194,5)" fg:x="6537" fg:w="66"/><text x="7.3654%" y="79.50"></text></g><g><title>stream_write (100 instructions, 0.11%)</title><rect x="7.0725%" y="85" width="0.1082%" height="15" fill="rgb(206,111,30)" fg:x="6537" fg:w="100"/><text x="7.3654%" y="95.50"></text></g><g><title>stream_write_text (121 instructions, 0.13%)</title><rect x="7.0725%" y="101" width="0.1309%" height="15" fill="rgb(243,70,54)" fg:x="6537" fg:w="121"/><text x="7.3654%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (606 instructions, 0.66%)</title><rect x="6.5997%" y="117" width="0.6556%" height="15" fill="rgb(242,28,8)" fg:x="6100" fg:w="606"/><text x="6.8926%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.2553%" y="117" width="0.0281%" height="15" fill="rgb(219,106,18)" fg:x="6706" fg:w="26"/><text x="7.5483%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.2834%" y="117" width="0.0119%" height="15" fill="rgb(244,222,10)" fg:x="6732" fg:w="11"/><text x="7.5764%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.2953%" y="101" width="0.0281%" height="15" fill="rgb(236,179,52)" fg:x="6743" fg:w="26"/><text x="7.5883%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.3235%" y="101" width="0.0119%" height="15" fill="rgb(213,23,39)" fg:x="6769" fg:w="11"/><text x="7.6164%" y="111.50"></text></g><g><title>memcpy (66 instructions, 0.07%)</title><rect x="7.3354%" y="69" width="0.0714%" height="15" fill="rgb(238,48,10)" fg:x="6780" fg:w="66"/><text x="7.6283%" y="79.50"></text></g><g><title>stream_write (100 instructions, 0.11%)</title><rect x="7.3354%" y="85" width="0.1082%" height="15" fill="rgb(251,196,23)" fg:x="6780" fg:w="100"/><text x="7.6283%" y="95.50"></text></g><g><title>stream_write_text (121 instructions, 0.13%)</title><rect x="7.3354%" y="101" width="0.1309%" height="15" fill="rgb(250,152,24)" fg:x="6780" fg:w="121"/><text x="7.6283%" y="111.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.5182%" y="101" width="0.0281%" height="15" fill="rgb(209,150,17)" fg:x="6949" fg:w="26"/><text x="7.8112%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.5463%" y="101" width="0.0119%" height="15" fill="rgb(234,202,34)" fg:x="6975" fg:w="11"/><text x="7.8393%" y="111.50"></text></g><g><title>memcpy (78 instructions, 0.08%)</title><rect x="7.5582%" y="69" width="0.0844%" height="15" fill="rgb(253,148,53)" fg:x="6986" fg:w="78"/><text x="7.8512%" y="79.50"></text></g><g><title>stream_write (112 instructions, 0.12%)</title><rect x="7.5582%" y="85" width="0.1212%" height="15" fill="rgb(218,129,16)" fg:x="6986" fg:w="112"/><text x="7.8512%" y="95.50"></text></g><g><title>stream_write_text (133 instructions, 0.14%)</title><rect x="7.5582%" y="101" width="0.1439%" height="15" fill="rgb(216,85,19)" fg:x="6986" fg:w="133"/><text x="7.8512%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (424 instructions, 0.46%)</title><rect x="7.2953%" y="117" width="0.4587%" height="15" fill="rgb(235,228,7)" fg:x="6743" fg:w="424"/><text x="7.5883%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.7541%" y="117" width="0.0281%" height="15" fill="rgb(245,175,0)" fg:x="7167" fg:w="26"/><text x="8.0470%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.7822%" y="117" width="0.0119%" height="15" fill="rgb(208,168,36)" fg:x="7193" fg:w="11"/><text x="8.0752%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="7.7941%" y="101" width="0.0281%" height="15" fill="rgb(246,171,24)" fg:x="7204" fg:w="26"/><text x="8.0871%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="7.8222%" y="101" width="0.0119%" height="15" fill="rgb(215,142,24)" fg:x="7230" fg:w="11"/><text x="8.1152%" y="111.50"></text></g><g><title>memcpy (74 instructions, 0.08%)</title><rect x="7.8341%" y="69" width="0.0801%" height="15" fill="rgb(250,187,7)" fg:x="7241" fg:w="74"/><text x="8.1271%" y="79.50"></text></g><g><title>stream_write (108 instructions, 0.12%)</title><rect x="7.8341%" y="85" width="0.1168%" height="15" fill="rgb(228,66,33)" fg:x="7241" fg:w="108"/><text x="8.1271%" y="95.50"></text></g><g><title>stream_write_text (129 instructions, 0.14%)</title><rect x="7.8341%" y="101" width="0.1396%" height="15" fill="rgb(234,215,21)" fg:x="7241" fg:w="129"/><text x="8.1271%" y="111.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="8.0256%" y="101" width="0.0281%" height="15" fill="rgb(222,191,20)" fg:x="7418" fg:w="26"/><text x="8.3186%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="8.0537%" y="101" width="0.0119%" height="15" fill="rgb(245,79,54)" fg:x="7444" fg:w="11"/><text x="8.3467%" y="111.50"></text></g><g><title>memcpy (74 instructions, 0.08%)</title><rect x="8.0657%" y="69" width="0.0801%" height="15" fill="rgb(240,10,37)" fg:x="7455" fg:w="74"/><text x="8.3586%" y="79.50"></text></g><g><title>stream_write (108 instructions, 0.12%)</title><rect x="8.0657%" y="85" width="0.1168%" height="15" fill="rgb(214,192,32)" fg:x="7455" fg:w="108"/><text x="8.3586%" y="95.50"></text></g><g><title>stream_write_text (129 instructions, 0.14%)</title><rect x="8.0657%" y="101" width="0.1396%" height="15" fill="rgb(209,36,54)" fg:x="7455" fg:w="129"/><text x="8.3586%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (428 instructions, 0.46%)</title><rect x="7.7941%" y="117" width="0.4631%" height="15" fill="rgb(220,10,11)" fg:x="7204" fg:w="428"/><text x="8.0871%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="8.2571%" y="117" width="0.0281%" height="15" fill="rgb(221,106,17)" fg:x="7632" fg:w="26"/><text x="8.5501%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="8.2853%" y="117" width="0.0119%" height="15" fill="rgb(251,142,44)" fg:x="7658" fg:w="11"/><text x="8.5782%" y="127.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="8.2972%" y="117" width="0.0292%" height="15" fill="rgb(238,13,15)" fg:x="7669" fg:w="27"/><text x="8.5901%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (49 instructions, 0.05%)</title><rect x="8.3264%" y="117" width="0.0530%" height="15" fill="rgb(208,107,27)" fg:x="7696" fg:w="49"/><text x="8.6194%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="8.3794%" y="117" width="0.0281%" height="15" fill="rgb(205,136,37)" fg:x="7745" fg:w="26"/><text x="8.6724%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="8.4075%" y="117" width="0.0119%" height="15" fill="rgb(250,205,27)" fg:x="7771" fg:w="11"/><text x="8.7005%" y="127.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="8.4194%" y="101" width="0.0292%" height="15" fill="rgb(210,80,43)" fg:x="7782" fg:w="27"/><text x="8.7124%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (46 instructions, 0.05%)</title><rect x="8.4194%" y="117" width="0.0498%" height="15" fill="rgb(247,160,36)" fg:x="7782" fg:w="46"/><text x="8.7124%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (3,461 instructions, 3.74%)</title><rect x="5.5113%" y="133" width="3.7445%" height="15" fill="rgb(234,13,49)" fg:x="5094" fg:w="3461"/><text x="5.8042%" y="143.50">@Sm..</text></g><g><title>obj_idx&lt;0&gt; (97 instructions, 0.10%)</title><rect x="9.2558%" y="133" width="0.1049%" height="15" fill="rgb(234,122,0)" fg:x="8555" fg:w="97"/><text x="9.5487%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="9.3607%" y="133" width="0.0292%" height="15" fill="rgb(207,146,38)" fg:x="8652" fg:w="27"/><text x="9.6537%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="9.3899%" y="133" width="0.0292%" height="15" fill="rgb(207,177,25)" fg:x="8679" fg:w="27"/><text x="9.6829%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.4191%" y="133" width="0.0281%" height="15" fill="rgb(211,178,42)" fg:x="8706" fg:w="26"/><text x="9.7121%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.4473%" y="133" width="0.0281%" height="15" fill="rgb(230,69,54)" fg:x="8732" fg:w="26"/><text x="9.7402%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.4754%" y="133" width="0.0281%" height="15" fill="rgb(214,135,41)" fg:x="8758" fg:w="26"/><text x="9.7683%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.5035%" y="133" width="0.0281%" height="15" fill="rgb(237,67,25)" fg:x="8784" fg:w="26"/><text x="9.7965%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.5316%" y="133" width="0.0281%" height="15" fill="rgb(222,189,50)" fg:x="8810" fg:w="26"/><text x="9.8246%" y="143.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="9.5598%" y="133" width="0.0119%" height="15" fill="rgb(245,148,34)" fg:x="8836" fg:w="11"/><text x="9.8527%" y="143.50"></text></g><g><title>memcpy (158 instructions, 0.17%)</title><rect x="9.5717%" y="117" width="0.1709%" height="15" fill="rgb(222,29,6)" fg:x="8847" fg:w="158"/><text x="9.8646%" y="127.50"></text></g><g><title>stream_write (192 instructions, 0.21%)</title><rect x="9.5717%" y="133" width="0.2077%" height="15" fill="rgb(221,189,43)" fg:x="8847" fg:w="192"/><text x="9.8646%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="9.7794%" y="133" width="0.0184%" height="15" fill="rgb(207,36,27)" fg:x="9039" fg:w="17"/><text x="10.0724%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="9.7978%" y="133" width="0.0292%" height="15" fill="rgb(217,90,24)" fg:x="9056" fg:w="27"/><text x="10.0908%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="9.8270%" y="117" width="0.0292%" height="15" fill="rgb(224,66,35)" fg:x="9083" fg:w="27"/><text x="10.1200%" y="127.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="9.8562%" y="101" width="0.0292%" height="15" fill="rgb(221,13,50)" fg:x="9110" fg:w="27"/><text x="10.1492%" y="111.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="9.8854%" y="85" width="0.0281%" height="15" fill="rgb(236,68,49)" fg:x="9137" fg:w="26"/><text x="10.1784%" y="95.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="9.9136%" y="85" width="0.0119%" height="15" fill="rgb(229,146,28)" fg:x="9163" fg:w="11"/><text x="10.2065%" y="95.50"></text></g><g><title>memcpy (100 instructions, 0.11%)</title><rect x="9.9255%" y="69" width="0.1082%" height="15" fill="rgb(225,31,38)" fg:x="9174" fg:w="100"/><text x="10.2184%" y="79.50"></text></g><g><title>stream_write (134 instructions, 0.14%)</title><rect x="9.9255%" y="85" width="0.1450%" height="15" fill="rgb(250,208,3)" fg:x="9174" fg:w="134"/><text x="10.2184%" y="95.50"></text></g><g><title>@Sm_serialize_go&lt;B&gt; (220 instructions, 0.24%)</title><rect x="9.8854%" y="101" width="0.2380%" height="15" fill="rgb(246,54,23)" fg:x="9137" fg:w="220"/><text x="10.1784%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;P&gt; (266 instructions, 0.29%)</title><rect x="9.8562%" y="117" width="0.2878%" height="15" fill="rgb(243,76,11)" fg:x="9110" fg:w="266"/><text x="10.1492%" y="127.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="10.1440%" y="101" width="0.0292%" height="15" fill="rgb(245,21,50)" fg:x="9376" fg:w="27"/><text x="10.4370%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;0=?(P!0)&gt; (46 instructions, 0.05%)</title><rect x="10.1440%" y="117" width="0.0498%" height="15" fill="rgb(228,9,43)" fg:x="9376" fg:w="46"/><text x="10.4370%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;0=?(P!0)&gt; (407 instructions, 0.44%)</title><rect x="9.8270%" y="133" width="0.4403%" height="15" fill="rgb(208,100,47)" fg:x="9083" fg:w="407"/><text x="10.1200%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (113 instructions, 0.12%)</title><rect x="10.2673%" y="133" width="0.1223%" height="15" fill="rgb(232,26,8)" fg:x="9490" fg:w="113"/><text x="10.5603%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="10.3896%" y="117" width="0.0292%" height="15" fill="rgb(216,166,38)" fg:x="9603" fg:w="27"/><text x="10.6826%" y="127.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="10.4188%" y="101" width="0.0281%" height="15" fill="rgb(251,202,51)" fg:x="9630" fg:w="26"/><text x="10.7118%" y="111.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="10.4469%" y="101" width="0.0119%" height="15" fill="rgb(254,216,34)" fg:x="9656" fg:w="11"/><text x="10.7399%" y="111.50"></text></g><g><title>memcpy (58 instructions, 0.06%)</title><rect x="10.4588%" y="69" width="0.0628%" height="15" fill="rgb(251,32,27)" fg:x="9667" fg:w="58"/><text x="10.7518%" y="79.50"></text></g><g><title>stream_write (92 instructions, 0.10%)</title><rect x="10.4588%" y="85" width="0.0995%" height="15" fill="rgb(208,127,28)" fg:x="9667" fg:w="92"/><text x="10.7518%" y="95.50"></text></g><g><title>stream_write_text (113 instructions, 0.12%)</title><rect x="10.4588%" y="101" width="0.1223%" height="15" fill="rgb(224,137,22)" fg:x="9667" fg:w="113"/><text x="10.7518%" y="111.50"></text></g><g><title>@Sm_serialize_go&lt;t&gt; (198 instructions, 0.21%)</title><rect x="10.4188%" y="117" width="0.2142%" height="15" fill="rgb(254,70,32)" fg:x="9630" fg:w="198"/><text x="10.7118%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;?t&gt; (276 instructions, 0.30%)</title><rect x="10.3896%" y="133" width="0.2986%" height="15" fill="rgb(229,75,37)" fg:x="9603" fg:w="276"/><text x="10.6826%" y="143.50"></text></g><g><title>obj_idx&lt;0&gt; (129 instructions, 0.14%)</title><rect x="10.6882%" y="133" width="0.1396%" height="15" fill="rgb(252,64,23)" fg:x="9879" fg:w="129"/><text x="10.9812%" y="143.50"></text></g><g><title>stream_write_byte (27 instructions, 0.03%)</title><rect x="10.8278%" y="133" width="0.0292%" height="15" fill="rgb(232,162,48)" fg:x="10008" fg:w="27"/><text x="11.1207%" y="143.50"></text></g><g><title>stream_reserve (26 instructions, 0.03%)</title><rect x="10.8570%" y="117" width="0.0281%" height="15" fill="rgb(246,160,12)" fg:x="10035" fg:w="26"/><text x="11.1500%" y="127.50"></text></g><g><title>leb128_encode (11 instructions, 0.01%)</title><rect x="10.8851%" y="117" width="0.0119%" height="15" fill="rgb(247,166,0)" fg:x="10061" fg:w="11"/><text x="11.1781%" y="127.50"></text></g><g><title>@Sm_serialize_go&lt;N&gt; (81 instructions, 0.09%)</title><rect x="10.8570%" y="133" width="0.0876%" height="15" fill="rgb(249,219,21)" fg:x="10035" fg:w="81"/><text x="11.1500%" y="143.50"></text></g><g><title>motoko_rts::stream::_$LT$impl$u20$motoko_rts..types..Stream$GT$::send_to_stable::hae7f08470774c8dd (561 instructions, 0.61%)</title><rect x="10.9446%" y="133" width="0.6070%" height="15" fill="rgb(205,209,3)" fg:x="10116" fg:w="561"/><text x="11.2376%" y="143.50"></text></g><g><title>__stablemem_ensure_pages (35 instructions, 0.04%)</title><rect x="11.5516%" y="117" width="0.0379%" height="15" fill="rgb(243,44,1)" fg:x="10677" fg:w="35"/><text x="11.8445%" y="127.50"></text></g><g><title>__stablemem_ensure (58 instructions, 0.06%)</title><rect x="11.5516%" y="133" width="0.0628%" height="15" fill="rgb(206,159,16)" fg:x="10677" fg:w="58"/><text x="11.8445%" y="143.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="11.6143%" y="133" width="0.0930%" height="15" fill="rgb(244,77,30)" fg:x="10735" fg:w="86"/><text x="11.9073%" y="143.50"></text></g><g><title>pre_upgrade (12,806 instructions, 13.85%)</title><rect x="0.0000%" y="149" width="13.8550%" height="15" fill="rgb(218,69,12)" fg:x="0" fg:w="12806"/><text x="0.2930%" y="159.50">pre_upgrade</text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="13.8636%" y="101" width="0.0617%" height="15" fill="rgb(212,87,7)" fg:x="12814" fg:w="57"/><text x="14.1566%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="13.8636%" y="117" width="0.0703%" height="15" fill="rgb(245,114,25)" fg:x="12814" fg:w="65"/><text x="14.1566%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="13.9339%" y="101" width="0.0519%" height="15" fill="rgb(210,61,42)" fg:x="12879" fg:w="48"/><text x="14.2269%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="13.9859%" y="101" width="0.0617%" height="15" fill="rgb(211,52,33)" fg:x="12927" fg:w="57"/><text x="14.2788%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="14.0475%" y="101" width="0.0692%" height="15" fill="rgb(234,58,33)" fg:x="12984" fg:w="64"/><text x="14.3405%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="14.1168%" y="101" width="0.0519%" height="15" fill="rgb(220,115,36)" fg:x="13048" fg:w="48"/><text x="14.4098%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="14.1687%" y="101" width="0.2467%" height="15" fill="rgb(243,153,54)" fg:x="13096" fg:w="228"/><text x="14.4617%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="14.4154%" y="101" width="0.0692%" height="15" fill="rgb(251,47,18)" fg:x="13324" fg:w="64"/><text x="14.7084%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="14.4846%" y="101" width="0.0130%" height="15" fill="rgb(242,102,42)" fg:x="13388" fg:w="12"/><text x="14.7776%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="14.4976%" y="101" width="0.2467%" height="15" fill="rgb(234,31,38)" fg:x="13400" fg:w="228"/><text x="14.7906%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="14.7443%" y="101" width="0.0692%" height="15" fill="rgb(221,117,51)" fg:x="13628" fg:w="64"/><text x="15.0373%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="14.8135%" y="101" width="0.0130%" height="15" fill="rgb(212,20,18)" fg:x="13692" fg:w="12"/><text x="15.1065%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="14.8265%" y="101" width="0.2467%" height="15" fill="rgb(245,133,36)" fg:x="13704" fg:w="228"/><text x="15.1195%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="15.0732%" y="101" width="0.0692%" height="15" fill="rgb(212,6,19)" fg:x="13932" fg:w="64"/><text x="15.3662%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="15.1424%" y="101" width="0.0130%" height="15" fill="rgb(218,1,36)" fg:x="13996" fg:w="12"/><text x="15.4354%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="15.1554%" y="101" width="0.2467%" height="15" fill="rgb(246,84,54)" fg:x="14008" fg:w="228"/><text x="15.4484%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="15.4021%" y="101" width="0.0692%" height="15" fill="rgb(242,110,6)" fg:x="14236" fg:w="64"/><text x="15.6951%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="15.4713%" y="101" width="0.0130%" height="15" fill="rgb(214,47,5)" fg:x="14300" fg:w="12"/><text x="15.7643%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="15.4843%" y="101" width="0.0692%" height="15" fill="rgb(218,159,25)" fg:x="14312" fg:w="64"/><text x="15.7773%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="15.5536%" y="101" width="0.0519%" height="15" fill="rgb(215,211,28)" fg:x="14376" fg:w="48"/><text x="15.8465%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="15.6055%" y="101" width="0.2467%" height="15" fill="rgb(238,59,32)" fg:x="14424" fg:w="228"/><text x="15.8985%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="15.8522%" y="101" width="0.0692%" height="15" fill="rgb(226,82,3)" fg:x="14652" fg:w="64"/><text x="16.1451%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="15.9214%" y="101" width="0.0130%" height="15" fill="rgb(240,164,32)" fg:x="14716" fg:w="12"/><text x="16.2144%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="15.9344%" y="101" width="0.2467%" height="15" fill="rgb(232,46,7)" fg:x="14728" fg:w="228"/><text x="16.2274%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="16.1811%" y="101" width="0.0692%" height="15" fill="rgb(229,129,53)" fg:x="14956" fg:w="64"/><text x="16.4740%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="16.2503%" y="101" width="0.0130%" height="15" fill="rgb(234,188,29)" fg:x="15020" fg:w="12"/><text x="16.5433%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="16.2633%" y="101" width="0.0692%" height="15" fill="rgb(246,141,4)" fg:x="15032" fg:w="64"/><text x="16.5563%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="16.3325%" y="101" width="0.0692%" height="15" fill="rgb(229,23,39)" fg:x="15096" fg:w="64"/><text x="16.6255%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="16.4018%" y="101" width="0.0519%" height="15" fill="rgb(206,12,3)" fg:x="15160" fg:w="48"/><text x="16.6947%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="16.4537%" y="101" width="0.0692%" height="15" fill="rgb(252,226,20)" fg:x="15208" fg:w="64"/><text x="16.7467%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="16.5230%" y="101" width="0.0130%" height="15" fill="rgb(216,123,35)" fg:x="15272" fg:w="12"/><text x="16.8159%" y="111.50"></text></g><g><title>parse_idl_header (3,028 instructions, 3.28%)</title><rect x="13.9339%" y="117" width="3.2760%" height="15" fill="rgb(212,68,40)" fg:x="12879" fg:w="3028"/><text x="14.2269%" y="127.50">pa..</text></g><g><title>idl_sub_buf_init (15 instructions, 0.02%)</title><rect x="17.2100%" y="117" width="0.0162%" height="15" fill="rgb(254,125,32)" fg:x="15907" fg:w="15"/><text x="17.5029%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="17.2262%" y="117" width="0.0519%" height="15" fill="rgb(253,97,22)" fg:x="15922" fg:w="48"/><text x="17.5192%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="17.2781%" y="117" width="0.0692%" height="15" fill="rgb(241,101,14)" fg:x="15970" fg:w="64"/><text x="17.5711%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="17.3474%" y="117" width="0.0216%" height="15" fill="rgb(238,103,29)" fg:x="16034" fg:w="20"/><text x="17.6403%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="17.3690%" y="117" width="0.0692%" height="15" fill="rgb(233,195,47)" fg:x="16054" fg:w="64"/><text x="17.6620%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="17.4382%" y="117" width="0.0519%" height="15" fill="rgb(246,218,30)" fg:x="16118" fg:w="48"/><text x="17.7312%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="17.4902%" y="101" width="0.2467%" height="15" fill="rgb(219,145,47)" fg:x="16166" fg:w="228"/><text x="17.7832%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="17.4902%" y="117" width="0.2856%" height="15" fill="rgb(243,12,26)" fg:x="16166" fg:w="264"/><text x="17.7832%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="17.7758%" y="117" width="0.0692%" height="15" fill="rgb(214,87,16)" fg:x="16430" fg:w="64"/><text x="18.0688%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="17.8450%" y="101" width="0.0216%" height="15" fill="rgb(208,99,42)" fg:x="16494" fg:w="20"/><text x="18.1380%" y="111.50"></text></g><g><title>@deserialize_go&lt;n16&gt; (76 instructions, 0.08%)</title><rect x="17.8450%" y="117" width="0.0822%" height="15" fill="rgb(253,99,2)" fg:x="16494" fg:w="76"/><text x="18.1380%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="17.9273%" y="101" width="0.2467%" height="15" fill="rgb(220,168,23)" fg:x="16570" fg:w="228"/><text x="18.2202%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="17.9273%" y="117" width="0.2856%" height="15" fill="rgb(242,38,24)" fg:x="16570" fg:w="264"/><text x="18.2202%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="18.2129%" y="117" width="0.0692%" height="15" fill="rgb(225,182,9)" fg:x="16834" fg:w="64"/><text x="18.5059%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="18.2821%" y="101" width="0.0216%" height="15" fill="rgb(243,178,37)" fg:x="16898" fg:w="20"/><text x="18.5751%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="18.3038%" y="101" width="0.0692%" height="15" fill="rgb(232,139,19)" fg:x="16918" fg:w="64"/><text x="18.5967%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="18.3730%" y="101" width="0.0519%" height="15" fill="rgb(225,201,24)" fg:x="16982" fg:w="48"/><text x="18.6660%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="18.4250%" y="85" width="0.2467%" height="15" fill="rgb(221,47,46)" fg:x="17030" fg:w="228"/><text x="18.7179%" y="95.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="18.4250%" y="101" width="0.2856%" height="15" fill="rgb(249,23,13)" fg:x="17030" fg:w="264"/><text x="18.7179%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="18.7106%" y="101" width="0.0692%" height="15" fill="rgb(219,9,5)" fg:x="17294" fg:w="64"/><text x="19.0035%" y="111.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="18.7798%" y="85" width="0.0216%" height="15" fill="rgb(254,171,16)" fg:x="17358" fg:w="20"/><text x="19.0728%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="18.8015%" y="85" width="0.0519%" height="15" fill="rgb(230,171,20)" fg:x="17378" fg:w="48"/><text x="19.0944%" y="95.50"></text></g><g><title>utf8_validate (34 instructions, 0.04%)</title><rect x="18.8534%" y="85" width="0.0368%" height="15" fill="rgb(210,71,41)" fg:x="17426" fg:w="34"/><text x="19.1464%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="18.8902%" y="69" width="0.0617%" height="15" fill="rgb(206,173,20)" fg:x="17460" fg:w="57"/><text x="19.1831%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="18.8902%" y="85" width="0.0768%" height="15" fill="rgb(233,88,34)" fg:x="17460" fg:w="71"/><text x="19.1831%" y="95.50"></text></g><g><title>memcpy (50 instructions, 0.05%)</title><rect x="18.9670%" y="85" width="0.0541%" height="15" fill="rgb(223,209,46)" fg:x="17531" fg:w="50"/><text x="19.2600%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (300 instructions, 0.32%)</title><rect x="18.7798%" y="101" width="0.3246%" height="15" fill="rgb(250,43,18)" fg:x="17358" fg:w="300"/><text x="19.0728%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="19.1044%" y="85" width="0.2467%" height="15" fill="rgb(208,13,10)" fg:x="17658" fg:w="228"/><text x="19.3974%" y="95.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="19.1044%" y="101" width="0.2856%" height="15" fill="rgb(212,200,36)" fg:x="17658" fg:w="264"/><text x="19.3974%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="19.3900%" y="101" width="0.0692%" height="15" fill="rgb(225,90,30)" fg:x="17922" fg:w="64"/><text x="19.6830%" y="111.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="19.4593%" y="85" width="0.0216%" height="15" fill="rgb(236,182,39)" fg:x="17986" fg:w="20"/><text x="19.7522%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="19.4809%" y="85" width="0.0519%" height="15" fill="rgb(212,144,35)" fg:x="18006" fg:w="48"/><text x="19.7739%" y="95.50"></text></g><g><title>utf8_validate (149 instructions, 0.16%)</title><rect x="19.5328%" y="85" width="0.1612%" height="15" fill="rgb(228,63,44)" fg:x="18054" fg:w="149"/><text x="19.8258%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="19.6940%" y="69" width="0.0617%" height="15" fill="rgb(228,109,6)" fg:x="18203" fg:w="57"/><text x="19.9870%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="19.6940%" y="85" width="0.0768%" height="15" fill="rgb(238,117,24)" fg:x="18203" fg:w="71"/><text x="19.9870%" y="95.50"></text></g><g><title>memcpy (90 instructions, 0.10%)</title><rect x="19.7709%" y="85" width="0.0974%" height="15" fill="rgb(242,26,26)" fg:x="18274" fg:w="90"/><text x="20.0638%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (455 instructions, 0.49%)</title><rect x="19.4593%" y="101" width="0.4923%" height="15" fill="rgb(221,92,48)" fg:x="17986" fg:w="455"/><text x="19.7522%" y="111.50"></text></g><g><title>@deserialize_go&lt;r(data:t,logo_type:t)&gt; (1,866 instructions, 2.02%)</title><rect x="18.2821%" y="117" width="2.0188%" height="15" fill="rgb(209,209,32)" fg:x="16898" fg:w="1866"/><text x="18.5751%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="20.3010%" y="101" width="0.2467%" height="15" fill="rgb(221,70,22)" fg:x="18764" fg:w="228"/><text x="20.5940%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="20.3010%" y="117" width="0.2856%" height="15" fill="rgb(248,145,5)" fg:x="18764" fg:w="264"/><text x="20.5940%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="20.5866%" y="117" width="0.0692%" height="15" fill="rgb(226,116,26)" fg:x="19028" fg:w="64"/><text x="20.8796%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="20.6559%" y="101" width="0.0216%" height="15" fill="rgb(244,5,17)" fg:x="19092" fg:w="20"/><text x="20.9488%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="20.6775%" y="101" width="0.0519%" height="15" fill="rgb(252,159,33)" fg:x="19112" fg:w="48"/><text x="20.9705%" y="111.50"></text></g><g><title>utf8_validate (284 instructions, 0.31%)</title><rect x="20.7294%" y="101" width="0.3073%" height="15" fill="rgb(206,71,0)" fg:x="19160" fg:w="284"/><text x="21.0224%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="21.0367%" y="85" width="0.0617%" height="15" fill="rgb(233,118,54)" fg:x="19444" fg:w="57"/><text x="21.3297%" y="95.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="21.0367%" y="101" width="0.0768%" height="15" fill="rgb(234,83,48)" fg:x="19444" fg:w="71"/><text x="21.3297%" y="111.50"></text></g><g><title>memcpy (168 instructions, 0.18%)</title><rect x="21.1135%" y="101" width="0.1818%" height="15" fill="rgb(228,3,54)" fg:x="19515" fg:w="168"/><text x="21.4065%" y="111.50"></text></g><g><title>@deserialize_go&lt;t&gt; (668 instructions, 0.72%)</title><rect x="20.6559%" y="117" width="0.7227%" height="15" fill="rgb(226,155,13)" fg:x="19092" fg:w="668"/><text x="20.9488%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="21.3786%" y="101" width="0.2467%" height="15" fill="rgb(241,28,37)" fg:x="19760" fg:w="228"/><text x="21.6715%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="21.3786%" y="117" width="0.2856%" height="15" fill="rgb(233,93,10)" fg:x="19760" fg:w="264"/><text x="21.6715%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="21.6642%" y="117" width="0.0692%" height="15" fill="rgb(225,113,19)" fg:x="20024" fg:w="64"/><text x="21.9572%" y="127.50"></text></g><g><title>idl_limit_check (20 instructions, 0.02%)</title><rect x="21.7334%" y="101" width="0.0216%" height="15" fill="rgb(241,2,18)" fg:x="20088" fg:w="20"/><text x="22.0264%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="21.7551%" y="101" width="0.0519%" height="15" fill="rgb(228,207,21)" fg:x="20108" fg:w="48"/><text x="22.0480%" y="111.50"></text></g><g><title>utf8_validate (172 instructions, 0.19%)</title><rect x="21.8070%" y="101" width="0.1861%" height="15" fill="rgb(213,211,35)" fg:x="20156" fg:w="172"/><text x="22.1000%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="21.9931%" y="85" width="0.0617%" height="15" fill="rgb(209,83,10)" fg:x="20328" fg:w="57"/><text x="22.2861%" y="95.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="21.9931%" y="101" width="0.0768%" height="15" fill="rgb(209,164,1)" fg:x="20328" fg:w="71"/><text x="22.2861%" y="111.50"></text></g><g><title>memcpy (94 instructions, 0.10%)</title><rect x="22.0699%" y="101" width="0.1017%" height="15" fill="rgb(213,184,43)" fg:x="20399" fg:w="94"/><text x="22.3629%" y="111.50"></text></g><g><title>@deserialize_go&lt;t&gt; (482 instructions, 0.52%)</title><rect x="21.7334%" y="117" width="0.5215%" height="15" fill="rgb(231,61,34)" fg:x="20088" fg:w="482"/><text x="22.0264%" y="127.50"></text></g><g><title>motoko_rts::text::blob_of_text::h46e668d21e41637b (11 instructions, 0.01%)</title><rect x="22.2614%" y="101" width="0.0119%" height="15" fill="rgb(235,75,3)" fg:x="20576" fg:w="11"/><text x="22.5544%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="22.2733%" y="101" width="0.0617%" height="15" fill="rgb(220,106,47)" fg:x="20587" fg:w="57"/><text x="22.5663%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="22.3350%" y="101" width="0.0617%" height="15" fill="rgb(210,196,33)" fg:x="20644" fg:w="57"/><text x="22.6280%" y="111.50"></text></g><g><title>memcpy (46 instructions, 0.05%)</title><rect x="22.3967%" y="101" width="0.0498%" height="15" fill="rgb(229,154,42)" fg:x="20701" fg:w="46"/><text x="22.6896%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="22.4464%" y="101" width="0.0617%" height="15" fill="rgb(228,114,26)" fg:x="20747" fg:w="57"/><text x="22.7394%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::h183c5322ad6e0a8c (77 instructions, 0.08%)</title><rect x="22.5081%" y="101" width="0.0833%" height="15" fill="rgb(208,144,1)" fg:x="20804" fg:w="77"/><text x="22.8011%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::h183c5322ad6e0a8c (110 instructions, 0.12%)</title><rect x="22.5914%" y="101" width="0.1190%" height="15" fill="rgb(239,112,37)" fg:x="20881" fg:w="110"/><text x="22.8844%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::h183c5322ad6e0a8c (77 instructions, 0.08%)</title><rect x="22.7104%" y="101" width="0.0833%" height="15" fill="rgb(210,96,50)" fg:x="20991" fg:w="77"/><text x="23.0034%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::h183c5322ad6e0a8c (110 instructions, 0.12%)</title><rect x="22.7937%" y="101" width="0.1190%" height="15" fill="rgb(222,178,2)" fg:x="21068" fg:w="110"/><text x="23.0867%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="22.9127%" y="101" width="0.0617%" height="15" fill="rgb(226,74,18)" fg:x="21178" fg:w="57"/><text x="23.2057%" y="111.50"></text></g><g><title>memcmp (192 instructions, 0.21%)</title><rect x="22.9744%" y="101" width="0.2077%" height="15" fill="rgb(225,67,54)" fg:x="21235" fg:w="192"/><text x="23.2674%" y="111.50"></text></g><g><title>blob_of_principal (2,244 instructions, 2.43%)</title><rect x="22.2614%" y="117" width="2.4278%" height="15" fill="rgb(251,92,32)" fg:x="20576" fg:w="2244"/><text x="22.5544%" y="127.50">b..</text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="24.6892%" y="101" width="0.0617%" height="15" fill="rgb(228,149,22)" fg:x="22820" fg:w="57"/><text x="24.9822%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="24.6892%" y="117" width="0.0703%" height="15" fill="rgb(243,54,13)" fg:x="22820" fg:w="65"/><text x="24.9822%" y="127.50"></text></g><g><title>memcpy (46 instructions, 0.05%)</title><rect x="24.7595%" y="117" width="0.0498%" height="15" fill="rgb(243,180,28)" fg:x="22885" fg:w="46"/><text x="25.0525%" y="127.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="24.8093%" y="101" width="0.0617%" height="15" fill="rgb(208,167,24)" fg:x="22931" fg:w="57"/><text x="25.1023%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="24.8796%" y="101" width="0.0617%" height="15" fill="rgb(245,73,45)" fg:x="22996" fg:w="57"/><text x="25.1726%" y="111.50"></text></g><g><title>alloc_blob (130 instructions, 0.14%)</title><rect x="24.8093%" y="117" width="0.1406%" height="15" fill="rgb(237,203,48)" fg:x="22931" fg:w="130"/><text x="25.1023%" y="127.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="24.9500%" y="117" width="0.0930%" height="15" fill="rgb(211,197,16)" fg:x="23061" fg:w="86"/><text x="25.2429%" y="127.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="25.0430%" y="117" width="0.0930%" height="15" fill="rgb(243,99,51)" fg:x="23147" fg:w="86"/><text x="25.3360%" y="127.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="25.1361%" y="117" width="0.0930%" height="15" fill="rgb(215,123,29)" fg:x="23233" fg:w="86"/><text x="25.4290%" y="127.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="25.2291%" y="117" width="0.0930%" height="15" fill="rgb(239,186,37)" fg:x="23319" fg:w="86"/><text x="25.5221%" y="127.50"></text></g><g><title>__stablemem_read_and_clear_word32 (86 instructions, 0.09%)</title><rect x="25.3221%" y="117" width="0.0930%" height="15" fill="rgb(252,136,39)" fg:x="23405" fg:w="86"/><text x="25.6151%" y="127.50"></text></g><g><title>__stablemem_read_and_clear_word64 (94 instructions, 0.10%)</title><rect x="25.4152%" y="117" width="0.1017%" height="15" fill="rgb(223,213,32)" fg:x="23491" fg:w="94"/><text x="25.7082%" y="127.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (411 instructions, 0.44%)</title><rect x="25.5169%" y="101" width="0.4447%" height="15" fill="rgb(233,115,5)" fg:x="23585" fg:w="411"/><text x="25.8099%" y="111.50"></text></g><g><title>alloc_blob (419 instructions, 0.45%)</title><rect x="25.5169%" y="117" width="0.4533%" height="15" fill="rgb(207,226,44)" fg:x="23585" fg:w="419"/><text x="25.8099%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="25.9702%" y="101" width="0.0519%" height="15" fill="rgb(208,126,0)" fg:x="24004" fg:w="48"/><text x="26.2632%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="26.0221%" y="101" width="0.0617%" height="15" fill="rgb(244,66,21)" fg:x="24052" fg:w="57"/><text x="26.3151%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="26.0838%" y="101" width="0.0692%" height="15" fill="rgb(222,97,12)" fg:x="24109" fg:w="64"/><text x="26.3768%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="26.1530%" y="101" width="0.0519%" height="15" fill="rgb(219,213,19)" fg:x="24173" fg:w="48"/><text x="26.4460%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="26.2050%" y="101" width="0.2467%" height="15" fill="rgb(252,169,30)" fg:x="24221" fg:w="228"/><text x="26.4979%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="26.4517%" y="101" width="0.0692%" height="15" fill="rgb(206,32,51)" fg:x="24449" fg:w="64"/><text x="26.7446%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="26.5209%" y="101" width="0.0130%" height="15" fill="rgb(250,172,42)" fg:x="24513" fg:w="12"/><text x="26.8139%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="26.5339%" y="101" width="0.2467%" height="15" fill="rgb(209,34,43)" fg:x="24525" fg:w="228"/><text x="26.8268%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="26.7806%" y="101" width="0.0692%" height="15" fill="rgb(223,11,35)" fg:x="24753" fg:w="64"/><text x="27.0735%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="26.8498%" y="101" width="0.0130%" height="15" fill="rgb(251,219,26)" fg:x="24817" fg:w="12"/><text x="27.1428%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="26.8628%" y="101" width="0.2467%" height="15" fill="rgb(231,119,3)" fg:x="24829" fg:w="228"/><text x="27.1557%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="27.1095%" y="101" width="0.0692%" height="15" fill="rgb(216,97,11)" fg:x="25057" fg:w="64"/><text x="27.4024%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="27.1787%" y="101" width="0.0130%" height="15" fill="rgb(223,59,9)" fg:x="25121" fg:w="12"/><text x="27.4717%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="27.1917%" y="101" width="0.2467%" height="15" fill="rgb(233,93,31)" fg:x="25133" fg:w="228"/><text x="27.4847%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="27.4384%" y="101" width="0.0692%" height="15" fill="rgb(239,81,33)" fg:x="25361" fg:w="64"/><text x="27.7313%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="27.5076%" y="101" width="0.0130%" height="15" fill="rgb(213,120,34)" fg:x="25425" fg:w="12"/><text x="27.8006%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="27.5206%" y="101" width="0.2467%" height="15" fill="rgb(243,49,53)" fg:x="25437" fg:w="228"/><text x="27.8136%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="27.7673%" y="101" width="0.0692%" height="15" fill="rgb(247,216,33)" fg:x="25665" fg:w="64"/><text x="28.0602%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="27.8365%" y="101" width="0.0130%" height="15" fill="rgb(226,26,14)" fg:x="25729" fg:w="12"/><text x="28.1295%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="27.8495%" y="101" width="0.2467%" height="15" fill="rgb(215,49,53)" fg:x="25741" fg:w="228"/><text x="28.1425%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.0962%" y="101" width="0.0692%" height="15" fill="rgb(245,162,40)" fg:x="25969" fg:w="64"/><text x="28.3891%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="28.1654%" y="101" width="0.0130%" height="15" fill="rgb(229,68,17)" fg:x="26033" fg:w="12"/><text x="28.4584%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="28.1784%" y="101" width="0.2467%" height="15" fill="rgb(213,182,10)" fg:x="26045" fg:w="228"/><text x="28.4714%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.4251%" y="101" width="0.0692%" height="15" fill="rgb(245,125,30)" fg:x="26273" fg:w="64"/><text x="28.7180%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="28.4943%" y="101" width="0.0130%" height="15" fill="rgb(232,202,2)" fg:x="26337" fg:w="12"/><text x="28.7873%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="28.5073%" y="101" width="0.2467%" height="15" fill="rgb(237,140,51)" fg:x="26349" fg:w="228"/><text x="28.8003%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.7540%" y="101" width="0.0692%" height="15" fill="rgb(236,157,25)" fg:x="26577" fg:w="64"/><text x="29.0469%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="28.8232%" y="101" width="0.0130%" height="15" fill="rgb(219,209,0)" fg:x="26641" fg:w="12"/><text x="29.1162%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.8362%" y="101" width="0.0692%" height="15" fill="rgb(240,116,54)" fg:x="26653" fg:w="64"/><text x="29.1292%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.9054%" y="101" width="0.0692%" height="15" fill="rgb(216,10,36)" fg:x="26717" fg:w="64"/><text x="29.1984%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="28.9747%" y="101" width="0.0130%" height="15" fill="rgb(222,72,44)" fg:x="26781" fg:w="12"/><text x="29.2676%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="28.9877%" y="101" width="0.0692%" height="15" fill="rgb(232,159,9)" fg:x="26793" fg:w="64"/><text x="29.2806%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.0569%" y="101" width="0.0692%" height="15" fill="rgb(210,39,32)" fg:x="26857" fg:w="64"/><text x="29.3499%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="29.1261%" y="101" width="0.0130%" height="15" fill="rgb(216,194,45)" fg:x="26921" fg:w="12"/><text x="29.4191%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.1391%" y="101" width="0.0692%" height="15" fill="rgb(218,18,35)" fg:x="26933" fg:w="64"/><text x="29.4321%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="29.2084%" y="101" width="0.0519%" height="15" fill="rgb(207,83,51)" fg:x="26997" fg:w="48"/><text x="29.5013%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="29.2603%" y="101" width="0.0519%" height="15" fill="rgb(225,63,43)" fg:x="27045" fg:w="48"/><text x="29.5533%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.3122%" y="101" width="0.0692%" height="15" fill="rgb(207,57,36)" fg:x="27093" fg:w="64"/><text x="29.6052%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (17 instructions, 0.02%)</title><rect x="29.3815%" y="101" width="0.0184%" height="15" fill="rgb(216,99,33)" fg:x="27157" fg:w="17"/><text x="29.6744%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="29.3999%" y="101" width="0.0519%" height="15" fill="rgb(225,42,16)" fg:x="27174" fg:w="48"/><text x="29.6928%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.4518%" y="101" width="0.0692%" height="15" fill="rgb(220,201,45)" fg:x="27222" fg:w="64"/><text x="29.7448%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="29.5210%" y="101" width="0.0130%" height="15" fill="rgb(225,33,4)" fg:x="27286" fg:w="12"/><text x="29.8140%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.5340%" y="101" width="0.0692%" height="15" fill="rgb(224,33,50)" fg:x="27298" fg:w="64"/><text x="29.8270%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.6033%" y="101" width="0.0692%" height="15" fill="rgb(246,198,51)" fg:x="27362" fg:w="64"/><text x="29.8962%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="29.6725%" y="101" width="0.0130%" height="15" fill="rgb(205,22,4)" fg:x="27426" fg:w="12"/><text x="29.9655%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="29.6855%" y="101" width="0.0692%" height="15" fill="rgb(206,3,8)" fg:x="27438" fg:w="64"/><text x="29.9785%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="29.7547%" y="101" width="0.0519%" height="15" fill="rgb(251,23,15)" fg:x="27502" fg:w="48"/><text x="30.0477%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="29.8067%" y="101" width="0.2467%" height="15" fill="rgb(252,88,28)" fg:x="27550" fg:w="228"/><text x="30.0996%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.0533%" y="101" width="0.0692%" height="15" fill="rgb(212,127,14)" fg:x="27778" fg:w="64"/><text x="30.3463%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="30.1226%" y="101" width="0.0130%" height="15" fill="rgb(247,145,37)" fg:x="27842" fg:w="12"/><text x="30.4155%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="30.1356%" y="101" width="0.2467%" height="15" fill="rgb(209,117,53)" fg:x="27854" fg:w="228"/><text x="30.4285%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.3822%" y="101" width="0.0692%" height="15" fill="rgb(212,90,42)" fg:x="28082" fg:w="64"/><text x="30.6752%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="30.4515%" y="101" width="0.0130%" height="15" fill="rgb(218,164,37)" fg:x="28146" fg:w="12"/><text x="30.7445%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.4645%" y="101" width="0.0692%" height="15" fill="rgb(246,65,34)" fg:x="28158" fg:w="64"/><text x="30.7574%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.5337%" y="101" width="0.0692%" height="15" fill="rgb(231,100,33)" fg:x="28222" fg:w="64"/><text x="30.8267%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="30.6029%" y="101" width="0.0130%" height="15" fill="rgb(228,126,14)" fg:x="28286" fg:w="12"/><text x="30.8959%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.6159%" y="101" width="0.0692%" height="15" fill="rgb(215,173,21)" fg:x="28298" fg:w="64"/><text x="30.9089%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.6852%" y="101" width="0.0692%" height="15" fill="rgb(210,6,40)" fg:x="28362" fg:w="64"/><text x="30.9781%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="30.7544%" y="101" width="0.0130%" height="15" fill="rgb(212,48,18)" fg:x="28426" fg:w="12"/><text x="31.0474%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.7674%" y="101" width="0.0692%" height="15" fill="rgb(230,214,11)" fg:x="28438" fg:w="64"/><text x="31.0604%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.8366%" y="101" width="0.0692%" height="15" fill="rgb(254,105,39)" fg:x="28502" fg:w="64"/><text x="31.1296%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="30.9059%" y="101" width="0.0130%" height="15" fill="rgb(245,158,5)" fg:x="28566" fg:w="12"/><text x="31.1989%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.9189%" y="101" width="0.0692%" height="15" fill="rgb(249,208,11)" fg:x="28578" fg:w="64"/><text x="31.2118%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="30.9881%" y="101" width="0.0692%" height="15" fill="rgb(210,39,28)" fg:x="28642" fg:w="64"/><text x="31.2811%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="31.0574%" y="101" width="0.0130%" height="15" fill="rgb(211,56,53)" fg:x="28706" fg:w="12"/><text x="31.3503%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="31.0703%" y="101" width="0.0692%" height="15" fill="rgb(226,201,30)" fg:x="28718" fg:w="64"/><text x="31.3633%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="31.1396%" y="101" width="0.0519%" height="15" fill="rgb(239,101,34)" fg:x="28782" fg:w="48"/><text x="31.4325%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="31.1915%" y="101" width="0.0519%" height="15" fill="rgb(226,209,5)" fg:x="28830" fg:w="48"/><text x="31.4845%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="31.2434%" y="101" width="0.0692%" height="15" fill="rgb(250,105,47)" fg:x="28878" fg:w="64"/><text x="31.5364%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="31.3127%" y="101" width="0.0130%" height="15" fill="rgb(230,72,3)" fg:x="28942" fg:w="12"/><text x="31.6057%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="31.3257%" y="101" width="0.0519%" height="15" fill="rgb(232,218,39)" fg:x="28954" fg:w="48"/><text x="31.6186%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="31.3776%" y="101" width="0.0692%" height="15" fill="rgb(248,166,6)" fg:x="29002" fg:w="64"/><text x="31.6706%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="31.4468%" y="101" width="0.0130%" height="15" fill="rgb(247,89,20)" fg:x="29066" fg:w="12"/><text x="31.7398%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="31.4598%" y="101" width="0.0692%" height="15" fill="rgb(248,130,54)" fg:x="29078" fg:w="64"/><text x="31.7528%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="31.5291%" y="101" width="0.0519%" height="15" fill="rgb(234,196,4)" fg:x="29142" fg:w="48"/><text x="31.8220%" y="111.50"></text></g><g><title>leb128_decode (138 instructions, 0.15%)</title><rect x="31.5810%" y="101" width="0.1493%" height="15" fill="rgb(250,143,31)" fg:x="29190" fg:w="138"/><text x="31.8740%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="31.7303%" y="101" width="0.0692%" height="15" fill="rgb(211,110,34)" fg:x="29328" fg:w="64"/><text x="32.0233%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="31.7995%" y="101" width="0.0130%" height="15" fill="rgb(215,124,48)" fg:x="29392" fg:w="12"/><text x="32.0925%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="31.8125%" y="101" width="0.2467%" height="15" fill="rgb(216,46,13)" fg:x="29404" fg:w="228"/><text x="32.1055%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="32.0592%" y="101" width="0.0692%" height="15" fill="rgb(205,184,25)" fg:x="29632" fg:w="64"/><text x="32.3522%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (17 instructions, 0.02%)</title><rect x="32.1284%" y="101" width="0.0184%" height="15" fill="rgb(228,1,10)" fg:x="29696" fg:w="17"/><text x="32.4214%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="32.1468%" y="101" width="0.2467%" height="15" fill="rgb(213,116,27)" fg:x="29713" fg:w="228"/><text x="32.4398%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="32.3935%" y="101" width="0.0692%" height="15" fill="rgb(241,95,50)" fg:x="29941" fg:w="64"/><text x="32.6865%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="32.4628%" y="101" width="0.0130%" height="15" fill="rgb(238,48,32)" fg:x="30005" fg:w="12"/><text x="32.7557%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="32.4757%" y="101" width="0.0692%" height="15" fill="rgb(235,113,49)" fg:x="30017" fg:w="64"/><text x="32.7687%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="32.5450%" y="101" width="0.0692%" height="15" fill="rgb(205,127,43)" fg:x="30081" fg:w="64"/><text x="32.8379%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="32.6142%" y="101" width="0.0130%" height="15" fill="rgb(250,162,2)" fg:x="30145" fg:w="12"/><text x="32.9072%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="32.6272%" y="101" width="0.0692%" height="15" fill="rgb(220,13,41)" fg:x="30157" fg:w="64"/><text x="32.9202%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="32.6964%" y="101" width="0.0519%" height="15" fill="rgb(249,221,25)" fg:x="30221" fg:w="48"/><text x="32.9894%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="32.7484%" y="101" width="0.2467%" height="15" fill="rgb(215,208,19)" fg:x="30269" fg:w="228"/><text x="33.0413%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="32.9951%" y="101" width="0.0692%" height="15" fill="rgb(236,175,2)" fg:x="30497" fg:w="64"/><text x="33.2880%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="33.0643%" y="101" width="0.0130%" height="15" fill="rgb(241,52,2)" fg:x="30561" fg:w="12"/><text x="33.3573%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="33.0773%" y="101" width="0.2467%" height="15" fill="rgb(248,140,14)" fg:x="30573" fg:w="228"/><text x="33.3702%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.3240%" y="101" width="0.0692%" height="15" fill="rgb(253,22,42)" fg:x="30801" fg:w="64"/><text x="33.6169%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="33.3932%" y="101" width="0.0130%" height="15" fill="rgb(234,61,47)" fg:x="30865" fg:w="12"/><text x="33.6862%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="33.4062%" y="101" width="0.2467%" height="15" fill="rgb(208,226,15)" fg:x="30877" fg:w="228"/><text x="33.6992%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.6529%" y="101" width="0.0692%" height="15" fill="rgb(217,221,4)" fg:x="31105" fg:w="64"/><text x="33.9458%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="33.7221%" y="101" width="0.0130%" height="15" fill="rgb(212,174,34)" fg:x="31169" fg:w="12"/><text x="34.0151%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.7351%" y="101" width="0.0692%" height="15" fill="rgb(253,83,4)" fg:x="31181" fg:w="64"/><text x="34.0281%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.8043%" y="101" width="0.0692%" height="15" fill="rgb(250,195,49)" fg:x="31245" fg:w="64"/><text x="34.0973%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="33.8736%" y="101" width="0.0130%" height="15" fill="rgb(241,192,25)" fg:x="31309" fg:w="12"/><text x="34.1665%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.8866%" y="101" width="0.0692%" height="15" fill="rgb(208,124,10)" fg:x="31321" fg:w="64"/><text x="34.1795%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="33.9558%" y="101" width="0.0692%" height="15" fill="rgb(222,33,0)" fg:x="31385" fg:w="64"/><text x="34.2488%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="34.0250%" y="101" width="0.0130%" height="15" fill="rgb(234,209,28)" fg:x="31449" fg:w="12"/><text x="34.3180%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="34.0380%" y="101" width="0.0692%" height="15" fill="rgb(224,11,23)" fg:x="31461" fg:w="64"/><text x="34.3310%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="34.1073%" y="101" width="0.0519%" height="15" fill="rgb(232,99,1)" fg:x="31525" fg:w="48"/><text x="34.4002%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="34.1592%" y="101" width="0.0519%" height="15" fill="rgb(237,95,45)" fg:x="31573" fg:w="48"/><text x="34.4522%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="34.2111%" y="101" width="0.0692%" height="15" fill="rgb(208,109,11)" fg:x="31621" fg:w="64"/><text x="34.5041%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="34.2804%" y="101" width="0.0130%" height="15" fill="rgb(216,190,48)" fg:x="31685" fg:w="12"/><text x="34.5733%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="34.2933%" y="101" width="0.0519%" height="15" fill="rgb(251,171,36)" fg:x="31697" fg:w="48"/><text x="34.5863%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="34.3453%" y="101" width="0.0692%" height="15" fill="rgb(230,62,22)" fg:x="31745" fg:w="64"/><text x="34.6382%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="34.4145%" y="101" width="0.0130%" height="15" fill="rgb(225,114,35)" fg:x="31809" fg:w="12"/><text x="34.7075%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="34.4275%" y="101" width="0.0692%" height="15" fill="rgb(215,118,42)" fg:x="31821" fg:w="64"/><text x="34.7205%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="34.4967%" y="101" width="0.0519%" height="15" fill="rgb(243,119,21)" fg:x="31885" fg:w="48"/><text x="34.7897%" y="111.50"></text></g><g><title>leb128_decode (183 instructions, 0.20%)</title><rect x="34.5487%" y="101" width="0.1980%" height="15" fill="rgb(252,177,53)" fg:x="31933" fg:w="183"/><text x="34.8416%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="34.7467%" y="101" width="0.0692%" height="15" fill="rgb(237,209,29)" fg:x="32116" fg:w="64"/><text x="35.0396%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="34.8159%" y="101" width="0.0130%" height="15" fill="rgb(212,65,23)" fg:x="32180" fg:w="12"/><text x="35.1089%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="34.8289%" y="101" width="0.2467%" height="15" fill="rgb(230,222,46)" fg:x="32192" fg:w="228"/><text x="35.1219%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="35.0756%" y="101" width="0.0692%" height="15" fill="rgb(215,135,32)" fg:x="32420" fg:w="64"/><text x="35.3685%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="35.1448%" y="101" width="0.0130%" height="15" fill="rgb(246,101,22)" fg:x="32484" fg:w="12"/><text x="35.4378%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="35.1578%" y="101" width="0.2467%" height="15" fill="rgb(206,107,13)" fg:x="32496" fg:w="228"/><text x="35.4508%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="35.4045%" y="101" width="0.0692%" height="15" fill="rgb(250,100,44)" fg:x="32724" fg:w="64"/><text x="35.6974%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="35.4737%" y="101" width="0.0130%" height="15" fill="rgb(231,147,38)" fg:x="32788" fg:w="12"/><text x="35.7667%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="35.4867%" y="101" width="0.2467%" height="15" fill="rgb(229,8,40)" fg:x="32800" fg:w="228"/><text x="35.7797%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="35.7334%" y="101" width="0.0692%" height="15" fill="rgb(221,135,30)" fg:x="33028" fg:w="64"/><text x="36.0263%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="35.8026%" y="101" width="0.0130%" height="15" fill="rgb(249,193,18)" fg:x="33092" fg:w="12"/><text x="36.0956%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="35.8156%" y="101" width="0.2467%" height="15" fill="rgb(209,133,39)" fg:x="33104" fg:w="228"/><text x="36.1086%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="36.0623%" y="101" width="0.0692%" height="15" fill="rgb(232,100,14)" fg:x="33332" fg:w="64"/><text x="36.3552%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="36.1315%" y="101" width="0.0130%" height="15" fill="rgb(224,185,1)" fg:x="33396" fg:w="12"/><text x="36.4245%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="36.1445%" y="101" width="0.2467%" height="15" fill="rgb(223,139,8)" fg:x="33408" fg:w="228"/><text x="36.4375%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="36.3912%" y="101" width="0.0692%" height="15" fill="rgb(232,213,38)" fg:x="33636" fg:w="64"/><text x="36.6841%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="36.4604%" y="101" width="0.0130%" height="15" fill="rgb(207,94,22)" fg:x="33700" fg:w="12"/><text x="36.7534%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="36.4734%" y="101" width="0.2467%" height="15" fill="rgb(219,183,54)" fg:x="33712" fg:w="228"/><text x="36.7664%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="36.7201%" y="101" width="0.0692%" height="15" fill="rgb(216,185,54)" fg:x="33940" fg:w="64"/><text x="37.0130%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="36.7893%" y="101" width="0.0130%" height="15" fill="rgb(254,217,39)" fg:x="34004" fg:w="12"/><text x="37.0823%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="36.8023%" y="101" width="0.0692%" height="15" fill="rgb(240,178,23)" fg:x="34016" fg:w="64"/><text x="37.0953%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="36.8715%" y="101" width="0.0519%" height="15" fill="rgb(218,11,47)" fg:x="34080" fg:w="48"/><text x="37.1645%" y="111.50"></text></g><g><title>leb128_decode (183 instructions, 0.20%)</title><rect x="36.9235%" y="101" width="0.1980%" height="15" fill="rgb(218,51,51)" fg:x="34128" fg:w="183"/><text x="37.2164%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.1215%" y="101" width="0.0692%" height="15" fill="rgb(238,126,27)" fg:x="34311" fg:w="64"/><text x="37.4144%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="37.1907%" y="101" width="0.0130%" height="15" fill="rgb(249,202,22)" fg:x="34375" fg:w="12"/><text x="37.4837%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="37.2037%" y="101" width="0.2467%" height="15" fill="rgb(254,195,49)" fg:x="34387" fg:w="228"/><text x="37.4967%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.4504%" y="101" width="0.0692%" height="15" fill="rgb(208,123,14)" fg:x="34615" fg:w="64"/><text x="37.7433%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="37.5196%" y="101" width="0.0130%" height="15" fill="rgb(224,200,8)" fg:x="34679" fg:w="12"/><text x="37.8126%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.5326%" y="101" width="0.0692%" height="15" fill="rgb(217,61,36)" fg:x="34691" fg:w="64"/><text x="37.8256%" y="111.50"></text></g><g><title>sleb128_decode (103 instructions, 0.11%)</title><rect x="37.6018%" y="101" width="0.1114%" height="15" fill="rgb(206,35,45)" fg:x="34755" fg:w="103"/><text x="37.8948%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (24 instructions, 0.03%)</title><rect x="37.7133%" y="101" width="0.0260%" height="15" fill="rgb(217,65,33)" fg:x="34858" fg:w="24"/><text x="38.0062%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.7392%" y="101" width="0.0692%" height="15" fill="rgb(222,158,48)" fg:x="34882" fg:w="64"/><text x="38.0322%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.8085%" y="101" width="0.0692%" height="15" fill="rgb(254,2,54)" fg:x="34946" fg:w="64"/><text x="38.1014%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="37.8777%" y="101" width="0.0130%" height="15" fill="rgb(250,143,38)" fg:x="35010" fg:w="12"/><text x="38.1707%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.8907%" y="101" width="0.0692%" height="15" fill="rgb(248,25,0)" fg:x="35022" fg:w="64"/><text x="38.1837%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="37.9599%" y="101" width="0.0692%" height="15" fill="rgb(206,152,27)" fg:x="35086" fg:w="64"/><text x="38.2529%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.0292%" y="101" width="0.0692%" height="15" fill="rgb(240,77,30)" fg:x="35150" fg:w="64"/><text x="38.3222%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.0984%" y="101" width="0.0692%" height="15" fill="rgb(231,5,3)" fg:x="35214" fg:w="64"/><text x="38.3914%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.1677%" y="101" width="0.0692%" height="15" fill="rgb(207,226,32)" fg:x="35278" fg:w="64"/><text x="38.4606%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.2369%" y="101" width="0.0692%" height="15" fill="rgb(222,207,47)" fg:x="35342" fg:w="64"/><text x="38.5299%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.3062%" y="101" width="0.0692%" height="15" fill="rgb(229,115,45)" fg:x="35406" fg:w="64"/><text x="38.5991%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.3754%" y="101" width="0.0692%" height="15" fill="rgb(224,191,6)" fg:x="35470" fg:w="64"/><text x="38.6684%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.4446%" y="101" width="0.0692%" height="15" fill="rgb(230,227,24)" fg:x="35534" fg:w="64"/><text x="38.7376%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.5139%" y="101" width="0.0692%" height="15" fill="rgb(228,80,19)" fg:x="35598" fg:w="64"/><text x="38.8069%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.5831%" y="101" width="0.0692%" height="15" fill="rgb(247,229,0)" fg:x="35662" fg:w="64"/><text x="38.8761%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.6524%" y="101" width="0.0692%" height="15" fill="rgb(237,194,15)" fg:x="35726" fg:w="64"/><text x="38.9453%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.7216%" y="101" width="0.0692%" height="15" fill="rgb(219,203,20)" fg:x="35790" fg:w="64"/><text x="39.0146%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.7909%" y="101" width="0.0692%" height="15" fill="rgb(234,128,8)" fg:x="35854" fg:w="64"/><text x="39.0838%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.8601%" y="101" width="0.0692%" height="15" fill="rgb(248,202,8)" fg:x="35918" fg:w="64"/><text x="39.1531%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.9293%" y="101" width="0.0692%" height="15" fill="rgb(206,104,37)" fg:x="35982" fg:w="64"/><text x="39.2223%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="38.9986%" y="101" width="0.0692%" height="15" fill="rgb(223,8,27)" fg:x="36046" fg:w="64"/><text x="39.2916%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="39.0678%" y="101" width="0.0692%" height="15" fill="rgb(216,217,28)" fg:x="36110" fg:w="64"/><text x="39.3608%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="39.1371%" y="101" width="0.0692%" height="15" fill="rgb(249,199,1)" fg:x="36174" fg:w="64"/><text x="39.4300%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="39.2063%" y="101" width="0.0692%" height="15" fill="rgb(240,85,17)" fg:x="36238" fg:w="64"/><text x="39.4993%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="39.2756%" y="101" width="0.0692%" height="15" fill="rgb(206,108,45)" fg:x="36302" fg:w="64"/><text x="39.5685%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="39.3448%" y="101" width="0.0519%" height="15" fill="rgb(245,210,41)" fg:x="36366" fg:w="48"/><text x="39.6378%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="39.3967%" y="101" width="0.0692%" height="15" fill="rgb(206,13,37)" fg:x="36414" fg:w="64"/><text x="39.6897%" y="111.50"></text></g><g><title>motoko_rts::idl::check_typearg::hae412e6855237633 (12 instructions, 0.01%)</title><rect x="39.4660%" y="101" width="0.0130%" height="15" fill="rgb(250,61,18)" fg:x="36478" fg:w="12"/><text x="39.7589%" y="111.50"></text></g><g><title>parse_idl_header (16,341 instructions, 17.68%)</title><rect x="25.9702%" y="117" width="17.6795%" height="15" fill="rgb(235,172,48)" fg:x="24004" fg:w="16341"/><text x="26.2632%" y="127.50">parse_idl_header</text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="43.6497%" y="117" width="0.0519%" height="15" fill="rgb(249,201,17)" fg:x="40345" fg:w="48"/><text x="43.9427%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="43.7017%" y="117" width="0.0692%" height="15" fill="rgb(219,208,6)" fg:x="40393" fg:w="64"/><text x="43.9946%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="43.7763%" y="117" width="0.0692%" height="15" fill="rgb(248,31,23)" fg:x="40462" fg:w="64"/><text x="44.0693%" y="127.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="43.8455%" y="117" width="0.0519%" height="15" fill="rgb(245,15,42)" fg:x="40526" fg:w="48"/><text x="44.1385%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="43.8975%" y="101" width="0.2467%" height="15" fill="rgb(222,217,39)" fg:x="40574" fg:w="228"/><text x="44.1904%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="43.8975%" y="117" width="0.2856%" height="15" fill="rgb(210,219,27)" fg:x="40574" fg:w="264"/><text x="44.1904%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.1831%" y="117" width="0.0692%" height="15" fill="rgb(252,166,36)" fg:x="40838" fg:w="64"/><text x="44.4761%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.2578%" y="117" width="0.0692%" height="15" fill="rgb(245,132,34)" fg:x="40907" fg:w="64"/><text x="44.5507%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.3270%" y="117" width="0.0692%" height="15" fill="rgb(236,54,3)" fg:x="40971" fg:w="64"/><text x="44.6200%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.3962%" y="117" width="0.0692%" height="15" fill="rgb(241,173,43)" fg:x="41035" fg:w="64"/><text x="44.6892%" y="127.50"></text></g><g><title>@deserialize_go&lt;n16&gt; (61 instructions, 0.07%)</title><rect x="44.4655%" y="117" width="0.0660%" height="15" fill="rgb(215,190,9)" fg:x="41099" fg:w="61"/><text x="44.7585%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="44.5315%" y="101" width="0.2467%" height="15" fill="rgb(242,101,16)" fg:x="41160" fg:w="228"/><text x="44.8244%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="44.5315%" y="117" width="0.2856%" height="15" fill="rgb(223,190,21)" fg:x="41160" fg:w="264"/><text x="44.8244%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.8171%" y="117" width="0.0692%" height="15" fill="rgb(215,228,25)" fg:x="41424" fg:w="64"/><text x="45.1101%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.8918%" y="117" width="0.0692%" height="15" fill="rgb(225,36,22)" fg:x="41493" fg:w="64"/><text x="45.1847%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="44.9610%" y="117" width="0.0692%" height="15" fill="rgb(251,106,46)" fg:x="41557" fg:w="64"/><text x="45.2540%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="45.0302%" y="117" width="0.0692%" height="15" fill="rgb(208,90,1)" fg:x="41621" fg:w="64"/><text x="45.3232%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="45.1049%" y="101" width="0.0692%" height="15" fill="rgb(243,10,4)" fg:x="41690" fg:w="64"/><text x="45.3979%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="45.1741%" y="101" width="0.0519%" height="15" fill="rgb(212,137,27)" fg:x="41754" fg:w="48"/><text x="45.4671%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="45.2261%" y="85" width="0.2467%" height="15" fill="rgb(231,220,49)" fg:x="41802" fg:w="228"/><text x="45.5190%" y="95.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="45.2261%" y="101" width="0.2856%" height="15" fill="rgb(237,96,20)" fg:x="41802" fg:w="264"/><text x="45.5190%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="45.5117%" y="101" width="0.0692%" height="15" fill="rgb(239,229,30)" fg:x="42066" fg:w="64"/><text x="45.8047%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="45.5863%" y="85" width="0.0519%" height="15" fill="rgb(219,65,33)" fg:x="42135" fg:w="48"/><text x="45.8793%" y="95.50"></text></g><g><title>utf8_validate (34 instructions, 0.04%)</title><rect x="45.6383%" y="85" width="0.0368%" height="15" fill="rgb(243,134,7)" fg:x="42183" fg:w="34"/><text x="45.9312%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="45.6751%" y="69" width="0.0617%" height="15" fill="rgb(216,177,54)" fg:x="42217" fg:w="57"/><text x="45.9680%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="45.6751%" y="85" width="0.0768%" height="15" fill="rgb(211,160,20)" fg:x="42217" fg:w="71"/><text x="45.9680%" y="95.50"></text></g><g><title>memcpy (50 instructions, 0.05%)</title><rect x="45.7519%" y="85" width="0.0541%" height="15" fill="rgb(239,85,39)" fg:x="42288" fg:w="50"/><text x="46.0448%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (285 instructions, 0.31%)</title><rect x="45.5809%" y="101" width="0.3083%" height="15" fill="rgb(232,125,22)" fg:x="42130" fg:w="285"/><text x="45.8739%" y="111.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="45.8893%" y="85" width="0.2467%" height="15" fill="rgb(244,57,34)" fg:x="42415" fg:w="228"/><text x="46.1822%" y="95.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="45.8893%" y="101" width="0.2856%" height="15" fill="rgb(214,203,32)" fg:x="42415" fg:w="264"/><text x="46.1822%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="46.1749%" y="101" width="0.0692%" height="15" fill="rgb(207,58,43)" fg:x="42679" fg:w="64"/><text x="46.4679%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="46.2496%" y="85" width="0.0519%" height="15" fill="rgb(215,193,15)" fg:x="42748" fg:w="48"/><text x="46.5425%" y="95.50"></text></g><g><title>utf8_validate (268 instructions, 0.29%)</title><rect x="46.3015%" y="85" width="0.2900%" height="15" fill="rgb(232,15,44)" fg:x="42796" fg:w="268"/><text x="46.5945%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="46.5914%" y="69" width="0.0617%" height="15" fill="rgb(212,3,48)" fg:x="43064" fg:w="57"/><text x="46.8844%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="46.5914%" y="85" width="0.0768%" height="15" fill="rgb(218,128,7)" fg:x="43064" fg:w="71"/><text x="46.8844%" y="95.50"></text></g><g><title>memcpy (139 instructions, 0.15%)</title><rect x="46.6683%" y="85" width="0.1504%" height="15" fill="rgb(226,216,39)" fg:x="43135" fg:w="139"/><text x="46.9612%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (608 instructions, 0.66%)</title><rect x="46.2441%" y="101" width="0.6578%" height="15" fill="rgb(243,47,51)" fg:x="42743" fg:w="608"/><text x="46.5371%" y="111.50"></text></g><g><title>@deserialize_go&lt;r(data:t,logo_type:t)&gt; (1,989 instructions, 2.15%)</title><rect x="45.0995%" y="117" width="2.1519%" height="15" fill="rgb(241,183,40)" fg:x="41685" fg:w="1989"/><text x="45.3925%" y="127.50">@..</text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="47.2514%" y="101" width="0.2467%" height="15" fill="rgb(231,217,32)" fg:x="43674" fg:w="228"/><text x="47.5444%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="47.2514%" y="117" width="0.2856%" height="15" fill="rgb(229,61,38)" fg:x="43674" fg:w="264"/><text x="47.5444%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="47.5370%" y="117" width="0.0692%" height="15" fill="rgb(225,210,5)" fg:x="43938" fg:w="64"/><text x="47.8300%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="47.6117%" y="101" width="0.0692%" height="15" fill="rgb(231,79,45)" fg:x="44007" fg:w="64"/><text x="47.9046%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="47.6809%" y="101" width="0.0692%" height="15" fill="rgb(224,100,7)" fg:x="44071" fg:w="64"/><text x="47.9739%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="47.7502%" y="101" width="0.0692%" height="15" fill="rgb(241,198,18)" fg:x="44135" fg:w="64"/><text x="48.0431%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="47.8248%" y="85" width="0.0519%" height="15" fill="rgb(252,97,53)" fg:x="44204" fg:w="48"/><text x="48.1178%" y="95.50"></text></g><g><title>utf8_validate (284 instructions, 0.31%)</title><rect x="47.8767%" y="85" width="0.3073%" height="15" fill="rgb(220,88,7)" fg:x="44252" fg:w="284"/><text x="48.1697%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="48.1840%" y="69" width="0.0617%" height="15" fill="rgb(213,176,14)" fg:x="44536" fg:w="57"/><text x="48.4770%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="48.1840%" y="85" width="0.0768%" height="15" fill="rgb(246,73,7)" fg:x="44536" fg:w="71"/><text x="48.4770%" y="95.50"></text></g><g><title>memcpy (168 instructions, 0.18%)</title><rect x="48.2608%" y="85" width="0.1818%" height="15" fill="rgb(245,64,36)" fg:x="44607" fg:w="168"/><text x="48.5538%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (653 instructions, 0.71%)</title><rect x="47.8194%" y="101" width="0.7065%" height="15" fill="rgb(245,80,10)" fg:x="44199" fg:w="653"/><text x="48.1124%" y="111.50"></text></g><g><title>@deserialize_go&lt;?t&gt; (1,104 instructions, 1.19%)</title><rect x="47.6063%" y="117" width="1.1944%" height="15" fill="rgb(232,107,50)" fg:x="44002" fg:w="1104"/><text x="47.8992%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="48.8007%" y="101" width="0.2467%" height="15" fill="rgb(253,3,0)" fg:x="45106" fg:w="228"/><text x="49.0937%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="48.8007%" y="117" width="0.2856%" height="15" fill="rgb(212,99,53)" fg:x="45106" fg:w="264"/><text x="49.0937%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.0863%" y="117" width="0.0692%" height="15" fill="rgb(249,111,54)" fg:x="45370" fg:w="64"/><text x="49.3793%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.1610%" y="117" width="0.0692%" height="15" fill="rgb(249,55,30)" fg:x="45439" fg:w="64"/><text x="49.4539%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.2302%" y="117" width="0.0692%" height="15" fill="rgb(237,47,42)" fg:x="45503" fg:w="64"/><text x="49.5232%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.2995%" y="117" width="0.0692%" height="15" fill="rgb(211,20,18)" fg:x="45567" fg:w="64"/><text x="49.5924%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.3741%" y="101" width="0.0692%" height="15" fill="rgb(231,203,46)" fg:x="45636" fg:w="64"/><text x="49.6671%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.4434%" y="101" width="0.0692%" height="15" fill="rgb(237,142,3)" fg:x="45700" fg:w="64"/><text x="49.7363%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.5126%" y="101" width="0.0692%" height="15" fill="rgb(241,107,1)" fg:x="45764" fg:w="64"/><text x="49.8056%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.5873%" y="85" width="0.0692%" height="15" fill="rgb(229,83,13)" fg:x="45833" fg:w="64"/><text x="49.8802%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="49.6565%" y="85" width="0.0519%" height="15" fill="rgb(241,91,40)" fg:x="45897" fg:w="48"/><text x="49.9495%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="49.7084%" y="69" width="0.0519%" height="15" fill="rgb(225,3,45)" fg:x="45945" fg:w="48"/><text x="50.0014%" y="79.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="49.7084%" y="85" width="0.0909%" height="15" fill="rgb(244,223,14)" fg:x="45945" fg:w="84"/><text x="50.0014%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.7993%" y="85" width="0.0692%" height="15" fill="rgb(224,124,37)" fg:x="46029" fg:w="64"/><text x="50.0923%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="49.8740%" y="85" width="0.0692%" height="15" fill="rgb(251,171,30)" fg:x="46098" fg:w="64"/><text x="50.1669%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="49.9432%" y="85" width="0.0519%" height="15" fill="rgb(236,46,54)" fg:x="46162" fg:w="48"/><text x="50.2362%" y="95.50"></text></g><g><title>leb128_decode (138 instructions, 0.15%)</title><rect x="49.9951%" y="69" width="0.1493%" height="15" fill="rgb(245,213,5)" fg:x="46210" fg:w="138"/><text x="50.2881%" y="79.50"></text></g><g><title>find_field (174 instructions, 0.19%)</title><rect x="49.9951%" y="85" width="0.1883%" height="15" fill="rgb(230,144,27)" fg:x="46210" fg:w="174"/><text x="50.2881%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="50.1834%" y="85" width="0.0692%" height="15" fill="rgb(220,86,6)" fg:x="46384" fg:w="64"/><text x="50.4764%" y="95.50"></text></g><g><title>@deserialize_go&lt;n64&gt; (70 instructions, 0.08%)</title><rect x="50.2526%" y="85" width="0.0757%" height="15" fill="rgb(240,20,13)" fg:x="46448" fg:w="70"/><text x="50.5456%" y="95.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="50.3284%" y="69" width="0.2467%" height="15" fill="rgb(217,89,34)" fg:x="46518" fg:w="228"/><text x="50.6213%" y="79.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="50.3284%" y="85" width="0.2856%" height="15" fill="rgb(229,13,5)" fg:x="46518" fg:w="264"/><text x="50.6213%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="50.6140%" y="85" width="0.0692%" height="15" fill="rgb(244,67,35)" fg:x="46782" fg:w="64"/><text x="50.9070%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="50.6886%" y="69" width="0.0519%" height="15" fill="rgb(221,40,2)" fg:x="46851" fg:w="48"/><text x="50.9816%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="50.7406%" y="53" width="0.0617%" height="15" fill="rgb(237,157,21)" fg:x="46899" fg:w="57"/><text x="51.0335%" y="63.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="50.7406%" y="69" width="0.0703%" height="15" fill="rgb(222,94,11)" fg:x="46899" fg:w="65"/><text x="51.0335%" y="79.50"></text></g><g><title>memcpy (167 instructions, 0.18%)</title><rect x="50.8109%" y="69" width="0.1807%" height="15" fill="rgb(249,113,6)" fg:x="46964" fg:w="167"/><text x="51.1039%" y="79.50"></text></g><g><title>@deserialize_go&lt;P&gt; (398 instructions, 0.43%)</title><rect x="50.6832%" y="85" width="0.4306%" height="15" fill="rgb(238,137,36)" fg:x="46846" fg:w="398"/><text x="50.9762%" y="95.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="51.1138%" y="69" width="0.2467%" height="15" fill="rgb(210,102,26)" fg:x="47244" fg:w="228"/><text x="51.4068%" y="79.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="51.1138%" y="85" width="0.2856%" height="15" fill="rgb(218,30,30)" fg:x="47244" fg:w="264"/><text x="51.4068%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="51.3995%" y="85" width="0.0692%" height="15" fill="rgb(214,67,26)" fg:x="47508" fg:w="64"/><text x="51.6924%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="51.4741%" y="69" width="0.0692%" height="15" fill="rgb(251,9,53)" fg:x="47577" fg:w="64"/><text x="51.7671%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="51.5433%" y="69" width="0.0692%" height="15" fill="rgb(228,204,25)" fg:x="47641" fg:w="64"/><text x="51.8363%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="51.6126%" y="69" width="0.0519%" height="15" fill="rgb(207,153,8)" fg:x="47705" fg:w="48"/><text x="51.9056%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_array::hc667600bec1393ae (60 instructions, 0.06%)</title><rect x="51.6699%" y="53" width="0.0649%" height="15" fill="rgb(242,9,16)" fg:x="47758" fg:w="60"/><text x="51.9629%" y="63.50"></text></g><g><title>alloc_array (68 instructions, 0.07%)</title><rect x="51.6699%" y="69" width="0.0736%" height="15" fill="rgb(217,211,10)" fg:x="47758" fg:w="68"/><text x="51.9629%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="51.7489%" y="69" width="0.0692%" height="15" fill="rgb(219,228,52)" fg:x="47831" fg:w="64"/><text x="52.0419%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="51.8182%" y="69" width="0.0519%" height="15" fill="rgb(231,92,29)" fg:x="47895" fg:w="48"/><text x="52.1111%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="51.8701%" y="53" width="0.2467%" height="15" fill="rgb(232,8,23)" fg:x="47943" fg:w="228"/><text x="52.1631%" y="63.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="51.8701%" y="69" width="0.2856%" height="15" fill="rgb(216,211,34)" fg:x="47943" fg:w="264"/><text x="52.1631%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="52.1557%" y="69" width="0.0692%" height="15" fill="rgb(236,151,0)" fg:x="48207" fg:w="64"/><text x="52.4487%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="52.2304%" y="53" width="0.0692%" height="15" fill="rgb(209,168,3)" fg:x="48276" fg:w="64"/><text x="52.5233%" y="63.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="52.2996%" y="53" width="0.0692%" height="15" fill="rgb(208,129,28)" fg:x="48340" fg:w="64"/><text x="52.5926%" y="63.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="52.3688%" y="53" width="0.0519%" height="15" fill="rgb(229,78,22)" fg:x="48404" fg:w="48"/><text x="52.6618%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="52.4208%" y="37" width="0.0617%" height="15" fill="rgb(228,187,13)" fg:x="48452" fg:w="57"/><text x="52.7137%" y="47.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="52.4208%" y="53" width="0.0703%" height="15" fill="rgb(240,119,24)" fg:x="48452" fg:w="65"/><text x="52.7137%" y="63.50"></text></g><g><title>memcpy (156 instructions, 0.17%)</title><rect x="52.4911%" y="53" width="0.1688%" height="15" fill="rgb(209,194,42)" fg:x="48517" fg:w="156"/><text x="52.7841%" y="63.50"></text></g><g><title>@deserialize_go&lt;B&gt; (532 instructions, 0.58%)</title><rect x="52.2250%" y="69" width="0.5756%" height="15" fill="rgb(247,200,46)" fg:x="48271" fg:w="532"/><text x="52.5179%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="52.8005%" y="53" width="0.2467%" height="15" fill="rgb(218,76,16)" fg:x="48803" fg:w="228"/><text x="53.0935%" y="63.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="52.8005%" y="69" width="0.2856%" height="15" fill="rgb(225,21,48)" fg:x="48803" fg:w="264"/><text x="53.0935%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="53.0862%" y="69" width="0.0692%" height="15" fill="rgb(239,223,50)" fg:x="49067" fg:w="64"/><text x="53.3791%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="53.1608%" y="69" width="0.0692%" height="15" fill="rgb(244,45,21)" fg:x="49136" fg:w="64"/><text x="53.4538%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="53.2300%" y="69" width="0.0692%" height="15" fill="rgb(232,33,43)" fg:x="49200" fg:w="64"/><text x="53.5230%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="53.2993%" y="69" width="0.0519%" height="15" fill="rgb(209,8,3)" fg:x="49264" fg:w="48"/><text x="53.5923%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_array::hc667600bec1393ae (60 instructions, 0.06%)</title><rect x="53.3566%" y="53" width="0.0649%" height="15" fill="rgb(214,25,53)" fg:x="49317" fg:w="60"/><text x="53.6496%" y="63.50"></text></g><g><title>alloc_array (68 instructions, 0.07%)</title><rect x="53.3566%" y="69" width="0.0736%" height="15" fill="rgb(254,186,54)" fg:x="49317" fg:w="68"/><text x="53.6496%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="53.4356%" y="69" width="0.0692%" height="15" fill="rgb(208,174,49)" fg:x="49390" fg:w="64"/><text x="53.7286%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="53.5049%" y="69" width="0.0519%" height="15" fill="rgb(233,191,51)" fg:x="49454" fg:w="48"/><text x="53.7978%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="53.5568%" y="53" width="0.0519%" height="15" fill="rgb(222,134,10)" fg:x="49502" fg:w="48"/><text x="53.8498%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="53.5568%" y="69" width="0.0909%" height="15" fill="rgb(230,226,20)" fg:x="49502" fg:w="84"/><text x="53.8498%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="53.6477%" y="69" width="0.0692%" height="15" fill="rgb(251,111,25)" fg:x="49586" fg:w="64"/><text x="53.9406%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="53.7223%" y="53" width="0.0519%" height="15" fill="rgb(224,40,46)" fg:x="49655" fg:w="48"/><text x="54.0153%" y="63.50"></text></g><g><title>utf8_validate (162 instructions, 0.18%)</title><rect x="53.7742%" y="53" width="0.1753%" height="15" fill="rgb(236,108,47)" fg:x="49703" fg:w="162"/><text x="54.0672%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="53.9495%" y="37" width="0.0617%" height="15" fill="rgb(234,93,0)" fg:x="49865" fg:w="57"/><text x="54.2425%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="53.9495%" y="53" width="0.0768%" height="15" fill="rgb(224,213,32)" fg:x="49865" fg:w="71"/><text x="54.2425%" y="63.50"></text></g><g><title>memcpy (72 instructions, 0.08%)</title><rect x="54.0263%" y="53" width="0.0779%" height="15" fill="rgb(251,11,48)" fg:x="49936" fg:w="72"/><text x="54.3193%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (435 instructions, 0.47%)</title><rect x="53.7169%" y="69" width="0.4706%" height="15" fill="rgb(236,173,5)" fg:x="49650" fg:w="435"/><text x="54.0099%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="54.1875%" y="53" width="0.0519%" height="15" fill="rgb(230,95,12)" fg:x="50085" fg:w="48"/><text x="54.4805%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="54.1875%" y="69" width="0.0909%" height="15" fill="rgb(232,209,1)" fg:x="50085" fg:w="84"/><text x="54.4805%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="54.2784%" y="69" width="0.0692%" height="15" fill="rgb(232,6,1)" fg:x="50169" fg:w="64"/><text x="54.5714%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="54.3531%" y="69" width="0.0692%" height="15" fill="rgb(210,224,50)" fg:x="50238" fg:w="64"/><text x="54.6460%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="54.4223%" y="69" width="0.0519%" height="15" fill="rgb(228,127,35)" fg:x="50302" fg:w="48"/><text x="54.7153%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="54.4742%" y="69" width="0.0519%" height="15" fill="rgb(245,102,45)" fg:x="50350" fg:w="48"/><text x="54.7672%" y="79.50"></text></g><g><title>skip_leb128 (76 instructions, 0.08%)</title><rect x="54.5262%" y="69" width="0.0822%" height="15" fill="rgb(214,1,49)" fg:x="50398" fg:w="76"/><text x="54.8191%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="54.6084%" y="69" width="0.0270%" height="15" fill="rgb(226,163,40)" fg:x="50474" fg:w="25"/><text x="54.9014%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="54.6354%" y="69" width="0.1006%" height="15" fill="rgb(239,212,28)" fg:x="50499" fg:w="93"/><text x="54.9284%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="54.7361%" y="69" width="0.0270%" height="15" fill="rgb(220,20,13)" fg:x="50592" fg:w="25"/><text x="55.0290%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="54.7631%" y="69" width="0.1006%" height="15" fill="rgb(210,164,35)" fg:x="50617" fg:w="93"/><text x="55.0561%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="54.8637%" y="69" width="0.0270%" height="15" fill="rgb(248,109,41)" fg:x="50710" fg:w="25"/><text x="55.1567%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="54.8908%" y="69" width="0.1006%" height="15" fill="rgb(238,23,50)" fg:x="50735" fg:w="93"/><text x="55.1837%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="54.9914%" y="69" width="0.0270%" height="15" fill="rgb(211,48,49)" fg:x="50828" fg:w="25"/><text x="55.2844%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="55.0184%" y="69" width="0.1006%" height="15" fill="rgb(223,36,21)" fg:x="50853" fg:w="93"/><text x="55.3114%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="55.1191%" y="69" width="0.0270%" height="15" fill="rgb(207,123,46)" fg:x="50946" fg:w="25"/><text x="55.4120%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="55.1461%" y="69" width="0.1006%" height="15" fill="rgb(240,218,32)" fg:x="50971" fg:w="93"/><text x="55.4391%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="55.2467%" y="69" width="0.0270%" height="15" fill="rgb(252,5,43)" fg:x="51064" fg:w="25"/><text x="55.5397%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="55.2738%" y="69" width="0.2467%" height="15" fill="rgb(252,84,19)" fg:x="51089" fg:w="228"/><text x="55.5667%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="55.5205%" y="69" width="0.0692%" height="15" fill="rgb(243,152,39)" fg:x="51317" fg:w="64"/><text x="55.8134%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="55.5951%" y="53" width="0.0519%" height="15" fill="rgb(234,160,15)" fg:x="51386" fg:w="48"/><text x="55.8881%" y="63.50"></text></g><g><title>utf8_validate (314 instructions, 0.34%)</title><rect x="55.6470%" y="53" width="0.3397%" height="15" fill="rgb(237,34,20)" fg:x="51434" fg:w="314"/><text x="55.9400%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="55.9868%" y="37" width="0.0617%" height="15" fill="rgb(229,97,13)" fg:x="51748" fg:w="57"/><text x="56.2797%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="55.9868%" y="53" width="0.0768%" height="15" fill="rgb(234,71,50)" fg:x="51748" fg:w="71"/><text x="56.2797%" y="63.50"></text></g><g><title>memcpy (338 instructions, 0.37%)</title><rect x="56.0636%" y="53" width="0.3657%" height="15" fill="rgb(253,155,4)" fg:x="51819" fg:w="338"/><text x="56.3565%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (853 instructions, 0.92%)</title><rect x="55.5897%" y="69" width="0.9229%" height="15" fill="rgb(222,185,37)" fg:x="51381" fg:w="853"/><text x="55.8827%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="56.5245%" y="69" width="0.0692%" height="15" fill="rgb(251,177,13)" fg:x="52245" fg:w="64"/><text x="56.8174%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="56.5937%" y="69" width="0.0519%" height="15" fill="rgb(250,179,40)" fg:x="52309" fg:w="48"/><text x="56.8867%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="56.6456%" y="53" width="0.0519%" height="15" fill="rgb(242,44,2)" fg:x="52357" fg:w="48"/><text x="56.9386%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="56.6456%" y="69" width="0.0909%" height="15" fill="rgb(216,177,13)" fg:x="52357" fg:w="84"/><text x="56.9386%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="56.7365%" y="69" width="0.0692%" height="15" fill="rgb(216,106,43)" fg:x="52441" fg:w="64"/><text x="57.0295%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="56.8112%" y="53" width="0.0519%" height="15" fill="rgb(216,183,2)" fg:x="52510" fg:w="48"/><text x="57.1041%" y="63.50"></text></g><g><title>utf8_validate (172 instructions, 0.19%)</title><rect x="56.8631%" y="53" width="0.1861%" height="15" fill="rgb(249,75,3)" fg:x="52558" fg:w="172"/><text x="57.1561%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="57.0492%" y="37" width="0.0617%" height="15" fill="rgb(219,67,39)" fg:x="52730" fg:w="57"/><text x="57.3422%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="57.0492%" y="53" width="0.0768%" height="15" fill="rgb(253,228,2)" fg:x="52730" fg:w="71"/><text x="57.3422%" y="63.50"></text></g><g><title>memcpy (115 instructions, 0.12%)</title><rect x="57.1260%" y="53" width="0.1244%" height="15" fill="rgb(235,138,27)" fg:x="52801" fg:w="115"/><text x="57.4190%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (488 instructions, 0.53%)</title><rect x="56.8058%" y="69" width="0.5280%" height="15" fill="rgb(236,97,51)" fg:x="52505" fg:w="488"/><text x="57.0987%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="57.3337%" y="53" width="0.0519%" height="15" fill="rgb(240,80,30)" fg:x="52993" fg:w="48"/><text x="57.6267%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="57.3337%" y="69" width="0.0909%" height="15" fill="rgb(230,178,19)" fg:x="52993" fg:w="84"/><text x="57.6267%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="57.4246%" y="69" width="0.0692%" height="15" fill="rgb(210,190,27)" fg:x="53077" fg:w="64"/><text x="57.7176%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="57.4993%" y="69" width="0.0692%" height="15" fill="rgb(222,107,31)" fg:x="53146" fg:w="64"/><text x="57.7922%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="57.5685%" y="69" width="0.0519%" height="15" fill="rgb(216,127,34)" fg:x="53210" fg:w="48"/><text x="57.8615%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="57.6204%" y="69" width="0.0519%" height="15" fill="rgb(234,116,52)" fg:x="53258" fg:w="48"/><text x="57.9134%" y="79.50"></text></g><g><title>skip_leb128 (76 instructions, 0.08%)</title><rect x="57.6724%" y="69" width="0.0822%" height="15" fill="rgb(222,124,15)" fg:x="53306" fg:w="76"/><text x="57.9653%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="57.7546%" y="69" width="0.0270%" height="15" fill="rgb(231,179,28)" fg:x="53382" fg:w="25"/><text x="58.0476%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="57.7816%" y="69" width="0.1006%" height="15" fill="rgb(226,93,45)" fg:x="53407" fg:w="93"/><text x="58.0746%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="57.8823%" y="69" width="0.0270%" height="15" fill="rgb(215,8,51)" fg:x="53500" fg:w="25"/><text x="58.1752%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="57.9093%" y="69" width="0.1006%" height="15" fill="rgb(223,106,5)" fg:x="53525" fg:w="93"/><text x="58.2023%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="58.0099%" y="69" width="0.0270%" height="15" fill="rgb(250,191,5)" fg:x="53618" fg:w="25"/><text x="58.3029%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="58.0370%" y="69" width="0.1006%" height="15" fill="rgb(242,132,44)" fg:x="53643" fg:w="93"/><text x="58.3299%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="58.1376%" y="69" width="0.0270%" height="15" fill="rgb(251,152,29)" fg:x="53736" fg:w="25"/><text x="58.4306%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="58.1646%" y="69" width="0.1006%" height="15" fill="rgb(218,179,5)" fg:x="53761" fg:w="93"/><text x="58.4576%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="58.2653%" y="69" width="0.0270%" height="15" fill="rgb(227,67,19)" fg:x="53854" fg:w="25"/><text x="58.5582%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="58.2923%" y="69" width="0.1006%" height="15" fill="rgb(233,119,31)" fg:x="53879" fg:w="93"/><text x="58.5853%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="58.3929%" y="69" width="0.0270%" height="15" fill="rgb(241,120,22)" fg:x="53972" fg:w="25"/><text x="58.6859%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="58.4200%" y="69" width="0.2467%" height="15" fill="rgb(224,102,30)" fg:x="53997" fg:w="228"/><text x="58.7129%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="58.6667%" y="69" width="0.0692%" height="15" fill="rgb(210,164,37)" fg:x="54225" fg:w="64"/><text x="58.9596%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="58.7413%" y="53" width="0.0519%" height="15" fill="rgb(226,191,16)" fg:x="54294" fg:w="48"/><text x="59.0343%" y="63.50"></text></g><g><title>utf8_validate (188 instructions, 0.20%)</title><rect x="58.7932%" y="53" width="0.2034%" height="15" fill="rgb(214,40,45)" fg:x="54342" fg:w="188"/><text x="59.0862%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="58.9966%" y="37" width="0.0617%" height="15" fill="rgb(244,29,26)" fg:x="54530" fg:w="57"/><text x="59.2896%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="58.9966%" y="53" width="0.0768%" height="15" fill="rgb(216,16,5)" fg:x="54530" fg:w="71"/><text x="59.2896%" y="63.50"></text></g><g><title>memcpy (90 instructions, 0.10%)</title><rect x="59.0735%" y="53" width="0.0974%" height="15" fill="rgb(249,76,35)" fg:x="54601" fg:w="90"/><text x="59.3664%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (479 instructions, 0.52%)</title><rect x="58.7359%" y="69" width="0.5182%" height="15" fill="rgb(207,11,44)" fg:x="54289" fg:w="479"/><text x="59.0289%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="59.2660%" y="69" width="0.0692%" height="15" fill="rgb(228,190,49)" fg:x="54779" fg:w="64"/><text x="59.5590%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="59.3353%" y="69" width="0.0519%" height="15" fill="rgb(214,173,12)" fg:x="54843" fg:w="48"/><text x="59.6282%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="59.3872%" y="53" width="0.0519%" height="15" fill="rgb(218,26,35)" fg:x="54891" fg:w="48"/><text x="59.6802%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="59.3872%" y="69" width="0.0909%" height="15" fill="rgb(220,200,19)" fg:x="54891" fg:w="84"/><text x="59.6802%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="59.4781%" y="69" width="0.0692%" height="15" fill="rgb(239,95,49)" fg:x="54975" fg:w="64"/><text x="59.7711%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="59.5527%" y="53" width="0.0519%" height="15" fill="rgb(235,85,53)" fg:x="55044" fg:w="48"/><text x="59.8457%" y="63.50"></text></g><g><title>utf8_validate (213 instructions, 0.23%)</title><rect x="59.6047%" y="53" width="0.2304%" height="15" fill="rgb(233,133,31)" fg:x="55092" fg:w="213"/><text x="59.8976%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="59.8351%" y="37" width="0.0617%" height="15" fill="rgb(218,25,20)" fg:x="55305" fg:w="57"/><text x="60.1281%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="59.8351%" y="53" width="0.0768%" height="15" fill="rgb(252,210,38)" fg:x="55305" fg:w="71"/><text x="60.1281%" y="63.50"></text></g><g><title>memcpy (156 instructions, 0.17%)</title><rect x="59.9119%" y="53" width="0.1688%" height="15" fill="rgb(242,134,21)" fg:x="55376" fg:w="156"/><text x="60.2049%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (570 instructions, 0.62%)</title><rect x="59.5473%" y="69" width="0.6167%" height="15" fill="rgb(213,28,48)" fg:x="55039" fg:w="570"/><text x="59.8403%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="60.1640%" y="53" width="0.0519%" height="15" fill="rgb(250,196,2)" fg:x="55609" fg:w="48"/><text x="60.4570%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="60.1640%" y="69" width="0.0909%" height="15" fill="rgb(227,5,17)" fg:x="55609" fg:w="84"/><text x="60.4570%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="60.2549%" y="69" width="0.0692%" height="15" fill="rgb(221,226,24)" fg:x="55693" fg:w="64"/><text x="60.5479%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="60.3296%" y="69" width="0.0692%" height="15" fill="rgb(211,5,48)" fg:x="55762" fg:w="64"/><text x="60.6225%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="60.3988%" y="69" width="0.0519%" height="15" fill="rgb(219,150,6)" fg:x="55826" fg:w="48"/><text x="60.6918%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="60.4507%" y="69" width="0.0519%" height="15" fill="rgb(251,46,16)" fg:x="55874" fg:w="48"/><text x="60.7437%" y="79.50"></text></g><g><title>skip_leb128 (76 instructions, 0.08%)</title><rect x="60.5027%" y="69" width="0.0822%" height="15" fill="rgb(220,204,40)" fg:x="55922" fg:w="76"/><text x="60.7956%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="60.5849%" y="69" width="0.0270%" height="15" fill="rgb(211,85,2)" fg:x="55998" fg:w="25"/><text x="60.8779%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="60.6119%" y="69" width="0.1006%" height="15" fill="rgb(229,17,7)" fg:x="56023" fg:w="93"/><text x="60.9049%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="60.7125%" y="69" width="0.0270%" height="15" fill="rgb(239,72,28)" fg:x="56116" fg:w="25"/><text x="61.0055%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="60.7396%" y="69" width="0.1006%" height="15" fill="rgb(230,47,54)" fg:x="56141" fg:w="93"/><text x="61.0326%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="60.8402%" y="69" width="0.0270%" height="15" fill="rgb(214,50,8)" fg:x="56234" fg:w="25"/><text x="61.1332%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="60.8673%" y="69" width="0.1006%" height="15" fill="rgb(216,198,43)" fg:x="56259" fg:w="93"/><text x="61.1602%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="60.9679%" y="69" width="0.0270%" height="15" fill="rgb(234,20,35)" fg:x="56352" fg:w="25"/><text x="61.2608%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="60.9949%" y="69" width="0.1006%" height="15" fill="rgb(254,45,19)" fg:x="56377" fg:w="93"/><text x="61.2879%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="61.0955%" y="69" width="0.0270%" height="15" fill="rgb(219,14,44)" fg:x="56470" fg:w="25"/><text x="61.3885%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="61.1226%" y="69" width="0.1006%" height="15" fill="rgb(217,220,26)" fg:x="56495" fg:w="93"/><text x="61.4156%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="61.2232%" y="69" width="0.0270%" height="15" fill="rgb(213,158,28)" fg:x="56588" fg:w="25"/><text x="61.5162%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="61.2503%" y="69" width="0.2467%" height="15" fill="rgb(252,51,52)" fg:x="56613" fg:w="228"/><text x="61.5432%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="61.4969%" y="69" width="0.0692%" height="15" fill="rgb(246,89,16)" fg:x="56841" fg:w="64"/><text x="61.7899%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="61.5716%" y="53" width="0.0519%" height="15" fill="rgb(216,158,49)" fg:x="56910" fg:w="48"/><text x="61.8646%" y="63.50"></text></g><g><title>utf8_validate (181 instructions, 0.20%)</title><rect x="61.6235%" y="53" width="0.1958%" height="15" fill="rgb(236,107,19)" fg:x="56958" fg:w="181"/><text x="61.9165%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="61.8193%" y="37" width="0.0617%" height="15" fill="rgb(228,185,30)" fg:x="57139" fg:w="57"/><text x="62.1123%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="61.8193%" y="53" width="0.0768%" height="15" fill="rgb(246,134,8)" fg:x="57139" fg:w="71"/><text x="62.1123%" y="63.50"></text></g><g><title>memcpy (123 instructions, 0.13%)</title><rect x="61.8962%" y="53" width="0.1331%" height="15" fill="rgb(214,143,50)" fg:x="57210" fg:w="123"/><text x="62.1891%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (505 instructions, 0.55%)</title><rect x="61.5662%" y="69" width="0.5464%" height="15" fill="rgb(228,75,8)" fg:x="56905" fg:w="505"/><text x="61.8591%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="62.1244%" y="69" width="0.0692%" height="15" fill="rgb(207,175,4)" fg:x="57421" fg:w="64"/><text x="62.4174%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="62.1937%" y="69" width="0.0519%" height="15" fill="rgb(205,108,24)" fg:x="57485" fg:w="48"/><text x="62.4867%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="62.2456%" y="53" width="0.0519%" height="15" fill="rgb(244,120,49)" fg:x="57533" fg:w="48"/><text x="62.5386%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="62.2456%" y="69" width="0.0909%" height="15" fill="rgb(223,47,38)" fg:x="57533" fg:w="84"/><text x="62.5386%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="62.3365%" y="69" width="0.0692%" height="15" fill="rgb(229,179,11)" fg:x="57617" fg:w="64"/><text x="62.6295%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="62.4111%" y="53" width="0.0519%" height="15" fill="rgb(231,122,1)" fg:x="57686" fg:w="48"/><text x="62.7041%" y="63.50"></text></g><g><title>utf8_validate (226 instructions, 0.24%)</title><rect x="62.4631%" y="53" width="0.2445%" height="15" fill="rgb(245,119,9)" fg:x="57734" fg:w="226"/><text x="62.7560%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="62.7076%" y="37" width="0.0617%" height="15" fill="rgb(241,163,25)" fg:x="57960" fg:w="57"/><text x="63.0006%" y="47.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="62.7076%" y="53" width="0.0768%" height="15" fill="rgb(217,214,3)" fg:x="57960" fg:w="71"/><text x="63.0006%" y="63.50"></text></g><g><title>memcpy (160 instructions, 0.17%)</title><rect x="62.7844%" y="53" width="0.1731%" height="15" fill="rgb(240,86,28)" fg:x="58031" fg:w="160"/><text x="63.0774%" y="63.50"></text></g><g><title>@deserialize_go&lt;t&gt; (587 instructions, 0.64%)</title><rect x="62.4057%" y="69" width="0.6351%" height="15" fill="rgb(215,47,9)" fg:x="57681" fg:w="587"/><text x="62.6987%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="63.0408%" y="53" width="0.0519%" height="15" fill="rgb(252,25,45)" fg:x="58268" fg:w="48"/><text x="63.3338%" y="63.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="63.0408%" y="69" width="0.0909%" height="15" fill="rgb(251,164,9)" fg:x="58268" fg:w="84"/><text x="63.3338%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="63.1317%" y="69" width="0.0692%" height="15" fill="rgb(233,194,0)" fg:x="58352" fg:w="64"/><text x="63.4247%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="63.2064%" y="69" width="0.0692%" height="15" fill="rgb(249,111,24)" fg:x="58421" fg:w="64"/><text x="63.4993%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="63.2756%" y="69" width="0.0519%" height="15" fill="rgb(250,223,3)" fg:x="58485" fg:w="48"/><text x="63.5686%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="63.3275%" y="69" width="0.0519%" height="15" fill="rgb(236,178,37)" fg:x="58533" fg:w="48"/><text x="63.6205%" y="79.50"></text></g><g><title>skip_leb128 (76 instructions, 0.08%)</title><rect x="63.3795%" y="69" width="0.0822%" height="15" fill="rgb(241,158,50)" fg:x="58581" fg:w="76"/><text x="63.6724%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="63.4617%" y="69" width="0.0270%" height="15" fill="rgb(213,121,41)" fg:x="58657" fg:w="25"/><text x="63.7547%" y="79.50"></text></g><g><title>skip_leb128 (93 instructions, 0.10%)</title><rect x="63.4887%" y="69" width="0.1006%" height="15" fill="rgb(240,92,3)" fg:x="58682" fg:w="93"/><text x="63.7817%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="63.5893%" y="69" width="0.0270%" height="15" fill="rgb(205,123,3)" fg:x="58775" fg:w="25"/><text x="63.8823%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="63.6164%" y="69" width="0.2467%" height="15" fill="rgb(205,97,47)" fg:x="58800" fg:w="228"/><text x="63.9094%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="63.8631%" y="69" width="0.0692%" height="15" fill="rgb(247,152,14)" fg:x="59028" fg:w="64"/><text x="64.1560%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="63.9442%" y="53" width="0.2467%" height="15" fill="rgb(248,195,53)" fg:x="59103" fg:w="228"/><text x="64.2372%" y="63.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="63.9442%" y="69" width="0.2856%" height="15" fill="rgb(226,201,16)" fg:x="59103" fg:w="264"/><text x="64.2372%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="64.2298%" y="69" width="0.0692%" height="15" fill="rgb(205,98,0)" fg:x="59367" fg:w="64"/><text x="64.5228%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="64.3045%" y="69" width="0.0692%" height="15" fill="rgb(214,191,48)" fg:x="59436" fg:w="64"/><text x="64.5975%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="64.3737%" y="69" width="0.0519%" height="15" fill="rgb(237,112,39)" fg:x="59500" fg:w="48"/><text x="64.6667%" y="79.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="64.4257%" y="69" width="0.0519%" height="15" fill="rgb(247,203,27)" fg:x="59548" fg:w="48"/><text x="64.7186%" y="79.50"></text></g><g><title>skip_leb128 (76 instructions, 0.08%)</title><rect x="64.4776%" y="69" width="0.0822%" height="15" fill="rgb(235,124,28)" fg:x="59596" fg:w="76"/><text x="64.7706%" y="79.50"></text></g><g><title>skip_leb128 (25 instructions, 0.03%)</title><rect x="64.5598%" y="69" width="0.0270%" height="15" fill="rgb(208,207,46)" fg:x="59672" fg:w="25"/><text x="64.8528%" y="79.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="64.5869%" y="69" width="0.2467%" height="15" fill="rgb(234,176,4)" fg:x="59697" fg:w="228"/><text x="64.8798%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="64.8335%" y="69" width="0.0692%" height="15" fill="rgb(230,133,28)" fg:x="59925" fg:w="64"/><text x="65.1265%" y="79.50"></text></g><g><title>@deserialize_go&lt;u&gt; (40 instructions, 0.04%)</title><rect x="64.9028%" y="69" width="0.0433%" height="15" fill="rgb(211,137,40)" fg:x="59989" fg:w="40"/><text x="65.1958%" y="79.50"></text></g><g><title>@deserialize_go&lt;vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u))&gt; (16,433 instructions, 17.78%)</title><rect x="51.4687%" y="85" width="17.7791%" height="15" fill="rgb(254,35,13)" fg:x="47572" fg:w="16433"/><text x="51.7617%" y="95.50">@deserialize_go&lt;vr(data..</text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="69.2542%" y="69" width="0.0519%" height="15" fill="rgb(225,49,51)" fg:x="64011" fg:w="48"/><text x="69.5472%" y="79.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="69.2542%" y="85" width="0.0909%" height="15" fill="rgb(251,10,15)" fg:x="64011" fg:w="84"/><text x="69.5472%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="69.3451%" y="85" width="0.0692%" height="15" fill="rgb(228,207,15)" fg:x="64095" fg:w="64"/><text x="69.6381%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="69.4198%" y="69" width="0.0692%" height="15" fill="rgb(241,99,19)" fg:x="64164" fg:w="64"/><text x="69.7127%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="69.4890%" y="69" width="0.0692%" height="15" fill="rgb(207,104,49)" fg:x="64228" fg:w="64"/><text x="69.7820%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="69.5583%" y="69" width="0.0692%" height="15" fill="rgb(234,99,18)" fg:x="64292" fg:w="64"/><text x="69.8512%" y="79.50"></text></g><g><title>@deserialize_go&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (362 instructions, 0.39%)</title><rect x="69.4144%" y="85" width="0.3917%" height="15" fill="rgb(213,191,49)" fg:x="64159" fg:w="362"/><text x="69.7073%" y="95.50"></text></g><g><title>@deserialize_go&lt;0=(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)?!0)&gt; (19,423 instructions, 21.01%)</title><rect x="49.5818%" y="101" width="21.0140%" height="15" fill="rgb(210,226,19)" fg:x="45828" fg:w="19423"/><text x="49.8748%" y="111.50">@deserialize_go&lt;0=(r(id:n64,..</text></g><g><title>@deserialize_go&lt;0=?(r(id:n64,metadata:vr(data:B,key_val_data:v(tv(BlobContent:B,Nat16Content:n16,Nat32Content:n32,Nat64Content:n64,Nat8Content:n8,NatContent:N,TextContent:t)),purpose:v(Preview:u,Rendered:u)),owner:P)!0)&gt; (19,874 instructions, 21.50%)</title><rect x="49.3687%" y="117" width="21.5019%" height="15" fill="rgb(229,97,18)" fg:x="45631" fg:w="19874"/><text x="49.6617%" y="127.50">@deserialize_go&lt;0=?(r(id:n64,..</text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="70.8706%" y="101" width="0.2467%" height="15" fill="rgb(211,167,15)" fg:x="65505" fg:w="228"/><text x="71.1636%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="70.8706%" y="117" width="0.2856%" height="15" fill="rgb(210,169,34)" fg:x="65505" fg:w="264"/><text x="71.1636%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="71.1562%" y="117" width="0.0692%" height="15" fill="rgb(241,121,31)" fg:x="65769" fg:w="64"/><text x="71.4492%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="71.2309%" y="117" width="0.0692%" height="15" fill="rgb(232,40,11)" fg:x="65838" fg:w="64"/><text x="71.5239%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="71.3001%" y="117" width="0.0692%" height="15" fill="rgb(205,86,26)" fg:x="65902" fg:w="64"/><text x="71.5931%" y="127.50"></text></g><g><title>sleb128_decode (103 instructions, 0.11%)</title><rect x="71.3694%" y="117" width="0.1114%" height="15" fill="rgb(231,126,28)" fg:x="65966" fg:w="103"/><text x="71.6623%" y="127.50"></text></g><g><title>motoko_rts::region::alloc_region::hcac8dd67ce1cdb3c (84 instructions, 0.09%)</title><rect x="71.4862%" y="101" width="0.0909%" height="15" fill="rgb(219,221,18)" fg:x="66074" fg:w="84"/><text x="71.7792%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="71.5771%" y="101" width="0.0519%" height="15" fill="rgb(211,40,0)" fg:x="66158" fg:w="48"/><text x="71.8701%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="71.6290%" y="85" width="0.0617%" height="15" fill="rgb(239,85,43)" fg:x="66206" fg:w="57"/><text x="71.9220%" y="95.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="71.6290%" y="101" width="0.0703%" height="15" fill="rgb(231,55,21)" fg:x="66206" fg:w="65"/><text x="71.9220%" y="111.50"></text></g><g><title>memcpy (158 instructions, 0.17%)</title><rect x="71.6994%" y="101" width="0.1709%" height="15" fill="rgb(225,184,43)" fg:x="66271" fg:w="158"/><text x="71.9923%" y="111.50"></text></g><g><title>@deserialize_go&lt;R&gt; (629 instructions, 0.68%)</title><rect x="71.4808%" y="117" width="0.6805%" height="15" fill="rgb(251,158,41)" fg:x="66069" fg:w="629"/><text x="71.7738%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="72.1613%" y="101" width="0.2467%" height="15" fill="rgb(234,159,37)" fg:x="66698" fg:w="228"/><text x="72.4543%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="72.1613%" y="117" width="0.2856%" height="15" fill="rgb(216,204,22)" fg:x="66698" fg:w="264"/><text x="72.4543%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.4470%" y="117" width="0.0692%" height="15" fill="rgb(214,17,3)" fg:x="66962" fg:w="64"/><text x="72.7399%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.5216%" y="117" width="0.0692%" height="15" fill="rgb(212,111,17)" fg:x="67031" fg:w="64"/><text x="72.8146%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.5909%" y="117" width="0.0692%" height="15" fill="rgb(221,157,24)" fg:x="67095" fg:w="64"/><text x="72.8838%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.6601%" y="117" width="0.0692%" height="15" fill="rgb(252,16,13)" fg:x="67159" fg:w="64"/><text x="72.9531%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.7347%" y="101" width="0.0692%" height="15" fill="rgb(221,62,2)" fg:x="67228" fg:w="64"/><text x="73.0277%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.8040%" y="101" width="0.0692%" height="15" fill="rgb(247,87,22)" fg:x="67292" fg:w="64"/><text x="73.0970%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.8732%" y="101" width="0.0692%" height="15" fill="rgb(215,73,9)" fg:x="67356" fg:w="64"/><text x="73.1662%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="72.9479%" y="85" width="0.0692%" height="15" fill="rgb(207,175,33)" fg:x="67425" fg:w="64"/><text x="73.2409%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="73.0171%" y="85" width="0.0519%" height="15" fill="rgb(243,129,54)" fg:x="67489" fg:w="48"/><text x="73.3101%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="73.0691%" y="69" width="0.0519%" height="15" fill="rgb(227,119,45)" fg:x="67537" fg:w="48"/><text x="73.3620%" y="79.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="73.0691%" y="85" width="0.0909%" height="15" fill="rgb(205,109,36)" fg:x="67537" fg:w="84"/><text x="73.3620%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="73.1599%" y="85" width="0.0692%" height="15" fill="rgb(205,6,39)" fg:x="67621" fg:w="64"/><text x="73.4529%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="73.2346%" y="69" width="0.0519%" height="15" fill="rgb(221,32,16)" fg:x="67690" fg:w="48"/><text x="73.5276%" y="79.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="73.2865%" y="53" width="0.0617%" height="15" fill="rgb(228,144,50)" fg:x="67738" fg:w="57"/><text x="73.5795%" y="63.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="73.2865%" y="69" width="0.0703%" height="15" fill="rgb(229,201,53)" fg:x="67738" fg:w="65"/><text x="73.5795%" y="79.50"></text></g><g><title>memcpy (100 instructions, 0.11%)</title><rect x="73.3568%" y="69" width="0.1082%" height="15" fill="rgb(249,153,27)" fg:x="67803" fg:w="100"/><text x="73.6498%" y="79.50"></text></g><g><title>@deserialize_go&lt;P&gt; (331 instructions, 0.36%)</title><rect x="73.2292%" y="85" width="0.3581%" height="15" fill="rgb(227,106,25)" fg:x="67685" fg:w="331"/><text x="73.5222%" y="95.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="73.5873%" y="69" width="0.0519%" height="15" fill="rgb(230,65,29)" fg:x="68016" fg:w="48"/><text x="73.8803%" y="79.50"></text></g><g><title>find_field (84 instructions, 0.09%)</title><rect x="73.5873%" y="85" width="0.0909%" height="15" fill="rgb(221,57,46)" fg:x="68016" fg:w="84"/><text x="73.8803%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="73.6782%" y="85" width="0.0692%" height="15" fill="rgb(229,161,17)" fg:x="68100" fg:w="64"/><text x="73.9711%" y="95.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="73.7528%" y="69" width="0.0692%" height="15" fill="rgb(222,213,11)" fg:x="68169" fg:w="64"/><text x="74.0458%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="73.8221%" y="69" width="0.0692%" height="15" fill="rgb(235,35,13)" fg:x="68233" fg:w="64"/><text x="74.1150%" y="79.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="73.8913%" y="69" width="0.0692%" height="15" fill="rgb(233,158,34)" fg:x="68297" fg:w="64"/><text x="74.1843%" y="79.50"></text></g><g><title>@deserialize_go&lt;0=?(P!0)&gt; (362 instructions, 0.39%)</title><rect x="73.7474%" y="85" width="0.3917%" height="15" fill="rgb(215,151,48)" fg:x="68164" fg:w="362"/><text x="74.0404%" y="95.50"></text></g><g><title>@deserialize_go&lt;0=(P?!0)&gt; (1,430 instructions, 1.55%)</title><rect x="72.9425%" y="101" width="1.5471%" height="15" fill="rgb(229,84,14)" fg:x="67420" fg:w="1430"/><text x="73.2354%" y="111.50"></text></g><g><title>@deserialize_go&lt;0=?(P!0)&gt; (1,881 instructions, 2.04%)</title><rect x="72.7293%" y="117" width="2.0351%" height="15" fill="rgb(229,68,14)" fg:x="67223" fg:w="1881"/><text x="73.0223%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="74.7644%" y="101" width="0.2467%" height="15" fill="rgb(243,106,26)" fg:x="69104" fg:w="228"/><text x="75.0574%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="74.7644%" y="117" width="0.2856%" height="15" fill="rgb(206,45,38)" fg:x="69104" fg:w="264"/><text x="75.0574%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="75.0500%" y="117" width="0.0692%" height="15" fill="rgb(226,6,15)" fg:x="69368" fg:w="64"/><text x="75.3430%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="75.1247%" y="101" width="0.0692%" height="15" fill="rgb(232,22,54)" fg:x="69437" fg:w="64"/><text x="75.4177%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="75.1939%" y="101" width="0.0692%" height="15" fill="rgb(229,222,32)" fg:x="69501" fg:w="64"/><text x="75.4869%" y="111.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="75.2632%" y="101" width="0.0692%" height="15" fill="rgb(228,62,29)" fg:x="69565" fg:w="64"/><text x="75.5561%" y="111.50"></text></g><g><title>leb128_decode (48 instructions, 0.05%)</title><rect x="75.3378%" y="85" width="0.0519%" height="15" fill="rgb(251,103,34)" fg:x="69634" fg:w="48"/><text x="75.6308%" y="95.50"></text></g><g><title>utf8_validate (156 instructions, 0.17%)</title><rect x="75.3898%" y="85" width="0.1688%" height="15" fill="rgb(233,12,30)" fg:x="69682" fg:w="156"/><text x="75.6827%" y="95.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="75.5585%" y="69" width="0.0617%" height="15" fill="rgb(238,52,0)" fg:x="69838" fg:w="57"/><text x="75.8515%" y="79.50"></text></g><g><title>motoko_rts::text::alloc_text_blob::h7c2cb1fa940479f2 (71 instructions, 0.08%)</title><rect x="75.5585%" y="85" width="0.0768%" height="15" fill="rgb(223,98,5)" fg:x="69838" fg:w="71"/><text x="75.8515%" y="95.50"></text></g><g><title>memcpy (58 instructions, 0.06%)</title><rect x="75.6354%" y="85" width="0.0628%" height="15" fill="rgb(228,75,37)" fg:x="69909" fg:w="58"/><text x="75.9283%" y="95.50"></text></g><g><title>@deserialize_go&lt;t&gt; (415 instructions, 0.45%)</title><rect x="75.3324%" y="101" width="0.4490%" height="15" fill="rgb(205,115,49)" fg:x="69629" fg:w="415"/><text x="75.6254%" y="111.50"></text></g><g><title>@deserialize_go&lt;?t&gt; (866 instructions, 0.94%)</title><rect x="75.1193%" y="117" width="0.9369%" height="15" fill="rgb(250,154,43)" fg:x="69432" fg:w="866"/><text x="75.4122%" y="127.50"></text></g><g><title>leb128_decode (228 instructions, 0.25%)</title><rect x="76.0562%" y="101" width="0.2467%" height="15" fill="rgb(226,43,29)" fg:x="70298" fg:w="228"/><text x="76.3492%" y="111.50"></text></g><g><title>find_field (264 instructions, 0.29%)</title><rect x="76.0562%" y="117" width="0.2856%" height="15" fill="rgb(249,228,39)" fg:x="70298" fg:w="264"/><text x="76.3492%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="76.3418%" y="117" width="0.0692%" height="15" fill="rgb(216,79,43)" fg:x="70562" fg:w="64"/><text x="76.6348%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="76.4165%" y="117" width="0.0692%" height="15" fill="rgb(228,95,12)" fg:x="70631" fg:w="64"/><text x="76.7095%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="76.4857%" y="117" width="0.0692%" height="15" fill="rgb(249,221,15)" fg:x="70695" fg:w="64"/><text x="76.7787%" y="127.50"></text></g><g><title>sleb128_decode (64 instructions, 0.07%)</title><rect x="76.5550%" y="117" width="0.0692%" height="15" fill="rgb(233,34,13)" fg:x="70759" fg:w="64"/><text x="76.8479%" y="127.50"></text></g><g><title>int_from_i32 (13 instructions, 0.01%)</title><rect x="76.6296%" y="101" width="0.0141%" height="15" fill="rgb(214,103,39)" fg:x="70828" fg:w="13"/><text x="76.9226%" y="111.50"></text></g><g><title>@deserialize_go&lt;N&gt; (122 instructions, 0.13%)</title><rect x="76.6242%" y="117" width="0.1320%" height="15" fill="rgb(251,126,39)" fg:x="70823" fg:w="122"/><text x="76.9172%" y="127.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="76.7627%" y="101" width="0.1785%" height="15" fill="rgb(214,216,36)" fg:x="70951" fg:w="165"/><text x="77.0557%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="76.9412%" y="101" width="0.1785%" height="15" fill="rgb(220,221,8)" fg:x="71116" fg:w="165"/><text x="77.2342%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="77.1197%" y="101" width="0.1785%" height="15" fill="rgb(240,216,3)" fg:x="71281" fg:w="165"/><text x="77.4127%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="77.2983%" y="101" width="0.1785%" height="15" fill="rgb(232,218,17)" fg:x="71446" fg:w="165"/><text x="77.5912%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="77.4768%" y="101" width="0.1785%" height="15" fill="rgb(229,163,45)" fg:x="71611" fg:w="165"/><text x="77.7697%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="77.6553%" y="101" width="0.1785%" height="15" fill="rgb(231,110,42)" fg:x="71776" fg:w="165"/><text x="77.9483%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="77.8338%" y="101" width="0.1785%" height="15" fill="rgb(208,170,48)" fg:x="71941" fg:w="165"/><text x="78.1268%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="78.0123%" y="101" width="0.1785%" height="15" fill="rgb(239,116,25)" fg:x="72106" fg:w="165"/><text x="78.3053%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="78.1908%" y="101" width="0.1785%" height="15" fill="rgb(219,200,50)" fg:x="72271" fg:w="165"/><text x="78.4838%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="78.3693%" y="101" width="0.1785%" height="15" fill="rgb(245,200,0)" fg:x="72436" fg:w="165"/><text x="78.6623%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="78.5479%" y="101" width="0.1785%" height="15" fill="rgb(245,119,33)" fg:x="72601" fg:w="165"/><text x="78.8408%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="78.7264%" y="101" width="0.1785%" height="15" fill="rgb(231,125,12)" fg:x="72766" fg:w="165"/><text x="79.0193%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="78.9049%" y="101" width="0.1785%" height="15" fill="rgb(216,96,41)" fg:x="72931" fg:w="165"/><text x="79.1979%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="79.0834%" y="101" width="0.1785%" height="15" fill="rgb(248,43,45)" fg:x="73096" fg:w="165"/><text x="79.3764%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="79.2619%" y="101" width="0.1785%" height="15" fill="rgb(217,222,7)" fg:x="73261" fg:w="165"/><text x="79.5549%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="79.4404%" y="101" width="0.1785%" height="15" fill="rgb(233,28,6)" fg:x="73426" fg:w="165"/><text x="79.7334%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="79.6190%" y="101" width="0.1785%" height="15" fill="rgb(231,218,15)" fg:x="73591" fg:w="165"/><text x="79.9119%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="79.7975%" y="101" width="0.1785%" height="15" fill="rgb(226,171,48)" fg:x="73756" fg:w="165"/><text x="80.0904%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="79.9760%" y="101" width="0.1785%" height="15" fill="rgb(235,201,9)" fg:x="73921" fg:w="165"/><text x="80.2690%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="80.1545%" y="101" width="0.1785%" height="15" fill="rgb(217,80,15)" fg:x="74086" fg:w="165"/><text x="80.4475%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="80.3330%" y="101" width="0.1785%" height="15" fill="rgb(219,152,8)" fg:x="74251" fg:w="165"/><text x="80.6260%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="80.5115%" y="101" width="0.1785%" height="15" fill="rgb(243,107,38)" fg:x="74416" fg:w="165"/><text x="80.8045%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="80.6900%" y="101" width="0.1785%" height="15" fill="rgb(231,17,5)" fg:x="74581" fg:w="165"/><text x="80.9830%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="80.8686%" y="101" width="0.1785%" height="15" fill="rgb(209,25,54)" fg:x="74746" fg:w="165"/><text x="81.1615%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="81.0471%" y="101" width="0.1785%" height="15" fill="rgb(219,0,2)" fg:x="74911" fg:w="165"/><text x="81.3400%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="81.2256%" y="101" width="0.1785%" height="15" fill="rgb(246,9,5)" fg:x="75076" fg:w="165"/><text x="81.5186%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="81.4041%" y="101" width="0.1785%" height="15" fill="rgb(226,159,4)" fg:x="75241" fg:w="165"/><text x="81.6971%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="81.5826%" y="101" width="0.1785%" height="15" fill="rgb(219,175,34)" fg:x="75406" fg:w="165"/><text x="81.8756%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="81.7611%" y="101" width="0.1785%" height="15" fill="rgb(236,10,46)" fg:x="75571" fg:w="165"/><text x="82.0541%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="81.9397%" y="101" width="0.1785%" height="15" fill="rgb(240,211,16)" fg:x="75736" fg:w="165"/><text x="82.2326%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="82.1182%" y="101" width="0.1785%" height="15" fill="rgb(205,3,43)" fg:x="75901" fg:w="165"/><text x="82.4111%" y="111.50"></text></g><g><title>motoko_rts::region::meta_data::block_region_table::get::hde3b7068dd48ec8c (165 instructions, 0.18%)</title><rect x="82.2967%" y="101" width="0.1785%" height="15" fill="rgb(245,7,22)" fg:x="76066" fg:w="165"/><text x="82.5897%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="82.4752%" y="101" width="0.0617%" height="15" fill="rgb(239,132,32)" fg:x="76231" fg:w="57"/><text x="82.7682%" y="111.50"></text></g><g><title>motoko_rts::region::alloc_region::hcac8dd67ce1cdb3c (84 instructions, 0.09%)</title><rect x="82.5369%" y="101" width="0.0909%" height="15" fill="rgb(228,202,34)" fg:x="76288" fg:w="84"/><text x="82.8298%" y="111.50"></text></g><g><title>motoko_rts::region::region_recover::h698749ce22521669 (6,719 instructions, 7.27%)</title><rect x="76.7627%" y="117" width="7.2694%" height="15" fill="rgb(254,200,22)" fg:x="70951" fg:w="6719"/><text x="77.0557%" y="127.50">motoko_r..</text></g><g><title>motoko_rts::region::region_reserve_id_span::hadf5eecafe2a6fa2 (72 instructions, 0.08%)</title><rect x="84.0321%" y="117" width="0.0779%" height="15" fill="rgb(219,10,39)" fg:x="77670" fg:w="72"/><text x="84.3250%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.1100%" y="117" width="0.0444%" height="15" fill="rgb(226,210,39)" fg:x="77742" fg:w="41"/><text x="84.4029%" y="127.50"></text></g><g><title>obj_idx&lt;5&gt; (17 instructions, 0.02%)</title><rect x="84.1543%" y="117" width="0.0184%" height="15" fill="rgb(208,219,16)" fg:x="77783" fg:w="17"/><text x="84.4473%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.1727%" y="117" width="0.0444%" height="15" fill="rgb(216,158,51)" fg:x="77800" fg:w="41"/><text x="84.4657%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.2171%" y="117" width="0.0444%" height="15" fill="rgb(233,14,44)" fg:x="77841" fg:w="41"/><text x="84.5100%" y="127.50"></text></g><g><title>obj_idx&lt;4&gt; (17 instructions, 0.02%)</title><rect x="84.2614%" y="117" width="0.0184%" height="15" fill="rgb(237,97,39)" fg:x="77882" fg:w="17"/><text x="84.5544%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.2798%" y="117" width="0.0444%" height="15" fill="rgb(218,198,43)" fg:x="77899" fg:w="41"/><text x="84.5728%" y="127.50"></text></g><g><title>obj_idx&lt;0&gt; (17 instructions, 0.02%)</title><rect x="84.3242%" y="117" width="0.0184%" height="15" fill="rgb(231,104,20)" fg:x="77940" fg:w="17"/><text x="84.6172%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.3426%" y="117" width="0.0444%" height="15" fill="rgb(254,36,13)" fg:x="77957" fg:w="41"/><text x="84.6355%" y="127.50"></text></g><g><title>obj_idx&lt;2&gt; (17 instructions, 0.02%)</title><rect x="84.3869%" y="117" width="0.0184%" height="15" fill="rgb(248,14,50)" fg:x="77998" fg:w="17"/><text x="84.6799%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.4053%" y="117" width="0.0444%" height="15" fill="rgb(217,107,29)" fg:x="78015" fg:w="41"/><text x="84.6983%" y="127.50"></text></g><g><title>obj_idx&lt;3&gt; (17 instructions, 0.02%)</title><rect x="84.4497%" y="117" width="0.0184%" height="15" fill="rgb(251,169,33)" fg:x="78056" fg:w="17"/><text x="84.7427%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.4681%" y="117" width="0.0444%" height="15" fill="rgb(217,108,32)" fg:x="78073" fg:w="41"/><text x="84.7610%" y="127.50"></text></g><g><title>$getState/0 (41 instructions, 0.04%)</title><rect x="84.5124%" y="117" width="0.0444%" height="15" fill="rgb(219,66,42)" fg:x="78114" fg:w="41"/><text x="84.8054%" y="127.50"></text></g><g><title>obj_idx&lt;1&gt; (17 instructions, 0.02%)</title><rect x="84.5568%" y="117" width="0.0184%" height="15" fill="rgb(206,180,7)" fg:x="78155" fg:w="17"/><text x="84.8498%" y="127.50"></text></g><g><title>motoko_rts::text::blob_of_text::h46e668d21e41637b (11 instructions, 0.01%)</title><rect x="84.5752%" y="101" width="0.0119%" height="15" fill="rgb(208,226,31)" fg:x="78172" fg:w="11"/><text x="84.8682%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="84.5871%" y="101" width="0.0617%" height="15" fill="rgb(218,26,49)" fg:x="78183" fg:w="57"/><text x="84.8801%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="84.6488%" y="101" width="0.0617%" height="15" fill="rgb(233,197,48)" fg:x="78240" fg:w="57"/><text x="84.9417%" y="111.50"></text></g><g><title>memcpy (46 instructions, 0.05%)</title><rect x="84.7104%" y="101" width="0.0498%" height="15" fill="rgb(252,181,51)" fg:x="78297" fg:w="46"/><text x="85.0034%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="84.7602%" y="101" width="0.0617%" height="15" fill="rgb(253,90,19)" fg:x="78343" fg:w="57"/><text x="85.0532%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::h183c5322ad6e0a8c (77 instructions, 0.08%)</title><rect x="84.8219%" y="101" width="0.0833%" height="15" fill="rgb(215,171,30)" fg:x="78400" fg:w="77"/><text x="85.1148%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::h183c5322ad6e0a8c (110 instructions, 0.12%)</title><rect x="84.9052%" y="101" width="0.1190%" height="15" fill="rgb(214,222,9)" fg:x="78477" fg:w="110"/><text x="85.1981%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::h183c5322ad6e0a8c (77 instructions, 0.08%)</title><rect x="85.0242%" y="101" width="0.0833%" height="15" fill="rgb(223,3,22)" fg:x="78587" fg:w="77"/><text x="85.3171%" y="111.50"></text></g><g><title>motoko_rts::principal_id::enc_stash::h183c5322ad6e0a8c (110 instructions, 0.12%)</title><rect x="85.1075%" y="101" width="0.1190%" height="15" fill="rgb(225,196,46)" fg:x="78664" fg:w="110"/><text x="85.4005%" y="111.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="85.2265%" y="101" width="0.0617%" height="15" fill="rgb(209,110,37)" fg:x="78774" fg:w="57"/><text x="85.5195%" y="111.50"></text></g><g><title>memcmp (192 instructions, 0.21%)</title><rect x="85.2882%" y="101" width="0.2077%" height="15" fill="rgb(249,89,12)" fg:x="78831" fg:w="192"/><text x="85.5811%" y="111.50"></text></g><g><title>blob_of_principal (2,244 instructions, 2.43%)</title><rect x="84.5752%" y="117" width="2.4278%" height="15" fill="rgb(226,27,33)" fg:x="78172" fg:w="2244"/><text x="84.8682%" y="127.50">b..</text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="87.0030%" y="101" width="0.0617%" height="15" fill="rgb(213,82,22)" fg:x="80416" fg:w="57"/><text x="87.2960%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="87.0030%" y="117" width="0.0703%" height="15" fill="rgb(248,140,0)" fg:x="80416" fg:w="65"/><text x="87.2960%" y="127.50"></text></g><g><title>memcpy (46 instructions, 0.05%)</title><rect x="87.0733%" y="117" width="0.0498%" height="15" fill="rgb(228,106,3)" fg:x="80481" fg:w="46"/><text x="87.3663%" y="127.50"></text></g><g><title>motoko_rts::memory::alloc_blob::h23a986936ca1b0b5 (57 instructions, 0.06%)</title><rect x="87.1231%" y="101" width="0.0617%" height="15" fill="rgb(209,23,37)" fg:x="80527" fg:w="57"/><text x="87.4161%" y="111.50"></text></g><g><title>alloc_blob (65 instructions, 0.07%)</title><rect x="87.1231%" y="117" width="0.0703%" height="15" fill="rgb(241,93,50)" fg:x="80527" fg:w="65"/><text x="87.4161%" y="127.50"></text></g><g><title>memcpy (46 instructions, 0.05%)</title><rect x="87.1934%" y="117" width="0.0498%" height="15" fill="rgb(253,46,43)" fg:x="80592" fg:w="46"/><text x="87.4864%" y="127.50"></text></g><g><title>init (79,052 instructions, 85.53%)</title><rect x="13.8636%" y="133" width="85.5273%" height="15" fill="rgb(226,206,43)" fg:x="12814" fg:w="79052"/><text x="14.1566%" y="143.50">init</text></g><g><title>trans_state4 (11 instructions, 0.01%)</title><rect x="99.3909%" y="133" width="0.0119%" height="15" fill="rgb(217,54,7)" fg:x="91866" fg:w="11"/><text x="99.6839%" y="143.50"></text></g><g><title>schedule_copying_gc (108 instructions, 0.12%)</title><rect x="99.4028%" y="133" width="0.1168%" height="15" fill="rgb(223,5,52)" fg:x="91877" fg:w="108"/><text x="99.6958%" y="143.50"></text></g><g><title>all (92,429 instructions, 100%)</title><rect x="0.0000%" y="165" width="100.0000%" height="15" fill="rgb(206,52,46)" fg:x="0" fg:w="92429"/><text x="0.2930%" y="175.50"></text></g><g><title>post_upgrade (79,623 instructions, 86.15%)</title><rect x="13.8550%" y="149" width="86.1450%" height="15" fill="rgb(253,136,11)" fg:x="12806" fg:w="79623"/><text x="14.1479%" y="159.50">post_upgrade</text></g></svg></svg>