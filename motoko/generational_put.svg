<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="134" onload="init(evt)" viewBox="0 0 1024 134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="134" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">generational.batch_put</text><text id="details" fill="rgb(0,0,0)" x="10" y="117.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="117.00"> </text><svg id="frames" x="10" width="1004" total_samples="1051273"><g><title>memset (2,970 instructions, 0.28%)</title><rect x="0.0150%" y="37" width="0.2825%" height="15" fill="rgb(206,92,46)" fg:x="158" fg:w="2970"/><text x="0.3080%" y="47.50"></text></g><g><title>motoko_rts::gc::generational::GenerationalGC$LT$M$GT$::mark_object::h19e3faba7bb6c896 (197,975 instructions, 18.83%)</title><rect x="0.3010%" y="37" width="18.8319%" height="15" fill="rgb(253,199,50)" fg:x="3164" fg:w="197975"/><text x="0.5939%" y="47.50">motoko_rts::gc::generatio..</text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (870 instructions, 0.08%)</title><rect x="19.1329%" y="37" width="0.0828%" height="15" fill="rgb(249,140,53)" fg:x="201139" fg:w="870"/><text x="19.4259%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="19.2157%" y="37" width="0.0114%" height="15" fill="rgb(228,129,10)" fg:x="202009" fg:w="120"/><text x="19.5086%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="19.3718%" y="37" width="0.0114%" height="15" fill="rgb(244,133,52)" fg:x="203650" fg:w="120"/><text x="19.6647%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="19.3832%" y="37" width="0.0114%" height="15" fill="rgb(238,185,21)" fg:x="203770" fg:w="120"/><text x="19.6761%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="19.5269%" y="37" width="0.0114%" height="15" fill="rgb(221,157,42)" fg:x="205281" fg:w="120"/><text x="19.8199%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="19.5383%" y="37" width="0.0114%" height="15" fill="rgb(212,216,29)" fg:x="205401" fg:w="120"/><text x="19.8313%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="19.7151%" y="37" width="0.0114%" height="15" fill="rgb(223,117,18)" fg:x="207259" fg:w="120"/><text x="20.0080%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="19.8703%" y="37" width="0.0114%" height="15" fill="rgb(224,193,33)" fg:x="208891" fg:w="120"/><text x="20.1633%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="20.1108%" y="37" width="0.0114%" height="15" fill="rgb(218,90,19)" fg:x="211419" fg:w="120"/><text x="20.4037%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (145 instructions, 0.01%)</title><rect x="20.3880%" y="37" width="0.0138%" height="15" fill="rgb(244,28,31)" fg:x="214334" fg:w="145"/><text x="20.6810%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (145 instructions, 0.01%)</title><rect x="20.4840%" y="37" width="0.0138%" height="15" fill="rgb(216,12,54)" fg:x="215343" fg:w="145"/><text x="20.7770%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="20.6758%" y="37" width="0.0114%" height="15" fill="rgb(244,191,30)" fg:x="217359" fg:w="120"/><text x="20.9688%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (145 instructions, 0.01%)</title><rect x="20.8195%" y="37" width="0.0138%" height="15" fill="rgb(226,157,16)" fg:x="218870" fg:w="145"/><text x="21.1125%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="20.9648%" y="37" width="0.0114%" height="15" fill="rgb(241,20,16)" fg:x="220397" fg:w="120"/><text x="21.2577%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="20.9762%" y="37" width="0.0114%" height="15" fill="rgb(221,199,45)" fg:x="220517" fg:w="120"/><text x="21.2692%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="21.1600%" y="37" width="0.0114%" height="15" fill="rgb(213,211,33)" fg:x="222449" fg:w="120"/><text x="21.4529%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="21.4716%" y="37" width="0.0114%" height="15" fill="rgb(251,55,1)" fg:x="225725" fg:w="120"/><text x="21.7646%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="21.7340%" y="37" width="0.0114%" height="15" fill="rgb(228,41,23)" fg:x="228484" fg:w="120"/><text x="22.0270%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="22.0057%" y="37" width="0.0114%" height="15" fill="rgb(250,141,28)" fg:x="231340" fg:w="120"/><text x="22.2987%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="22.2897%" y="37" width="0.0114%" height="15" fill="rgb(239,74,41)" fg:x="234326" fg:w="120"/><text x="22.5827%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="22.4361%" y="37" width="0.0114%" height="15" fill="rgb(218,31,33)" fg:x="235865" fg:w="120"/><text x="22.7291%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="22.4475%" y="37" width="0.0114%" height="15" fill="rgb(228,140,28)" fg:x="235985" fg:w="120"/><text x="22.7405%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="22.6062%" y="37" width="0.0114%" height="15" fill="rgb(208,155,30)" fg:x="237653" fg:w="120"/><text x="22.8992%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="22.6176%" y="37" width="0.0114%" height="15" fill="rgb(209,117,47)" fg:x="237773" fg:w="120"/><text x="22.9106%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="22.8150%" y="37" width="0.0114%" height="15" fill="rgb(213,209,19)" fg:x="239848" fg:w="120"/><text x="23.1080%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="23.0007%" y="37" width="0.0114%" height="15" fill="rgb(226,51,31)" fg:x="241800" fg:w="120"/><text x="23.2937%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="23.1809%" y="37" width="0.0114%" height="15" fill="rgb(242,105,36)" fg:x="243695" fg:w="120"/><text x="23.4739%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="23.6475%" y="37" width="0.0114%" height="15" fill="rgb(233,114,1)" fg:x="248600" fg:w="120"/><text x="23.9405%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="23.8164%" y="37" width="0.0114%" height="15" fill="rgb(241,226,27)" fg:x="250375" fg:w="120"/><text x="24.1093%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="23.8278%" y="37" width="0.0114%" height="15" fill="rgb(218,211,2)" fg:x="250495" fg:w="120"/><text x="24.1207%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (145 instructions, 0.01%)</title><rect x="23.9737%" y="37" width="0.0138%" height="15" fill="rgb(222,65,27)" fg:x="252029" fg:w="145"/><text x="24.2667%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="23.9875%" y="37" width="0.0114%" height="15" fill="rgb(245,193,22)" fg:x="252174" fg:w="120"/><text x="24.2805%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (145 instructions, 0.01%)</title><rect x="24.1497%" y="37" width="0.0138%" height="15" fill="rgb(240,57,49)" fg:x="253879" fg:w="145"/><text x="24.4426%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="24.4338%" y="37" width="0.0114%" height="15" fill="rgb(232,220,2)" fg:x="256866" fg:w="120"/><text x="24.7268%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="24.6187%" y="37" width="0.0114%" height="15" fill="rgb(247,73,29)" fg:x="258810" fg:w="120"/><text x="24.9117%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="24.8025%" y="37" width="0.0114%" height="15" fill="rgb(236,97,27)" fg:x="260742" fg:w="120"/><text x="25.0955%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="24.9454%" y="37" width="0.0114%" height="15" fill="rgb(229,177,12)" fg:x="262244" fg:w="120"/><text x="25.2383%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="24.9568%" y="37" width="0.0114%" height="15" fill="rgb(240,187,49)" fg:x="262364" fg:w="120"/><text x="25.2498%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="25.1553%" y="37" width="0.0114%" height="15" fill="rgb(238,24,17)" fg:x="264451" fg:w="120"/><text x="25.4483%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="25.3426%" y="37" width="0.0114%" height="15" fill="rgb(221,159,47)" fg:x="266420" fg:w="120"/><text x="25.6356%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="25.3540%" y="37" width="0.0114%" height="15" fill="rgb(232,120,45)" fg:x="266540" fg:w="120"/><text x="25.6470%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="25.5400%" y="37" width="0.0114%" height="15" fill="rgb(243,3,43)" fg:x="268495" fg:w="120"/><text x="25.8330%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="25.6772%" y="37" width="0.0114%" height="15" fill="rgb(235,120,50)" fg:x="269937" fg:w="120"/><text x="25.9701%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="25.8346%" y="37" width="0.0114%" height="15" fill="rgb(208,41,15)" fg:x="271592" fg:w="120"/><text x="26.1276%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="25.8460%" y="37" width="0.0114%" height="15" fill="rgb(213,171,46)" fg:x="271712" fg:w="120"/><text x="26.1390%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="26.0318%" y="37" width="0.0114%" height="15" fill="rgb(246,223,30)" fg:x="273665" fg:w="120"/><text x="26.3247%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="26.2177%" y="37" width="0.0114%" height="15" fill="rgb(205,115,34)" fg:x="275620" fg:w="120"/><text x="26.5107%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="26.4048%" y="37" width="0.0114%" height="15" fill="rgb(231,13,38)" fg:x="277587" fg:w="120"/><text x="26.6978%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="26.7330%" y="37" width="0.0114%" height="15" fill="rgb(211,199,33)" fg:x="281037" fg:w="120"/><text x="27.0260%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="26.9505%" y="37" width="0.0114%" height="15" fill="rgb(213,91,3)" fg:x="283323" fg:w="120"/><text x="27.2434%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="27.2377%" y="37" width="0.0114%" height="15" fill="rgb(254,206,18)" fg:x="286343" fg:w="120"/><text x="27.5307%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="27.5490%" y="37" width="0.0114%" height="15" fill="rgb(205,38,11)" fg:x="289615" fg:w="120"/><text x="27.8419%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="27.8843%" y="37" width="0.0114%" height="15" fill="rgb(230,120,33)" fg:x="293140" fg:w="120"/><text x="28.1773%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="28.0714%" y="37" width="0.0114%" height="15" fill="rgb(210,36,32)" fg:x="295107" fg:w="120"/><text x="28.3644%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="28.4432%" y="37" width="0.0114%" height="15" fill="rgb(242,47,0)" fg:x="299016" fg:w="120"/><text x="28.7362%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="28.6781%" y="37" width="0.0114%" height="15" fill="rgb(227,134,8)" fg:x="301485" fg:w="120"/><text x="28.9711%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (870 instructions, 0.08%)</title><rect x="29.0426%" y="37" width="0.0828%" height="15" fill="rgb(227,167,22)" fg:x="305317" fg:w="870"/><text x="29.3356%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="29.1310%" y="37" width="0.0114%" height="15" fill="rgb(244,72,13)" fg:x="306246" fg:w="120"/><text x="29.4239%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="29.4634%" y="37" width="0.0114%" height="15" fill="rgb(224,221,33)" fg:x="309741" fg:w="120"/><text x="29.7564%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="29.4804%" y="37" width="0.0114%" height="15" fill="rgb(232,97,8)" fg:x="309920" fg:w="120"/><text x="29.7734%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="29.7851%" y="37" width="0.0114%" height="15" fill="rgb(234,101,37)" fg:x="313123" fg:w="120"/><text x="30.0781%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="29.8022%" y="37" width="0.0114%" height="15" fill="rgb(229,226,18)" fg:x="313302" fg:w="120"/><text x="30.0951%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="30.1839%" y="37" width="0.0114%" height="15" fill="rgb(207,0,38)" fg:x="317315" fg:w="120"/><text x="30.4769%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="30.5333%" y="37" width="0.0114%" height="15" fill="rgb(224,143,33)" fg:x="320988" fg:w="120"/><text x="30.8262%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="31.0362%" y="37" width="0.0114%" height="15" fill="rgb(215,157,12)" fg:x="326275" fg:w="120"/><text x="31.3292%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (145 instructions, 0.01%)</title><rect x="31.6555%" y="37" width="0.0138%" height="15" fill="rgb(240,187,20)" fg:x="332786" fg:w="145"/><text x="31.9485%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (145 instructions, 0.01%)</title><rect x="31.8532%" y="37" width="0.0138%" height="15" fill="rgb(240,158,27)" fg:x="334864" fg:w="145"/><text x="32.1462%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="32.2833%" y="37" width="0.0114%" height="15" fill="rgb(223,215,0)" fg:x="339386" fg:w="120"/><text x="32.5763%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (145 instructions, 0.01%)</title><rect x="32.5880%" y="37" width="0.0138%" height="15" fill="rgb(235,207,51)" fg:x="342589" fg:w="145"/><text x="32.8810%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="32.9120%" y="37" width="0.0114%" height="15" fill="rgb(237,137,22)" fg:x="345995" fg:w="120"/><text x="33.2050%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="32.9290%" y="37" width="0.0114%" height="15" fill="rgb(230,59,42)" fg:x="346174" fg:w="120"/><text x="33.2220%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="33.3354%" y="37" width="0.0114%" height="15" fill="rgb(208,43,29)" fg:x="350446" fg:w="120"/><text x="33.6284%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="34.0431%" y="37" width="0.0114%" height="15" fill="rgb(238,107,43)" fg:x="357886" fg:w="120"/><text x="34.3361%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="34.6066%" y="37" width="0.0114%" height="15" fill="rgb(205,57,19)" fg:x="363810" fg:w="120"/><text x="34.8996%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="35.1948%" y="37" width="0.0114%" height="15" fill="rgb(252,147,0)" fg:x="369993" fg:w="120"/><text x="35.4877%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="35.8107%" y="37" width="0.0114%" height="15" fill="rgb(242,15,53)" fg:x="376468" fg:w="120"/><text x="36.1036%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="36.1436%" y="37" width="0.0114%" height="15" fill="rgb(215,97,41)" fg:x="379968" fg:w="120"/><text x="36.4366%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="36.1606%" y="37" width="0.0114%" height="15" fill="rgb(221,99,30)" fg:x="380147" fg:w="120"/><text x="36.4536%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="36.5013%" y="37" width="0.0114%" height="15" fill="rgb(221,88,15)" fg:x="383728" fg:w="120"/><text x="36.7942%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="36.5183%" y="37" width="0.0114%" height="15" fill="rgb(237,174,9)" fg:x="383907" fg:w="120"/><text x="36.8113%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="36.9493%" y="37" width="0.0114%" height="15" fill="rgb(226,216,27)" fg:x="388438" fg:w="120"/><text x="37.2423%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="37.3634%" y="37" width="0.0114%" height="15" fill="rgb(223,111,7)" fg:x="392791" fg:w="120"/><text x="37.6563%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="37.7564%" y="37" width="0.0114%" height="15" fill="rgb(251,217,1)" fg:x="396923" fg:w="120"/><text x="38.0494%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="38.7833%" y="37" width="0.0114%" height="15" fill="rgb(248,52,41)" fg:x="407718" fg:w="120"/><text x="39.0762%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="39.1517%" y="37" width="0.0114%" height="15" fill="rgb(250,94,13)" fg:x="411591" fg:w="120"/><text x="39.4446%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="39.1687%" y="37" width="0.0114%" height="15" fill="rgb(246,46,50)" fg:x="411770" fg:w="120"/><text x="39.4617%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (145 instructions, 0.01%)</title><rect x="39.4734%" y="37" width="0.0138%" height="15" fill="rgb(240,7,15)" fg:x="414973" fg:w="145"/><text x="39.7664%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="39.4928%" y="37" width="0.0114%" height="15" fill="rgb(217,50,7)" fg:x="415177" fg:w="120"/><text x="39.7858%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (145 instructions, 0.01%)</title><rect x="39.8467%" y="37" width="0.0138%" height="15" fill="rgb(221,195,32)" fg:x="418898" fg:w="145"/><text x="40.1397%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="40.4506%" y="37" width="0.0114%" height="15" fill="rgb(217,0,47)" fg:x="425246" fg:w="120"/><text x="40.7435%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="40.8668%" y="37" width="0.0114%" height="15" fill="rgb(237,85,31)" fg:x="429622" fg:w="120"/><text x="41.1598%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="41.2732%" y="37" width="0.0114%" height="15" fill="rgb(216,62,14)" fg:x="433894" fg:w="120"/><text x="41.5662%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="41.5948%" y="37" width="0.0114%" height="15" fill="rgb(237,153,54)" fg:x="437275" fg:w="120"/><text x="41.8878%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="41.6118%" y="37" width="0.0114%" height="15" fill="rgb(224,171,49)" fg:x="437454" fg:w="120"/><text x="41.9048%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="42.0442%" y="37" width="0.0114%" height="15" fill="rgb(223,174,49)" fg:x="441999" fg:w="120"/><text x="42.3371%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="42.4619%" y="37" width="0.0114%" height="15" fill="rgb(248,157,0)" fg:x="446390" fg:w="120"/><text x="42.7548%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="42.4789%" y="37" width="0.0114%" height="15" fill="rgb(251,101,26)" fg:x="446569" fg:w="120"/><text x="42.7718%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="42.8852%" y="37" width="0.0114%" height="15" fill="rgb(213,203,40)" fg:x="450841" fg:w="120"/><text x="43.1782%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="43.1935%" y="37" width="0.0114%" height="15" fill="rgb(253,23,46)" fg:x="454082" fg:w="120"/><text x="43.4865%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="43.5429%" y="37" width="0.0114%" height="15" fill="rgb(241,115,52)" fg:x="457755" fg:w="120"/><text x="43.8359%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="43.5600%" y="37" width="0.0114%" height="15" fill="rgb(246,154,17)" fg:x="457934" fg:w="120"/><text x="43.8529%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="43.9563%" y="37" width="0.0114%" height="15" fill="rgb(217,120,53)" fg:x="462101" fg:w="120"/><text x="44.2493%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="44.3627%" y="37" width="0.0114%" height="15" fill="rgb(248,147,6)" fg:x="466373" fg:w="120"/><text x="44.6557%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="44.7760%" y="37" width="0.0114%" height="15" fill="rgb(227,208,0)" fg:x="470718" fg:w="120"/><text x="45.0690%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="45.4635%" y="37" width="0.0114%" height="15" fill="rgb(240,121,35)" fg:x="477946" fg:w="120"/><text x="45.7565%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="45.9237%" y="37" width="0.0114%" height="15" fill="rgb(228,184,10)" fg:x="482783" fg:w="120"/><text x="46.2166%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="46.5228%" y="37" width="0.0114%" height="15" fill="rgb(226,128,48)" fg:x="489082" fg:w="120"/><text x="46.8158%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="47.1844%" y="37" width="0.0114%" height="15" fill="rgb(223,83,33)" fg:x="496037" fg:w="120"/><text x="47.4774%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="47.9281%" y="37" width="0.0114%" height="15" fill="rgb(243,21,53)" fg:x="503855" fg:w="120"/><text x="48.2211%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="48.3414%" y="37" width="0.0114%" height="15" fill="rgb(246,104,37)" fg:x="508200" fg:w="120"/><text x="48.6344%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="49.1728%" y="37" width="0.0114%" height="15" fill="rgb(235,98,34)" fg:x="516940" fg:w="120"/><text x="49.4657%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he72fc0ccc1fe71c4 (120 instructions, 0.01%)</title><rect x="49.6945%" y="37" width="0.0114%" height="15" fill="rgb(225,98,52)" fg:x="522425" fg:w="120"/><text x="49.9875%" y="47.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::init_generational_write_barrier::hfda43ff2a7573cd2 (12,371 instructions, 1.18%)</title><rect x="50.4483%" y="37" width="1.1768%" height="15" fill="rgb(251,134,45)" fg:x="530349" fg:w="12371"/><text x="50.7412%" y="47.50"></text></g><g><title>motoko_rts::gc::generational::generational_gc::h690b9a88d9c4e34f (1,051,260 instructions, 100.00%)</title><rect x="0.0000%" y="53" width="99.9988%" height="15" fill="rgb(244,141,43)" fg:x="0" fg:w="1051260"/><text x="0.2930%" y="63.50">motoko_rts::gc::generational::generational_gc::h690b9a88d9c4e34f</text></g><g><title>all (1,051,273 instructions, 100%)</title><rect x="0.0000%" y="85" width="100.0000%" height="15" fill="rgb(249,78,23)" fg:x="0" fg:w="1051273"/><text x="0.2930%" y="95.50"></text></g><g><title>generational_gc (1,051,273 instructions, 100.00%)</title><rect x="0.0000%" y="69" width="100.0000%" height="15" fill="rgb(228,111,46)" fg:x="0" fg:w="1051273"/><text x="0.2930%" y="79.50">generational_gc</text></g></svg></svg>