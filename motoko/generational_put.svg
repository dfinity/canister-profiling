<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="134" onload="init(evt)" viewBox="0 0 1024 134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="134" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">generational.batch_put</text><text id="details" fill="rgb(0,0,0)" x="10" y="117.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="117.00"> </text><svg id="frames" x="10" width="1004" total_samples="1390400"><g><title>memset (4,478 instructions, 0.32%)</title><rect x="0.0106%" y="37" width="0.3221%" height="15" fill="rgb(224,156,42)" fg:x="148" fg:w="4478"/><text x="0.3036%" y="47.50"></text></g><g><title>motoko_rts::gc::generational::GenerationalGC$LT$M$GT$::mark_object::h9ab08e05fb79f6a3 (246,735 instructions, 17.75%)</title><rect x="0.3352%" y="37" width="17.7456%" height="15" fill="rgb(247,72,24)" fg:x="4660" fg:w="246735"/><text x="0.6281%" y="47.50">motoko_rts::gc::generat..</text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (945 instructions, 0.07%)</title><rect x="18.0808%" y="37" width="0.0680%" height="15" fill="rgb(238,223,25)" fg:x="251395" fg:w="945"/><text x="18.3737%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="18.1487%" y="37" width="0.0176%" height="15" fill="rgb(254,143,35)" fg:x="252340" fg:w="245"/><text x="18.4417%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="18.3362%" y="37" width="0.0122%" height="15" fill="rgb(245,96,26)" fg:x="254946" fg:w="170"/><text x="18.6291%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="18.3484%" y="37" width="0.0176%" height="15" fill="rgb(206,226,37)" fg:x="255116" fg:w="245"/><text x="18.6414%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="18.5006%" y="37" width="0.0122%" height="15" fill="rgb(228,104,11)" fg:x="257232" fg:w="170"/><text x="18.7935%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="18.5128%" y="37" width="0.0176%" height="15" fill="rgb(207,215,52)" fg:x="257402" fg:w="245"/><text x="18.8058%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (195 instructions, 0.01%)</title><rect x="18.7072%" y="37" width="0.0140%" height="15" fill="rgb(253,105,22)" fg:x="260105" fg:w="195"/><text x="19.0002%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="18.8535%" y="37" width="0.0104%" height="15" fill="rgb(228,33,11)" fg:x="262139" fg:w="145"/><text x="19.1465%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="19.0395%" y="37" width="0.0104%" height="15" fill="rgb(253,214,20)" fg:x="264725" fg:w="145"/><text x="19.3325%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="19.2018%" y="37" width="0.0104%" height="15" fill="rgb(234,194,46)" fg:x="266982" fg:w="145"/><text x="19.4948%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="19.3605%" y="37" width="0.0104%" height="15" fill="rgb(217,71,38)" fg:x="269188" fg:w="145"/><text x="19.6534%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (195 instructions, 0.01%)</title><rect x="19.4958%" y="37" width="0.0140%" height="15" fill="rgb(227,74,5)" fg:x="271070" fg:w="195"/><text x="19.7888%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="19.6870%" y="37" width="0.0176%" height="15" fill="rgb(213,155,15)" fg:x="273728" fg:w="245"/><text x="19.9800%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (195 instructions, 0.01%)</title><rect x="19.8674%" y="37" width="0.0140%" height="15" fill="rgb(231,77,20)" fg:x="276237" fg:w="195"/><text x="20.1604%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="20.0327%" y="37" width="0.0104%" height="15" fill="rgb(240,61,28)" fg:x="278534" fg:w="145"/><text x="20.3256%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="20.0431%" y="37" width="0.0176%" height="15" fill="rgb(240,129,16)" fg:x="278679" fg:w="245"/><text x="20.3360%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (195 instructions, 0.01%)</title><rect x="20.2428%" y="37" width="0.0140%" height="15" fill="rgb(211,27,50)" fg:x="281456" fg:w="195"/><text x="20.5358%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="20.4074%" y="37" width="0.0122%" height="15" fill="rgb(209,100,35)" fg:x="283744" fg:w="170"/><text x="20.7003%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="20.5449%" y="37" width="0.0104%" height="15" fill="rgb(242,61,23)" fg:x="285656" fg:w="145"/><text x="20.8378%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="20.7469%" y="37" width="0.0104%" height="15" fill="rgb(223,153,50)" fg:x="288465" fg:w="145"/><text x="21.0399%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="20.9565%" y="37" width="0.0104%" height="15" fill="rgb(226,178,19)" fg:x="291379" fg:w="145"/><text x="21.2495%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="21.1730%" y="37" width="0.0104%" height="15" fill="rgb(207,136,52)" fg:x="294390" fg:w="145"/><text x="21.4660%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="21.3397%" y="37" width="0.0104%" height="15" fill="rgb(226,15,48)" fg:x="296707" fg:w="145"/><text x="21.6327%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="21.3501%" y="37" width="0.0176%" height="15" fill="rgb(214,163,24)" fg:x="296852" fg:w="245"/><text x="21.6431%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="21.5222%" y="37" width="0.0122%" height="15" fill="rgb(215,59,48)" fg:x="299245" fg:w="170"/><text x="21.8152%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="21.5345%" y="37" width="0.0176%" height="15" fill="rgb(216,146,37)" fg:x="299415" fg:w="245"/><text x="21.8274%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="21.7382%" y="37" width="0.0122%" height="15" fill="rgb(211,182,23)" fg:x="302248" fg:w="170"/><text x="22.0312%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="21.9093%" y="37" width="0.0176%" height="15" fill="rgb(209,52,40)" fg:x="304627" fg:w="245"/><text x="22.2023%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="22.0977%" y="37" width="0.0122%" height="15" fill="rgb(241,101,26)" fg:x="307247" fg:w="170"/><text x="22.3907%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="22.2758%" y="37" width="0.0104%" height="15" fill="rgb(246,117,39)" fg:x="309723" fg:w="145"/><text x="22.5688%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="22.4940%" y="37" width="0.0176%" height="15" fill="rgb(238,111,45)" fg:x="312757" fg:w="245"/><text x="22.7870%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="22.6825%" y="37" width="0.0122%" height="15" fill="rgb(208,35,4)" fg:x="315377" fg:w="170"/><text x="22.9754%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="22.6947%" y="37" width="0.0176%" height="15" fill="rgb(227,120,38)" fg:x="315547" fg:w="245"/><text x="22.9877%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="22.8595%" y="37" width="0.0122%" height="15" fill="rgb(243,46,31)" fg:x="317839" fg:w="170"/><text x="23.1525%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="22.8718%" y="37" width="0.0176%" height="15" fill="rgb(222,93,1)" fg:x="318009" fg:w="245"/><text x="23.1647%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="23.0575%" y="37" width="0.0122%" height="15" fill="rgb(222,196,15)" fg:x="320592" fg:w="170"/><text x="23.3505%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="23.2765%" y="37" width="0.0104%" height="15" fill="rgb(234,141,12)" fg:x="323637" fg:w="145"/><text x="23.5695%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="23.4545%" y="37" width="0.0176%" height="15" fill="rgb(228,87,32)" fg:x="326111" fg:w="245"/><text x="23.7474%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="23.6652%" y="37" width="0.0122%" height="15" fill="rgb(208,204,53)" fg:x="329041" fg:w="170"/><text x="23.9582%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="23.8396%" y="37" width="0.0176%" height="15" fill="rgb(227,27,54)" fg:x="331466" fg:w="245"/><text x="24.1326%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="24.0264%" y="37" width="0.0122%" height="15" fill="rgb(220,15,42)" fg:x="334063" fg:w="170"/><text x="24.3194%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="24.0386%" y="37" width="0.0176%" height="15" fill="rgb(209,27,4)" fg:x="334233" fg:w="245"/><text x="24.3316%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="24.2065%" y="37" width="0.0104%" height="15" fill="rgb(235,229,17)" fg:x="336567" fg:w="145"/><text x="24.4995%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="24.2169%" y="37" width="0.0176%" height="15" fill="rgb(234,214,12)" fg:x="336712" fg:w="245"/><text x="24.5099%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="24.4183%" y="37" width="0.0122%" height="15" fill="rgb(229,30,27)" fg:x="339512" fg:w="170"/><text x="24.7113%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="24.5539%" y="37" width="0.0104%" height="15" fill="rgb(251,62,4)" fg:x="341397" fg:w="145"/><text x="24.8468%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="24.7092%" y="37" width="0.0104%" height="15" fill="rgb(247,133,1)" fg:x="343557" fg:w="145"/><text x="25.0022%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (220 instructions, 0.02%)</title><rect x="24.7196%" y="37" width="0.0158%" height="15" fill="rgb(222,135,49)" fg:x="343702" fg:w="220"/><text x="25.0126%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="24.9233%" y="37" width="0.0104%" height="15" fill="rgb(243,79,18)" fg:x="346533" fg:w="145"/><text x="25.2162%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="24.9337%" y="37" width="0.0176%" height="15" fill="rgb(223,132,33)" fg:x="346678" fg:w="245"/><text x="25.2267%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (195 instructions, 0.01%)</title><rect x="25.1264%" y="37" width="0.0140%" height="15" fill="rgb(211,174,24)" fg:x="349358" fg:w="195"/><text x="25.4194%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="25.3183%" y="37" width="0.0176%" height="15" fill="rgb(221,45,3)" fg:x="352025" fg:w="245"/><text x="25.6112%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="25.5680%" y="37" width="0.0122%" height="15" fill="rgb(239,6,51)" fg:x="355497" fg:w="170"/><text x="25.8609%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="25.5802%" y="37" width="0.0176%" height="15" fill="rgb(214,11,36)" fg:x="355667" fg:w="245"/><text x="25.8732%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="25.7962%" y="37" width="0.0104%" height="15" fill="rgb(208,162,37)" fg:x="358670" fg:w="145"/><text x="26.0891%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="25.8066%" y="37" width="0.0176%" height="15" fill="rgb(222,223,13)" fg:x="358815" fg:w="245"/><text x="26.0996%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="26.0278%" y="37" width="0.0122%" height="15" fill="rgb(205,64,53)" fg:x="361890" fg:w="170"/><text x="26.3207%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="26.0400%" y="37" width="0.0176%" height="15" fill="rgb(215,135,27)" fg:x="362060" fg:w="245"/><text x="26.3330%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="26.2837%" y="37" width="0.0122%" height="15" fill="rgb(235,150,25)" fg:x="365449" fg:w="170"/><text x="26.5767%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="26.6486%" y="37" width="0.0104%" height="15" fill="rgb(231,15,45)" fg:x="370522" fg:w="145"/><text x="26.9416%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="26.8282%" y="37" width="0.0104%" height="15" fill="rgb(220,93,4)" fg:x="373019" fg:w="145"/><text x="27.1211%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="26.8386%" y="37" width="0.0176%" height="15" fill="rgb(225,100,26)" fg:x="373164" fg:w="245"/><text x="27.1316%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="27.0685%" y="37" width="0.0122%" height="15" fill="rgb(219,84,49)" fg:x="376361" fg:w="170"/><text x="27.3615%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="27.2526%" y="37" width="0.0104%" height="15" fill="rgb(230,50,23)" fg:x="378920" fg:w="145"/><text x="27.5456%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="27.4960%" y="37" width="0.0176%" height="15" fill="rgb(215,165,23)" fg:x="382304" fg:w="245"/><text x="27.7889%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (945 instructions, 0.07%)</title><rect x="27.7806%" y="37" width="0.0680%" height="15" fill="rgb(212,123,44)" fg:x="386261" fg:w="945"/><text x="28.0735%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="27.8528%" y="37" width="0.0176%" height="15" fill="rgb(221,140,6)" fg:x="387265" fg:w="245"/><text x="28.1457%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="28.2289%" y="37" width="0.0122%" height="15" fill="rgb(252,222,9)" fg:x="392495" fg:w="170"/><text x="28.5219%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="28.2454%" y="37" width="0.0176%" height="15" fill="rgb(247,21,6)" fg:x="392724" fg:w="245"/><text x="28.5384%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="28.5509%" y="37" width="0.0122%" height="15" fill="rgb(231,168,15)" fg:x="396972" fg:w="170"/><text x="28.8439%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="28.5674%" y="37" width="0.0176%" height="15" fill="rgb(230,37,51)" fg:x="397201" fg:w="245"/><text x="28.8604%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (195 instructions, 0.01%)</title><rect x="28.9643%" y="37" width="0.0140%" height="15" fill="rgb(253,200,18)" fg:x="402719" fg:w="195"/><text x="29.2572%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="29.2811%" y="37" width="0.0104%" height="15" fill="rgb(224,117,38)" fg:x="407124" fg:w="145"/><text x="29.5740%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="29.6655%" y="37" width="0.0104%" height="15" fill="rgb(225,16,50)" fg:x="412469" fg:w="145"/><text x="29.9585%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="30.0142%" y="37" width="0.0104%" height="15" fill="rgb(226,136,24)" fg:x="417317" fg:w="145"/><text x="30.3071%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="30.3400%" y="37" width="0.0104%" height="15" fill="rgb(226,229,41)" fg:x="421848" fg:w="145"/><text x="30.6330%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (195 instructions, 0.01%)</title><rect x="30.6077%" y="37" width="0.0140%" height="15" fill="rgb(250,61,38)" fg:x="425569" fg:w="195"/><text x="30.9006%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="31.0186%" y="37" width="0.0176%" height="15" fill="rgb(253,205,18)" fg:x="431283" fg:w="245"/><text x="31.3116%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (195 instructions, 0.01%)</title><rect x="31.3762%" y="37" width="0.0140%" height="15" fill="rgb(242,153,47)" fg:x="436254" fg:w="195"/><text x="31.6691%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="31.7240%" y="37" width="0.0104%" height="15" fill="rgb(213,88,17)" fg:x="441090" fg:w="145"/><text x="32.0169%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="31.7386%" y="37" width="0.0176%" height="15" fill="rgb(225,144,45)" fg:x="441294" fg:w="245"/><text x="32.0316%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (195 instructions, 0.01%)</title><rect x="32.1541%" y="37" width="0.0140%" height="15" fill="rgb(205,112,14)" fg:x="447071" fg:w="195"/><text x="32.4471%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="32.5147%" y="37" width="0.0122%" height="15" fill="rgb(211,30,15)" fg:x="452084" fg:w="170"/><text x="32.8076%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="32.8111%" y="37" width="0.0104%" height="15" fill="rgb(218,181,38)" fg:x="456205" fg:w="145"/><text x="33.1040%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="33.2407%" y="37" width="0.0104%" height="15" fill="rgb(239,129,24)" fg:x="462179" fg:w="145"/><text x="33.5337%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="33.6896%" y="37" width="0.0104%" height="15" fill="rgb(235,214,22)" fg:x="468420" fg:w="145"/><text x="33.9826%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="34.1571%" y="37" width="0.0104%" height="15" fill="rgb(254,62,18)" fg:x="474920" fg:w="145"/><text x="34.4500%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="34.5122%" y="37" width="0.0104%" height="15" fill="rgb(238,170,7)" fg:x="479858" fg:w="145"/><text x="34.8052%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="34.5269%" y="37" width="0.0176%" height="15" fill="rgb(252,75,18)" fg:x="480062" fg:w="245"/><text x="34.8199%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="34.8762%" y="37" width="0.0122%" height="15" fill="rgb(208,39,52)" fg:x="484918" fg:w="170"/><text x="35.1691%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="34.8926%" y="37" width="0.0176%" height="15" fill="rgb(211,72,9)" fg:x="485147" fg:w="245"/><text x="35.1856%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="35.3126%" y="37" width="0.0122%" height="15" fill="rgb(250,121,40)" fg:x="490986" fg:w="170"/><text x="35.6055%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="35.6801%" y="37" width="0.0176%" height="15" fill="rgb(222,132,17)" fg:x="496096" fg:w="245"/><text x="35.9731%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="36.0690%" y="37" width="0.0122%" height="15" fill="rgb(219,202,0)" fg:x="501503" fg:w="170"/><text x="36.3619%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="36.4588%" y="37" width="0.0104%" height="15" fill="rgb(243,60,42)" fg:x="506923" fg:w="145"/><text x="36.7518%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="36.9205%" y="37" width="0.0176%" height="15" fill="rgb(214,192,34)" fg:x="513343" fg:w="245"/><text x="37.2135%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="37.3073%" y="37" width="0.0122%" height="15" fill="rgb(227,88,39)" fg:x="518721" fg:w="170"/><text x="37.6003%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="37.3238%" y="37" width="0.0176%" height="15" fill="rgb(232,186,50)" fg:x="518950" fg:w="245"/><text x="37.6168%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="37.6482%" y="37" width="0.0122%" height="15" fill="rgb(217,101,24)" fg:x="523461" fg:w="170"/><text x="37.9412%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="37.6647%" y="37" width="0.0176%" height="15" fill="rgb(214,117,9)" fg:x="523690" fg:w="245"/><text x="37.9577%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="38.0429%" y="37" width="0.0122%" height="15" fill="rgb(223,133,23)" fg:x="528949" fg:w="170"/><text x="38.3359%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="38.5037%" y="37" width="0.0104%" height="15" fill="rgb(207,104,22)" fg:x="535355" fg:w="145"/><text x="38.7966%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="38.8882%" y="37" width="0.0176%" height="15" fill="rgb(224,206,49)" fg:x="540701" fg:w="245"/><text x="39.1811%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="39.3226%" y="37" width="0.0122%" height="15" fill="rgb(207,223,49)" fg:x="546741" fg:w="170"/><text x="39.6155%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="39.6838%" y="37" width="0.0176%" height="15" fill="rgb(227,80,13)" fg:x="551764" fg:w="245"/><text x="39.9768%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="40.0748%" y="37" width="0.0122%" height="15" fill="rgb(231,23,44)" fg:x="557200" fg:w="170"/><text x="40.3678%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="40.0913%" y="37" width="0.0176%" height="15" fill="rgb(220,95,48)" fg:x="557429" fg:w="245"/><text x="40.3842%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="40.4492%" y="37" width="0.0104%" height="15" fill="rgb(216,65,35)" fg:x="562405" fg:w="145"/><text x="40.7421%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="40.4638%" y="37" width="0.0176%" height="15" fill="rgb(235,97,42)" fg:x="562609" fg:w="245"/><text x="40.7568%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="40.8793%" y="37" width="0.0122%" height="15" fill="rgb(244,19,9)" fg:x="568386" fg:w="170"/><text x="41.1723%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="41.1680%" y="37" width="0.0104%" height="15" fill="rgb(218,174,23)" fg:x="572400" fg:w="145"/><text x="41.4610%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="41.5001%" y="37" width="0.0104%" height="15" fill="rgb(226,210,54)" fg:x="577018" fg:w="145"/><text x="41.7931%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (220 instructions, 0.02%)</title><rect x="41.5148%" y="37" width="0.0158%" height="15" fill="rgb(226,119,8)" fg:x="577222" fg:w="220"/><text x="41.8078%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="41.9288%" y="37" width="0.0104%" height="15" fill="rgb(214,124,26)" fg:x="582978" fg:w="145"/><text x="42.2218%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="41.9435%" y="37" width="0.0176%" height="15" fill="rgb(225,207,48)" fg:x="583182" fg:w="245"/><text x="42.2364%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (195 instructions, 0.01%)</title><rect x="42.3424%" y="37" width="0.0140%" height="15" fill="rgb(243,166,14)" fg:x="588729" fg:w="195"/><text x="42.6354%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="42.7448%" y="37" width="0.0176%" height="15" fill="rgb(249,71,42)" fg:x="594324" fg:w="245"/><text x="43.0378%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="43.2620%" y="37" width="0.0122%" height="15" fill="rgb(224,18,33)" fg:x="601515" fg:w="170"/><text x="43.5550%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="43.2785%" y="37" width="0.0176%" height="15" fill="rgb(249,30,30)" fg:x="601744" fg:w="245"/><text x="43.5714%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="43.7212%" y="37" width="0.0104%" height="15" fill="rgb(220,47,25)" fg:x="607899" fg:w="145"/><text x="44.0141%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="43.7358%" y="37" width="0.0176%" height="15" fill="rgb(216,65,48)" fg:x="608103" fg:w="245"/><text x="44.0288%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="44.1886%" y="37" width="0.0122%" height="15" fill="rgb(216,141,26)" fg:x="614398" fg:w="170"/><text x="44.4815%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="44.2050%" y="37" width="0.0176%" height="15" fill="rgb(216,194,10)" fg:x="614627" fg:w="245"/><text x="44.4980%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="44.7137%" y="37" width="0.0122%" height="15" fill="rgb(237,59,40)" fg:x="621699" fg:w="170"/><text x="45.0066%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="45.4822%" y="37" width="0.0104%" height="15" fill="rgb(249,100,14)" fg:x="632385" fg:w="145"/><text x="45.7752%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="45.8682%" y="37" width="0.0104%" height="15" fill="rgb(234,132,25)" fg:x="637751" fg:w="145"/><text x="46.1611%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="45.8828%" y="37" width="0.0176%" height="15" fill="rgb(220,47,12)" fg:x="637955" fg:w="245"/><text x="46.1758%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (170 instructions, 0.01%)</title><rect x="46.3607%" y="37" width="0.0122%" height="15" fill="rgb(237,110,1)" fg:x="644599" fg:w="170"/><text x="46.6537%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (145 instructions, 0.01%)</title><rect x="46.7550%" y="37" width="0.0104%" height="15" fill="rgb(248,107,49)" fg:x="650082" fg:w="145"/><text x="47.0480%" y="47.50"></text></g><g><title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hf0f0a17700c3ab01 (245 instructions, 0.02%)</title><rect x="47.2707%" y="37" width="0.0176%" height="15" fill="rgb(239,184,32)" fg:x="657252" fg:w="245"/><text x="47.5637%" y="47.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::init_write_barrier::h77b2f36ec515795f (12,369 instructions, 0.89%)</title><rect x="47.8495%" y="37" width="0.8896%" height="15" fill="rgb(241,127,47)" fg:x="665299" fg:w="12369"/><text x="48.1424%" y="47.50"></text></g><g><title>motoko_rts::gc::generational::generational_gc::hb6d4ea7076c3d957 (1,390,387 instructions, 100.00%)</title><rect x="0.0000%" y="53" width="99.9991%" height="15" fill="rgb(230,228,15)" fg:x="0" fg:w="1390387"/><text x="0.2930%" y="63.50">motoko_rts::gc::generational::generational_gc::hb6d4ea7076c3d957</text></g><g><title>all (1,390,400 instructions, 100%)</title><rect x="0.0000%" y="85" width="100.0000%" height="15" fill="rgb(211,29,29)" fg:x="0" fg:w="1390400"/><text x="0.2930%" y="95.50"></text></g><g><title>generational_gc (1,390,400 instructions, 100.00%)</title><rect x="0.0000%" y="69" width="100.0000%" height="15" fill="rgb(231,90,34)" fg:x="0" fg:w="1390400"/><text x="0.2930%" y="79.50">generational_gc</text></g></svg></svg>